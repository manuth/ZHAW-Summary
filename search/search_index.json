{"config":{"lang":["en","de"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Summary","text":"<p>In this repositories are all my summaries from ZHAW but also personal projects</p>"},{"location":"21HS/AN1/01_funktionen.html","title":"Summenzeichen","text":"<p>\\(\\sum\\limits_{k=1}^{5} 2\\cdot k\\)</p> <p>Das Summenzeichen ist eine Art For-Loop in Mathe.</p> <p>Folgendes Beispiel: \\(\\sum\\limits_{k=5}^{10} 2\\cdot k\\)   kann zu folgendem Code \u00fcbersetzt werden:</p> <pre><code>int sum = 0\nfor(int k = 5; k &lt;= 10; k++)\n    sum += 2*k;\n</code></pre> <p>Wichtig: Die obere Limite ist inklusiv. Im oberen Beispiel wird \\(2\\cdot k\\) also 6x ausgef\u00fchrt.</p>"},{"location":"21HS/AN1/01_funktionen.html#recheregeln","title":"Recheregeln","text":"<p>Mit den folgenden Recheregeln k\u00f6nnen Summen zusammengefasst oder aufgespalten werden</p> <ul> <li>\\(\\sum\\limits_{k=1}^5 (c\\cdot k) = c\\cdot \\sum\\limits_{k=1}^5 k\\) </li> <li>\\(\\sum\\limits_{k=1}^5 (2k + k^2) = \\sum\\limits_{k=1}^5 2k + \\sum\\limits_{k=1}^5 k^2\\) </li> <li>\\(\\sum\\limits_{k=1}^n k + \\sum\\limits_{k=n + 1}^m k = \\sum\\limits_{k=1}^m k\\) </li> <li>Achtung: \\(\\sum\\limits_{k=1}^5 (2k \\cdot k^2) \\neq (\\sum\\limits_{k=1}^5 2k) \\cdot (\\sum\\limits_{k=1}^5 k^2)\\) </li> </ul> <p>Ebenfalls ein n\u00fctzlicher Trick: \\(\\sum\\limits_{k=u}^n k = \\frac{(n-u+1)\\cdot (n + u)}{2}\\) </p> <p>In folgender Summe \\(\\sum\\limits_{k=2}^6 k\\)  k\u00f6nnen wir feststellen, dass wenn wir die k der Reihe nach zusammen rechnen, dass es immer \\(2+6 = 8\\) gibt.</p> Aufsteigende Reihe 2 3 4 5 6 Absteigende Reihe 6 5 4 3 2 Summe 8 8 8 8 8 <p>Alls k\u00f6nnen wir auch 5-mal 8 rechnen und dies durch 2 teilen, da wir sonst zwei Reihen miteinander verrechnen.</p>"},{"location":"21HS/AN1/02_polynome.html","title":"Polynome Division","text":"<p>Beispiel:</p> <ul> <li>\\((4x^5+6x^4-2x^3+x^2+5):(2x^2-x+3)\\) = ?</li> <li>Nun die f\u00fchrenden Potenzen dividieren: \\(4x^5:2x^2=2x^3\\) </li> <li>Dies ist nun der erste Term des resultats:</li> <li>Resultat: \\(2x^3+...\\)</li> <li>Nun muss das vom urspr\u00fcnglichen Polynom abgezogen werden. Daf\u00fcr \\(2x^3 \\cdot (2x^2-x+3)=4x^5-2x^3+6x^3\\)</li> <li>\\((4x^5+6x^4-2x^3+x^2+5) - (4x^5-2x^3+6x^3) = ()\\)</li> </ul>"},{"location":"21HS/AN1/03_Ableiten.html","title":"Ableiten","text":"<p>Fast an jede Funktion kann eine Tangente angelegt werden. Die Ableitung errechnet die Steilheit einer Tangente an jedem Ort.</p>"},{"location":"21HS/AN1/summaries/summary_2022_01_26.html","title":"AN Summary 26.01.2022","text":"<ul> <li>AN Summary 26.01.2022<ul> <li>Ableiten<ul> <li>Newton Verfahren</li> </ul> </li> <li>Integrieren</li> <li>Reihen &amp; Folgen</li> <li>Grenzwert<ul> <li>Stetigkeit<ul> <li>Nullstellen finden mit Stetigkeit</li> </ul> </li> </ul> </li> <li>Hornerschema</li> <li>Polynomdivision</li> <li>Extremwerte<ul> <li>Wendepunkte und Sattelpunkte<ul> <li>Fragen f\u00fcr die Kurvendiskussion</li> </ul> </li> </ul> </li> <li>Extremaufgaben</li> </ul> </li> </ul> Begriff Erkl\u00e4rung gerade Funktion Wenn der Graph achsensymmetrisch mit der y-Achse ist (wie bei \\(x^2\\)) ungerade Funktion Wenn der Graph punktsymmetrisch mit dem Nullpunkt ist (wie bei \\(x^3\\)) Komposition \\((g\\circ f)(x)=g(f(x))\\) Injektive Funktion Keine zwei \\(x\\) f\u00fchren zum selben \\(y\\). Von einer injektiven Funktion gibt es eine Umkehrfunktion. \\(\\sum^5_{k=1}a_k\\) Addiert \\(a_k\\) bis (inklusiv) \\(5\\): \\(a_1+a_2+a_3+a_4+a_5\\) \u00dcbliche Summenformeln \\(\\sum^n_{k=1}k=\\frac{n(n+1)}2\\)\\(\\sum^n_{k=1}k^2=\\frac{n(n+1)(2n+1)}6\\) Polynomfunktion \\(f(x)=a_n\\cdot x^n+a_{n-1}\\cdot x^{n-1}+..+a_1\\cdot x + a_0\\) Komposition \\((g\\circ f)(2)=g(f(2))\\) Funktion Mapt vom Definitionsbereich \\(D\\) zum Wertebereich \\(W\\) Mitternachtsformel \\(D=b^2-4ac\\) und \\(x=\\frac{-b\\pm \\sqrt D}{2a}\\)","tags":["summary","AN"]},{"location":"21HS/AN1/summaries/summary_2022_01_26.html#ableiten","title":"Ableiten","text":"Name Formel \\(x^k=k\\cdot x^{k-1}\\) Faktorregel \\((c\\cdot f)'(x)=c\\cdot f'(x)\\) Summenregel \\((f+g)'(x)=f'(x)+g'(x)\\) Produktregel \\((u\\cdot v)'(x)=u'(x)\\cdot v(x)+u(x)\\cdot v'(x)\\) Quotientenregel \\((\\frac u v)'(x)=\\frac{u'(x)\\cdot v(x)-u(x)\\cdot v'(x)}{v(x)^2}\\) Kettenregel \\((F\\circ u)'(x)=F'(x)\\cdot u'(x)\\) sin \\(sin(x)'=cos(x)\\) cos \\(cos(x)'=-sin(x)\\) \\(e^x\\) \\((e^x)'=e^x\\) \\((a^x)'\\) \\((a^x)'=a^x\\cdot \\ln(a)\\) \\(\\ln(x)'\\) \\(\\ln(x)'=\\frac 1 x\\) \\(\\log_a(x)'\\) \\(\\log_a(x)'=\\frac 1 {x\\cdot \\ln(a)}\\) Funktionsgleichung f\u00fcr Tangente \\(y(x)=f'(x_0)\\cdot (x-x_0)+f(x_0)\\) <p>Achtung: Nicht jede Funktion ist differenzierbar. Die Ableitung einer Funktion darf keine pl\u00f6tzliche Spr\u00fcnge machen</p>","tags":["summary","AN"]},{"location":"21HS/AN1/summaries/summary_2022_01_26.html#newton-verfahren","title":"Newton Verfahren","text":"<p>\\(x_{n+1}=x_n-\\frac{f(x_n)}{f'(x_n)}\\)</p>","tags":["summary","AN"]},{"location":"21HS/AN1/summaries/summary_2022_01_26.html#integrieren","title":"Integrieren","text":"<p>Ableiten: \\(a\\cdot x^n\\rightarrow \\frac{a}{n+1}\\cdot x^{n+1}\\)</p> <p>Schreibweise von Integral von der Fl\u00e4che zwischen \\([a;b]\\):  \\(\\int^b_a f(x) \\mathrm d x =F(b)-F(a)\\)$</p> <ul> <li>\\(\\int a^x \\mathrm d x =\\frac {a^x}{\\ln(a)} + C\\)</li> <li>\\(\\int \\ln(x)\\mathrm dx=x\\cdot \\ln(x)-x + C\\)</li> <li>\\(\\int \\log_a(x)\\mathrm dx=\\frac 1 {\\ln(a)}\\cdot (x \\cdot \\ln(x) -x) + C\\)</li> <li>\\(\\int \\sin(x)\\mathrm dx=-\\cos(x)+C\\)</li> <li>\\(\\int \\cos(x)\\mathrm dx=\\sin(x)+C\\)</li> <li>\\(\\int \\tan(x)\\mathrm dx = -\\ln |\\cos(x)|+C\\)</li> <li>\\(\\int u^{-1}\\mathrm dx=\\ln(|u|)\\)</li> </ul>","tags":["summary","AN"]},{"location":"21HS/AN1/summaries/summary_2022_01_26.html#reihen-folgen","title":"Reihen &amp; Folgen","text":"Name explizite Darstellung implizite Darstellung aufz\u00e4hlende Darstellung Arithmetische Folge \\(a_n=c+(n-1)\\cdot d\\) \\(a_1=c\\\\a_{n+1}=a_n+d\\) \\(c,c+d,c+2d,c+3d,...\\) Geometrische Folge \\(a_n=c\\cdot q^{n-1}\\) \\(a_1=c\\\\a_{n+1}=q\\cdot a_n\\) \\(c, c\\cdot q, c\\cdot q^2, c\\cdot q^3, ...\\) Harmonische Folge \\(a_n=\\frac 1 n\\) (nicht \u00fcblich) \\(1, \\frac 1 2, \\frac 1 3, \\frac 1 4, ...\\) Fibonacci-Folge (nicht elementar) \\(a_1=1, a_2=1\\\\a_{n+1}=a_n+a_{n+1}\\) \\(1, 1, 2, 3, 5, 8, ...\\) <ul> <li>Arithmetische Reihee</li> <li>\\(a_k=a_1+(k-1)\\cdot d\\)</li> <li>\\(s_n=n\\cdot a_1+\\frac{n(n-1)}2 \\cdot d\\)</li> <li>\\(\\sum^n_{k=0}(k^2)=\\frac{n(n+1)(2n+1)}{6}\\)</li> <li>\\(\\sum^n_{k=0}k=\\frac{n(n+1)}{2}\\)</li> <li>Strebt immer geben \\(\\infty\\) oder \\(-\\infty\\)</li> <li>Geometrische Reihe</li> <li>\\(a_n=q^{(k-1)}\\cdot a_1\\)</li> <li>\\(s_n=\\frac{a_1(q^n-1)}{q-1}\\)</li> <li>Wenn \\(|q|&lt;1\\) ist, dann ist der Grenzwert \\(\\frac {a_1}{1-q}\\)</li> </ul>","tags":["summary","AN"]},{"location":"21HS/AN1/summaries/summary_2022_01_26.html#grenzwert","title":"Grenzwert","text":"<ul> <li>\\(\\lim_{n\\to\\infty}(c\\cdot a_n)=c\\cdot \\lim_{n\\to \\infty} a_n\\)</li> <li>\\(\\lim_{n\\to \\infty}(a_n+b_n)=\\lim_{n\\to \\infty}=\\lim_{n\\to \\infty}a_n + \\lim_{n\\to \\infty} b_n\\)</li> <li>\\(\\lim_{n\\to \\infty}(a_b\\cdot b_n)=\\lim_{n\\to \\infty}a_b \\cdot \\lim_{n\\to \\infty} b_n\\)</li> <li>\\(\\lim_{n\\to \\infty}(\\frac {a_n} {b_n})=\\lim_{n\\to \\infty} a_n : \\lim_{n\\to \\infty}b_n\\)</li> <li>\\(\\lim_{n\\to\\infty}(\\sqrt a - \\sqrt b)=\\lim_{n\\to\\infty}(\\frac{(\\sqrt a-\\sqrt b)(\\sqrt a + \\sqrt b)}{\\sqrt a + \\sqrt b})=\\lim_{n\\to\\infty}(\\frac{a-b}{\\sqrt a + \\sqrt b})\\)</li> </ul> <p>Wenn man einen Bruch in einem \\(\\lim\\) hat, dann kann mit dem h\u00f6chsten \\(n^k\\) mit dem h\u00f6chsten \\(k\\) gek\u00fcrzt werden</p> <p>Beispiel:  $$ \\lim_{n\\to \\infty}=\\frac{3n^2+7n-3}{n^2+4n-11}=\\lim_{n\\to \\infty}\\frac{n^2(3+\\frac 7 n-\\frac 3 {n^2})}{n^2(1+\\frac 4 n - \\frac {11} {n^2})}\\rightarrow\\frac {3+0+0}{1+0+0}=\\frac 3 1 = 3 $$ </p> <p>Spezialfall: \\(\\lim_{n\\to\\infty}(1+\\frac 1 n)^n=e=2.718\\)  $$ \\text{Speziallfall: }\\lim_{n\\to\\infty}(1+\\frac 1 n)^n=e=2.718\\ \\text{Beispiel: } \\lim_{n\\to\\infty}(1+\\frac{9}{4n})^{-5n}\\ (1+\\frac{9}{4n})^{-5n}=(1+\\frac{9}{4n}\\cdot\\frac{\\frac 1 9}{\\frac 1 9})^{-5n}=(1+\\frac 1 {\\frac {4n} 9})^{-5n}\\=(1+\\frac 1 {\\frac {4n} 9})^{-5n\\cdot\\frac{\\frac{4n} 9}{\\frac{4n} 9}}=(1+\\frac 1 {\\frac {4n} 9})^{\\frac{4n} 9\\cdot \\frac{-5n}{\\frac{4n} 9}}=(1+\\frac 1 {\\frac {4n} 9})^{\\frac {4n} 9\\cdot \\frac{-45} 4}\\=((1+\\frac 1 {\\frac {4n} 9})^{\\frac{4n} 9})^{\\frac{-45} 4}=e^{\\frac{-45} 4} $$</p> Typ Funktionswert Beispiel Typ 1: Hebbare Definitionsl\u00fcckeDas Z\u00e4hler- und Nennerpolynom haben dieselbe Nullstelle. Diese kann gek\u00fcrzt werden Strebt gegen den gek\u00fcrzten Bruch Typ 2: PolstelleNur das Nennerpolynom hat die Nullstelle. Dies kann nicht gek\u00fcrzt werden Strebt gegen \\(\\infty\\) oder \\(-\\infty\\)","tags":["summary","AN"]},{"location":"21HS/AN1/summaries/summary_2022_01_26.html#stetigkeit","title":"Stetigkeit","text":"<p>Eine Funktion ist stetig, wenn man sie zeichnen kann, ohne den Stift abzusetetzen.  Eine stetige Funktion hat keine Spr\u00fcnge in der ersten Ableitung und keine Spr\u00fcnge in der eigentlichen Funktion.</p>","tags":["summary","AN"]},{"location":"21HS/AN1/summaries/summary_2022_01_26.html#nullstellen-finden-mit-stetigkeit","title":"Nullstellen finden mit Stetigkeit","text":"<ol> <li>Zwei Punkte, bei denen der Y-Wert ein verschiedenes Vorzeichen hat</li> <li>Den Mittelwert zischen den Punkten bilden</li> <li>Zu 1. gehen, aber diesem mit dem Mittelpunkt als Punkt, so dass die zwei P\u00fcnkte ein verschiedenes Vorzeichen haben</li> </ol>","tags":["summary","AN"]},{"location":"21HS/AN1/summaries/summary_2022_01_26.html#hornerschema","title":"Hornerschema","text":"<p>Die Werte (\\(b_n\\)), welche unter dem Strich stehen, sind die Koeffizenten f\u00fcr das \\(q(x)\\) in \\(f(x)=(x-x_0)\\cdot q(x)\\). In diesem fall also \\(q(x)=3x^3-8x^2+21x-49\\). Daf\u00fcr muss das Resultat/Rest 0 sein!</p>","tags":["summary","AN"]},{"location":"21HS/AN1/summaries/summary_2022_01_26.html#polynomdivision","title":"Polynomdivision","text":"","tags":["summary","AN"]},{"location":"21HS/AN1/summaries/summary_2022_01_26.html#extremwerte","title":"Extremwerte","text":"1. Ableitung 2. Ableitung Beschreibung Bild \\(f'(x)&gt;0\\) \\(f''(x_0)&gt;0\\) \\(f\\) macht eine Linkskurve nach oben bei \\((x_0, y_0)\\) \\(f'(x)&gt;0\\) \\(f''(x_0)&lt;0\\) \\(f\\) macht eine Rechtskurve nach oben bei \\((x_0, y_0)\\) \\(f'(x)&lt;0\\) \\(f''(x_0)&gt;0\\) \\(f\\) nmacht eine Linkskurve nach unten bei \\((x_0, y_0)\\) \\(f'(x)&lt;0\\) \\(f''(x_0)&lt;0\\) \\(f\\) macht eine Rechtskurve nach unten bei \\((x_0, y_0)\\) \\(f'(x)=0\\) \\(f''(x)&lt;0\\) \\(f\\) hat ein lokales Maximum bei \\((x_0, y_0)\\) \\(f'(x)=0\\) \\(f''(x)&gt;0\\) \\(f\\) hat ein lokales Minimum bei \\((x_0, y_0)\\) \\(x_0\\) heisst \\(f(x_0)\\) heisst \\((x_0, y_0)\\) heisst Maxiumum (relative) Maximalstelle (relatives) Maximum/Maximalwert (relativer) Hochpunkt Minimum (relative) Minimalstelle (relatives) Minimum/Minimalwert (relativer) Tiefpunkt Oberbegriff (relative) Extremalstelle (relatives) Extremum/Extremalwert (relativer) Extremalpunkt","tags":["summary","AN"]},{"location":"21HS/AN1/summaries/summary_2022_01_26.html#wendepunkte-und-sattelpunkte","title":"Wendepunkte und Sattelpunkte","text":"<p>Eine Wendepunkt, ist wenn eine Rechtskurve in eine Linkskurve,  oder umgekehrt, geht. Ein Spezialfall ist es, wenn \\(f'(x)=0\\) ist, dann spricht man von einem <code>Sattelpunkt</code>. </p> <p></p> <p>Wenn \\(f''(x_0)=0\\) und \\(f'''(x_0)\\neq 0\\) ist, dann ist es sicherlich einen <code>Wendepunkt</code>. </p> <p>Wenn zus\u00e4tzlich noch \\(f'(x_0)=0\\) gilt, dann ist es ein <code>Sattelpunkt</code></p>","tags":["summary","AN"]},{"location":"21HS/AN1/summaries/summary_2022_01_26.html#fragen-fur-die-kurvendiskussion","title":"Fragen f\u00fcr die Kurvendiskussion","text":"<ol> <li>Definitionsbereich?</li> <li>Symmetrieeigenschaften (gerade/ungerade), Periode?</li> <li>Schnittpunkte mit Achsen, Polstellen?</li> <li>Randpunkte, bzw. Verhalten, wenn \\(x\\) gegen die Grenzen des Definitionsbereichs strebt?</li> <li>Kandidaten f\u00fcr Extrema bestimmen und untersuchen</li> <li>Wendepunkte suchen</li> <li>Tabelle von Werten aufstellen (falls noch n\u00f6tig)</li> </ol>","tags":["summary","AN"]},{"location":"21HS/AN1/summaries/summary_2022_01_26.html#extremaufgaben","title":"Extremaufgaben","text":"<ol> <li>Zielgr\u00f6sse identifizieren</li> <li>Unabh\u00e4ngige Variable identifizieren</li> <li>Definitionsbereich bestimmen</li> <li>Zielgr\u00f6sse als Funktion mit unabh\u00e4ngigen Variabeln als Argument ausdr\u00fccken</li> <li>Relative Maxima/Minima bestimmen; Randpunkte auch ber\u00fcrcksichtigen!</li> <li>Welche relative Extrema sind auch absolute?</li> </ol>","tags":["summary","AN"]},{"location":"21HS/COM/01_Kernthemen-Austausch.html","title":"01 Kernthemen Austausch","text":"<p>\\(i\\cdot 2\\)</p> <p>1) Was sagen Ihnen die Begriffe Innovation und soziale Verantwortung spontan? Wie h\u00e4ngen diese Begriffe zusammen?</p> <ul> <li> <p>Invotion: </p> <ul> <li>Neuartiges denken/Out of the Box</li> <li>Kreativiti\u00e4t</li> </ul> </li> <li> <p>soziale Verantwortung:</p> <ul> <li>Morale einhalten</li> <li>Gesselschaft ber\u00fccksichtigen</li> </ul> </li> </ul> <p>Zusammenhang: Neue Ideen sollen moralisch vertretbar sein</p> <p>2) Wie haben Sie Kommunikation im Berufsleben bzw. in Ihrer Ausbildung erlebt? Welchen Stellenwert hat(te) Kommunikation in Ihrem beruflichen/ schulischen Umfeld?</p> <ul> <li>Informatiker:<ul> <li>Vortschritt abgleichen</li> <li>dokumentieren</li> <li>zwischenmenschlicher Austausch</li> </ul> </li> <li>Mediamatiker: <ul> <li>Viel Kommunikation erwartet</li> <li>Anderen Personen bei Problemen unterst\u00fctzten</li> <li>Interne-Abl\u00e4ufe diskutieren</li> </ul> </li> </ul> <p>3) Why is communication competence important in engineering?</p> <ul> <li>Engineering is almost never done alone. To be successful you have to comunicate with others and for that soft skills are vital</li> </ul> <p>4) What role does social responsibility play in engineering?</p> <ul> <li>You have to rely on others to complete your goal, so it is important to respect your colleagues and your colleagues you </li> </ul>"},{"location":"21HS/COM/02_Suchstrategien.html","title":"Suchbegriffe","text":"<p>Von einem Thema sollten die Kernbegriffe extrahiert werden.  Um die relevanten Suchergebnisse zu steigern, kann man zus\u00e4tzlich noch die folgenden Begriffe mit suchen: - Unterbegriffe - Oberbegriffe - Synonyme - Englische Begriffe</p>"},{"location":"21HS/COM/02_Suchstrategien.html#schneeballsystem","title":"Schneeballsystem","text":"<p>Das Schneeballsystem kann zum Einstatz kommen, wenn man eine Quelle gefunden hat.  In dieser sucht man referenzierte Quellen. Dies kann so lange wiederholt werden, bis man gen\u00fcgent Material hat.</p> <p>Ebenfalls k\u00f6nnte sich es lohnen eine vorw\u00e4rtsgerichtete Suche zu benutzen. In vielen Datenbank (unter anderem auch Google Scholar) kann man sehen, welche Artikel und B\u00fccher eine Quelle zitert haben. So findet man auch neuere Artikel.</p>"},{"location":"21HS/COM/02_Suchstrategien.html#suchinstrumente","title":"Suchinstrumente","text":"<p>Folgendes ist eine Liste von m\u00f6glichen Suchinstrumenten: - https://scholar.google.ch/  - https://zhaw.swisscovery.slsp.ch/discovery/search?vid=41SLSP_ZAW:ZHAW    - f\u00fcr E-Books VPN verwenden!!! - https://ieeexplore.ieee.org/Xplore/home.jsp  - Hier sind noch mehr DBs aufgelistet:  https://www.zhaw.ch/de/hochschulbibliothek/recherchehilfe-kurse/fachinformation-ingenieurwesen/ </p>"},{"location":"21HS/COM/03_Publikationstypen.html","title":"Monografie (eigenst\u00e4ndiges Buch)","text":"<p>Das Buch wurde \"nur\" von den angegebenen Authoren geschrieben und befasst ein Thema umfassend.</p>"},{"location":"21HS/COM/03_Publikationstypen.html#quellenangabe","title":"Quellenangabe","text":"<pre><code>D\u00f6ring, N., &amp; Bortz, J. (2016). Forschungsmethoden und Evaluation in den Sozial- und Humanwissenschaften (5. Aufl.). Springer. https://doi.org/10.1007/978-3-642-41089-5\n</code></pre>"},{"location":"21HS/COM/03_Publikationstypen.html#einzelne-kapitel-eines-sammelbandes","title":"einzelne Kapitel eines Sammelbandes","text":"<p>Ein Sammelband besteht aus mehreren Artikeln/Kapiteln von zum Teil unterschiedlichen Authoren. Der Herausgeber stellt die Kapitel zusammen. Es kann so mehrere Perspektiven auf ein Thema gegeben werden k\u00f6nnen.</p>"},{"location":"21HS/COM/03_Publikationstypen.html#quellenangabe_1","title":"Quellenangabe","text":"<pre><code>Gieselmann, A. (2015). Auf dem Weg zu nutzergerechten internetbasierten Interventionen: Welche Bed\u00fcrfnisse haben unsere Patienten1? In A. Weisbecker, M. Burmester, &amp; A. Schmidt (Hrsg.), Mensch und Computer 2015 \u2013 Workshopband (S. 133\u2013136). De Gruyter. https://doi.org/10.1515/9783110443905-018\n</code></pre>"},{"location":"21HS/COM/03_Publikationstypen.html#zeitschriftenartikel","title":"Zeitschriftenartikel","text":"<p>Zeitschriften erscheinen periodisch. Ihren Inhalt wird mit Hilfe von Peer-Reviews auf ihre Korrektheit \u00fcberpr\u00fcft.</p>"},{"location":"21HS/COM/03_Publikationstypen.html#quellenangabe_2","title":"Quellenangabe","text":"<p>Die Ausgabe muss erw\u00e4hnt sein (90(6))</p> <pre><code>Vlachakis, K., Beyer, A., &amp; Vayas, I. (2021). Tragverhalten von Fachwerkmasten aus Winkelprofilen. Stahlbau, 90(6), 425\u2013440. https://doi.org/10.1002/stab.202000059\n</code></pre>"},{"location":"21HS/COM/04_Wissenschaftilichen%20Text.html","title":"04 Wissenschaftilichen Text","text":"<ul> <li>Objektiv</li> <li>Quellen</li> <li>keine englische Abk\u00fcrzung (\"what is\" anstatt \"what's\", \"is not\" anstatt \"isn't\")</li> </ul>"},{"location":"21HS/COM/05_pitch.html","title":"CCC","text":"Letter Meaning C Concise C Comprehensive (Umfassend) C Crisp (sharp, intresting, grabling) <p>this is a tesr</p>"},{"location":"21HS/COM/05_pitch.html#tipps-for-presentationspitch","title":"Tipps for Presentations/Pitch","text":"<ul> <li>No:</li> <li>I think</li> <li>Do:</li> <li>Hands:<ul> <li>keep them infront of the body</li> <li>don't do large movements</li> <li>don't cross the arms or keep the hands in the pockets </li> </ul> </li> <li>do breaks (don't speak non stop)</li> <li>speak frealy</li> </ul>"},{"location":"21HS/COM/06_handout.html","title":"Kriterien","text":"<ul> <li>Wer ist die Zielgruppe?</li> <li>Text soll: Informativ, Objektiv und Sachlich</li> <li>keine Emotionen</li> <li>keine Umgangssprache</li> <li>Sachlich (nicht \"ist enorm gewachsen\", sondern \"ist um 20% gewachsen\")</li> <li>hohe Informationsdichte</li> <li>Bild</li> <li>Quellenangabe</li> <li>Im Vortrag Bild referenzieren (Auf Abbildung 1 sieht man...)</li> </ul>"},{"location":"21HS/COM/Presentation/Pitch%20v2.html","title":"Pitch v2","text":"<ul> <li> <p>Intro (Question and Hi)</p> </li> <li> <p>Hand-Off</p> </li> </ul> <p>Hi, </p> <p>Having access to the internet is vital for any modern society. With its vast storage of knowledge, it is a blessing for learning new things. For what you needed, a cooperation with financial backing, can be done by a teenager from his bedroom. It can bring different people together to fight in a bigger war and help companies turn a profit.</p> <p>But still, countless people have no or poor access to the internet. In America, a country with a relative high standard of living, 19 million people [1] still don't have broadband internet and those people mostly live in rural areas. Looking at the world population, the numbers look even worst. ITU estimates that in the world, only 38% in rural areas are able to go online, almost half that who live in urban houses [2].</p> <p>But this makes perfect sense. Building out the necessary infrastructure is a costly endevour and companies like a return on their investment. In big cities with a lot of customers, this is a fairly easy task, but tunneling an optical fiber for a couple of people on a remote settlement isn't cost-effective. For this reason, many people have to make due with just slow and expensive satellite internet.</p> <p>Our solution is to use low orbit satellites to provide fast, reliable and cheap internet to the masses. Because we use satellites, we don't have to build any large and costly structures on the ground from which only a few people can benefit. Instead, we'll launch a network of satellites which can provide internet to 7 billion people.</p> <p>You might ask, how this satellite internet differs from the previously mentioned slow and expensive ones. For one, we use satellites in low orbit. This brings the benefit\u00a0 that the connections can be much faster and more reliable due to the lower distance to the earth. </p> <p>Mr. Thalmann will now tell you more about our ground braking technology.</p> <p>We also use state-of-the-art technology in our satellites and antennas, like beam forming the signals to more easily reach the satellite from the antenna and waste less energy blasting unnecessary radiation in the sky.</p> <p>All this means is that you can buy an antenna, place it anywhere where it has unobstructed view of the sky and browse the World Wide Web to your heart's content.</p>"},{"location":"21HS/COM/Presentation/Pitch%20v2.html#sources","title":"Sources","text":"<p>[1] Eighth Broadband Progreszos Report | Federal Communications Commission</p> <p>[2] https://www.itu.int/en/ITU-D/Statistics/Dashboards/Pages/IFF.aspx</p> <p>[3] International Programs - Total Midyear Population for the World: 1950-2050 - U.S. Census Bureau</p> <p>[4] Web of Science - Digital Beam Forming in MRI</p> <p>[5] Web of Science - Digital Beam forming Algorithms for Radar Applications</p>"},{"location":"21HS/COM/Presentation/Pitch.html","title":"Pitch","text":"<ul> <li> <p>Intro (Question and Hi)</p> </li> <li> <p>Hand-Off</p> </li> <li></li> </ul> <p>Having access to the internet is vital for any modern society. With its vast storage of knowledge, it is a blessing for learning new things. For what you needed, a cooperation with financial backing, can be done by a teenager from his bedroom. It can bring different people together to fight in a bigger war and help companies turn a profit.</p> <p>But still, countless people have no or poor access to the internet. In America, a country with a relative high standard of living, 19 million people [1] still don't have broadband internet and those people mostly live in rural areas. Looking at the world population, the numbers look even worst. ITU estimates that in the world, only 38% in rural areas are able to go online, almost half that who live in urban houses [2].</p> <p>But this makes perfect sense. Building out the necessary infrastructure is a costly endevour and companies like a return on their investment. In big cities with a lot of customers, this is a fairly easy task, but tunneling an optical fiber for a couple of people on a remote settlement isn't cost-effective. For this reason, many people have to make due with just slow and expensive satellite internet.</p> <p>Our solution is to use low orbit satellites to provide fast, reliable and cheap internet to the masses. Because we use satellites, we don't have to build any large and costly structures on the ground from which only a few people can benefit. Instead, we'll launch a network of satellites which can provide internet to 7 billion people.</p> <p>You might ask, how this satellite internet differs from the previously mentioned slow and expensive ones. For one, we use satellites in low orbit. This brings the benefit\u00a0 that the connections can be much faster and more reliable due to the lower distance to the earth. We also use state-of-the-art technology in our satellites and antennas, like beam forming the signals to more easily reach the satellite from the antenna and waste less energy blasting unnecessary radiation in the sky.</p> <p>All this means is that you can buy an antenna, place it anywhere where it has unobstructed view of the sky and browse the World Wide Web to your heart's content.</p>"},{"location":"21HS/COM/Presentation/Pitch.html#sources","title":"Sources","text":"<p>[1] Eighth Broadband Progress Report | Federal Communications Commission</p> <p>[2] https://www.itu.int/en/ITU-D/Statistics/Dashboards/Pages/IFF.aspx</p> <p>[3] International Programs - Total Midyear Population for the World: 1950-2050 - U.S. Census Bureau</p> <p>[4] Web of Science - Digital Beam Forming in MRI</p> <p>[5] Web of Science - Digital Beam forming Algorithms for Radar Applications</p>"},{"location":"21HS/DB/00_Pr%C3%BCfung.html","title":"00 Pr\u00fcfung","text":"<ol> <li>Relationale Algebra (20 Punkte)  (Umbedingt zwischen Resultate anschreiben)</li> <li>Anfrage erstelle von Text oder umgekehrt</li> <li>Bags vs Relationen </li> <li>ER-Model aus einem Text erstellen (20 Punkte)</li> <li>Die verschiedenen Beziehungstypen (1-1, 1-m, m-m, ISA, ID) und wie sich die Schl\u00fcssel zusammen settzen</li> <li>3-gliedrige Beziehung</li> <li>Zusammen gesetzte Entit\u00e4t</li> <li>Relationen Modell</li> <li>Korrektes ER-Modell</li> <li>SQL Teil (20-30 Punkte)</li> <li>Beim Ausw\u00e4hlen, welche Insert Statements eingef\u00fcgt werden k\u00f6nnen --&gt; Schauen, ob jedes Statement mit den Daten von den vorherigen INSERT Statements immer noch funktioniert!</li> <li>Wissens Fragen (10)</li> <li>Beispiel:<ol> <li>was ist gut an einem Index? Was ist schlecht an einem Index?</li> <li>Was ist ACID? Lost Update, Dirty-Read...</li> <li>Welche Probleme (Dirty-Read, Non-Repeatable-Read, Phantom-Read) k\u00f6nnen tolliertiert werden?</li> <li>Was ist der Unterschied zwischen einem Trigger und einer Stored Proceedure?</li> </ol> </li> </ol> <p>Fragen:</p> <ol> <li>Sind die technischen Details von Indexen relevant? (B-Baum, D\u00fcnn vs dichter Index, ...)</li> </ol>"},{"location":"21HS/DB/01_Begriffe.html","title":"Begriffe","text":"<p>in Tabelle formatieren</p> Name Erkl\u00e4rung Beispiel Dom\u00e4ne Wertebereich Dom\u00e4ne von PLZ w\u00e4ren die Zahlen 0-9999 Attribute Eigenschaft / Spalte / besteht aus Name + Dom\u00e4ne Attributwert Feld z.\u00a0B. der Ort Tupel eine Zeile/Eintrag ein 3-er Tupel ist ein Tupel bestehend aus 3 Attribute <ul> <li>Format, Schema, Heading, Relationsvariable</li> <li>Relation -&gt; mehrere Spalten (auch von mehreren Tabellen)</li> <li>Schl\u00fcssel -&gt; Eindeutige M\u00f6glichkeit, einen Datensatz zu identifizieren</li> <li>Relation -&gt; Relationsenformat (Menge von Namen von Attributen) &amp; Auspr\u00e4gung </li> </ul> <p>Wichtig:</p> <ul> <li>In einem Modell gibt es NIE genau gleiche Zeilen</li> <li>In einem Format gibt es NIE zwei gleiche Attribute</li> <li>Die Reihenfolge der Zeilen (Tupel) und Spalten(Attribute(Attribute)) ist irrelevant</li> </ul>"},{"location":"21HS/DB/01_Begriffe.html#notation","title":"Notation","text":"<ul> <li>Tabellarisch</li> <li>{&lt;1, Meier, 19.4.2001&gt;, &lt;2, M\u00fcller, 23.5.2302&gt;}</li> </ul>"},{"location":"21HS/DB/01_Begriffe.html#schlussel","title":"Schl\u00fcssel","text":"<ul> <li>Prim\u00e4rschl\u00fcssel</li> <li>ein ausgew\u00e4hlter Schl\u00fcsselkandidat</li> <li>Fremdschl\u00fcssel</li> <li>Referenziert einen Prim\u00e4rschl\u00fcssel</li> </ul>"},{"location":"21HS/DB/01_Begriffe.html#primarschlussel-vs-unique-key","title":"Prim\u00e4rschl\u00fcssel vs Unique-Key","text":"<p>Es kann maximal ein Prim\u00e4rschl\u00fcssel pro Tabelle geben (einen zusammengesetzter Prim\u00e4rschl\u00fcssel ist immer noch ein Schl\u00fcssel). Zus\u00e4tzlich wird automatisch ein Index erstellt, so dass die DB eine Tupel schneller findet.</p>"},{"location":"21HS/DB/01_Begriffe.html#acid","title":"ACID","text":""},{"location":"21HS/DB/01_Begriffe.html#_1","title":"Begriffe","text":""},{"location":"21HS/DB/02_Grundoperation.html","title":"02 Grundoperation","text":"<p>Notation f\u00fcr das Format einer Relation: \\(R(A_1, A_2, ..., A_n)\\)</p> <p>Wenn die Werte selbst dargestellt weden, soll folgendes Format verwenden werden: {&lt;1, Meier, 19.4.2001&gt;, &lt;2, M\u00fcller, 23.5.2302&gt;}</p>"},{"location":"21HS/DB/02_Grundoperation.html#aquivalenz","title":"\u00c4quivalenz","text":"<p>Zwei Relationen sind \u00e4quivalent, wenn sich durch eine Umordnung beide Relationen darstellen lasst Die Reihenfolge der Tupeln ist irrelevant.</p> <p>Notation: \\(R_1 \\sim R_2\\)</p>"},{"location":"21HS/DB/02_Grundoperation.html#operation","title":"Operation","text":"<p>In der Mengenlehre werden Duplikate immer gleich entfernt. Ein SQL-Server typischerweise nicht</p>"},{"location":"21HS/DB/02_Grundoperation.html#entfernende-operatoren","title":"Entfernende Operatoren","text":""},{"location":"21HS/DB/02_Grundoperation.html#selektion","title":"Selektion","text":"<ul> <li>Symbol: \\(\\sigma\\); in SQL: WHERE</li> <li>\\(R' = \\sigma_{Selektionsbedingung}(R)\\)</li> <li>\\(\\sigma_A(\\sigma_B) = \\sigma_B(\\sigma_A)\\)</li> <li>Wenn die Bedinung immer falsch ist, wird eine leere Relation zur\u00fcck gegeben</li> <li>Wenn es ein Attribut in der Bedinung nicht gibt, ist der Ausdruck nicht berechenbar</li> <li>Entfernt Tupels, welche nicht dem Pr\u00e4dikat entsprechen</li> <li>Das Format der Relation \u00e4ndert sich nicht, ist aber eine neue Relation</li> <li>Beispiel:</li> <li>\\(\\sigma_{L\u00e4nge&gt;100}(Filme)\\) -&gt; Alle Filme, welche eine gr\u00f6ssere L\u00e4nge als 100 haben</li> <li>\\(\\sigma_{City = 'Z\u00fcrich' \\wedge Discount \\geq 0.15}(Customers)\\) -&gt; Finde alle Z\u00fcricher Kunden, die einen Rabatt von 15% oder mehr erhalten</li> </ul>"},{"location":"21HS/DB/02_Grundoperation.html#projektion","title":"Projektion","text":"<ul> <li>Symbol: \\(\\pi\\); in SQL: <code>SELECT</code></li> <li>\\(R'=\\pi_{Spalten}(R)\\)</li> <li>\\(\\pi_A(\\pi_B) \\neq \\pi_B(\\pi_A)\\)</li> <li>erzeugt eine neue Relation mit weniger Spalten</li> <li>!Duplikate in der neuen Relation werden entfernt!</li> <li>Gibt es das angegebenen Attribut nicht, ist dies ein Fehler und keine Relation wird zur\u00fcck gegeben</li> <li>Beispiel:</li> <li>\\(\\pi_{Titel, Jahr, L\u00e4nge}(Filme)\\) -&gt; Gibt eine neue Relation zur\u00fcck, mit den Attributen Titel, Jahr und L\u00e4nge</li> </ul> <p>Die Projektion kann erweitert werden, dass man zus\u00e4tzlich zu Attribute, auch Ausdr\u00fccke (wie \\(\\pi_{2\\cdot R.A+4\\to Z}(R)\\)) oder Konstante (wie \\(\\pi_{5 \\to S, A \\to B, C}(R)\\)) angegeben. Dies kommt dem <code>SELECT</code> Syntax von SQL n\u00e4her.</p>"},{"location":"21HS/DB/02_Grundoperation.html#umbenennung","title":"Umbenennung","text":"<ul> <li>Symbol: \\(\\rho\\); in SQL: <code>AS</code></li> <li>\\(\\rho_{S(C,D)}(R(A, B))=S(C, D)\\)</li> </ul>"},{"location":"21HS/DB/02_Grundoperation.html#produkt-operatoren","title":"Produkt-Operatoren","text":"<p>F\u00fcgt Attribute zusammen</p>"},{"location":"21HS/DB/02_Grundoperation.html#kartesisches-produkt-auch-cross-join","title":"Kartesisches Produkt (auch Cross-Join)","text":"<ul> <li>Symbol \\(R \\times S\\); SQL: <code>CROSS JOIN</code></li> <li>Kombiniert alle Tupples von R mit allen Tupples von S</li> </ul>"},{"location":"21HS/DB/02_Grundoperation.html#natural-join","title":"Natural Join","text":"<ul> <li>Symbol: \\(\\bowtie\\); Latex: \\bowtie; SQL: <code>NATURAL JOIN</code></li> <li>\\(R \\bowtie S\\) </li> <li>Die gleichen Attribute werden verglichen</li> <li>In SQL ist Join nicht kommuntativ (die Reihenfolge stimmt nicht)</li> <li>Wenn zwei Tabellen \"gejoint\" werden, welche keine gemeinsammen Attribute haben, wird das kartesische Produkt gebildet</li> </ul>"},{"location":"21HS/DB/02_Grundoperation.html#theta-join","title":"Theta-Join","text":"<ul> <li>Symbol: \\(\\bowtie_P\\)</li> <li>Ist eine Verallgemeinerung von einem Natural-Join, da bei diesem Join eine Bedingung angegeben werden k\u00f6nnen</li> <li>Beispiele:</li> <li>\\(\\bowtie_{P (A &gt; B \\wedge R.D = S.D)}\\)</li> </ul>"},{"location":"21HS/DB/02_Grundoperation.html#semi-join","title":"Semi-Join","text":"<p>Ein Semi-Join ist ein Natural-Join, auf welchen danach eine Projektion angewendet wurde: \\(\\pi_{r_1,...,r_n}(R_1 \\bowtie R_2)\\)</p>"},{"location":"21HS/DB/02_Grundoperation.html#left-outer-join","title":"Left-Outer-Join","text":"<p>Alle Resultate von der Relation auf der linken Seite werden \u00fcbernommen, selbst wenn es auf der rechten Seite kein Tuppel gibt, welches passt. In diesem Fall werden anstatt Werte <code>NULL</code> ausgegen.</p>"},{"location":"21HS/DB/02_Grundoperation.html#right-outer-join","title":"Right-Outer-Join","text":"<p>Es werden Alle Resultate von der Relation auf er rechten Seite \u00fcbernommen. Wenn es kein Tupel aus der linken Relation gibt, wird anstelle <code>NULL</code> ausgeggeben.</p>"},{"location":"21HS/DB/02_Grundoperation.html#full-outer-join","title":"Full-Outer-Join","text":"<p>Bei einem Full-Outer-Join werden alle Werte von beiden Relationen ausgegeben. Wenn auf der einen Seite kein passendes Tupel existiert, wird anstelle <code>NULL</code>  ausgegeben.</p>"},{"location":"21HS/DB/02_Grundoperation.html#mengen-operatoren","title":"Mengen Operatoren","text":"<ul> <li> <p>F\u00fcgt Tupels zusammen</p> </li> <li> <p>Bei allen Mengen-Operatoren m\u00fcssen die Relationen das gleiche Schema haben. Zudem werden die Duplikate immer heraus gefilteret.</p> </li> </ul>"},{"location":"21HS/DB/02_Grundoperation.html#vereinigung-cup","title":"Vereinigung (\\(\\cup\\))","text":"<ul> <li>Symbol: \\(\\cup\\); Latex: \\cup; SQL: <code>UNION</code></li> <li>Gibt alle Eintr\u00e4ge von beiden Mengen zur\u00fcck. Duplikate werden entfernt</li> <li>Beide Relationen, welche vereinigt werden, m\u00fcssen dasselbe Schema haben</li> </ul> <p>Wenn die Vereinigung in Bag-Algebra durchgef\u00fchrt wird, werden die Duplikate einer Tupel-Art der linken und rechten Seite gez\u00e4hlt und alle Duplikate dieser Tupel-Art von der Seite mit mehr Duplikaten genommen. Die doppelten Tupels der anderen Seite werden verworfen.</p>"},{"location":"21HS/DB/02_Grundoperation.html#bag-concatenation-sqcup","title":"Bag Concatenation (\\(\\sqcup\\))","text":"<p>Ist ebenfalls eine Vereinigung, die Behandlung von Duplikaten ist allerdings anderst als beim \\(\\cup\\) Operator. Es werden die Duplikaten von beiden Seiten genommen.</p>"},{"location":"21HS/DB/02_Grundoperation.html#durchschnitt-cap","title":"Durchschnitt (\\(\\cap\\))","text":"<ul> <li>Symbol: \\(\\cap\\); Latex: \\cap; SQL: <code>INTERSECT</code></li> <li>Gibt alle Eintr\u00e4ge zur\u00fcck, welche in beiden Mengen vorhanden ist</li> <li>Beide Relationen, welche durchschnitten werden, m\u00fcssen dasselbe Schema haben</li> </ul> <p>Wenn der Durchschnitt in Bag-Algebra durchgef\u00fchrt wird, werden die duplikate Tupels \u00fcbernommen, von denen es weniger gibt.</p>"},{"location":"21HS/DB/02_Grundoperation.html#differenz-setminus","title":"Differenz (\\(\\setminus\\))","text":"<ul> <li>Symbol: \\(R \\setminus S\\); SQL: <code>EXCEPT</code></li> <li>Gibt alle Tupels zur\u00fcck, welche in R sind, aber nicht S</li> <li>Beide Relationen, welche differenziert werden, m\u00fcssen dasselbe Schema haben</li> </ul> <p>Wenn die Differenz in Bag-Algebra durchgef\u00fchrt wird, werden die Duplikate eines Tupels der rechten Seite von der linken Seite abgezogen.</p>"},{"location":"21HS/DB/02_Grundoperation.html#duplikatelimitation-delta","title":"Duplikatelimitation (\\(\\delta\\))","text":"<p>Entfernt die Duplikate einer Relation. Dieser Operator wird nur verwendet, wenn mit Bags gerechnet werden.</p>"},{"location":"21HS/DB/02_Grundoperation.html#aggregationen","title":"Aggregationen","text":""},{"location":"21HS/DB/02_Grundoperation.html#gruppieren","title":"Gruppieren","text":"<ul> <li>Bildet Gruppen, auf welche die Aggregations-Funktion angewandt wird</li> </ul>"},{"location":"21HS/DB/03_Entity%20Relationship%20Diagram.html","title":"ER-Diagram","text":"<p>Ein Entit\u00e4ts-Typ (Tabelen-Schema) wird als Rechteck dargestellt. Die Entit\u00e4t davon w\u00e4re die Tabelle selbst, mit den eigentlichen Werten.</p> <p>Die Attribute werden in einem Oval dargestellt und mit dem Entit\u00e4ts-Typ verbunden. (Wie in einem Mindmap). Wenn ein Attribut ein Schl\u00fcssel ist, dann wird der Attributname unterstrichen.</p> <p>Ein Rombus wird zu einer Zwischentabelle. </p> <p>Es sollen umbedingt alle Null Werte vermieden werden</p>"},{"location":"21HS/DB/03_Entity%20Relationship%20Diagram.html#kardinalitaten","title":"Kardinalit\u00e4ten","text":"Zeichen Ausgeschrieben Erkl\u00e4rung m 0..m beliebig viele 1 0..1 Eine oder keine <p>Im unterem Beispiel kann eine Person eine Firma haben (1 -&gt; 0-1) und eine Firma kann mehrere Personen haben (m -&gt; 0-beliebig viele)</p> <p>In der folgenden Tabelle sieht man, welche Schl\u00fcssel in die Zwischentabelle m\u00fcssen, damit die Kardinalit\u00e4t eingehaltet wird.  Eine Schl\u00fcsselgruppe ist eine Gruppe von Schl\u00fcssel. Diese Gruppe muss eindeutig sein, da man mit einem Schl\u00fcssel ein Tupel identifizieren k\u00f6nnen muss. </p> <p>Bei einer 1-- &lt;&gt; --1 Beziehung, ist der Prim\u00e4rschl\u00fcssel die kleinste Menge von Attribute</p> Diagramm Schl\u00fcssel Beschreibung E 1 -- &lt;&gt; -- 1 F Schl\u00fcssel von E und F in seperaten Schl\u00fcsselgruppen E 1 -- &lt;&gt; -- m F Schl\u00fcssel von F E m -- &lt;&gt; -- 1 F Schl\u00fcssel von E E m -- &lt;&gt; -- m F Schl\u00fcssel von E und F in einer Schl\u00fcsselgruppe <p> Fname (Firma.Name) m\u00fcsste unterstrichen sein, da es ein  Schl\u00fcssel sein muss.</p> <p> Folgende Fakten kann man \u00fcber das obere Beispiel schreiben:</p> <ul> <li>Jede Empfehlung kommt von einem Lehrer und kann mehrere Bucher beinhalten</li> <li>Eine Zuordung ordnet mehreren Empfehlungen ein Fach zu</li> <li>Nutzung kann mehrere Klassen mit mehreren Zuordnungen verbinden</li> </ul> <p>Die Rechteck-Romben sind Zwischentabellen, welche aber auch referenziert werden und daher auch noch Identit\u00e4ten sind. Sie werden <code>Zusammengesetzte Entit\u00e4tstypen</code> genannt.</p>"},{"location":"21HS/DB/03_Entity%20Relationship%20Diagram.html#terziere-beziehung","title":"Terziere Beziehung","text":"x y z Schl\u00fcssel m m m {A1, A2, A3} m m 1 {A1, A2} m 1 m {A1, A3} m 1 1 {A1, A2}, 1 m m {A2, A3} 1 m 1 {A2, A1}, 1 1 m {A3, A1}, 1 1 1 {A1}, {A2}, <p>Ein Beispiel, wie oben, kann interpretiert werden als, pro Klasse und Buch (da beide ein <code>m</code> haben) gibt es h\u00f6chstens 1 Lehrer und Fach.</p>"},{"location":"21HS/DB/03_Entity%20Relationship%20Diagram.html#abhangig-und-unabhangige-typen","title":"Abh\u00e4ngig und Unabh\u00e4ngige Typen","text":"<p>Abh\u00e4ngig ist ein Identit\u00e4tstyp, wenn er auf eine andere Entit\u00e4t zeigt. Unabh\u00e4ngig ist er, wenn er f\u00fcr sich stehen k\u00f6nnte.</p>"},{"location":"21HS/DB/03_Entity%20Relationship%20Diagram.html#isa-abhangig","title":"ISA-Abh\u00e4ngig","text":"<p>ISA = Is A = Ist ein</p> <p>Im Beispiel: </p> <ul> <li>Ein Kunde kann ein Gesch\u00e4ftspartner</li> <li>Ein Liferant kann ein Gesch\u00e4ftspartner sein</li> </ul> <p>Der Schl\u00fcssel muss bei ISA Beziehungen nicht erweitert werden. Kunde kann nur G# brauchen, da es nicht mehrere Kunden gibt, welche auf denselben Gesch\u00e4ftspartner referenzieren.</p> <p></p>"},{"location":"21HS/DB/03_Entity%20Relationship%20Diagram.html#id-abhangig","title":"ID-Abh\u00e4ngig","text":"<p> Der Schl\u00fcssel von Physisches Buch muss erweitert werden und Ex# und ISBN beinhalten, da man sonst nicht auf ein einzelnes Physisches Buch referenzieren k\u00f6nnte, da es mehrere physische B\u00fccher auf ein logisches Buch geben k\u00f6nnen.</p>"},{"location":"21HS/DB/03_Entity%20Relationship%20Diagram.html#korrektes-er-diagramm","title":"Korrektes ER-Diagramm","text":"<p>Mit folgenden Regeln, wird ein korrektes ER-Diagramm erstellt:</p> <ol> <li> <p>Definiere die unabh\u00e4ngige Entit\u00e4ts-Typen (Tabellen, welche keine Fremdschl\u00fcssel besitzen)</p> </li> <li> <p>Definiere die Beziehungs-Typen (Rhomben), wenn mehr als eine unabh\u00e4ngige Entit\u00e4ts-Typen existiert.</p> </li> <li> <p>Definiere die Attribute und Schl\u00fcssel</p> </li> <li> <p>Wandle Beziehungstypen ind zusammengesetzte Entit\u00e4tstypen um, wenn n\u00f6tig</p> </li> <li> <p>Definiere die ID-Abh\u00e4nigen Entit\u00e4stypen (Pfeile mit ID)</p> </li> <li> <p>Definiere die ISA-Abh\u00e4nigen Entit\u00e4tstypen (Pfeile mit ISA)</p> </li> </ol>"},{"location":"21HS/DB/03_Entity%20Relationship%20Diagram.html#relationales-modell","title":"Relationales Modell","text":"<p>Entit\u00e4ten werden im Format \"Name(Schl\u00fcssel1, Attribute2)\" angegeben. Wenn ein Attribut unterstrichen ist, dann ist es ein Schl\u00fcssel. Die Reihenfolge sollte dieselbe sein, in welcher die Entit\u00e4ten erstellt wurden.</p>"},{"location":"21HS/DB/03_Entity%20Relationship%20Diagram.html#bcnf-boyce-codd-normal-form","title":"BCNF (Boyce-Codd Normal-Form)","text":""},{"location":"21HS/DB/04_SQL.html","title":"SQL","text":""},{"location":"21HS/DB/04_SQL.html#datentypen","title":"Datentypen","text":"Datentyp Erkl\u00e4rung CHAR(n)/Character(n) String mit einer fixen L\u00e4nge Char Varying(n)/VARCHAR(n) String, welcher beliebig Lang sein kann . Kann aber ein Limit haben TEXT String, mit beliebiger L\u00e4nge Int/INTEGER Ganzzahl REAL Fliesskomazahl NUMERIC(p, s)/DECIMAL(p, s) Festkomazahl. <code>p</code>\u00a0steht f\u00fcr die Stellen nach dem 0, <code>s</code>f\u00fcr die Stellen nach vor dem 0 INDEX Shortcut f\u00fcr"},{"location":"21HS/DB/04_SQL.html#domains","title":"Domains","text":"<p><pre><code>GENERATED BY DEFAULT AS IDENTITY\n</code></pre> Domains sind Typenalias.</p>"},{"location":"21HS/DB/04_SQL.html#domain-erstellen","title":"Domain erstellen","text":"<p><code>create domain &lt;name&gt; as &lt;datentyp&gt;</code></p> <p>Der Name ist der Name, welcher zuk\u00fcnfigt als Typ verwendet werden k\u00f6nnen, der Datentyp ist ein Typ, wie \"CHAR(10)\".</p>"},{"location":"21HS/DB/04_SQL.html#domain-loschen","title":"Domain L\u00f6schen","text":"<p>L\u00f6scht eine Domain</p> <p><code>drop domain &lt;name</code></p>"},{"location":"21HS/DB/04_SQL.html#schemas","title":"Schemas","text":""},{"location":"21HS/DB/04_SQL.html#schema-erstellen","title":"Schema Erstellen","text":"<p>Um eine neues Schema zuerstellen zu k\u00f6nnen:</p> <p><code>create schema &lt;name&gt; [authorization &lt;user&gt;]</code></p> <p>In Postgressql ist ein Schema ein Teil einer Datenbank. In MySQL diese Terme kann man gleich setzten.</p>"},{"location":"21HS/DB/04_SQL.html#schema-loschen","title":"Schema L\u00f6schen","text":"<p><code>drop schema &lt;name&gt; [cascade]</code></p> <p>L\u00f6scht das angegebene Schema</p> <ul> <li>\"casecade\" l\u00f6scht ohne nach zu fragen.</li> </ul>"},{"location":"21HS/DB/04_SQL.html#schema-auswahlen","title":"Schema ausw\u00e4hlen","text":"<p><code>use schema &lt;name&gt;</code></p> <p>Mit diesem Befehl wird ein Schema ausgew\u00e4hlt, dass f\u00fcr zuk\u00fcnfigite Befehle, wie <code>create table</code> ben\u00fctzt werden soll.</p>"},{"location":"21HS/DB/04_SQL.html#tabellen","title":"Tabellen","text":""},{"location":"21HS/DB/04_SQL.html#tabellen-erstellen","title":"Tabellen Erstellen","text":"<p>Um eine neue Tabelle erstellen zu k\u00f6nnen:</p> <p><code>create table &lt;tablename&gt; (&lt;columnName1&gt; &lt;columnTyp1&gt; &lt;optionen&gt; | table constraint, ...)</code> </p> <ul> <li>optionen</li> <li><code>NOT NULL</code> - Attribut kann nicht null sein (kann nicht benannt werden)</li> <li><code>DEFAULT (&lt;value&gt;)</code> - Setzt ein Default Wert</li> <li><code>CHECK (&lt;condition&gt;)</code> - Das Attribut muss die Kondition erf\u00fcllen</li> <li><code>PRRIMARY KEY</code> (impliziert <code>NOT NULL</code>) - Definiert ein Attribut als Primary Key</li> <li><code>UNIQUE</code> - Attribute muss einzigartig sein</li> <li>table constraint - Anstatt ein Attribut kann auch ein Table Constraint definiert werden: <code>[CONSTRAINT &lt;constraintName&gt;] &lt;optionen von oben&gt;</code></li> </ul>"},{"location":"21HS/DB/04_SQL.html#tabelle-kopieren","title":"Tabelle Kopieren","text":"<p>Wenn man das Schema (ohne Constraints) kopieren m\u00f6chte, kann man folgenden Befehl ben\u00fctzten: <code>CREATE TABLE &lt;tablename&gt; LIKE &lt;table_copy_from&gt; [INCLUDING CONSTRAINTS]</code></p> <p>Mit <code>INCLUDING CONSTRAINTS</code> k\u00f6nnen auch die Constraints \u00fcbernommen werden.</p> <p>Um mit Daten eine neue Tabelle zu erstellen, kann man auch den folgenden Befehl ben\u00fctzten: <code>CREATE TABLE &lt;tablename&gt; AS (&lt;subquery&gt;)</code> . Dies erstellt eine neue Tabelle auf Basis der Subquery.</p> <p>Eine normale Tabelle kann nicht mit <code>update materialized view</code> geupdated werden.</p>"},{"location":"21HS/DB/04_SQL.html#tabellen-loschen","title":"Tabellen L\u00f6schen","text":"<p><code>drop table &lt;tablename&gt; [cascade]</code></p> <p>L\u00f6scht die angegebene Tabelle</p> <ul> <li>\"casecade\" l\u00f6scht ohne nach zu fragen.</li> </ul>"},{"location":"21HS/DB/04_SQL.html#tabellen-andern","title":"Tabellen \u00c4ndern","text":"<p><code>ALTER TABLE &lt;tableName&gt; ADD &lt;column|contraint&gt;</code></p> <p><code>ALTER TABLE &lt;tableName&gt; DROP (&lt;column&gt;|CONSTRAINT &lt;contraint&gt;) [CASCADE]</code></p> <p><code>ALTER TABLE &lt;tableName&gt; ALTER &lt;column&gt;|&lt;contraint&gt; [SET DEFAULT &lt;default_value&gt;]</code></p>"},{"location":"21HS/DB/04_SQL.html#constraints","title":"Constraints","text":""},{"location":"21HS/DB/04_SQL.html#arten","title":"Arten","text":"<ul> <li><code>NOT NULL</code> - Attribut kann nicht null sein (kann nicht benannt werden)</li> <li><code>DEFAULT (&lt;value&gt;)</code> - Setzt ein Default Wert</li> <li><code>CHECK (&lt;condition&gt;)</code> - Das Attribut muss die Kondition erf\u00fcllen</li> <li><code>PRRIMARY KEY [(&lt;spalte1&gt;, ...)]</code> (impliziert <code>NOT NULL</code> und <code>UNIQUE</code>) - Definiert ein oder mehrere  Attribute als Primary Key. (max 1 pro Tabelle)</li> <li><code>FOREIGN KEY &lt;spalte1&gt; REFERENCES &lt;table&gt; [&lt;spalte&gt;]</code> - erstellt ein Foreign Key</li> <li><code>UNIQUE [(&lt;spalte1&gt;, ...)]</code> - Attribute muss einzigartig sein</li> </ul> <p>Bei <code>FOREIGN KEY</code> kann zus\u00e4tzlich noch folgendes angegeben werden:</p> <ul> <li><code>ON UPDATE CASCADE</code>  - wenn der Primary Key ge\u00e4ndert wird, werden die Foreign Keys auch ge\u00e4ndert.</li> <li><code>ON DELETE CASCADE</code> - wenn der Primary Key gel\u00f6scht wird, werden Tupels, welche darauf referenzieren auch gel\u00f6scht.</li> </ul> <p>Beispiel: <pre><code>CREATE TABLE Player (\nname VARCHAR(255),\nclub_name VARCHAR(255),\nCONSTRAINT club_name_constraint FOREIGN KEY (club_name) REFERENCES Club (name) ON UPDATE CASCADE ON DELETE CASCADE\n)\n</code></pre></p>"},{"location":"21HS/DB/04_SQL.html#daten-hinzufugen","title":"Daten Hinzuf\u00fcgen","text":"<p><code>INSERT INTO &lt;tabelle&gt; [(&lt;attribut1&gt;, ...)] VALUES (&lt;value1&gt;,...)</code></p> <p><code>INSERT INTO &lt;tabelle&gt; [(&lt;attribut1&gt;, ...)] (&lt;query&gt;)</code></p> <p>F\u00fcgt ein Tupel in eine Tabelle ein. Ebenfalls kann anstatt fixe Werte ein SELECT angegeben werden. In diesem Fall werden die Werte von der Query \u00fcbernommen</p>"},{"location":"21HS/DB/04_SQL.html#daten-updaten","title":"Daten Updaten","text":"<p><code>UPDATE &lt;tableName&gt; SET &lt;attribut1&gt; = &lt;value1&gt; , ... [WHERE &lt;condition&gt;]</code></p> <p>\u00c4ndert alle Tupels, bei welchen die Kondition zutrifft. Falls kein WHERE angegeben wurde, werden alle Tupels in der Spalte ge\u00e4ndert.</p>"},{"location":"21HS/DB/04_SQL.html#daten-abfragen","title":"Daten Abfragen","text":"<p><code>SELECT &lt;spalte1&gt;, ... FROM &lt;tabellen&gt; [WHERE &lt;condition&gt;] [GROUP BY &lt;spalte&gt;, ... [HAVING &lt;condition&gt;]] [ORDER BY &lt;column&gt; [ASC|DESC]] [LIMIT &lt;limit&gt;] [OFFSET &lt;start&gt;]</code></p> <ul> <li> <p>Als Spalte kann folgendes angegeben werden</p> </li> <li> <p>Spalten von Tabellen vom FROM-Teil </p> <ul> <li>Mathe/Funktionen mit spalten (z.B. saler * 1.2 + 1000 als spalte)</li> <li><code>DISTINCT &lt;spalte&gt;</code> - dies eliminiert Duplikate in der angegebenen Spalte</li> <li>'*' steht f\u00fcr alle Spalten vom FROM-Teil</li> <li>Konstante (z.B. 1)</li> <li>Aggregate Funktionen, wie <code>AVG(&lt;spalte&gt;)</code>, <code>SUM(&lt;spalte&gt;)</code>. Daf\u00fcr sollte aber auch <code>GROUP BY</code> spezifiziert sein</li> <li>Jede \"Spalte\" von dieser Liste kann mit <code>AS &lt;name&gt;</code> umbenennt werden</li> <li>Mit <code>EXTRACT (YEAR from &lt;spalte&gt;)</code> kann z.B. das Jahr von einem Datum extrahiert werden</li> <li>Mit <code>CASE WHEN &lt;condition&gt; THEN &lt;value1&gt; [WHEN &lt;condition&gt; THEN &lt;vallue2&gt;] ELSE &lt;valueN&gt; END</code> kann eine \"If\"-Bedinung gestallten werden</li> <li>Mit <code>COALESCE(&lt;args1&gt;, &lt;argN&gt;, ...)</code> wird das erste Argument zur\u00fcck geben, welches nicht Null ist</li> </ul> </li> <li> <p>Als tabellen kann folgendes geschrieben werden:</p> </li> <li> <p>Eine oder mehrere Tabellen. Wenn mehrere Tabellen definiert werden, wird das Kreuzprodukt gebildet</p> </li> <li> <p>Nach einer Tabelle kann ein Name angegeben werden (z.B. <code>BestellPosition BP</code> BestellPostion k\u00f6nnte in der Query als BP benutzt werden)</p> </li> <li> <p><code>&lt;tabelle&gt; CROSS JOIN &lt;tabelle&gt;</code> - bildet das Kreuzprodukt</p> </li> <li> <p><code>&lt;tabelle&gt; LEFT JOIN &lt;tabelle&gt;</code> - Alle Eintr\u00e4ge von der linken Seite werden \u00fcbernommen. Wenn keine Eintrag auf der rechten Seite gefunden wird, sind die entsprechenden Spalten <code>NULL</code></p> </li> <li> <p><code>&lt;tabelle&gt; RIGHT JOIN &lt;tabelle&gt;</code> - Alle Eintr\u00e4ge von der rechten Seite werden \u00fcbernommen. Die Spalten der linken Seite werden <code>NULL</code>, wenn kein Eintrag zu der rechten Seite gefunden wurde.</p> </li> <li> <p><code>&lt;tabelle&gt; OUTER JOIN &lt;tabelle&gt;</code> - LEFT und RIGHT JOIN kombiniert</p> </li> <li> <p><code>&lt;tabelle&gt; FULL OUTER JOIN &lt;tabelle&gt;</code> - </p> </li> <li> <p><code>&lt;tabelle NATURAL FULL OUTER JOIN &lt;tabelle&gt;</code> - </p> </li> <li> <p><code>&lt;tabelle&gt; [INNER] JOIN &lt;tabelle&gt;</code> - Liefert nur Resultate, welche auf beiden Tabellen einen Eintrag haben. Es gibt den alternativ Syntax <code>SELECT * FROM a, b WHERE a.x = b.x</code></p> </li> <li> <p><code>&lt;tabelle&gt; NATURAL JOIN &lt;tabelle&gt;</code> - Ist das Equivalente zu \\(\\bowtie\\). Es werden gemeinsame Attribute benutzt. Falls es keine gibt, wird ein Kreuzprodukt gebildet</p> </li> <li> <p>Subqueries - <code>&lt;subquery&gt; AS &lt;variable&gt;</code> Das <code>AS</code> weisst der Subquery einen Namen zu, welchen man wie als Tabellennamen benutzten kann</p> </li> <li> <p>conditions</p> </li> <li> <p><code>&lt;column&gt; LIKE &lt;likeStr&gt;</code> Like funktioniert \u00e4hlich, wie <code>=</code>, nur das <code>%</code> anstatt beliebiege Zeichen eingesetzt werden k\u00f6nnen und <code>_</code> als ein bestimmtes Zeichen. Dies funktioniert nur f\u00fcr Strings</p> </li> <li> <p><code>&lt;column&gt; BETWEEN &lt;start&gt; AND &lt;end&gt;</code> Findet alle Werte zwischen dem start und end (inklusiv start und end). Dies funktioniert auch mit Strings oder Daten</p> </li> <li> <p><code>&lt;column&gt; IS [NOT] NULL</code> - pr\u00fcft, ob ein Wert <code>NULL</code> ist</p> </li> <li> <p><code>&lt;&gt;</code> - steht f\u00fcr nicht gleich, wie != in den meisten Sprachen</p> </li> <li> <p><code>EXISTS (subquery)</code> - \u00fcberpr\u00fcft, ob die subquery etwas zur\u00fcck geliefert hat</p> </li> <li> <p><code>&lt;column&gt; IN (&lt;wert1&gt;, ...)</code> ODER <code>&lt;column&gt; IN (&lt;subquery&gt;)</code> - Stelltsicher, dass der Wert der Spalte in der Wertelist ist oder in der Subquery gefunden wird. Die Subquery muss eine Spalte zur\u00fcck geben oder der <code>&lt;column&gt;</code>-Teil muss ein Tupel sein (wie <code>(&lt;column1&gt;, &lt;column2&gt;, ...) IN (select &lt;column1&gt;, &lt;column2&gt;, ...) from ...</code>). Die Reihenfolge wird beachtet, nicht die Namen selbst! </p> </li> <li> <p><code>&lt;column&gt; NOT IN (&lt;wert1&gt;, ...)</code> oder <code>&lt;column&gt; NOT IN (&lt;subquery&gt;)</code> - Gleich wie <code>IN</code> nur, dass der Wert der Spalte nicht in der Werteliste oder Subquery vorkommen darf.</p> </li> <li> <p><code>ORDER BY</code></p> </li> <li> <p><code>ASC</code> - Aufsteigend (default)</p> </li> <li> <p><code>DESC</code> - Absteigend</p> </li> </ul>"},{"location":"21HS/DB/04_SQL.html#reihenfolge","title":"Reihenfolge","text":"<p>In der folgenden Reihenfolge werden SQL Queries abgearbeitet. Speziell wo <code>WHERE</code>und <code>HAVING</code> steht.</p> <ol> <li> <p>FROM</p> </li> <li> <p>WHERE</p> </li> <li> <p>GROUP BY</p> </li> <li> <p>HAVING</p> </li> <li> <p>SELECT</p> </li> <li> <p>ORDER BY</p> </li> </ol>"},{"location":"21HS/DB/04_SQL.html#aggregatsfunktionen","title":"Aggregatsfunktionen","text":"<p>SQL kennt folgende Aggregationsfunktionen <code>COUNT(&lt;spalte&gt;)</code>, <code>AVG(&lt;spalte&gt;)</code>, <code>SUM(&lt;spalte&gt;)</code>, <code>MIN(&lt;spalte&gt;)</code>, <code>MAX(&lt;spalte&gt;)</code></p> <p>(<code>AVG(&lt;splate&gt;)</code> ist nicht dasselbe, wie <code>SUM(&lt;spalte&gt;)/COUNT(&lt;spalte&gt;)</code>, da COUNT auch <code>NULL</code> Werte z\u00e4hlt)</p> <p>Die Aggregationsfunktionen operieren auf den Gruppen, welche von <code>GROUP BY</code> erstellt wurde.</p> <p>Wichtig zu erw\u00e4hnen ist, dass <code>HAVING</code> auf dem aggregiertem Ergebniss filtert und <code>WHERE</code> vor dem Gruppieren. </p> <p>In einer Aggregationsfunktion kann <code>DISTINCT</code> verwendet werden (wie <code>COUNT(DISTINCT &lt;spalte&gt;))</code>. Somit werden nur verschiedene Werte gez\u00e4hlt, summiert,...</p>"},{"location":"21HS/DB/04_SQL.html#subqueries","title":"Subqueries","text":"<p>Abfragen k\u00f6nnen miteinander verbunden werden:</p> <p><code>&lt;query&gt; (UNIION | INTERSECT | EXCEPT) [ALL|DISTINCT] &lt;query&gt;</code> </p> <ul> <li><code>UNION ALL</code> = Bag Concatenation </li> <li><code>INTERSECT ALL</code> = \\(\\cap\\)</li> <li><code>EXCEPT ALL</code> = \\</li> </ul> <p>Ohne <code>ALL</code> wird automatisch <code>DISTINCT</code> gebraucht, was Duplikate entfernt.</p>"},{"location":"21HS/DB/04_SQL.html#all-und-any","title":"<code>ALL</code> und <code>ANY</code>","text":"<p><code>where &lt;column&gt; &lt;|&gt;|&lt;=|&gt;= [NOT] ALL(&lt;subquery&gt;)</code></p> <p><code>where &lt;column&gt; &lt;|&gt;|&lt;=|&gt;= [NOT]ANY (&lt;subquery&gt;)</code></p> <p><code>WHERE alter &gt; all(select alter from person)</code> w\u00fcrde sicher stellen, dass das Alter gr\u00f6sser ist als alle Alter der Personen der Tabelle Person.</p> <p><code>WHERE alter &gt; ANY(select alter from person)</code> w\u00fcrde sicher stellen, dass das Alter gr\u00f6sser ist als mindestens ein Alter einer Person der Tabelle Person.</p>"},{"location":"21HS/DB/04_SQL.html#exists","title":"EXISTS","text":"<p><code>where [NOT] EXISTS(&lt;subquery&gt;)</code></p> <p><code>EXISTS</code> wird true, wenn die Subquery kein leeres Resultat zur\u00fcck bringt.</p> <p>Beispiel: <code>select * from person as P where exists (select 1 from angestellte as A where P.name=A.name)</code>angestellte</p>"},{"location":"21HS/DB/04_SQL.html#common-table-expression-cte","title":"Common Table Expression (CTE)","text":"<p>Mit dem Syntax: <code>WITH &lt;cte_name&gt; AS (&lt;select_query&gt;)&lt;select_query2&gt;</code></p> <p><code>&lt;select_query2&gt;</code> kann nun eine Tabelle <code>&lt;cte_name&gt;</code> ben\u00fctzten. Dies kann Abfragen vereinfachen, welche viele Subqueries haben.</p>"},{"location":"21HS/DB/04_SQL.html#views","title":"Views","text":""},{"location":"21HS/DB/04_SQL.html#materialized-view","title":"Materialized View","text":"<p>Eine materialized View updaten nicht automatisch, sondern muss manuell geupdated werden mit <code>REFRESH MATERIALIZED VIEW &lt;name&gt;</code>.</p> <p>Dies kann auch mit Triggers erledigt werden. So k\u00f6nnte man z.B. nach einem Zeitintervall die Materialized View updaten.</p>"},{"location":"21HS/DB/04_SQL.html#view-erstellen","title":"View erstellen","text":"<p><code>CREATE [MATERIALIZED] VIEW &lt;name&gt; AS &lt;abfrage&gt;</code></p> <p>Damit wird eine View erstellt. Dies kann n\u00fctzlich sein, um die Schreibarbeit zu minimieren. Ebenfalls kann es dazu verwendet werden, Rechte auf nur einen Teil einer Tabelle zu verteilen.</p> <p>Views k\u00f6nnen auch von anderen Views abh\u00e4ngig sein.</p> <p>Wenn eine View von mehreren Tabellen abh\u00e4ngig ist (oder andere Speziallf\u00e4lle), k\u00f6nnen keine neue Daten eingef\u00fcgt werden. Wenn eine View mit <code>AS select * from &lt;tabelle&gt;</code> erstellt, dann k\u00f6nnen Daten ge\u00e4ndert werden.</p>"},{"location":"21HS/DB/04_SQL.html#view-andern","title":"View \u00e4ndern","text":"<p><code>ALTER VIEW &lt;name&gt; ..</code></p> <p>Kann dazu verwedet werden, um verschiedene Eigenschaften einer View zu \u00e4ndern. Um die Spalten einer View zu \u00e4ndern, ist es aber einfacher einfach die View zu l\u00f6schen und neu zu erstellen.</p>"},{"location":"21HS/DB/04_SQL.html#view-loschen","title":"View l\u00f6schen","text":"<p><code>DROP VIEW &lt;name&gt;</code></p> <p>Damit wird eine View gel\u00f6scht.</p>"},{"location":"21HS/DB/04_SQL.html#stored-proceduresfunktion","title":"Stored Procedures/Funktion","text":"<ul> <li>Vorteile</li> <li>Reduktion von Datenverkehr zwischen Client und DBMS</li> <li>Sehr komplexe Abfragen sind m\u00f6glich</li> <li>Sind verwendtbar von mehreren Applikationen</li> <li>Nachteile</li> <li>Syntax nicht standardisiert</li> <li>Fehlerbehandlung ist umst\u00e4ndlich</li> <li>Unkonfortable zum Entwickeln</li> <li>(Vermutlich noch ein Ort mehr, an dem dieselbe Logik implementiert wird (z.B. in HTML/JS, Java Server und noch DBMS))</li> </ul> <p><code>CREATE PROCEDURE &lt;name&gt;</code></p> <p><code>ALTER PROCEDURE &lt;name&gt;...</code></p> <p><code>DROP PROCEDURE &lt;name&gt;</code></p> <p><code>CREATE FUNCTION &lt;name&gt;</code></p> <p><code>ALTER FUNCTION &lt;name&gt;...</code></p> <p><code>DROP FUNCTION &lt;name&gt;</code></p> <p>Die Grundstruktur einer Funktion sieht folgendermassen aus:</p> <pre><code>CREATE OR REPLACE FUNCTION &lt;name&gt;() RETURNS &lt;returnType&gt; AS\n$body$\nBEGIN\n&lt;mainLogicBlock&gt;\nEXCEPTION\n&lt;exceptionBlock&gt;\nEND\n$body$\n</code></pre> <p>Mit <code>SELECT &lt;name&gt;()</code> kann man diese Funktion danach aufraufen.</p>"},{"location":"21HS/DB/04_SQL.html#variabeln","title":"Variabeln","text":"<p><code>&lt;name&gt; [CONSTANT] &lt;type&gt; [NOT NULL] &lt;expression&gt;</code></p> <p><code>&lt;name&gt; [CONSTANT] &lt;type&gt; [NOT NULL] DEFAULT &lt;expression&gt;</code></p> <p>Mit dem obigen SQL k\u00f6nnen Variabeln in einer Funktion erstellt werden. </p>"},{"location":"21HS/DB/04_SQL.html#cursor","title":"Cursor","text":"<pre><code>DECLARE &lt;cursor_name&gt; CURSOR\nFOR &lt;select_expression&gt;\n[FOR UPDATE]\n</code></pre> <p>Mit <code>OPEN &lt;cursor_name&gt;</code> kann der Cursor ge\u00f6ffnet werden und mit <code>CLOSE &lt;cursor_name&gt;</code> wieder geschlossen.</p> <pre><code>CREATE OR REPLACE FUNCTION Show_AlleBesuchernamen()\nRETURNS VOID AS $$\nDECLARE\n    rec_Besucher record;\n    c_Namen CURSOR FOR SELECT Name,Vorname FROM Besucher;\nBEGIN\n    OPEN c_Namen;\n    LOOP\n        FETCH c_Namen INTO rec_Besucher;\n        EXIT WHEN NOT FOUND;\n        RAISE NOTICE 'Name: % Vorname: % ',rec_Besucher.Name, rec_Besucher.Vorname;\nEND LOOP;\nCLOSE c_Namen;\nEND; $$\nLANGUAGE plpgsql;\n</code></pre>"},{"location":"21HS/DB/04_SQL.html#trigger","title":"Trigger","text":"<p>Triggers werden ausgef\u00fchrt, wenn ein sich eine Tabelle \u00e4ndert. Einen Trigger kann f\u00fcr INSERT, UPDATE und DELETE definiert werden.</p> <p>Mit den typeschen SQL Statements k\u00f6nnen Triggers erstellt werden.</p> <p><code>CREATE TRIGGER &lt;name&gt; (BEFORE|AFTER|INSTEAD OF) ON &lt;tabelle&gt; FOR EACH ROW EXECUTE PROCEDURE &lt;procedure/function&gt;()</code> <code>ALTER TRIGGER \u00a0&lt;name&gt; (DISABLE|ENABLE)</code></p> <p><code>DROP TRIGGER &lt;name&gt;</code></p>"},{"location":"21HS/DB/04_SQL.html#index","title":"Index","text":"<p>Mit <code>CREATE INDEX &lt;name&gt; on &lt;table&gt;(&lt;column&gt;, ...)</code> kann ein Index erstelt werden und mit <code>DROP INDEX &lt;name&gt;</code> weder gel\u00f6scht werden.</p> <p>Ein Index hat einige Vorteile, aber auch Nachteille:</p> <ul> <li> <p>Vorteil:</p> </li> <li> <p>Zugriffzeit     Da die Daten nun eine Sortierung haben, kann die DB schneller auf die Daten zugreifen</p> </li> <li> <p>Nachteile:</p> </li> <li> <p>Speicherplatz     Der Index b\u00f6ntigt platz</p> </li> <li> <p>Zeit     Um den Index zu erstellen und nocht wichtiger beim Updaten, ben\u00f6tigt die DB Zeit, um den Index neu zu schreiben</p> </li> </ul>"},{"location":"21HS/DB/04_SQL.html#wann-lohnt-sich-ein-index","title":"Wann lohnt sich ein Index?","text":"<ul> <li> <p>Attribute, welche oft Abgefragt werden</p> </li> <li> <p>Femdschl\u00fcssel sollten indexiert werden</p> </li> <li> <p>Generell, Attribute, \u00fcber die oft gejoint weden, sollten indexiert werden</p> </li> <li> <p>Attribute mit niedriger Kardinalit\u00e4t sollten nicht indexiert weden (daf\u00fcr gibt es spezielle Indexstrukturen, welche wir allerdings nicht behandeln)</p> </li> </ul>"},{"location":"21HS/DB/04_SQL.html#dunn-vs-dichtbesetzer-index","title":"D\u00fcnn- vs. Dichtbesetzer Index","text":""},{"location":"21HS/DB/04_SQL.html#transaktionen","title":"Transaktionen","text":"<p>Im folgenden Bild sind die verschiedenen Statis einer Transakti</p> <p></p>"},{"location":"21HS/DB/04_SQL.html#lost-update","title":"Lost-Update","text":"<ul> <li>Es darf nicht gleizeitig aus zwei Transaktionen geschrieben werden. Dies verhindert ein Lost-Update</li> </ul>"},{"location":"21HS/DB/04_SQL.html#dirty-read","title":"Dirty Read","text":""},{"location":"21HS/DB/04_SQL.html#non-repeatable-read","title":"Non-Repeatable Read","text":""},{"location":"21HS/DB/04_SQL.html#phantom-read","title":"Phantom-Read","text":""},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html","title":"Integrit\u00e4tsregeln","text":"<p>Wichtig anzumerken, nur weill die Datenbank konsistenz ist, heisst nicht, dass die Daten darin korrekt sind.</p>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#uberprufbare-regeln","title":"\u00dcberpr\u00fcfbare Regeln","text":"<ul> <li> <p>Bereichintegrit\u00e4t   Das DB-System stellt sicher, dass der Wert eines Attributes in einem Wertebereich ist. Daf\u00fcr k\u00f6nnen z.B. <code>NULL</code> und <code>NOT NULL</code>, wie auch Dom\u00e4nen verwendet werden</p> </li> <li> <p>Entit\u00e4tsintegrit\u00e4t   Der Prim\u00e4tschl\u00fcssel kann nicht leer sein. Also nicht <code>NULL</code></p> </li> <li> <p>Refentielle Integrit\u00e4t   Der Wert eines Fremdschl\u00fcssel muss <code>NULL</code> sein oder genau einen Prim\u00e4rschl\u00fcssel referezieren</p> </li> <li> <p>Constraints   Zus\u00e4tzlich k\u00f6nnen Constraints geschrieben werden, um weitere Bedingungen zu \u00fcberpr\u00fcfen. Siehe SQL</p> </li> </ul>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#acid","title":"ACID","text":"<p>ACID steht f\u00fcr Atomicity, Consistency, Isolation und Durability. Dies sind Eigenschaften, welche von einer Transaktion eingehalten werden soll.</p>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#atomicity","title":"Atomicity","text":"<p>Entweder funktioniert alle Statements in einer Transaktion oder kein Statement. Wenn ein Fehler auftritt, m\u00fcssen alle \u00c4nderungen davor r\u00fcckg\u00e4ngig gemacht werden (Rollback).</p>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#consistency","title":"Consistency","text":"<p>Nach einer Operation muss die DB wieder in einem Konsistenten Zustand hinterlassen werden.</p>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#isolation","title":"Isolation","text":"<p>Zwei parallel-laufende Transaktionen d\u00fcrfen sich nicht beinflussen.</p>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#durability","title":"Durability","text":"<p>Die DB muss erfolgreiche Statements speichern, so dass selbst im Fall eines Absturz diese wieder geladen werden k\u00f6nnten. Falls dies nicht m\u00f6glich ist, muss auf einen vorg\u00e4ngigen konsistenten Zustand zur\u00fcck gesetzt werden k\u00f6nnen (Rollback).</p>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#probleme-beim-nicht-einhalten-von-acid","title":"Probleme beim nicht-einhalten von ACID","text":"<p>Folgende Probleme k\u00f6nnen auftreten, wenn die ACID Eigenschaften nicht eingehalten werden. Manchmal kann man mit diesen Problemen leben, da das Einhalten der ACID-Eigeschaften Performance kostet.</p> <p>Lost-Update kann fast nie toleriert werden. Die anderen Probleme k\u00f6nnen zum teil toleriert werden.</p>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#lost-update","title":"Lost-Update","text":"<p>Ein bereits geschriebenes Update wird wieder \u00fcberschrieben. Dies kann eintreffen, wenn keine Isolation zwischen den Transaktionen herscht und eine Transaktion den zu schreibenden Bereich nicht sperrt.</p> <p>Dieses Problem wird gel\u00f6st, in dem eine Transaktion Daten, welche von einer zweiten Transaktion gelesen werden, nicht ver\u00e4ndern darf.</p> <p>Beispiel:</p> Transaktion 1 Transaktion 2 1 <code>SEECT wert INTO W FROM tbl</code> 2 <code>SEECT wert INTO W FROM tbl</code> 3 <code>UPDATE tbl SET wert=100</code> 4 <code>UPDATE tbl SET wert=200</code> 5 <code>SEECT wert INTO W FROM tbl</code> 6 <code>SEECT wert INTO W FROM tbl</code>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#dirty-read-problem","title":"Dirty-Read-Problem","text":"<p>Ein Dirty-Read passiert, wenn Daten von einer noch nicht fertigen Transaktion gelesen werden.</p> Transaktion 1 Transaktion 2 1 <code>UPDATE tbl SET Wert = 5</code> 2 <code>SELECT wert INTO w FROM tbl</code> 3 <code>ROLLBACK</code> 4 <code>UPDATE tbl SET wert=w+1</code> 5 <code>SELECT wert FROM tbl</code> (Resultat 6) <p>Dies wird dadurch verursacht, dass die Transaktion 2 bereits Daten von der noch nicht fertigen Transaktion 1 lesen kann und somit die Isolation-Eigenschaft von ACID verletzt ist. Zus\u00e4tzlich d\u00fcrfte dies nicht m\u00f6glich sein, da die Transaktion 1 die Tabelle <code>tbl</code> sperren m\u00fcsste, um zu schreiben zu k\u00f6nnen.</p>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#non-repeatable-read","title":"Non-Repeatable-Read","text":"<p>Zwei verschiedene Lese-Zugriff auf den selben Wert lieftert unterschiedliche Resultate.</p> Transaktion 1 Transaktion 2 1 <code>SELECT wert INTO W FROM tbl</code> 2 <code>UPDATE tbl SET wert=6</code> 3 <code>COMMIT</code> 4 <code>SELECT wert INTO W FROM tbl</code> <p>Das <code>SELECT</code> bei 1 w\u00fcrde ein anderes Resultat zur\u00fcck liefern als das bei 4. Dies kommt davon, da Transaktion 1 sieht was Transaktion 2 ver\u00e4ndert hat. Die Transaktion 1 d\u00fcrfte nur den Zustand der DB sehen, welche am Anfang der Transaktion vorhanden war.</p>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#phantom-read","title":"Phantom-Read","text":"<p>Ein Phatom-Read entsteht, wenn ein Tupel eingef\u00fcgt oder gel\u00f6scht wird, w\u00e4hrend einer anderen Transaktion und die das sieht. Dies kann in Aggregationsfunktionen auftreten</p> Transaktion 1 Transaktion 2 1 <code>SELECT COUNT(*) INTO ctn FROM tbl</code> 2 <code>INSERT INTO tbl VALUES (...)</code> 3 <code>COMMIT</code> 4 <code>SELECT COUNT(*) INTO ctn FROM tbl</code> <p>Das Problem ist dasselbe, wie beim Non-Repeatable-Read, dass die Transaktion 1 sieht, was Transaktion 2 commitet hat. Der Unterschied ist, dass sich keine Attributwerte sich ver\u00e4ndern, sondern eines Tupel hinzugef\u00fcgt oder entfernt wird.</p> <p>Dies kann gel\u00f6st werden, in dem Transaktion 1 nur sieht, was zu Beginn der Transaktion sichtbar war.</p>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#isolationsebenen","title":"Isolationsebenen","text":"<p>Mit <code>SET TRANSACTION ISOLATION LEVEL {READ UNCOMMITED | READ COMMITTED | REPEATABLE READ | SERIALIZABLE}</code> kann die Isolationsebenen ver\u00e4ndert werden.</p> <p>(In Postgresql ist <code>READ UNCOMMITTED</code> das selbe, wie <code>READ COMMITTED</code>)</p> <p></p>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#defered-constraint-checking","title":"Defered Constraint Checking","text":""},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#schedules","title":"Schedules","text":"<p>Der vollst\u00e4ndige Schedule beinhaltet alle Schritte, inklusive <code>COMMIT</code> und <code>ROLLBACK</code> Befehle. Ebenfalls ist f\u00fcr jede Transaktion festgehalten, ob sie erfolgreich war oder nicht. Wenn eine neue Abfrage an den DB-Server gesendet wird, landet diese zuerst im vollst\u00e4ndigen Schedule bevor die Befehle auf einen Schedule geplant werden konnten.</p> <p>Ein Schedule (nicht ein vollst\u00e4ndiger Schedule) wird von der DB geplant anhand des vollst\u00e4ndigen Schedule. Die Planung kann w\u00e4hrend des Ausf\u00fchrens eines Schedules laufen, so bald dieser fertig ist, wird der n\u00e4chste ausgef\u00fchrt.</p>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#darstellung","title":"Darstellung","text":""},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#konfliktserialisierbar","title":"konfliktserialisierbar","text":"<p>Ein Schedule ist konfliktserialisierbar, wenn:</p> <ol> <li>d</li> </ol> <p>Anders ausgedr\u00fcckt, ein Schedule ist serialisierbar, wenn dieser keine Zyklen enth\u00e4lt.</p> <p></p>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#scheduler-transaktionsmanager","title":"Scheduler / Transaktionsmanager","text":"<p>Der Scheduler erstellt ein serialisierbaren Schedule f\u00fcr parallel auszuf\u00fchrende Transaktionen.</p> <ul> <li>Aggresiver Scheduler   L\u00e4sst Konflikte zu und probiert wenn diese auftreten, die zu l\u00f6sen. Dies f\u00fchrt zu einer h\u00f6hreren Parallelit\u00e4t</li> <li>Konservative Scheduler   Verscuht m\u00f6glichst Konflikte zu vermeiden. Dies f\u00fchrt zu einer niedrigen Parallelit\u00e4t</li> </ul>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#sperrverfahre","title":"Sperrverfahre","text":"<p>Generell gillt, dass nach einem Unlock, darf eine Transaktion keine weiteren Locks erstellen und alle Sperren werden beim Transaktionsende (COMMIT/ROLLBACK) aufgehoben.</p> <p>Wenn keine Sperre erstellt werden kann, dann muss die Transaktion warten, bis diese Sperre aufgehoben ist und der Bereich wieder frei ist. Das kann zu Livelocking, bzw. Verhunger f\u00fchren, wenn eine Transaktion wiederholt nicht daran kommt, weil eine andere Transaktion immer den Bereich sperrt, wenn er wieder frei wird. Die DBMS versucht dies zu vermeiden, in dem \"faire\" Algorithmen eingesetzt werden.</p>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#lese-sperre-share-lock","title":"Lese-Sperre (Share Lock)","text":"<p>Bei einer Lese sperre k\u00f6nnen andere Transaktionen immer noch vom gelockten Bereich lesen, aber nicht mehr Schreiben. Diese Sperre kann nur gesetzt werden, wenn keine Schreib-Sperre existiert (eine Lese-Sperre ist kein Problem).</p> <p>Ein Lesezugriff kann nur get\u00e4tigt werden, wenn eine Lese-Sperre (oder Schreib-Sperre) auf dem zu lesenden Bereich existiert. </p>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#schreib-sperre-exclusive-lock","title":"Schreib-Sperre (Exclusive Lock)","text":"<p>Bei einer Schreib-Sperre kann der gesperrte Breich nur von dieser Transaktion gelesen und geschrieben werden. Diese Sperre kann nur gesetzt werden, wenn keine andere Spere auf diesem Bereich aktiv ist.</p> <p>Ein Schreibzugriff kan nur get\u00e4tigt werden, wenn eine Schreib-Sperre auf dem zu schreibewnden Bereich aktiv ist.</p>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#regeln","title":"Regeln","text":"<ul> <li>Bei einem Commit oder Rollback werden alle Sperren aufgehoben</li> </ul>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#probleme","title":"Probleme","text":"<ol> <li>Block: Eine gesperrte Resource zwingt einen anderen Prozess zu warten, bis die Sperre wieder entfernt wurde</li> <li>Verhungern, Livelock: Eine Transaktion kommt nie daran, weil immer wieder andere Transaktionen vor der Transaktion abgearbeitet werden.</li> <li>Deadlock: Dies passiert, wenn sich mehrere Transaktionen gegenseitig Sperren.    Das RDBms erkennt solche Deadlocks. Wenn dies passiert, wird eine Transaktion ausgew\u00e4hlt und zur\u00fcck gesetzt, um den Deadlock zu behben.</li> <li>Phantom-Read/Non-Repeatable-Read:     L\u00f6sungen: Sperren und/oder Transaktionen isolieren</li> </ol>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#recovery","title":"Recovery","text":"<p>Wenn die DB nicht ordnungsgem\u00e4ss herunter gefahren wurde (z.B. mit <code>pkill</code> im Terminal), wird eine Recovery eingeleitet, um wieder auf einen konsistenten Zustand zu kommen</p> <ol> <li>Der Recovery-Manager kann aus den Transaktionslogs einen vorherigen Zustand wieder herstellen</li> <li>...</li> </ol>"},{"location":"21HS/DB/05_Integrit%C3%A4tsregeln.html#fehlerklassifikation","title":"Fehlerklassifikation","text":"<ol> <li>Transaktionsfehler    Dies f\u00fchrt zu einem Transaktionsabbruch und einem <code>ROLLBACK</code>. Da alle \u00c4nderungen r\u00fcckg\u00e4ngig gemacht werden, hat dies keinen Einfluss auf den Speicher</li> <li>Systemfehler    Die Daten im Arbeitsspeicher wurden (zum Teil) zerst\u00f6rt. Dies kann eine Folge von einem Fehler in der DBMS, vom OS oder auf der Hardware sein. Eventuell wurde das System nicht sauber neugestartet.     In diesem Fall wird zuerst versucht die erfolgreichabgeschlossenen Transaktionen anhand des Transaktionslogs wieder herzustellen. Wenn dies fehlschl\u00e4gt wird auf den letzten konsistenten Zustand zur\u00fcckgesetzt.</li> <li>Mediafehler    Die Daten auf dem Speichermedium sind korrupt. In diesem Fall kann versucht werden manuell ein Backup einzuspielen. Ev. kann die DB aus den bestehenden Daten wieder auf einen konsistenten Zustand kommen.</li> </ol>"},{"location":"21HS/DB/summaries/summary-2022-01-25.html","title":"DB Summary 25.01.2022","text":"","tags":["summary","DB"]},{"location":"21HS/DB/summaries/summary-2022-01-25.html#relationale-algebra","title":"Relationale Algebra","text":"Operation Erkl\u00e4rung Beispiel \\(\\sigma\\) Selektion/ <code>WHERE</code> \\(\\sigma_{L\u00e4nge&gt;3}(R)\\) \\(\\pi\\) Projektion/<code>SELECT</code> \\(\\pi_{}\\) \\(\\bowtie\\) <code>NATURAL JOIN</code>","tags":["summary","DB"]},{"location":"21HS/DB/summaries/summary-2022-01-25.html#erd","title":"ERD","text":"","tags":["summary","DB"]},{"location":"21HS/DB/summaries/summary-2022-01-25.html#korrektes-er-diagramm","title":"Korrektes ER-Diagramm","text":"<p>Mit folgenden Regeln, wird ein korrektes ER-Diagramm erstellt:</p> <ol> <li>Definiere die unabh\u00e4ngige Entit\u00e4ts-Typen (Tabellen, welche keine Fremdschl\u00fcssel besitzen)</li> <li>Definiere die Beziehungs-Typen (Rhomben), wenn mehr als eine unabh\u00e4ngige Entit\u00e4ts-Typen existiert.</li> <li>Definiere die Attribute und Schl\u00fcssel</li> <li>Wandle Beziehungstypen ind zusammengesetzte Entit\u00e4tstypen um, wenn n\u00f6tig</li> <li>Definiere die ID-Abh\u00e4nigen Entit\u00e4stypen (Pfeile mit ID)</li> <li>Definiere die ISA-Abh\u00e4nigen Entit\u00e4tstypen (Pfeile mit ISA)</li> </ol>","tags":["summary","DB"]},{"location":"21HS/DB/summaries/summary-2022-01-25.html#schlussel-gruppen","title":"Schl\u00fcssel Gruppen","text":"Diagramm Schl\u00fcssel Beschreibung E 1 -- &lt;&gt; -- 1 F Schl\u00fcssel von E und F in seperaten Schl\u00fcsselgruppen E 1 -- &lt;&gt; -- m F Schl\u00fcssel von F E m -- &lt;&gt; -- 1 F Schl\u00fcssel von E E m -- &lt;&gt; -- m F Schl\u00fcssel von E und F in einer Schl\u00fcsselgruppe <p> | x    | y    | z    | Schl\u00fcssel          | | ---- | ---- | ---- | ------------------ | | m    | m    | m    | {A1, A2, A3}       | | m    | m    | 1    | {A1, A2}           | | m    | 1    | m    | {A1, A3}           | | m    | 1    | 1    | {A1, A2}, {A1, A3} | | 1    | m    | m    | {A2, A3}           | | 1    | m    | 1    | {A2, A1}, {A2, A3} | | 1    | 1    | m    | {A3, A1}, {A3, A2} | | 1    | 1    | 1    | {A1}, {A2}, {A3}   |</p>","tags":["summary","DB"]},{"location":"21HS/DB/summaries/summary-2022-01-25.html#id-und-isa-bezihungen","title":"ID und ISA Bezihungen","text":"<ul> <li>ISA - \u00dcbernimmt den Schl\u00fcssel</li> <li>ID - Erweirtert den Schl\u00fcssel</li> </ul>","tags":["summary","DB"]},{"location":"21HS/DB/summaries/summary-2022-01-25.html#sql","title":"SQL","text":"","tags":["summary","DB"]},{"location":"21HS/DB/summaries/summary-2022-01-25.html#reihenfolge","title":"Reihenfolge","text":"<p>In der folgenden Reihenfolge werden SQL Queries abgearbeitet. Speziell wo <code>WHERE</code>und <code>HAVING</code> steht.</p> <ol> <li> <p>FROM</p> </li> <li> <p>WHERE</p> </li> <li> <p>GROUP BY</p> </li> <li> <p>HAVING</p> </li> <li> <p>SELECT</p> </li> <li> <p>ORDER BY</p> </li> </ol>","tags":["summary","DB"]},{"location":"21HS/DB/summaries/summary-2022-01-25.html#stuff","title":"Stuff","text":"","tags":["summary","DB"]},{"location":"21HS/DB/summaries/summary-2022-01-25.html#datenarten","title":"Datenarten","text":"Name Erkl\u00e4rung Beispiel Strukturierte Daten Daten mit fest vorgegebenen Struktur DBs Semi-strukturierte Daten Daten,  mit unvollst\u00f6ndigen Struktur JSON, XML,... Unstrukturierte Daten Daten, ohne explizite Struktur Text, Bilder, Film, ... <p>Eine Dom\u00e4ne ist ein Wertebereich</p> <ul> <li>Dom\u00e4ne: Ein Wertebereich, bzw. Datentyp</li> <li>Attribute: Eigenschaften von Tabellen</li> <li>Attributwerte: Die eigentlichen Werte eines Attributes</li> <li>n-Tupel: Eine Reihe in einer Relation, eine Menge von Attributwerten</li> <li>Relationsschema, Format, Heading, Relationsvariable: Menge von Attributen</li> <li>Relation: Relationsschema und Menge von Tupeln zusammen</li> <li>Sind ungeordnet</li> <li>Schl\u00fcssel: Identifiziert ein Tupel eindeutig</li> <li>Surrogatschl\u00fcssel: K\u00fcnstlicher Schl\u00fcssel (zB. eine ID)</li> <li>Prim\u00e4rschl\u00fcssel: Ein Schl\u00fcssel, auf welchen ein Fremdschl\u00fcssel zeigt</li> </ul>","tags":["summary","DB"]},{"location":"21HS/DM/01_Aussaglogik.html","title":"01 Aussaglogik","text":""},{"location":"21HS/DM/01_Aussaglogik.html#aussaglogik","title":"Aussaglogik","text":"<ul> <li>Sprachliche S\u00e4tze sind nicht eindeutig!</li> </ul> <p>T (\\(\\top\\)) = Tautologie = immer wahr W (\\(\\bot\\))= Wiederspruch = immer falsch</p>"},{"location":"21HS/DM/01_Aussaglogik.html#was-ist-eine-aussage","title":"Was ist eine Aussage","text":"<ul> <li> <p>Ein Satz, welchem ein \"wahr\" oder \"falsch\" Wert zugeordnet werden kann</p> </li> <li> <p>Darf nicht abh\u00e4ngig von einer freien Variable sein </p> </li> <li> <p>zB. x &gt; 0 ist keine Aussage, da abh\u00e4ngig von x </p> </li> <li> <p>\"alle x, wenn man sie durch 2 teilt, sind gerade\", ist eine Aussage, da alle x eingesetzt werden k\u00f6nnen</p> </li> <li> <p>Ein Pr\u00e4dikat wird zu einer Aussage, wenn man die freie Variable bindet (zB. \"A(2)\")</p> </li> <li> <p>Eine Aussage ist ein 0-stelliges Pr\u00e4dikat</p> </li> </ul>"},{"location":"21HS/DM/01_Aussaglogik.html#pradikat","title":"Pr\u00e4dikat","text":"<ul> <li>A(x): einstelliges Pr\u00e4dikat (zB: A(x):=\"x&lt;3\")</li> <li>A(x, y): zweistelliges Pr\u00e4dikat (zB. A(x, y):= \"x &lt; y\")</li> <li>Bsp:</li> <li>P(p) := \"p is teine Primzahl\"</li> <li>Q(x, y) := \"wenn x &lt; y, dann gilt x\u00b2 + 14x - 15 = 0\" </li> </ul>"},{"location":"21HS/DM/01_Aussaglogik.html#junktoren","title":"Junktoren","text":"<p>Verkn\u00fcpfen Aussagen, um so komplexere Junkoren zu kreieren.</p> <p>Definitionen: </p> <ul> <li>Elementaraussagen: Eine Aussage, die nicht weiter Zerlegt werden kann.</li> <li>Zusamengesetzte Aussagen: Aussagen, die aus Elementaraussagen bestehen, die durch Junktoren verknp\u00fcft werden</li> </ul> <p>Bsp:</p> <ul> <li>A := \"78 ist keine Primzahl\" (Elementaraussage)</li> <li>B := \"15 ist keine Primzahl\" (Elementaraussage)</li> <li>C := \"78 ist keine Primzahl und 15 ist keine Primzahl\" (Zusammengesetzte Aussage)</li> </ul> <p>0: falsch = W (Wiederspruch) 1: wahr = T (Tautologie)</p>"},{"location":"21HS/DM/01_Aussaglogik.html#negation","title":"Negation","text":"<p>Negation: \\(\\neg A\\)</p> <p>Bsp:</p> <ul> <li>A:= \"Hans studiert an der ZHAW\"</li> <li>\\neg A:= (\"Hans studiert nicht an der ZHAW\") = \"Es trifft nicht zu, dass Hans an der ZHAW studiert.\"</li> </ul> <p>\\(\\neg\\) -&gt; \"Es trifft nicht zu\"</p>"},{"location":"21HS/DM/01_Aussaglogik.html#konjunktion-und","title":"Konjunktion (und)","text":"<p>\\wedge -&gt; \\(\\wedge\\)</p> <p>Beispiel:</p> <ul> <li>A := \"6 ist durch 2 teilbar\" -&gt; wahr</li> <li>B := \"8 ist durch 5 teilbar\" -&gt; falsch</li> <li>\\(A \\wedge B\\): \"6 ist durch 2 teilbar und 8 ist durch 5 teilbar\" -&gt; falsch</li> </ul> A B \\(A \\wedge B\\) 0 0 0 1 0 0 0 1 0 1 1 1"},{"location":"21HS/DM/01_Aussaglogik.html#disjunktion-oder","title":"Disjunktion (oder)","text":"<p>\\vee -&gt; \\(\\vee\\)</p> <p>Beispiel:</p> <ul> <li>A := \"9 ist durch 3 teilbar\" -&gt; wahr</li> <li>B := \"9 ist eine Quadratzahl\" -&gt; wahr</li> <li>\\(A \\vee \\neg B\\) = \"9 ist durch 3 teilbar oder 9 ist keine Quadratzahl\" -&gt;wahr</li> </ul> A B \\(A \\vee B\\) 0 0 0 0 1 1 1 0 1 1 1 1"},{"location":"21HS/DM/01_Aussaglogik.html#implikation-wenn-dann","title":"Implikation (wenn..., dann...)","text":"<p>\\Rightarrow -&gt; \\(\\Rightarrow\\)</p> <p>Bsp:</p> <ul> <li>A := \"Es regnet\"</li> <li>B := \"Die Wiese ist nass\"</li> <li>\\(A \\Rightarrow B\\) := Wenn es regnet, dann ist die wiese nass\"</li> <li>\"Alle Fische leben im Ozean\" =&gt; \"Haie leben im Ozean\" = wahr</li> <li>\"Alle Fische leben im Ozean\" =&gt; \"Forellen leben im Ozean\" = wahr</li> </ul> A B \\(A \\Rightarrow B\\) Erkl\u00e4rung 0 0 1 Da A, die Bedinungen falsch ist, kann B falsch sein. 0 1 1 Da A falsch ist, kann B aber auch wahr sein. 1 0 0 Wenn A wahr ist, muss B auch wahr sein 1 1 1 Wenn A wahr ist, muss B auch wahr sein"},{"location":"21HS/DM/01_Aussaglogik.html#aquivalenz-leftrightarrow","title":"\u00c4quivalenz (\\(\\Leftrightarrow\\))","text":"<p>Zwei Aussagen sind \u00e4quivalenz, wenn gilt: \\(A \\Rightarrow B \\wedge B \\Rightarrow A\\)</p> A B \\(A \\Leftrightarrow B\\) 0 0 1 0 1 0 1 0 0 1 1 1 <p>Bsp:</p> <ul> <li>A(x) := \"\\(x^2=4\\)\"</li> <li>B(x) := \"x=2\"</li> <li>in \\(\\mathbb Z: B(x) \\Rightarrow A(x)\\) -&gt; wahr</li> <li>in \\(\\mathbb N: B(x) \\Rightarrow A(x)\\) -&gt; wahr</li> <li>in \\(\\mathbb N: A(x) \\Rightarrow B(x)\\) -&gt; wahr</li> <li>in \\(\\mathbb N: A(x) \\Leftrightarrow B(x)\\)  -&gt; wahr</li> </ul>"},{"location":"21HS/DM/01_Aussaglogik.html#reihenfolge","title":"Reihenfolge","text":"<p>Reihenfolge der Bildung \\(\\neg\\), \\(\\wedge\\), \\(\\vee\\), \\(\\Rightarrow\\), \\(\\Leftrightarrow\\)</p> <p>Bsp:</p> <ul> <li>\\(((A \\vee (B \\wedge C)) \\Rightarrow D)\\)</li> <li>\\((\\neg A) \\Rightarrow (C \\vee ((\\neg B) \\wedge D))\\)</li> </ul>"},{"location":"21HS/DM/01_Aussaglogik.html#junktoren-regeln","title":"Junktoren Regeln","text":"<p>Mit den folgenden Regeln, kann man \u00c4quivalente-Aussagen umformen</p> <ul> <li>Doppel Negation: \\(\\neg \\neg A \\Leftrightarrow A\\)</li> <li>Kummutativt\u00e4t</li> <li>\\(A \\wedge B \\Leftrightarrow B \\wedge A\\)</li> <li>\\(A \\vee B \\Leftrightarrow B \\vee A\\)</li> <li>Assoziativit\u00e4t: </li> <li>\\((A \\wedge B) \\wedge C \\Leftrightarrow A \\wedge (B \\wedge C)\\)</li> <li>\\((A \\vee B) \\vee C \\Leftrightarrow A \\vee (B \\vee C)\\)</li> <li>Distributivit\u00e4t: </li> <li>\\(A \\wedge (B \\vee C) \\Leftrightarrow (A \\wedge B) \\vee (A \\wedge C)\\)</li> <li>\\(A \\vee (B \\wedge C) \\Leftrightarrow (A \\vee B) \\wedge (A \\vee C)\\)</li> <li>\\((A \\wedge B) \\vee (C \\wedge D) \\Leftrightarrow ((A \\wedge B) \\vee C) \\wedge ((A \\wedge B) \\vee D) \\Leftrightarrow (A \\vee C) \\wedge (B \\vee C) \\wedge (A \\vee D) \\wedge (B \\vee D)\\)</li> <li>als vergleich: \\(A \\cdot (B + C) = A \\cdot B + A \\cdot C\\)</li> <li>Regeln von de Morgan:</li> <li>\\(\\neg(A\\vee B) \\Leftrightarrow \\neg A \\wedge \\neg B\\)</li> <li>\\(\\neg(A\\wedge B) \\Leftrightarrow \\neg A \\vee \\neg B\\)</li> <li>Implikation:</li> <li>\\(A \\Rightarrow B \\Leftrightarrow \\neg A \\vee B\\)</li> <li>Kontraposition</li> <li>\\(A \\Rightarrow B \\Leftrightarrow \\neg B \\Rightarrow \\neg A\\)</li> <li>\u00c4quivalenz</li> <li>\\((A \\Leftrightarrow B) \\Leftrightarrow (A \\Rightarrow B) \\wedge (B \\Rightarrow A) \\Leftrightarrow (\\neg A \\vee B) \\wedge (\\neg B \\vee A)\\)</li> <li>Indepotenz:</li> <li>\\(A \\vee A \\Leftrightarrow A\\)</li> <li>\\(A \\wedge A \\Leftrightarrow A\\)</li> <li>ausgeschlossene Dritte:</li> <li>\\(A \\vee \\neg A \\Leftrightarrow T\\)</li> <li>\\(A \\wedge \\neg A \\Leftrightarrow W\\)</li> <li>Identit\u00e4t:</li> <li>\\(A \\vee T \\Leftrightarrow T\\)</li> <li>\\(A \\wedge T \\Leftrightarrow A\\)</li> <li>\\(A \\vee F \\Leftrightarrow A\\)</li> <li>\\(A \\wedge F \\Leftrightarrow F\\)</li> </ul> <p>Beweiss, dass \\((A \\Rightarrow B) \\Leftrightarrow (\\neg B \\Leftrightarrow \\neg A)\\)  ist</p> <ul> <li>\\(A \\Rightarrow B\\)</li> <li>\\(\\Leftrightarrow \\neg A \\vee B\\)</li> <li>\\(\\Leftrightarrow \\neg \\neg (\\neg A \\vee B)\\)</li> <li>\\(\\Leftrightarrow \\neg (\\neg \\neg A \\wedge \\neg B)\\)</li> <li>\\(\\Leftrightarrow \\neg (A \\wedge \\neg B)\\)</li> <li>\\(\\Leftrightarrow \\neg A \\vee \\neg \\neg B\\)</li> <li>\\(\\Leftrightarrow \\neg \\neg B \\vee \\neg A\\)</li> <li>\\(\\Leftrightarrow \\neg (\\neg B) \\vee (\\neg A)\\)</li> <li>\\(\\Leftrightarrow \\neg B \\Leftrightarrow \\neg A\\)</li> </ul> <p>Bsp:</p> <ul> <li> <p>\\(A \\Rightarrow B\\) -&gt; Wenn es regnet, ist die Wiese nass</p> </li> <li> <p>\\(\\neg B \\Rightarrow \\neg A\\) -&gt; Wenn die Wiese nicht nass ist, regnet es nicht</p> </li> <li> <p>\\(\\neg (A \\Rightarrow B)\\)</p> </li> <li> <p>\\(\\neg (A \\Rightarrow B)\\) </p> </li> <li> <p>\\(\\neg (\\neg A \\vee B)\\) </p> </li> <li> <p>\\(\\neg \\neg A \\wedge \\neg B\\) </p> </li> <li> <p>\\(A \\wedge \\neg B\\) </p> </li> </ul> <p>Implikations-Wahrheitstabelle:</p> A B \\(A \\Rightarrow B\\) \\(\\neg A \\vee B\\) 0 0 1 1 0 1 1 1 1 0 0 0 1 1 1 1"},{"location":"21HS/DM/01_Aussaglogik.html#quantore","title":"Quantore","text":"<p>Motivation: \u00dcbergang von Pr\u00e4dikat zu Aussage zu formulieren</p> <ul> <li> <p>P(X) := \"x ist eine nat\u00fcrliche Zahl\" =&gt; Pr\u00e4dikat</p> </li> <li> <p>P(5) := \"5 ist eine nat\u00fcrliche Zahl\" =&gt; Aussage (wahr)</p> </li> <li> <p>\"Es gibt mindestens eine \\(x \\in \\mathbb{Z}\\), so dass P(x) gilt\" =&gt; Aussage</p> </li> <li> <p>\"F\u00fcr alle \\(x \\in \\mathbb{Z}\\) gillt P(x)\" =&gt; Aussage</p> </li> </ul>"},{"location":"21HS/DM/01_Aussaglogik.html#liste-von-quantoren","title":"Liste von Quantoren","text":"Zeichen Name Beschreibung \\(\\forall\\) Allquantor F\u00fcr alle \\(\\exists\\) Existenzquantor \"f\u00fcr mindestens ein\" <p>Beispiele</p> Beispiel gesprochen Erkl\u00e4rung \\(\\forall x A(x)\\) F\u00fcr alle x gilt A(x) Alle x in dem Pr\u00e4dikat, werden auf alle Zahlen gebunden \\(\\forall x \\in M A(x)\\) F\u00fcr alle x aus M gillt A(x) Alle x in dem Pr\u00e4dikat, werden auf alle Werte von M gebunden \\(\\exists x A(x)\\) Es gibt (mind.) ein x mit A(x) Es gibt mindestens eine Zahl, bei welcher A(x) zutrifft \\(\\exists x \\in M A(x)\\) Es gibt (mind.) ein x aus M miz A(x) Es gibt mindestes einen Wert von M, bei welcher A(x) zutrifft <p>Jeder Quantor bindet eine Variable</p> <p>Umformungen:</p> <ul> <li>\\(\\forall x \\in I B(x) \\Leftrightarrow \\forall x (x \\in I \\Rightarrow B(x))\\)</li> <li>Klammern</li> <li>Quantoren binden st\u00e4rker als Junktoren</li> <li>\\(\\forall x \\in \\mathbb M B(x) \\wedge C(x) \\Leftrightarrow (\\forall x \\in \\mathbb M B(x)) \\wedge C(x)\\)</li> <li>Abk\u00fcrzungen</li> <li>\\(\\forall x \\in \\mathbb M (\\forall y \\in \\mathbb M A(x, y)) \\Leftrightarrow \\forall x,y \\in \\mathbb M A(x, y)\\)</li> <li>\\(\\exists x \\in \\mathbb M (\\exists y \\in \\mathbb M A(x, y)) \\Leftrightarrow \\forall x,y \\in \\mathbb M A(x, y)\\)</li> <li>Falls die Menge aus dem Kontext klar ist, k\u00f6nnen wir schreiben:<ul> <li>\\(\\forall x A(x)\\) (ohne \\(\\in \\mathbb M\\))</li> <li>\\(\\exists x A(x)\\) (ohne \\(\\in \\mathbb M\\))</li> </ul> </li> <li>Negation:</li> <li>\\(\\neg \\exists x \\in M A(x) \\Leftrightarrow \\forall x \\in M \\neg A(x)\\)</li> <li>\\(\\neg \\forall x \\in M A(x) \\Leftrightarrow \\exists x \\in M \\neg A(x)\\)</li> <li>\\(\\forall x A(x) \\Leftrightarrow \\neg \\exist x \\neg A(x)\\)</li> <li>Distributiv-Gesetzt</li> <li>Keine Distributiv-Gesetzt mit Quantoren und Junktoren</li> <li>Beispiel<ul> <li>A(x) := \"x ist eine gerade nat\u00fcrliche Zahl\"</li> <li>B(x) := \"x ist eine ungerade nat\u00fcrliche Zahl\"</li> <li>\\(\\forall x A(x) \\vee B(x) \\Leftrightarrow W \\nLeftrightarrow \\forall x (A(x) \\vee B(x)) \\Leftrightarrow T\\)</li> </ul> </li> <li>\\(\\exists x (A(x) \\wedge B(x)) \\nLeftrightarrow \\exists x A(x) \\wedge \\exists x B(x)\\)</li> <li>\\(\\exists x (A(x) \\vee B(x)) \\nLeftrightarrow \\exists x A(x) \\vee \\exists x B(x)\\)</li> <li>Reihenfolge von Quantoren:</li> <li>\\(P(x, y) := x + y = 17\\)</li> <li>\\(\\forall x \\in \\mathbb Z (\\exists x \\in \\mathbb Z P(x, y)) : wahr\\)</li> <li>\\(\\exists x \\in \\mathbb Z (\\forall x \\in \\mathbb Z P(x, y)): falsc h\\)</li> </ul> <p>Beispiel:</p> <ul> <li>A(x, y) := \"x &lt; y\" -&gt; 2-stelliges Pr\u00e4dikat, frei: x, y</li> <li>\\(\\forall x \\in \\mathbb{R} A(x, y)\\) : 1-stelliges Pr\u00e4dikat, frei: x</li> </ul>"},{"location":"21HS/DM/01_Aussaglogik.html#ubungungen-quantoren","title":"\u00dcbungungen Quantoren","text":"<p>2)</p> <ul> <li>a) \\(\\exists x P(x) \\wedge \\forall y,z (P(y) \\wedge P(z) \\Rightarrow y = z)\\)</li> <li>b) \\(\\exists y,z (P(y) \\wedge P(z) \\wedge y \\neq z)\\)</li> <li>c) \\(\\neg (\\exists x,y (P(x) \\wedge P(y) \\wedge x \\neq y)) -&gt; negation von b)\\)</li> <li>d) \\(\\forall x, y (P(x) \\wedge P(y) \\Rightarrow Q(x, y))\\)</li> <li>e) \\(\\neg(\\exists x Q(x, x)) \\Leftrightarrow \\forall x (\\neg Q(x, x))\\)</li> <li>\\(\\neg(\\forall x Q(x, x))\\) -&gt; das w\u00e4re: \"nicht alle x sind Q(x, x)\", aber eines x, bei welchem Q(x, x) stimmt, w\u00e4re ok</li> </ul> <p>3)</p> <ul> <li>a) Alle Pr\u00fcfungen sind einfach \\(\\Leftrightarrow \\forall x \\in P E(x)\\)</li> <li>b) Eine Pr\u00fcfung ist einfach \\(\\Leftrightarrow \\exists x \\in P E(x)\\)</li> <li>c) Keine Pr\u00fcfung ist einfach \\(\\Leftrightarrow \\neg \\exists x \\in P E(x)\\)</li> <li>d) Alle Pr\u00fcfungen sind einfach \\(\\Leftrightarrow \\forall x \\in P (\\neg E(x))\\)</li> <li>e) Nur eine Pr\u00fcfung ist einfach \\(\\Leftrightarrow (\\exist x \\in P E(x)) \\wedge \\forall y,z \\in P (E(y) \\wedge E(z))\\)</li> <li>f) Nur eine Pr\u00fcfung ist nicht einfach \\(\\Leftrightarrow (\\exist x \\in P \\neg E(x)) \\wedge \\forall y,z \\in P (\\neg E(y) \\wedge \\neg E(z))\\)</li> <li>g) Nicht alle Pr\u00fcfung sind einfach \\(\\Leftrightarrow \\neg \\forall x \\in P E(x)\\)</li> <li>h) Eine Pr\u00fcfung ist nicht einfach \\(\\Leftrightarrow \\exists x \\in P \\neg E(x)\\)</li> <li>g) und h) sind \u00e4quivalent</li> </ul>"},{"location":"21HS/DM/01_Aussaglogik.html#beweisstechnik","title":"Beweisstechnik","text":"<ul> <li>\\(\\forall\\) : </li> <li>wahr: f\u00fcr alle Elemente aus der Grundmenge<ul> <li>Verallgemeinern mit Variablen</li> </ul> </li> <li>falsch: Ein Element, bei dem es nicht funktioniert</li> <li>\\(\\exists\\)</li> <li>wahr: Ein Element finden, bei dem es stimmt</li> <li>falsch: Alle Elemente aus der Grundmenge allgemein zeigen, dass das Pr\u00e4dikat nicht gilt</li> </ul>"},{"location":"21HS/DM/01_Aussaglogik.html#direkten-beweis","title":"Direkten Beweis","text":"<ul> <li>Implikation</li> <li>zu zeigen<ul> <li>\\(\\forall x,y \\in \\mathbb N (\\text{x ist gerade} \\wedge \\text{y ist gerade} \\Rightarrow x\\cdot y \\text{ ist gerade})\\)</li> <li>\\(\\Leftrightarrow \\forall x,y \\in \\mathbb N \\exists n_x,n_y,n_z \\in \\mathbb N (x = 2 \\cdot n_x \\wedge y = 2\\cdot n_y \\Rightarrow x\\cdot y = 2\\cdot n_z)\\)</li> </ul> </li> <li>Beweise:<ul> <li>A: wahr \\((x=2n_x \\wedge y=2n_y) = T \\text{  } n_x,n_y \\in \\mathbb N\\)</li> <li>B: wahr \\((x\\cdot y = 2n_z) = T\\)</li> <li>\\(A \\Rightarrow B: x \\cdot y = 2n_x \\cdot 2n_y = 2(2n_xn_y) = 2n_z\\)</li> </ul> </li> </ul>"},{"location":"21HS/DM/01_Aussaglogik.html#beweis-durch-widerspruch","title":"Beweis durch Widerspruch","text":"<p>Anstatt zu zeigen, dass die Aussage A immer wahr ist, wird bewiessen, dass A niemals falsch ist.</p> <ul> <li>zu beweisen:</li> <li>\\(A:= \\text{\"Es gibt keine gr\u00f6sste nat\u00fcrliche zahl\"} = \\neg \\exists n \\in \\mathbb N G(n)\\)</li> <li>\\(G(x) := \\text{\"x ist gr\u00f6sste Zahl\"}\\)</li> <li>\\(\\neg A := \\text{\"Es gibt mindestens eine gr\u00f6sste nat\u00fcrliche Zahl\"} = \\exists n \\in \\mathbb N G(n)\\)</li> <li>Beweis:</li> <li>Annahme: n ist gr\u00f6sste nat\u00fcrliche Zahl</li> <li>Jedoch f\u00fcr jede nat\u00fcrliche Zahl n, existiert n + 1</li> <li>Daher ist n+1 &gt; n und n ist nicht die gr\u00f6sste Zahl</li> <li>\\(\\Rightarrow \\neg A = W \\Rightarrow A = T\\)</li> </ul>"},{"location":"21HS/DM/01_Aussaglogik.html#beweis-durch-gegen-beispiel","title":"Beweis durch (Gegen-) Beispiel","text":"<ul> <li>zu beweisen</li> <li>\"Nicht jede nat\u00fcrliche Zahl ist eine Quadratzahl\"</li> <li>\\(A:= \\neg\\forall n \\in \\mathbb N Q(n)\\Leftrightarrow \\exists n \\in \\mathbb N \\neg Q(n)\\)</li> <li>\\(Q(x)=\\text{x ist Quadradzahl} )\\)</li> <li>Beweis:</li> <li>\\(n = 7\\), denn \\(f(x)=x^2\\) mit \\(f(x) \\in \\mathbb N\\)</li> <li>in diesem Fall w\u00fcrde 7 niemals als Funktionswert f\u00fcr f(x) herausgekommen, da \\(2\\cdot 2 &lt; 7 &lt; 3 \\cdot 3\\)</li> <li>\\(\\Rightarrow\\) 7 ist keine Quadratzahl</li> <li>\\(\\Rightarrow\\) A ist wahr</li> </ul>"},{"location":"21HS/DM/01_Aussaglogik.html#beweis-durch-kontraposition","title":"Beweis durch Kontraposition","text":"<p>Es gillt die Aussage von der Form \\(A \\Rightarrow B \\Leftrightarrow \\neg B \\Rightarrow \\neg A\\)</p> <p>Beispiel:</p> <ul> <li>zu beweisen:</li> <li>\\(\\forall n \\in \\mathbb N ((n^2 + 1 = 1) \\Rightarrow (n = 0))\\)</li> <li>anstatt dies, beweissen wir</li> <li>\\(\\Leftrightarrow \\forall n \\in \\mathbb N (\\neg (n = 0) \\Rightarrow \\neg(n^2 + 1 = 1))\\)</li> <li>\\(\\Leftrightarrow \\forall n \\in \\mathbb N (n \\neq 0 \\Rightarrow n^2 + 1 \\neq 1))\\)</li> <li>Beweis:</li> <li>Wenn \\(n \\neq 0 \\Rightarrow n^2\\neq 0 \\Rightarrow n^2 + m \\neq m\\) </li> <li>F\u00fcr \\(m=1 \\Rightarrow n^2 + 1 \\neq 1\\) </li> <li>\\(\\Rightarrow \\forall n \\in \\mathbb N ((n \\neq 0) \\Rightarrow (n^2 + 1 \\neq 1)) : T\\)</li> </ul>"},{"location":"21HS/DM/01_Aussaglogik.html#aquivalenz","title":"\u00c4quivalenz","text":"<p>Um eine \u00c4quivalenz zu beweissen muss \\(A \\Rightarrow B \\wedge B \\Rightarrow A\\)</p> <p>Beispiel:</p> <ul> <li>\\(B \\Rightarrow A: \\forall n \\in \\mathbb N ((n = 0) \\Rightarrow (n^2+1=1))\\)</li> <li>\\(n=0\\)  (wenn n=0 wahr ist, dann muss auch die n\u00e4chste Linie wahr sein)</li> <li>\\(n^2+1=0^2 + 1 = 1\\) (was sie ist)</li> <li>und da \\(A \\Rightarrow B\\) und \\(B \\Rightarrow A\\) wahr waren, ist auch \\(A \\Leftrightarrow B\\) wahr</li> </ul> <p>Biespiel #2:</p> <ul> <li>zu zeigen:</li> <li>\\(\\forall n \\in \\mathbb N \\exists k,j \\in \\mathbb N ((n = 2k) \\Leftrightarrow n^2=2j)\\)</li> <li>bzw. \\(\\forall n \\in \\mathbb N \\exists k,j \\in N (n = 2k \\Rightarrow n^2 = j2) \\wedge (n^2 = 2j \\Rightarrow n = 2k)\\)</li> <li>Beweis:</li> <li>\\(A(n) \\Rightarrow B(n)\\)</li> <li>n = 2k : wahr</li> <li>\\(n^2=(2k)^2\\)</li> </ul>"},{"location":"21HS/DM/02_Semantik.html","title":"02 Semantik","text":"<p>Semantik = Bedeutung</p> <ul> <li>Konstante</li> <li>\\(\\top\\) = Wahr (\\top)</li> <li>\\(\\bot\\) = Falsch (\\bot)</li> <li>Variabeln</li> <li>Klammern</li> <li>Junktoren</li> </ul> <p>Ableitungsb\u00e4ume (ein Syntaxbaum / AST) kann genutzt werden, um die Struktur von Termen eindeutig zu zeigen</p> <p>Beispiel: \\(f = (((a \\wedge b) \\vee (\\neg c)) \\wedge (a \\vee b))\\)</p>"},{"location":"21HS/DM/02_Semantik.html#belegungen-von-variabeln","title":"Belegungen von Variabeln","text":"<ul> <li>f\u00fcr atomare Formeln (z.B. a, b, oder eine andere Variabel)</li> <li>\\(B: \\mathbb V \\rightarrow \\{1, 0\\}\\)</li> <li>Beispiel: \\(B(a)=1\\)</li> <li>f\u00fcr komplexe Formeln</li> <li>\\(\\hat B (formel)\\)</li> <li>Beispiel \\(\\hat B (a \\vee b)=false\\)</li> </ul>"},{"location":"21HS/DM/02_Semantik.html#wahrheitstabelle","title":"Wahrheitstabelle","text":"<p>In einer Wahrheitstabelle werden alle Teilformeln in Spalten aufgelistet f\u00fcr alle m\u00f6glichen Inputs.</p> <p>Teilformeln sind Teile einer gr\u00f6sseren Formeln. </p> <p>Beispiel: Teilformeln f\u00fcr \\(((a \\wedge b) \\vee (\\neg c)) \\wedge (a \\vee c)\\)</p> <ul> <li>die Inputs: a, b ,c</li> <li>\\(a \\wedge b\\)</li> <li>\\(\\neg c\\)</li> <li>\\((a \\wedge b) \\vee (\\neg c)\\)</li> <li>\\(a \\vee c\\)</li> <li>\\(((a \\wedge b) \\vee (\\neg c)) \\wedge (a \\vee c)\\)</li> </ul>"},{"location":"21HS/DM/02_Semantik.html#semantische-eigenschaften","title":"Semantische Eigenschaften","text":"Begriff Erkl\u00e4rung Bei Wahrheitstabellen G\u00fcltig oder wahr Bei einer spezifischen Belegung wahr (f\u00fcr eine Spezifische Belegung) Allgemeing\u00fclltig Bei allen Belegungen wahr alle Zeilen sind wahr (Tautologie/\\(\\top\\)) Erf\u00fclltbar mind. eine Belegung wahr mind. eine Zeile mit wahr Unerf\u00fclltbar immer falsch alle Zeilen sind falsch (Wiederspruch/\\(\\bot\\)) Wiederlegbar mind. einmal falsch, nicht unbedingt immer mind. eine Zeile mit 0 Begriff L\u00f6sungsart G\u00fcltig oder wahr Allgemeing\u00fcltig Wahrheitstabelle, Vereinfachung, Beweis durch Widerspruch Erf\u00fcllbar Ein Beispiel mit Ergebnis \"wahr\" Unerf\u00fcllbar Wahrheitstabelle, Vereinfachung, Beweis durch Widerspruch Wiederlegbar Ein Beispiel mit Ergebnis \"falsch\""},{"location":"21HS/DM/02_Semantik.html#aquivalent-equiv","title":"\u00c4quivalent (\\(\\equiv\\))","text":"<ul> <li>\\(\\equiv\\); latex: \\equiv</li> <li>Dieses Zeichen wird ben\u00fctzt, wenn zwei aussagenlogische Formel unter jeden Bedingung denselben Wert ergeben</li> <li>Bei Aussagen kann man auch \"\\(\\Leftrightarrow\\)\" bent\u00fctzen</li> <li>Achtung:</li> <li>folgendes ist korrekt: \\(F \\vee (G \\vee H) \\equiv (F \\vee (G \\vee H)\\), da jede </li> <li>folgendes nicht: \\(\\hat B(F \\vee (G \\vee H)) \\equiv \\hat B((F \\vee (G \\vee H))\\), da man hier eine bestimmte Belegung rechnet und somit einen wirkklichen Wahrheitswert hat. Hier w\u00fcrde man ein = ben\u00fctzen.</li> </ul>"},{"location":"21HS/DM/02_Semantik.html#konsequenz","title":"Konsequenz","text":"<ul> <li>F ist genau dann von G, fall F in jeder m\u00f6glichen Belegung wahr ist, in welcher auch G wahr ist</li> <li>Mit logischen Aussagen ausgedr\u00fcckt: \\(\\forall B (\\hat B(F \\rightarrow G)=true)\\)</li> </ul>"},{"location":"21HS/DM/02_Semantik.html#normalformen","title":"Normalformen","text":""},{"location":"21HS/DM/02_Semantik.html#literale","title":"Literale","text":"<p>Literale sind atomare Formeln oder negierte atomare Formel (a oder \\(\\neg a\\))</p>"},{"location":"21HS/DM/02_Semantik.html#negotions-normalform-nnf","title":"Negotions Normalform (NNF)","text":"<p>Wenn alle Negationen in Literale und keine Implikationen vorkommen</p>"},{"location":"21HS/DM/02_Semantik.html#disjunktive-normalform-dnf","title":"Disjunktive Normalform (DNF)","text":"<p>Wenn die folgende Formel eingehaltet wird: \\((L_1 \\wedge L_2 \\wedge ...)\\vee(L_3 \\wedge L_4 \\wedge ...) \\vee ...\\)</p>"},{"location":"21HS/DM/02_Semantik.html#konjunktive-normalform-knf","title":"Konjunktive Normalform (KNF)","text":"<p>Wenn die folgende Formel eingehaltet wird: \\((L_1 \\vee L_2 \\vee ...)\\wedge(L_3 \\vee L_4 \\vee ...) \\wedge ...\\)</p>"},{"location":"21HS/DM/02_Semantik.html#umformen-rechnerisch","title":"Umformen - Rechnerisch","text":"<p>Vorgehen:</p> <ol> <li>Implikationen eliminieren: \\(F \\rightarrow G \\equiv \\neg F \\vee G\\)</li> <li>DeMorgan, falls negationen vor Klammern stehen: \\(\\neg(p\\vee q) \\equiv (\\neg p \\wedge \\neg q)\\) bzw. \\(\\neg (p\\wedge q) \\equiv (\\neg p \\vee \\neg q)\\) </li> <li>\\(\\Rightarrow\\) NNF erreicht</li> <li>Distributivgesetzt anwenden bis gewollte Form erreicht</li> <li>\\(\\Rightarrow\\) KNF oder DNF erreicht</li> </ol>"},{"location":"21HS/DM/02_Semantik.html#umformen-mit-wahrheitstabelle","title":"Umformen - mit Wahrheitstabelle","text":"<p>Nach dem man die Wahrheitstabelle gebildet haben kann man folgende Verfahren anwenden:</p> <ul> <li>Minterm:</li> <li>Bei jeder Belegung, welche 1 als Resultat gibt, eine Formel aufschreiben, welche diese Belegung abbildet (Parameter welche 0 ergeben, negieren, Parameter welche 1 geben, direkt \u00fcbernehmen, zusammenf\u00fcgen mit und \\(\\wedge\\))</li> <li>Alle Terme mit oder/\\(\\vee\\) verkn\u00fcpfen</li> <li>Maxterm</li> <li>Bei jeder Belegung, welche 0 als Resultat gibt, eine Form aufschreiben, welche diese Belegung abbildet (Paramter, welche 0 geben, direkt \u00fcbernehmen; Parameter, welche 1 geben, negieren; alle Terme mit und/\\(\\vee\\) verbinden)</li> <li>Alle Terme mit und/\\(\\wedge\\) verkn\u00fcpfen</li> </ul>"},{"location":"21HS/DM/03_Mengen.html","title":"Mengen","text":"<p>Menge: Zusammenfassung wohlunterscheidbarer unsortierten Objekte (keine Duplikate sind erlaubt)</p> <ul> <li>Mengen<ul> <li>Darstellung</li> <li>(Echte) Teilmengen</li> <li>Operationen<ul> <li>Gleichheit</li> <li>Potenzmengen</li> <li>Partitionen</li> <li>Kardinalit\u00e4t</li> <li>Schnittmenge</li> <li>Vereinigung</li> <li>Komplement</li> <li>Kartesisches Produkt</li> <li>Disjunkte Mengen</li> <li>Faktormengen</li> <li>\u00c4quivalenzklasse</li> <li></li> <li>Komplement (ohne)</li> </ul> </li> <li>Rechneregeln</li> <li>Relationen<ul> <li>Komposition</li> <li>Inverse Relationen</li> <li>Gerichtete Graphen</li> <li>Relationen und Funktionen</li> <li>Injektiv und Surjektiv</li> <li>Homogene und heterogene Relation<ul> <li>Reflexiit\u00e4t</li> <li>Symmetrisch</li> </ul> </li> <li>Antisymmetrisch<ul> <li>Transitiv</li> </ul> </li> <li>Heterogene Relation</li> </ul> </li> <li>Unendliche Mengen<ul> <li>Begriffe der Unendlichkeit</li> <li>Erste Diagonal Argument</li> <li>Zweite Diagonal Argument</li> </ul> </li> <li>Ordnungsrelationen<ul> <li>Begriffe</li> <li>Hasse Diagram</li> <li>Graph<ul> <li>DAG<ul> <li>topologische Sortierung</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"21HS/DM/03_Mengen.html#darstellung","title":"Darstellung","text":"<ul> <li>Explizite Darstellung (Aufz\u00e4hlung)</li> <li>Beispiel: {2, 3, 4}</li> <li>Leere Menge</li> <li>Beispiel: {} </li> <li>Beispiel: \\(\\emptyset\\)</li> <li>Spezielle Zahlenmenge:</li> <li>nat\u00fcrliche Zahlen \\(\\mathbb N_0 =\\mathbb N = [0; \\infty[\\)<ul> <li>ganze Zahlen: \\(\\mathbb Z = ]\\infty: \\infty[\\)</li> <li>rationale Zahlen: \\(\\mathbb Q\\) (Alle Zahlen, welche durch einen Bruch darstellbar sind (1/3 ja, \\(\\pi\\) nein))</li> <li>reelle zahlen: \\(\\mathbb R\\) (Alle Zahlen mit einem Komma  \\(\\sqrt 2, \\pi, e\\))</li> <li>komplexe Zahlen</li> </ul> </li> <li>Intervallchreibweisse </li> <li>\\([a,b] := \\{x \\in \\mathbb R | a \\leq x \\leq b \\}\\)</li> <li>\\(]a,b] := \\{x \\in \\mathbb R | a &lt; x \\leq b \\}\\)</li> <li>Pr\u00e4dikatschreibweisse</li> <li>\\(\\{z | z &lt; 10\\}\\)</li> <li>\\(\\{n \\in \\mathbb N | \\text{n ist gerade}\\} = \\{n \\in \\mathbb N | \\exist z \\in \\mathbb N (n = 2\\cdot z)\\}\\)</li> <li>Ersetzungsschreibweisse</li> <li>\\(\\{F(x) | x \\in X\\} = \\{y | \\exists x \\in X (y = F(x))\\}\\)</li> <li>Grafische Darstellung</li> </ul>"},{"location":"21HS/DM/03_Mengen.html#echte-teilmengen","title":"(Echte) Teilmengen","text":"<p>\\(X \\subseteq Y \\Leftrightarrow \\forall x(x \\in X \\Rightarrow x \\in Y)\\)</p> <p>X ist eine Teilmenge von Y. X kann auch Y sein</p> <p>\\(X \\subsetneq Y \\Leftrightarrow X \\subseteq Y \\wedge X \\neq Y\\) Dies ist die echte Teilmenge, was nichts anderst heisst, dass X eine Teilmenge von Y ist, aber X nicht Y ist.</p>"},{"location":"21HS/DM/03_Mengen.html#operationen","title":"Operationen","text":""},{"location":"21HS/DM/03_Mengen.html#gleichheit","title":"Gleichheit","text":"<p>Mengen sind gleich, wenn alle Elemente gleich sind: \\(X = Y \\Leftrightarrow \\forall z(z \\in X \\Leftrightarrow z \\in Y)\\)</p> <p>F\u00fcr das Mengen aber gleich sind, muss die Reihenfolge nicht \u00fcbereinstimmen, da Mengen nicht sortiert sind.</p>"},{"location":"21HS/DM/03_Mengen.html#potenzmengen","title":"Potenzmengen","text":"<p>Menge aller Teilmengen</p> <p>Beispiele:</p> <ul> <li> <p>\\(\\mathcal P(\\emptyset)=\\{\\emptyset\\}\\)</p> </li> <li> <p>\\(\\mathcal P(\\{0, 1\\})=\\{\\emptyset, \\{0\\}, \\{1\\}, \\{0, 1\\}\\}\\)</p> </li> <li> <p>\\(\\mathcal P(\\{a, \\{c\\}\\}=\\{\\emptyset, \\{a\\}, \\{\\{c\\}\\}, \\{a, \\{c\\}\\}\\})\\)</p> </li> </ul> <p>Die M\u00e4chtigkeit einer Potenzmenge ist zwei hoch die M\u00e4chtigkeit der urspr\u00fcnglichen Menge \\(|P(A)|=2^{|A|}\\)</p>"},{"location":"21HS/DM/03_Mengen.html#partitionen","title":"Partitionen","text":"<p>Eine Partition von A ist eine Menge von Teilmengen von A, welche nicht leer sind und welche zusammen wieder A ergeben (\\(\\bigcup_{i \\in I}P_i = A\\))</p> <p>Beispiel: \\(A=\\{1, 2, 3\\}\\)</p> <ul> <li> <p>\\(P=\\{\\{1\\}, \\{2\\}, \\{3\\}\\}\\)</p> </li> <li> <p>\\(P=\\{\\{1\\}, \\{2, 3\\}\\}\\)</p> </li> </ul>"},{"location":"21HS/DM/03_Mengen.html#kardinalitat","title":"Kardinalit\u00e4t","text":"\\[ X=\\{1, 2, 3\\}\\\\ |X|=3 \\] <p>Der Betrag von Mengen ist die Anzahl Elemente der Menge.</p> <p>\\(|A \\cup B| = |A| + |B| - |A\\cap B|\\)</p> <p>F\u00fcr disjunkte mengen gillt: \\(|A \\cup B | = |A| + |B|\\)</p> <p>F\u00fcr drei Mengen: \\(|A \\cup B \\cup C| = |A| + |B| + |C| - |A\\cap B| - |B \\cap C| - |A \\cap C| + |A \\cap B \\cap C|\\)</p>"},{"location":"21HS/DM/03_Mengen.html#schnittmenge","title":"Schnittmenge","text":"<p>\\(X \\cap Y\\)</p> <p>In der Schnittmenge von zwei Meingen sind alle Elemente, welche in beiden Mengen enthalten sind.</p> <p>![](/res/2021-11-06-14-05-00-image.png</p>"},{"location":"21HS/DM/03_Mengen.html#vereinigung","title":"Vereinigung","text":"<p>\\(X \\cup Y\\)</p> <p>Die vereinigte Menge zweier Menge sind die Elemente von beiden Mengen in einer, nat\u00fcrlich ohne Duplikate.</p>"},{"location":"21HS/DM/03_Mengen.html#komplement","title":"Komplement","text":"<p>\\(X \\setminus Y = X \\cap \\bar Y\\)</p>"},{"location":"21HS/DM/03_Mengen.html#kartesisches-produkt","title":"Kartesisches Produkt","text":"<p>\\(A \\times B=\\{a, b\\} \\times \\{1, 2, 3\\} = \\{(a, 1), (a, 2), (a, 3), (b, 1), (b, 2), (b, 3), (c, 1), (c, 2), (c, 3)\\}\\)</p> <p>\\(A\\times B=\\{(a, b) | a \\in A \\wedge b \\in B\\}\\)</p> <p>M\u00e4chtigkeit: \\(|A \\times B| = |A| \\cdot |B|\\)</p> <p>\\(A\\times B \\neq B \\times A\\) </p> <p>Dies liegt daran, dass das Kartesisches Produkt Tupels ergibt und diese sortiert sind. Somit gillt \\((x, 1) \\neq (1, x)\\)</p> <p>Wenn man mehr als zwei Mengen hat, kann man es auch folgendermassen schreiben: \\(\\prod ^n_{A_i}=A\\times A_2\\times A_n\\)</p>"},{"location":"21HS/DM/03_Mengen.html#disjunkte-mengen","title":"Disjunkte Mengen","text":"<p>X und Y heissen diskunkt, falls sie keine Elemente teilen</p> <p>\\(X \\cap Y\\cap Z=\\emptyset\\)</p> <p>Paarweise Disjunkte Menge ist eine Menge, wenn sie untereinander keine Elemente Teilen.</p> <p></p>"},{"location":"21HS/DM/03_Mengen.html#faktormengen","title":"Faktormengen","text":"<p>\\(^X/_R=\\{[x]_R | x \\in X\\}\\)</p> <p>Die Faktormenge besteht aus allen \u00c4quivalenzkalssen. Der Sytanx, wie er oben steht, bedeutet, dass alle \u00c4quivalenzklassen von der Relation R, welche von der Menge X gebildet wurde, in der Faktormenge sind.</p> <p>Beispiel:</p> \\[ xRy \\Leftrightarrow (x - y) \\text{ durch 5 Teilbar ist}  = x\\equiv_5 y \\\\ \\text{}^{\\mathbb Z}/_{R_{\\equiv_5}} = \\{[0]_{\\equiv_5},[1]_{\\equiv_5}, [2]_{\\equiv_5}, [3]_{\\equiv_5}, [4]_{\\equiv_5}\\} \\]"},{"location":"21HS/DM/03_Mengen.html#aquivalenzklasse","title":"\u00c4quivalenzklasse","text":"<p>Eine \u00c4quivalenzklasse eines Element beschreibt, welche Elemente damit in verbindng stehen in einer Relation.</p> <p>\\([x]_R={y \\in R | xRy}\\)</p> <pre><code>graph LR\n3((3))\n4((4))\n11((11))\n12((12))\n3 --&gt; 3\n4 --&gt; 4\n3 --&gt; 4 --&gt; 3\n\n11 --&gt; 11 --&gt; 12 --&gt; 12 --&gt; 11</code></pre>"},{"location":"21HS/DM/03_Mengen.html#_1","title":"Mengen","text":"<p>In der oberen Relation g\u00e4be es zwei Relationsklassen: \\([3]_R = [4]_R\\) und \\([11]_R = [12]_R\\) </p> <p>Die Relationsklasse \\([11]_R\\) ist dieselbe, wie \\([12]_R\\) , da in den Klammern ein Vertreter der Relationsklasse steht.</p>"},{"location":"21HS/DM/03_Mengen.html#komplement-ohne","title":"Komplement (ohne)","text":"<p>\\(\\bar X=\\{x | x \\in G \\wedge x \\not \\in X\\}\\)</p>"},{"location":"21HS/DM/03_Mengen.html#rechneregeln","title":"Rechneregeln","text":"<p>De Morgan: \\(\\overline{A\\cup B} = \\bar A \\cap \\bar B\\)</p> <p>Komplementgesetzt</p>"},{"location":"21HS/DM/03_Mengen.html#relationen","title":"Relationen","text":"<p>Relationen sind das Kartesischeprodukt zweier Mengen: \\(R \\subseteq X \\times Y\\)</p> <p>Dies ergibt eine Liste von Tupels. Daher kann folgenedes ausgesagt werden: \\((x, y) \\in R\\) was auch als \\(xRy\\) geschrieben werden kann.</p> <p>Man kann sie folgendermassen Darstellen:</p> <ol> <li> <p>TODO</p> </li> <li> <p>Beschreibend: \\(xRy\\Leftrightarrow \\text{\"y ist doppelt so gross wie x\"}\\)</p> </li> <li> <p>Wahrheitstabelle </p> </li> <li> <p>Graph im Koordinatensystem</p> </li> <li> <p>Bipartifer Graph    </p> </li> <li> <p>Gerichter Graphen    Dieser funktioniert nur mit heterogenen Relationen. Hier ist ein Beispiel:    </p> </li> </ol>"},{"location":"21HS/DM/03_Mengen.html#komposition","title":"Komposition","text":"<p>Mit \\(S\\circ R\\) wird R mit S gejoint (Achtung mit der Reihenfolge!!)</p> <p>\\(S\\circ R = {(x, z) \\in A \\times C | \\exists y \\in B (xRy \\wedge y \\in Z)}\\)</p> <p></p>"},{"location":"21HS/DM/03_Mengen.html#inverse-relationen","title":"Inverse Relationen","text":"<p>Ist das Pandon von Umkehrfunktionen.</p> <p>Achtung: \\((S\\circ R)^{-1}=R^{-1} \\circ S^{-1}\\)</p>"},{"location":"21HS/DM/03_Mengen.html#gerichtete-graphen","title":"Gerichtete Graphen","text":"<p>Der folgende gerichtete Graph zeigt die Teilbarkeit von Zahlen in der Menge \\(\\{1, 2, 3, 4\\}\\) . Ein gerichteten Graph kann man nur mit homogenen Relationen erstellen k\u00f6nnen.</p> <p>Die Relation w\u00e4re folgendes: {(1, 1), (1, 2), (1, 3), (1,4), (2, 2), (2, 3), (2,4), (3, 3), (3, 4), (4, 4)}</p> <p></p>"},{"location":"21HS/DM/03_Mengen.html#relationen-und-funktionen","title":"Relationen und Funktionen","text":"<p>Eine bin\u00e4re Relation ist eine Funktion, falls f\u00fcr jedes \\(x \\in A\\) genau ein \\(y \\in B\\) mit \\(xRy\\) existiert. In diesem Fall kann man schreiben: \\(f: A\\rightarrow B \\text{ mit } f(x)=y\\)</p> <p>Mathematischer ausgedr\u00fcckt: Eine Relation \\(f\\subseteq A \\times B\\) ist eine Funktion von A nach B, falls:  \\(\\forall x \\in A\\exists!y \\in B((x, y) \\in f)\\)</p> <p>In anderen Worte muss die Funktion muss linkseindeutig  (alle Elemente der linken Menge m\u00fcssen einen Pfeil haben) und Rechtseindeutig (Alle Werte der linken Menge m\u00fcssen klar einem Rechten Wert zu gewissen werden k\u00f6nnen).</p>"},{"location":"21HS/DM/03_Mengen.html#injektiv-und-surjektiv","title":"Injektiv und Surjektiv","text":"<p>Eine Funktion ist Injektiv (linkseindeutig ), wenn zu jedem y es h\u00f6chstens einmal x mit  \\(xRy\\) zutrifft </p> <p>Eine Funktion ist surjektiv (rechtstotal), wenn es zu jedem y mindestens ein x gibt mit \\(xRy\\)</p> <p>Wenn eine Funktion injektiv und surjektiv ist, dann nennt man diese auch Bijektiv.</p> <p>Eine Funktion kann linkstotal, rechtseindeutig, rechtstotal und linkseindeutig sein. Dies kann man auch eine bijektive Funktion nennen.</p> <p>Da bei einer bijektiven Funktion in beiden Mengen alle Elemente \"besetzt\" sein m\u00fcssen, m\u00fcssen sie dieselbe M\u00e4chtigkeit haben (\\(|A|=|B|\\))</p>"},{"location":"21HS/DM/03_Mengen.html#homogene-und-heterogene-relation","title":"Homogene und heterogene Relation","text":"<p>Eine Relation ist homogen, wenn beide Mengen gleich sind. Mathematischer ausgedr\u00fcckt: \\(A=B, R \\subseteq A \\times A\\)</p>"},{"location":"21HS/DM/03_Mengen.html#reflexiitat","title":"Reflexiit\u00e4t","text":"<p>Es gilt \\(\\forall x \\in X (xRx)\\) . In Deutsch heisst dies, dass jedes Element auf sich selbst zeigt. Es darf auch Verbindungen gehen, welche nicht auf sich selbst zeigen, aber jedes Element brauch sicher eine Verbindung mit sich selbst.</p> <p></p>"},{"location":"21HS/DM/03_Mengen.html#symmetrisch","title":"Symmetrisch","text":"<p>\\(\\forall x,y \\in X (xRy \\Rightarrow yRx)\\) oder in Deutsch, wenn x zu y zeigt, muss auch y zu x zeigen.</p> <p></p>"},{"location":"21HS/DM/03_Mengen.html#antisymmetrisch","title":"Antisymmetrisch","text":"<p>\\(\\forall x,y \\in X (xRy \\wedge yRx \\Rightarrow x=y)\\) oder in Deutsch, es darf nur Pfeile geben, welche nur in eine Richtung oder auf sich selbst zeigen.</p> <p></p>"},{"location":"21HS/DM/03_Mengen.html#transitiv","title":"Transitiv","text":"<p>\\(\\forall x,y,z \\in X (xRy \\wedge yRz \\Rightarrow xRz)\\) oder in Deutsch, wenn wenn x zu y und y zu z in Verbindung steht, dann muss auch x zu z in Verbindung stehen. </p> <p></p> <p>Transitiv ist eine Relation auch, wenn es nur ein Element gibt, oder auch in speziellen F\u00e4lle bei zwei Elemente. Folgende Relation w\u00e4re transitiv.</p> <p></p>"},{"location":"21HS/DM/03_Mengen.html#heterogene-relation","title":"Heterogene Relation","text":"<p>Heterogen ist eine Relation hingegen, wenn die Mengen ungleich sind: \\(A \\neq B, R \\subseteq A \\times B\\)</p>"},{"location":"21HS/DM/03_Mengen.html#unendliche-mengen","title":"Unendliche Mengen","text":""},{"location":"21HS/DM/03_Mengen.html#begriffe-der-unendlichkeit","title":"Begriffe der Unendlichkeit","text":"<p>Eine Menge ist endlich, wenn es eine Darstellung f\u00fcr alle Elemente in der Form \\(M=\\{x_1, x_2, x_3, ..., x_n\\}\\) gibt. Wenn dies nicht der Fall ist, dann nennt man eine Menge unendlich.</p> <p>Eine Menge ist abz\u00e4hlbar, wenn eine surjektive Funktion \\(F: \\mathbb N \\rightarrow X\\) existiert. Dass heisst, jedes Element von X muss mindestens ein Element von  \\(\\mathbb N\\) haben. Wenn dies nicht m\u00f6glich ist, nennt man eine Menge \u00fcberabz\u00e4hlbar.</p> <p>Abz\u00e4hlbar und unendliche Mengen sind abz\u00e4hlbar und unendlich.</p>"},{"location":"21HS/DM/03_Mengen.html#erste-diagonal-argument","title":"Erste Diagonal Argument","text":"<p>Das erste diagonale Argument besagt, dass die Menge \\(\\mathbb N \\times \\mathbb N\\) abz\u00e4hlbar ist. Man kann also eine Funktion bilden, welche wie folgt aussieht: \\(F: \\mathbb N \\rightarrow (\\mathbb N, \\mathbb N)\\)</p> <p>Dies kann erreicht wrden, in dem man die Tupels als 2D-Array darstellt und diagonal z\u00e4hlt</p> <p></p> <p>Aus dem kann man auch schliessen, dass Vereinigungen von abz\u00e4hlbaren Mengen, abz\u00e4hlbar sind.</p> \\[ \\bigcup _{i\\in \\mathbb N}A_i = \\{F_i(j) | i, j \\in \\mathbb N\\} = \\{F_i(j) | (i, j) \\in \\mathbb N \\times \\mathbb N\\}\\\\ \\text{Daraus kann man die folgende Funktion bilden: }\\\\ H(i, j)=F_i(j) \\] <p>Da \\(\\mathbb N \\times \\mathbb N\\) abz\u00e4hlbar ist, muss auch \\(\\bigcup_{i \\in \\mathbb N}A_i\\) abz\u00e4hlbar sein</p>"},{"location":"21HS/DM/03_Mengen.html#zweite-diagonal-argument","title":"Zweite Diagonal Argument","text":"<p>Die Menge aller unendlichen Bin\u00e4rsequenzen ist \u00fcberabz\u00e4hlbar</p> <p>Die Begr\u00fcndung daf\u00fcr ist: Die Menge soll als folgende Tabelle dargestelt werden:</p> Index Sequenz 1 011001000... 2 100100100... 3 110100100... n ... <p>Damit man die Menge \u00fcberabz\u00e4hlbar nennen kann</p>"},{"location":"21HS/DM/03_Mengen.html#ordnungsrelationen","title":"Ordnungsrelationen","text":"<p>Ordnungsrelationen sind Relationen, mit welchen man Objekte in einer gewissen Reihenfolgen ordnen kann.</p>"},{"location":"21HS/DM/03_Mengen.html#begriffe","title":"Begriffe","text":"<p>Es gibt mehrere Begriffe, welche man typsicherweisse mit den Ordnungsrelationen verwendet. Das R in den folgenden Begriffen ist der Name der Relation. Folgende Begriffe beziehen sich auf einzelne Elemente</p> <ul> <li> <p>R-unvergleichbar nennt man zwei Elemente, wenn weder xRy, noch yRx gilt oder in anderen Worten, wenn die Elemente nicht miteinander verbunden sind.</p> </li> <li> <p>R-minimal nennt man ein Elemente, wenn kein anderes Element darauf zeigt.</p> </li> <li> <p>R-maximal nennt man ein Element, wenn es auf kein weiteres Element zeigt.</p> </li> </ul> <p>Nun gibt es noch Begriffe, um Ordnungsrelationen zu benennen:</p> Begriff Erkl\u00e4rung Pr\u00e4ordnung Relation, welche reflexiv und transitiv ist Halbordnung Relation, welche reflexiv, transitiv und antisymmetrisch ist totale-/ lineare Ordnung Relation, welche eine Halbordnung ist und keine R-unvergleichbaren Elemente besitzt (jedes Element muss mit Jedem indirekt verbunden sein) Wohlordnung Relation von M, welche eine totale Ordnung ist, bei welcher alle Teilmengen (ausser \\(\\empty\\)), mindestens ein R-minimal Element enthalten <p></p> <p>Es gibt noch mehr Begriffe!!!</p> <ul> <li> <p>\\(R^+\\) ist ein \"transitiver Abschluss\" und beinhaltet zus\u00e4tzlich zu R auch noch alle indirekten Verbindungen.    Beispiel: Die Menge \\(M={(a, b), (b, c)}\\) ist gegeben, f\u00fcr \\(R^+\\) w\u00fcrde zus\u00e4tzlich noch \\((a, c)\\) hinzu kommen.</p> </li> <li> <p>\\(R^*\\) ist eine \"reflexiver transitiver Abschluss\" und beinhaltet zus\u00e4tzlich zu \\(R^+\\) auch noch die reflexive Werte   Beispiel: Zus\u00e4tzlich zu \\(M^+\\) k\u00e4men noch folgende Paare hinzu: \\((a, a), (b, b), (c, c)\\)</p> </li> </ul>"},{"location":"21HS/DM/03_Mengen.html#hasse-diagram","title":"Hasse Diagram","text":"<p>Ein Hasse Diagram kann nur f\u00fcr Halbordnungen verwendet werden.</p>"},{"location":"21HS/DM/03_Mengen.html#graph","title":"Graph","text":"<p>Einen Graph wird formal durch eine Menge von Punkten und Kanten zwischen den Punkten beschrieben. Matematisch schreibt man dies folgendermassen: \\(G=(V, E)\\), dabei ist V die Menge aller Punkte und E eine homogene Relation zwischen den Punkten, welche die Kanten beschreiben.</p>"},{"location":"21HS/DM/03_Mengen.html#dag","title":"DAG","text":"<p>Ein DAG Graph ist ein gerichteter zyklenfreier Graph. Diese kann man z.B. in einem Hasse Diagram darstellen.</p> <p>\\(G(V, E \\setminus \\Delta_V)\\)</p> <p>Dabei steht \\(\\Delta_V\\) f\u00fcr alle zyklischen Verbindungen. Im unteren Beispiel sieht man einen Graph. Mit den roten Pfeilen w\u00e4re es keinen DAG, da diese zyklisch sind.</p> <p></p>"},{"location":"21HS/DM/03_Mengen.html#topologische-sortierung","title":"topologische Sortierung","text":""},{"location":"21HS/DM/04_Nat%C3%BCrliche%20Zahlen.html","title":"Nat\u00fcrliche Zahlen","text":"<ul> <li>Nat\u00fcrliche Zahlen<ul> <li>Volst\u00e4ndige Induktion</li> <li>Methode des kleinsten Verbrechers</li> <li>Rekursion<ul> <li>Darstellungsm\u00f6glichkeiten</li> </ul> </li> </ul> </li> </ul> <ul> <li>Jede nat\u00fcrliche Zahl plus 1 ergibt die n\u00e4chste nat\u00fcrliche Zahl</li> <li>Die Zahl 0 hat als einzige nat\u00fcrliche Zahl keinen Vorg\u00e4nger</li> <li>Jede nat\u00fcrliche Zahl ist Nachfolger von h\u00f6chstens einer nat\u00fcrlichen Zahl</li> </ul>"},{"location":"21HS/DM/04_Nat%C3%BCrliche%20Zahlen.html#volstandige-induktion","title":"Volst\u00e4ndige Induktion","text":"<p>Idee: Beweissen, dass ein Vorgang f\u00fcr das 1. Element und f\u00fcr das n-te Element gillt. Wenn dies gegeben ist, dann wird es auch f\u00fcr das n+1-te Element gellten</p> <p>Um dies zu tun, werden folgende Schritte getan</p> <ol> <li> <p>Induktionsverankerung (IV)    E(0): wahr</p> </li> <li> <p>Induktionsschritt (IS)    Wenn E(n) wahr, dann gillt auch E(n+1)  oder \\(E(n) \\Rightarrow E(n+1)\\)</p> </li> </ol> <p>Dies kann man normalerweissen in folgende Schritte weiter unterteilen:</p> <ol> <li> <p>Induktionsverankerung (IV)    Man beweist, dass E(0) wahr ist. Hier kann man einfach einsetzen</p> </li> <li> <p>Induktionsanhame (IA)    Man schreibt auf, was man f\u00fcr E(n) erwartet. Dies ist eine Annahme und muss nicht in diesem Schritt bewiesen werden</p> </li> <li> <p>Induktionsbehauptung (IB)    Man behauptet, wie sich E() f\u00fcr E(n+1) verhaltet</p> </li> <li> <p>Induktionschluss (IS)    Man beweisst, dass wenn es f\u00fcr E(n) gilt, dann gilt es auch f\u00fcr E(n+1)</p> </li> </ol>"},{"location":"21HS/DM/04_Nat%C3%BCrliche%20Zahlen.html#methode-des-kleinsten-verbrechers","title":"Methode des kleinsten Verbrechers","text":""},{"location":"21HS/DM/04_Nat%C3%BCrliche%20Zahlen.html#rekursion","title":"Rekursion","text":"<p>F\u00fcr eine Rekursion wird das erste Glied angegeben, und wie man von diesem zum n\u00e4chsten kommt</p> <p>Also:  F(0) = ... F(n+1)=...(n+1)...</p>"},{"location":"21HS/DM/04_Nat%C3%BCrliche%20Zahlen.html#darstellungsmoglichkeiten","title":"Darstellungsm\u00f6glichkeiten","text":"<p>Es gibt drei m\u00f6glichkeiten solche Reihen darzustellen:</p> <ol> <li> <p>Aufz\u00e4hlend - die Werte der Reihe aufgez\u00e4hlt (    Beispiel: 2, 4, 8, ...</p> </li> <li> <p>Rekursiv    Als Rekusirve Funktion    Beispiel: \\(F(0)=2; F(n+1)=2\\cdot F(n)\\)</p> </li> <li> <p>Explitzit    Als Funktion, welche nicht sich selbst bent\u00fctzt    Beispiel: \\(F(n)=2^n+1\\)</p> </li> </ol> <p>Mit Hilfe einer vollst\u00e4ndigen Indukation kann man beweissen, dass die rekursive und explizite Form dasselbe darstellt.</p>"},{"location":"21HS/DM/05_Ganz%20Zahlen.html","title":"Ganz Zahlen","text":"<ul> <li>Ganz Zahlen<ul> <li>Begriffe<ul> <li>Teilbarkeit</li> </ul> </li> <li>Teilermenge</li> <li>Teilen mit Rest</li> <li>GGT &amp; KGV<ul> <li>Rechenregeln GGT</li> <li>Euklischer Algorithmus<ul> <li>Beispiel 1</li> <li>Beispiel 2</li> </ul> </li> <li>Teilerfremd</li> <li>Lemma von B\u00e9zout</li> <li>Erweiterter euklidischen Algorithmus</li> </ul> </li> <li>Primzahlen<ul> <li>Eigenschaften</li> <li>Primzahlen finden (Sieb des Eratosthenes)</li> <li>\\(\\pi\\) Funktion</li> </ul> </li> <li>Modulare Arithmetik<ul> <li>Der mod Operator</li> <li>Kongruenz<ul> <li>Notation f\u00fcr Restklassen</li> </ul> </li> </ul> </li> <li>Restklassen-Rechnen<ul> <li>Addition</li> </ul> </li> <li>Multiplikation<ul> <li>Beispiel f\u00fcr Modulare Arithmetik</li> </ul> </li> <li>Prime Restklassen<ul> <li>Eulersche \\(\\varphi\\)-Funktion</li> <li>Chinesischer Restsatz</li> <li>Satz von Euler</li> <li>Kleiner Satz von Fermat</li> </ul> </li> </ul> </li> </ul>"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#begriffe","title":"Begriffe","text":"Begriff Erkl\u00e4rung Neutrales Element Das neutrale Element einer Operation, gibt wieder das eigentliche Element zur\u00fcck Absorbtion Das Element, welches bei jedem anderen Element 0 zur\u00fcck gibt."},{"location":"21HS/DM/05_Ganz%20Zahlen.html#teilbarkeit","title":"Teilbarkeit","text":"<p>Um zu schreiben, dass die Zahl x teilt die Zahl y, wird dies auch in der Form x|y geschrieben.</p> <p>\\(x|y \\Leftrightarrow(y=k\\cdot x)\\)</p> <p>Beispiel: \\(5|10=\\text{wahr}\\) </p> <p>Folgende Gesetzte gellten:</p> <ul> <li> <p>\\(z|z=\\text{wahr}\\) (reflexiv)</p> </li> <li> <p>\\(x|y \\Rightarrow x|k\\cdot y \\wedge k \\in \\Z\\)</p> </li> <li> <p>\\(x|y \\wedge x|(y+z)=x|z\\)</p> </li> <li> <p>\\(x|y \\wedge y|z=x|z\\)  (transitive)</p> </li> <li> <p>\\(x|y \\wedge x|z \\Rightarrow x|(y-z)\\) (Wenn y und z durch x teilbar ist, ist auch (y-z) durch x teilbar)</p> </li> </ul>"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#teilermenge","title":"Teilermenge","text":"<p>Die Menge aller nat\u00fcrlichen Teiler der Zahl. Man schreibt nur die positiven Zahl auf.</p> <p>Als Beispiel:</p> <p>\\(T(15)=\\{1, 3, 5, 15\\}\\)</p> <p>\\(T(-15)=\\{1, 3, 5, 15\\}\\)</p>"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#teilen-mit-rest","title":"Teilen mit Rest","text":"<p>Das Teilen durch Rest kann auch als \\(m=kn+r\\) dargestellt werden.</p> <p>Beispiel: </p> \\[ 28:5=4\\text{ Rest } 3 = 5\\cdot 5 + 3\\\\ 7:3=2 \\text{ Rest } 1 = 2\\cdot 3 + 1\\\\ -7:3=-3 \\text{ Rest } 2 = -3 \\cdot 3 + 2 \\\\ 7:-3=-3 \\text{ Rest } -2 = -3 \\cdot -3 - 2 \\\\ -7:-3=2 \\text { Rest } -1 = -3 \\cdot 2 - 1 \\]"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#ggt-kgv","title":"GGT &amp; KGV","text":"<p>Der gr\u00f6sste gemeinsame Teiler kann als \\(ggT(n, m)=max\\{k \\in \\N \\mid k|n \\wedge k|m\\}\\) (max holt das gr\u00f6sste Elemente der Liste)</p> <p>Das kleinste gemeinsame Vielfache kann als \\(kgV(n, m)=min \\{k \\in \\N \\mid n | k \\wedge m|k\\}\\)</p> <p>\\(n\\cdot m = kgV(n, m)\\cdot ggT(n, m) \\Rightarrow kgV(n, m)=\\frac{n\\cdot m}{ggT(n, m)}\\)</p>"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#rechenregeln-ggt","title":"Rechenregeln GGT","text":"<ol> <li> <p>\\(ggT(n, n) = n\\)</p> </li> <li> <p>\\(ggT(n, 1)=1\\)</p> </li> <li> <p>\\(ggT(n, 0)=n\\)</p> </li> <li> <p>\\(ggT(n, m)=ggT(m, n)\\)</p> </li> <li> <p>\\(ggT(n, m)=ggT(n, m-n)\\)</p> </li> <li> <p>\\(ggT(n, m)=ggT(n, m-k\\cdot n) \\text{ wenn } k\\cdot n \\le m\\)</p> </li> </ol>"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#euklischer-algorithmus","title":"Euklischer Algorithmus","text":"<p>Mit diesem Algorithmus kann der ggT(n, m) bestummen weden.</p> <p>Allgeimein F\u00fcr \\(n, m \\in \\Z \\setminus \\{0\\}\\) :</p> <ol> <li> <p>Berechne \\(k, r \\in \\N\\) mit    \\(n=k\\cdot m + r\\) mit \\(0 \\le |r| \\lt m\\)</p> </li> <li> <p>Falls $r \\ne 0 $ setze \\(n=m\\) und \\(m = r\\) Wiederhole Schritt 1 </p> </li> <li> <p>Falls \\(r=0\\) ist \\(m\\) der ggT</p> </li> </ol>"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#beispiel-1","title":"Beispiel 1","text":"<ol> <li> <p>\\(ggT(693, 286)=ggT(286, 693-2\\cdot 286)=ggT(286, 121)\\)</p> </li> <li> <p>\\(ggT(286, 121)=ggT(121, 286-2\\cdot 121)=ggT(121, 44)\\)</p> </li> <li> <p>\\(ggT(121, 44)=ggT(44, 121 - 2\\cdot 44) = ggT(44, 33)\\)</p> </li> <li> <p>\\(ggT(44, 33)=ggT(33, 44 - 1\\cdot 33)=ggT(33, 11)\\)</p> </li> <li> <p>\\(ggT(33, 11)=ggT(11, 33 - 3\\cdot 11)=ggT(11, 0)=11\\)</p> </li> </ol> <p>oder Verk\u00fcrzt geschrieben:</p> <ol> <li> <p>\\(693=2\\cdot 286+121\\)</p> </li> <li> <p>\\(286=2\\cdot 121 + 44\\)</p> </li> <li> <p>\\(121=2\\cdot 44 + 33\\)</p> </li> <li> <p>\\(44=1\\cdot 33 + 11\\)</p> </li> <li> <p>\\(33=3\\cdot 11 + 0\\)</p> </li> </ol>"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#beispiel-2","title":"Beispiel 2","text":""},{"location":"21HS/DM/05_Ganz%20Zahlen.html#teilerfremd","title":"Teilerfremd","text":"<p>Zwei Zahlen \\(x, y \\in \\Z\\) heissen teilerfremd, falls \\(ggT(x, y)=1\\) ist.</p> <p>In Deutsch, zwei Zahlen haben keinen gemeinsammen Teiler (ausser 1 nat\u00fcrlich).</p>"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#lemma-von-bezout","title":"Lemma von B\u00e9zout","text":"<p>\\(ggT(x, y)=ax+by\\), wenn \\(x, y \\neq 0\\)</p>"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#erweiterter-euklidischen-algorithmus","title":"Erweiterter euklidischen Algorithmus","text":"<p>Diesen Algorithmus kann dazu verwendet werden eine L\u00f6sung  f\u00fcr \\(x\\) und \\(y\\) zur Gleichung \\(ggT(a, b)=xb+yc\\) zu finden (wenn \\(x &gt; y\\) ist). Solche Gleichungen nennt man lineare diophalische Gleichungen.</p> <p>Dieser Algorithmus erweitert den euklidischen Algorithmus. Zuerst wird dieser durchgef\u00fchrt f\u00fcr den \\(ggT(a, b)\\). Danach folgen die unteren Schritte. \\(q_k\\) ist dabei der Quotient in der Reihe \\(k\\) vom euklidischen Algorithmus. $$ x_0=1\\ x_1=0\\ x_k=x_{k-2}-q_k\\cdot x_{k-1}\\ \\space \\ y_0=0\\ y_1=1\\ y_k=y_{k-2}-q_k\\cdot y_{k-1} $$ {title: \"test\"}</p> <p>Beispiel: </p>"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#primzahlen","title":"Primzahlen","text":"<p>Definition: Primzahlen sind nat\u00fcrliche Zahlen, die nur durch 1 und durch sich selbst teilbar sind (1 selbst ist keine Primzahl) \\(|T(p)|=2\\)</p>"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#eigenschaften","title":"Eigenschaften","text":"<ul> <li>Jede ganze Zahl \\(z\\) mit \\(z \\notin \\{-1, 1\\}\\) besitzt ein Primfaktor (ein Faktor, welcher eine Primzahl ist)</li> <li>Jede nat\u00fcrliche Zahl kann als Primfaktoren dargestellt werden</li> <li>Mersenne-Primzahl hat die Form \\(2^n-1\\)</li> <li>Es gibt unendlich viele Primzahlen</li> </ul>"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#primzahlen-finden-sieb-des-eratosthenes","title":"Primzahlen finden (Sieb des Eratosthenes)","text":"<p>Man geht jede (noch nicht gestrichene) Zahl und streicht die Vielfachen der Zahl. Dies wiederholt man so lange, bis die Quadradtzahl der aktuellen Zahl ist ausserhalb dem Suchbereich.</p> <p></p>"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#pi-funktion","title":"\\(\\pi\\) Funktion","text":"<p>Die Funktion \\(\\pi(n)\\) gibt zur\u00fcck, wie viele Primzahlen es gibt, welche kleiner als n sind.</p> <p></p>"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#modulare-arithmetik","title":"Modulare Arithmetik","text":""},{"location":"21HS/DM/05_Ganz%20Zahlen.html#der-mod-operator","title":"Der <code>mod</code> Operator","text":"<p>Der <code>mod</code> Operator gibt zur\u00fcck, wie viel Rest bei einer Division ergibt. Das Vorzeichen des Resultates hat meistens dasselbe Vorzeichen, wie der Divident (die zweite Zahl).</p>"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#kongruenz","title":"Kongruenz","text":"<p>Zwei Zahlen sind konkruent, wenn sie denselben Resten ergeben, wenn man sie durch die selbe Zahl teilt.</p> <p>\\(r\\equiv_n s \\Leftrightarrow n|(r-s)\\) (n teilbar durch r-s)</p> <p>Als Beispiel: \\(26\\equiv_8 18\\equiv_8 10 \\equiv_8 2 \\equiv_8 -6 \\equiv_8 -14\\)</p> <p>Dieses Denken, kann helfen das Resultat von Minuszahlen sich vorzustellen.</p> <p>Dieser Operator kann auch als \u00c4quivalenrelation beschrieben werden, da die Eigenschaft reflexiv, symmetrisch und transitiv ist. In einer \u00c4quivalenzklasse dieser Relation sind alle Zahlen, welche den selben Rest haben. Diese nennet man auch Restklassen</p> <p>Beispiel: \\([10]_8=\\{..., -22, -14, -6, 2, 10, 18, 26, ...\\}\\)</p> <p>n\u00fctzlich sein kann: \\([38]_9+[22]_9=[2]_9+[4]_9=[6]_9\\)</p>"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#notation-fur-restklassen","title":"Notation f\u00fcr Restklassen","text":"Formel Erkl\u00e4rung \\(\\Z/n=\\{[z]_n\\|z\\in \\Z\\}\\) Die Menge aller Restklasse \\(\\Z^*_{/n}\\) Das Primes Restklassenssytem, welches nur die Restklassen enth\u00e4lt, welche zu n teilerfremd sind. Alle Restklassen in diesem System k\u00f6nnen multipliziert werden (Siehe Prime Restklassen) \\([z]_n=\\overline{z}\\) Die Restklasse, bzw. \u00c4quivalenzklasse mit dem Teiler n und dem Vertreter \\(z\\)"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#restklassen-rechnen","title":"Restklassen-Rechnen","text":"<p>Das Berechnen der Restklassen kann man auch vereinfachen.</p> \\[ [a]_n+[b]_n=[a+b]_n\\\\ [a]_n\\cdot[b]_n=[a\\cdot b]_n \\]"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#addition","title":"Addition","text":"<ul> <li> <p>Das neutrale Element dabei ist: \\([0]_n\\)</p> </li> <li> <p>Das inverse Element von \\([a]_n=[-a]_n=[n-a]_n\\)</p> </li> </ul> <p>In der folgenden Tabelle sieht man, alle Additionen von \\([n]_6\\)</p> \\([0]_6\\) \\([1]_6\\) \\([2]_6\\) \\([3]_6\\) \\([4]_4\\) \\([5]_6\\) \\([0]_6\\) \\([0]_6\\) \\([1]_6\\) \\([2]_6\\) \\([3]_6\\) \\([4]_4\\) \\([5]_6\\) \\([1]_6\\) \\([1]_6\\) \\([2]_6\\) \\([3]_6\\) \\([4]_6\\) \\([5]_6\\) \\([0]_6\\) \\([2]_6\\) \\([2]_6\\) \\([3]_6\\) \\([4]_6\\) \\([5]_6\\) \\([0]_6\\) \\([1]_6\\) \\([3]_6\\) \\([3]_6\\) \\([4]_6\\) \\([5]_6\\) \\([0]_6\\) \\([1]_6\\) \\([2]_6\\) \\([4]_6\\) \\([4]_6\\) \\([5]_6\\) \\([0]_6\\) \\([1]_6\\) \\([2]_6\\) \\([3]_6\\) \\([5]_6\\) \\([5]_6\\) \\([0]_6\\) \\([1]_6\\) \\([2]_6\\) \\([3]_6\\) \\([4]_6\\)"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#multiplikation","title":"Multiplikation","text":"<p>In der folgenden Tabelle sieht man, alle Multiplikationen von \\([n]_6\\)</p> \\([0]_6\\) \\([1]_6\\) \\([2]_6\\) \\([3]_6\\) \\([4]_4\\) \\([5]_6\\) \\([0]_6\\) \\([0]_6\\) \\([0]_6\\) \\([0]_6\\) \\([0]_6\\) \\([0]_6\\) \\([0]_6\\) \\([1]_6\\) \\([0]_6\\) \\(\\mathbf{[1]_6}\\) \\([2]_6\\) \\([3]_6\\) \\([4]_6\\) \\([5]_6\\) \\([2]_6\\) \\([0]_6\\) \\([2]_6\\) \\([4]_6\\) \\([0]_6\\) \\([2]_6\\) \\([4]_6\\) \\([3]_6\\) \\([0]_6\\) \\([3]_6\\) \\([0]_6\\) \\([3]_6\\) \\([0]_6\\) \\([3]_6\\) \\([4]_6\\) \\([0]_6\\) \\([4]_6\\) \\([2]_6\\) \\([0]_6\\) \\([4]_6\\) \\([2]_6\\) \\([5]_6\\) \\([0]_6\\) \\([5]_6\\) \\([4]_6\\) \\([3]_6\\) \\([2]_6\\) \\([1]_6\\) <ul> <li> <p>Neutrales Element: \\([1]_6\\)</p> </li> <li> <p>Inverse Element: </p> </li> <li> <p>Nur Zahlen, welche teilerfremd sind (ggT(Zahl, N)=1)</p> </li> <li>Eine Zahl multipliziert mit ihrem inveren Element muss 1 geben</li> <li>Beispiel: \\([5]_6\\cdot[5]_6=[1]_6\\)</li> <li>Beispiel 2: \\([7^{49}]_{10}=(7^2)^{24}\\cdot 7 \\equiv_{10} 49^{24}\\cdot7\\equiv_{10}(-1)^{24}\\cdot 7 \\equiv_{10}\\cdot 7=[7]_{10}\\)</li> </ul>"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#beispiel-fur-modulare-arithmetik","title":"Beispiel f\u00fcr Modulare Arithmetik","text":"\\[ 3\\cdot x \\equiv_7 4 \\\\ [3]\\cdot[3^{-1}]\\cdot x \\equiv_7 4\\\\ -2\\cdot 3 \\cdot x \\equiv_7 (-2)\\cdot 4\\\\ x \\equiv_7 -8\\equiv_7 6 \\]"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#prime-restklassen","title":"Prime Restklassen","text":"<p>Prime Restklassen sind die Restklassen, welche ein Inverseselement f\u00fcr die Multiplikation besitzen. Dies wird mit einem Stern geschrieben, wie hier zu sehen: \\(\\Z_{/7}^{*}\\) .</p> <p>Beispiel:</p> <p>\\(\\Z^*_{/7}=\\{[1], [2], [3], [4], [5], [6]\\}\\)</p> <p>\\(\\Z^*_{/6}=\\{[1], [5]\\}\\)</p>"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#eulersche-varphi-funktion","title":"Eulersche \\(\\varphi\\)-Funktion","text":"<p>Um die M\u00e4chtigkeit einer Prime Restklasse zu bestimmen kann folgenden getan werden:</p> <ol> <li>\\(\\varphi(n\\cdot m)=\\varphi(n)\\cdot \\varphi(m)\\), wobei gillt \\(ggT(n, m)=1\\)</li> <li>\\(\\varphi(p)=p-1\\), wobei gillt \\(p\\in \\mathbb P\\)</li> <li>\\(\\varphi(p^k)=p^k-p^{k-1}\\), wobei gillt \\(k\\in \\N_{\\gt0}\\)</li> </ol> <p>Beispiel:</p> \\[ |\\Z_{/8}^*|=\\varphi(8)=\\varphi(2^3)=2^3-2^{3-1} = 8 -4 =4\\\\ |\\Z_{/15}^*|=\\varphi(15)=\\varphi(3\\cdot5)=\\varphi(3)\\cdot \\varphi(5)\\\\ |\\Z_{/240}^*|=\\varphi(240)=\\varphi(2^4\\cdot3\\cdot5)=.. \\]"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#chinesischer-restsatz","title":"Chinesischer Restsatz","text":"<p>Der chinesischer Restsatz hilft ein Gleichungssystem mit mehreren Kongruenzen ( \\(\\equiv_n\\)) . Es gibt garantiert eine L\u00f6sung, wenn alle Modulos paarweise teilerfremd sind (alle mit allen den ggT von 1 haben). Falls dies nicht der Fall ist, kann es trotzdem noch eine L\u00f6sung geben, dies ist aber nicht garantiert.</p> <p>Hier sind die Schritte f\u00fcr den Algorithmus:</p> <ol> <li>\\(M_k\\) berechnen    Mit \\(M_k=\\frac{\\sum_k m_k}{m_k}\\) kann \\(M\\) f\u00fcr jede Gleichung berechnet werden. Dabei werden alle Modulos (\\(\\sum_k m_k\\)) durch das Module der aktuellen Zeile (\\(m_k\\)) gerechnet</li> <li>Das multiplikative Inverse \\(N_k\\) f\u00fcr jedes \\(M_k\\) berechnen.    Bei kleinen Zahlen kann hier f\u00fcr gepr\u00f6pelt werden</li> <li>Nun folgt die Formel: \\(x=\\sum^n_{k=1}a_kM_kN_k=a_1M_1N_1+...+a_nM_nN_n\\)</li> </ol> <p>Beispiel:</p> <p>Folgendes ist die Gleichung und die daraus resultierende \\(a_k\\) und \\(m_k\\) Werte: $$ x\\equiv_3 2 &amp;\\rightarrow &amp;a_1=2&amp;m_1=3\\ x\\equiv_5 7 &amp;\\rightarrow &amp;a_2=3 &amp;m_2=5\\ x\\equiv_7 2 &amp;\\rightarrow&amp;a_3=2 &amp;m_3=7\\ $$</p> <ol> <li> <p>Nun werden die \\(M_k\\) berechnet    $$    M_1=\\frac{m_1\\cdot m_2 \\cdot m_3}{m_1}=m_2\\cdot m_3 = 5\\cdot 7 = 35\\    M_2=\\frac{m_1\\cdot m_2 \\cdot m_3}{m_2}=m_1\\cdot m_3 = 3\\cdot 7 = 21\\    M_3=\\frac{m_1\\cdot m_2 \\cdot m_3}{m_3}=m_1\\cdot m_2 = 3\\cdot 5 = 15\\    $$</p> </li> <li> <p>Als n\u00e4chstes werden die multiplikative Inverse \\(N_k\\) berechnet </p> </li> </ol> <p>Beispiel: $$ x &amp;\\equiv 2 \\mod3\\ x &amp;\\equiv 5 \\mod 7\\ $$</p> <ol> <li> <p>Inverse der Modulen gegenseitig:    Dies kann man mit dem erweiterten Euklidischen Algorithmus ausrechnen oder mit ausprobieren finden    $$    M_1=7: 7\\cdot N_1\\equiv_3 1 \\rightarrow [N_1]_3=[1]_3\\    M_2=3:  3\\cdot N_2 \\equiv_7 1 \\rightarrow [N_2]_7=[5]_7\\    $$</p> </li> <li> <p>Kongurenz Zusammenfassen    $$    x &amp; \\equiv 2 \\cdot 7 \\cdot 1 + 5 \\cdot 3 \\cdot 5 \\mod (3\\cdot 7)\\    &amp; \\equiv (14 + 75)\\equiv 89 \\equiv 5 \\mod 21    $$</p> </li> <li></li> </ol> \\[ x\\equiv2 \\mod3 &amp; a_1=2 &amp;m_1=3\\\\ x\\equiv3 \\mod 5 &amp; a_2=3 &amp;m_2=5\\\\ x\\equiv2 \\mod 7&amp; a_3=2 &amp;m_3=7\\\\ \\] <ol> <li> <p>\\(M_n\\) bestimmen:    $$    M_1=\\frac m {m_1}    $$</p> </li> <li> <p>\\(N_k\\) bestimmen Multiplikative Inverse von \\([N_k]_{mk}=[M_k^{-1}]_{mk}\\)    $$    N_1: [N_1]_3=[35^{-1}]_3=[2^{-1}]_3=[2]_3 &amp;N_1=2\\    N_2: [N_2]_5=[21^{-1}]_5=[1^{-1}]_5=[1]_5 &amp;N_2=1\\    N_3: [N_3]_7=[15^{-1}]_7=[1^{-1}]_7=[1]_7 &amp;N_3=1\\    $$</p> </li> <li> <p>Kongruenz    $$    x\\equiv 2\\cdot35\\cdot2+ 3\\cdot 21 \\cdot1 + 2\\cdot 15 \\cdot 1 \\mod 105\\    \\equiv 233 \\mod105 \\equiv 23 \\mod 105\\    \\mathbb L=[23]_105    $$</p> </li> </ol>"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#satz-von-euler","title":"Satz von Euler","text":"\\[ a^e ... \\mod n\\\\    3^{160}\\equiv_{10}(3^2)^{80}\\equiv_{10}9^{80}\\equiv{10}(-1)^{80}\\equiv_{10}1 \\] <p>Der Satz von Euler besagt: \\(ggT(a, m)=1\\Rightarrow a^{\\varphi(m)}\\equiv1 \\mod m\\)</p>"},{"location":"21HS/DM/05_Ganz%20Zahlen.html#kleiner-satz-von-fermat","title":"Kleiner Satz von Fermat","text":"<p>F\u00fcr \\((p \\in \\R \\wedge a \\in \\Z)\\wedge p \\not{|} a\\) gillt \\(a^{p-1}\\equiv 1 \\mod p\\)</p> <p>Beispiel: </p> \\[ 26^{123}\\mod 7 &amp; ggT(26, 7)=1\\\\ 26^{7-1}\\equiv_7 26^6\\equiv_7 1\\\\ 26^{123}\\equiv_7 (26^6)^{20}\\cdot 26^3\\equiv_7 1^20\\cdot 26^3\\equiv_7 5^3\\equiv_7(-2^3) \\equiv_7 -8 \\equiv_76 \\]"},{"location":"21HS/DM/Summaries/01_summary_2021-11-23.html","title":"Summary - 2021-11-23","text":"<ul> <li>Summary - 2021-11-23<ul> <li>Aussagenlogik<ul> <li>Gesetze</li> <li>Beweistechniken</li> </ul> </li> <li>Semantik</li> <li>Mengen</li> <li>Relationen</li> </ul> </li> </ul>"},{"location":"21HS/DM/Summaries/01_summary_2021-11-23.html#aussagenlogik","title":"Aussagenlogik","text":"Begriff Erkl\u00e4rung \\(\\top\\)\u00a0(Tautologie) immer wahr \\(\\bot\\)\u00a0(Wiederspruch) immer falsch \\(\\vee\\) oder \\(\\wedge\\) und <p>Bindung: \\(\\neg, \\wedge, \\vee, \\Rightarrow, \\Leftrightarrow\\)</p>"},{"location":"21HS/DM/Summaries/01_summary_2021-11-23.html#gesetze","title":"Gesetze","text":"<ul> <li>Distributivgesetzt:   \\(A \\wedge (B \\vee C) \\Leftrightarrow (A \\wedge B) \\vee (A \\wedge C)\\)</li> <li>Der Morgen:   \\(\\neg(A\\vee B) \\Leftrightarrow \\neg A \\wedge \\neg B\\)</li> <li>Implikation:   \\(A \\Rightarrow B \\Leftrightarrow \\neg A \\vee B\\)</li> <li>Kontraposition:   \\(A \\Rightarrow B \\Leftrightarrow \\neg B \\Rightarrow \\neg A\\)</li> <li>\u00c4quivalenz   \\((A \\Leftrightarrow B) \\Leftrightarrow (A \\Rightarrow B) \\wedge (B \\Rightarrow A) \\Leftrightarrow (\\neg A \\vee B) \\wedge (\\neg B \\vee A)\\)</li> </ul>"},{"location":"21HS/DM/Summaries/01_summary_2021-11-23.html#beweistechniken","title":"Beweistechniken","text":"<ul> <li> <p>Direkten Beweis</p> </li> <li> <p>So veralgemeinern, dass der einte der Term gleich dem anderen Term ist</p> </li> <li> <p>Beweis durch Widerspruch</p> </li> <li> <p>Anstatt zu zeigen, dass die Aussage A immer wahr ist, wird bewiessen, dass A niemals falsch ist.</p> </li> <li> <p>Beweis durch (Gegen-) Beispiel</p> </li> <li> <p>Wenn beweissen werden soll, dass etwas immer korrekt oder immer falsch ist, kann mit ein korrekten, bzw. falschem Beispiel gezeigt werden, dass die Aussage falsch ist </p> </li> <li> <p>Beweis durch Kontraposition</p> </li> <li> <p>Es gillt die Aussage von der Form \\(A \\Rightarrow B \\Leftrightarrow \\neg B \\Rightarrow \\neg A\\)</p> </li> <li> <p>\u00c4quivalenz</p> </li> <li> <p>Da eine \u00c4quivalenz \\((A \\Leftrightarrow B) \\Leftrightarrow (A \\Rightarrow B \\wedge B \\Rightarrow A)\\) ist, kann einfach das zweitere bewiessen werden.</p> </li> </ul>"},{"location":"21HS/DM/Summaries/01_summary_2021-11-23.html#semantik","title":"Semantik","text":"Begriff Erkl\u00e4rung G\u00fclltig oder Wahr Bei einer spezifischen Belegung wahr Allgemeing\u00fclltig Bei allen Belegungen wahr Erf\u00fcllbar mind. eine Belegung ist erf\u00fcllbar Unerf\u00fcllbar immer falsch Wiederlegbar mind. einmal falsch; nicht umbedingt immer falsch Literale \\(\\neg a \\text{ oder } a\\) Negotions Normalform (NNF) Keine Implikationen und alle\\(\\neg\\) in Literale Disjunktive Normalform (DNF) Form:\\((L_1 \\wedge L_2 \\wedge ...)\\vee (L_3 \\wedge L_4) \\vee ...\\) Konjuktive Normalform (KNF) Form:\\(L_1 \\vee L_2 \\vee ...) \\wedge (L_3 \\vee L_4)\\wedge ...\\) Funktional Vollst\u00e4ndig Menge von Logischen Verkn\u00fcpfungen, welche die Funktionen\\(\\vee, \\wedge, \\neg, \\rightarrow\\) darstellen k\u00f6nnen"},{"location":"21HS/DM/Summaries/01_summary_2021-11-23.html#mengen","title":"Mengen","text":"Begriff Erkl\u00e4rung Nat\u00fcrliche Zahlen (\\(\\N\\)) \\([0; \\infty]\\) Ganze Zahlen (\\(\\Z\\)) \\([-\\infty;\\infty]\\) Rationale Zahlen (\\(\\mathbb Q\\)) Alle Zahlen, darstellbar durch einen Bruch Reele Zahlen (\\(\\R\\)) Alle Zahlen mit einem Komma (\\(\\pi\\), \\(e\\), 2.32, 2, ...) Intervallschreibweisse Ist immer im Zahlenbereich\\(\\R\\) Teilmenge (\\(X \\subseteq Y\\)) \\(\\forall x (x \\in X \\Rightarrow x \\in Y)\\) / X ist eine Teilmenge von Y, X=Y kann auch sein Echte Teilmenge (\\(X \\subsetneq Y\\)) \\(X \\subseteq Y \\wedge X \\neq Y\\) / X ist eine Teilmenge von Y, X kann nicht Y sein Potenzmenge (\\(\\mathcal P(X)\\)) Menge aller Teilmenge (\\(\\mathcal P(\\{0, 1\\})=\\{\\emptyset, \\{0\\}, \\{1\\}, \\{0, 1\\} \\}\\). Die M\u00e4chtigkeit ist $\\mathcal P(A)=2^{ \\vert A \\vert} $ Partition Eine Menge von Teilmengen von A, welche nicht leer sind (\\(\\bigcup_{i\\in I}P_i=A\\)) Kardinalit\u00e4t/M\u00e4chtigkeit Anzahl Elemente in Menge Schnittmenge (\\(X \\cap Y\\)) Alle Elemente, welch ein beiden enthalten sind Vereinigung (\\(X \\cup Y\\)) Alle Elemente von beiden Mengen Komplement (\\(X\\setminus Y)\\) Alle Elemente aus X, welche nicht in Y vorkommen (\\(X \\cap \\bar Y\\)) (nicht paarweise) Disjunkte Mengen Zwei Mengen teilen keine Elemente paarwweise Disjunkte Mengen Alle Mengen teilen keine Elemente Abz\u00e4hlbare Menge Wenn eine surjektive Funktion \\(F: \\N \\rightarrow X\\)\u00a0existiert \u00dcberabz\u00e4hlbare Menge Wenn es keine surjektive Funktion \\(F: \\N \\rightarrow X\\)\u00a0existiert"},{"location":"21HS/DM/Summaries/01_summary_2021-11-23.html#relationen","title":"Relationen","text":"Begriff Erkl\u00e4rung Injektiv (linkseindeutig) Wenn zu jedem y h\u00f6chsten ein x gibt Surjektiv (rechtstotal) Wenn es zu jedem y mindestens ein x gibt Bijektive Funktion Eine Funktion, welche injektiv und surjktiv ist ( Homogene Relation \\(A=B, R\\subseteq A\\times A\\) \u00c4quivalenzrelationen Eine reflexive, symmetrische und transitive Relation, in welcher alle Elemente zu einander eine Beziehung haben $x\\equiv_5y $ \\((x - y) \\text{ ist ein vielfaches von 5}\\)"},{"location":"21HS/DM/Summaries/01_summary_2022_01_17.html","title":"01 summary 2022 01 17","text":"<p>tags:     - summary     - DM title: DM Summary</p>"},{"location":"21HS/DM/Summaries/01_summary_2022_01_17.html#summary-2022-01-17","title":"Summary - 2022-01-17","text":"<ul> <li>Summary - 2022-01-17<ul> <li>Aussagenlogik<ul> <li>Gesetze</li> <li>Beweistechniken</li> </ul> </li> <li>Semantik</li> <li>Mengen</li> <li>Relationen<ul> <li>Hase Diagram</li> </ul> </li> <li>Volst\u00e4ndige Induktion</li> <li>Kleinster Verbrecher</li> <li>Teilbarkeit<ul> <li>Rechnenregeln ggT</li> <li>(Erweiterten) Euklischer Algorithmus</li> <li>Modulare Arithmethik</li> <li>Eulerische \\(\\varphi\\)-Funktion</li> <li>Chinesischer Restsatz</li> <li>Kleiner Satz von Fermat</li> </ul> </li> </ul> </li> </ul>"},{"location":"21HS/DM/Summaries/01_summary_2022_01_17.html#aussagenlogik","title":"Aussagenlogik","text":"Begriff Erkl\u00e4rung \\(\\top\\) (Tautologie) immer wahr \\(\\bot\\) (Wiederspruch) immer falsch \\(\\vee\\) oder \\(\\wedge\\) und <p>Bindung: \\(\\neg, \\wedge, \\vee, \\Rightarrow, \\Leftrightarrow\\)</p>"},{"location":"21HS/DM/Summaries/01_summary_2022_01_17.html#gesetze","title":"Gesetze","text":"<ul> <li>Distributivgesetzt:   \\(A \\wedge (B \\vee C) \\Leftrightarrow (A \\wedge B) \\vee (A \\wedge C)\\)</li> <li>Der Morgen:   \\(\\neg(A\\vee B) \\Leftrightarrow \\neg A \\wedge \\neg B\\)</li> <li>Implikation:   \\(A \\Rightarrow B \\Leftrightarrow \\neg A \\vee B\\)</li> <li>Kontraposition:   \\(A \\Rightarrow B \\Leftrightarrow \\neg B \\Rightarrow \\neg A\\)</li> <li>\u00c4quivalenz   \\((A \\Leftrightarrow B) \\Leftrightarrow (A \\Rightarrow B) \\wedge (B \\Rightarrow A) \\Leftrightarrow (\\neg A \\vee B) \\wedge (\\neg B \\vee A)\\)</li> </ul> Formel Erkl\u00e4rung \\(A(x):=\\text{\"x ist einfach\"}\\) Aussage \\(\\neg\\exists x\\in P A(x)\\) oder \\(\\forall x \\in P(\\neg A(x))\\) Keine Pr\u00fcfung ist einfach \\(\\exists x \\in P A(x) \\wedge (\\forall y,z\\in P(A(x)\\wedge A(y)\\Rightarrow x=y))\\) Genau eine Pr\u00fcfung ist einfach \\(\\exists x \\in P A(x) \\wedge (\\forall a, b, c \\in P (a\\neq b \\neq c \\Rightarrow \\neg(A(a) \\wedge A(b) \\wedge A(c)))\\) Genau zwei Pr\u00fcfungen sind einfach \\(\\exists a,b \\in P(a\\neq b \\wedge A(a) )\\)"},{"location":"21HS/DM/Summaries/01_summary_2022_01_17.html#beweistechniken","title":"Beweistechniken","text":"<ul> <li> <p>Direkten Beweis</p> </li> <li> <p>So veralgemeinern, dass der einte der Term gleich dem anderen Term ist</p> </li> <li> <p>Beweis durch Widerspruch</p> </li> <li> <p>Anstatt zu zeigen, dass die Aussage A immer wahr ist, wird bewiessen, dass A niemals falsch ist.     Also Anstatt \\(\\forall n (A(n) \\Rightarrow B(n)): true\\) soll man beweissen \\(\\neg (\\forall n(A(n)\\Rightarrow B(n))):false\\) ist</p> </li> <li> <p>Beweis durch (Gegen-) Beispiel</p> </li> <li> <p>Wenn beweissen werden soll, dass etwas immer korrekt oder immer falsch ist, kann mit ein korrekten, bzw. falschem Beispiel gezeigt werden, dass die Aussage falsch ist </p> </li> <li> <p>Beweis durch Kontraposition</p> </li> <li> <p>Es gillt die Aussage von der Form \\(A \\Rightarrow B \\Leftrightarrow \\neg B \\Rightarrow \\neg A\\)</p> </li> <li> <p>\u00c4quivalenz</p> </li> <li> <p>Da eine \u00c4quivalenz \\((A \\Leftrightarrow B) \\Leftrightarrow (A \\Rightarrow B \\wedge B \\Rightarrow A)\\) ist, kann einfach das zweitere bewiessen werden.</p> </li> </ul>"},{"location":"21HS/DM/Summaries/01_summary_2022_01_17.html#semantik","title":"Semantik","text":"Begriff Erkl\u00e4rung G\u00fclltig oder Wahr Bei einer spezifischen Belegung wahr Allgemeing\u00fclltig Bei allen Belegungen wahr Erf\u00fcllbar mind. eine Belegung ist erf\u00fcllbar Unerf\u00fcllbar immer falsch Wiederlegbar mind. einmal falsch; nicht umbedingt immer falsch Literale \\(\\neg a \\text{ oder } a\\) Negotions Normalform (NNF) Keine Implikationen und alle\\(\\neg\\) in Literale Disjunktive Normalform (DNF) Form:\\((L_1 \\wedge L_2 \\wedge ...)\\vee (L_3 \\wedge L_4) \\vee ...\\) Konjuktive Normalform (KNF) Form:\\(L_1 \\vee L_2 \\vee ...) \\wedge (L_3 \\vee L_4)\\wedge ...\\) Funktional Vollst\u00e4ndig Menge von Logischen Verkn\u00fcpfungen, welche die Funktionen\\(\\vee, \\wedge, \\neg, \\rightarrow\\) darstellen k\u00f6nnen"},{"location":"21HS/DM/Summaries/01_summary_2022_01_17.html#mengen","title":"Mengen","text":"Begriff Erkl\u00e4rung Nat\u00fcrliche Zahlen (\\(\\N\\)) \\([0; \\infty]\\) Ganze Zahlen (\\(\\Z\\)) \\([-\\infty;\\infty]\\) Rationale Zahlen (\\(\\mathbb Q\\)) Alle Zahlen, darstellbar durch einen Bruch Reele Zahlen (\\(\\R\\)) Alle Zahlen mit einem Komma (\\(\\pi\\), \\(e\\), 2.32, 2, ...) Intervallschreibweisse Ist immer im Zahlenbereich \\(\\R\\) Teilmenge (\\(X \\subseteq Y\\)) \\(\\forall x (x \\in X \\Rightarrow x \\in Y)\\) / X ist eine Teilmenge von Y, X=Y kann auch sein Echte Teilmenge (\\(X \\subsetneq Y\\)) \\(X \\subseteq Y \\wedge X \\neq Y\\) / X ist eine Teilmenge von Y, X kann nicht Y sein Potenzmenge (\\(\\mathcal P(X)\\)) Menge aller Teilmenge (\\(\\mathcal P(\\{0, 1\\})=\\{\\emptyset, \\{0\\}, \\{1\\}, \\{0, 1\\} \\}\\). Die M\u00e4chtigkeit ist \\(\\mathcal \\vert P(A)\\vert=2^{ \\vert A \\vert}\\); \\(\\mathcal P(A)=\\{x\\mid x \\subseteq A\\}\\) Partition Eine Menge von Teilmengen von A, welche nicht leer sind (\\(\\bigcup_{i\\in I}P_i=A\\)) (nicht leer, paarweise disjunkt, Vereinigung gibt Ursprungsmenge) Kardinalit\u00e4t/M\u00e4chtigkeit Anzahl Elemente in Menge Schnittmenge (\\(X \\cap Y\\)) Alle Elemente, welche in beiden enthalten sind (\\(X\\cup U=\\{x\\mid x \\in X \\wedge x \\in Y\\}\\))Distributivgesetz: \\(A\\cap(B\\cup C)=(A\\cap B)\\cup (A\\cap C)\\)DeMorgan: \\((C\\setminus A)\\cap(C\\setminus B)=C\\setminus(A\\cup B)\\) Vereinigung (\\(X \\cup Y\\)) Alle Elemente von beiden Mengen (\\(X\\cup U=\\{x\\mid x \\in X \\vee x \\in Y\\}\\)) Komplement (\\(X\\setminus Y)\\) Alle Elemente aus X, welche nicht in Y vorkommen (\\(X \\cap \\bar Y\\)) (nicht paarweise) Disjunkte Mengen Zwei Mengen teilen keine Elemente  paarwweise Disjunkte Mengen Alle Mengen teilen keine Elemente Abz\u00e4hlbare Menge Wenn eine surjektive Funktion \\(F: \\N \\rightarrow X\\) existiert:Abz\u00e4hlbar: \\(\\N\\times\\N\\) , \\(\\Z\\times\\Z\\), \u00dcberabz\u00e4hlbare Menge Wenn es keine surjektive Funktion \\(F: \\N \\rightarrow X\\) existiert\u00dcberabz\u00e4hlbar: \\(\\mathcal P(\\N)\\), \\([0;1]\\); Die Menge aller unendlichen Bin\u00e4rsequenzen (2. Diagonalargument)"},{"location":"21HS/DM/Summaries/01_summary_2022_01_17.html#relationen","title":"Relationen","text":"Begriff Erkl\u00e4rung Injektiv (linkseindeutig) Wenn zu jedem y h\u00f6chsten ein x gibt Surjektiv (rechtstotal) Wenn es zu jedem y mindestens ein x gibt Funktion (Relation) Eine Relation, bei welchem ein x Element nicht zwei y Werte gibt. Von einem Element d\u00fcrfen also nur maximal ein Pfeil wegzeigen. Bijektive Funktion Eine Funktion, welche injektiv und surjktiv ist Homogene Relation \\(A=B, R\\subseteq A\\times A\\) Wohldefiniertheit Eine Funktion, welche eine \u00c4quivalenzrelation als Argument nimmt, ist wohldefiniert, wenn \\(xRy \\Rightarrow F(x)=F(y)\\) bedeutet. \u00c4quivalenzrelationen Eine reflexive, symmetrische und transitive Relation, in welcher alle Elemente zu einander eine Beziehung haben Restklasse Eine Menge von Elementen in einer \u00c4quivalenzrelation, welche miteinander verbunden \\(x\\equiv_5y\\) \\((x - y) \\text{ ist ein vielfaches von 5}\\) transitiver Abschluss (\\(R^+\\)) Eine Relation \\(R^+\\), enh\u00e4lt zus\u00e4tzlich zu R, alle Relation, damit R transitiv wird reflexiv-transitiven Abschluss (\\(R^*\\)) Eine Relation \\(R^*\\), enh\u00e4lt zus\u00e4tzlich zu \\(R^+\\), alle Relationen, damit \\(R^+\\) reflexiv wird. DAG Ein gerichteten zyklenfreien Graphen ist ein Graph, welcher keine zyklen enh\u00e4lt Dipartir Graph  Ein Graph, welcher nicht auf einer Homogenen Relation funktioniert Ordnungsrelation Ordnung, welche sicherlich reflexiv, transitiv R-unvergleichbar Zwei elemente, wenn weder \\(xRy\\) und \\(yRx\\) gillt R-minimal Ein Element, wenn kein Pfeil auf das Element zeigen R-maximal Ein Element, wenn es keine Pfeile weg vom Element zeigen Pr\u00e4ordnung reflexiv und transitiv Halbordnung Eine Pr\u00e4ordnung (reflexiv und transitiv), welche auch noch antisymmetrisch ist (zyklenfrei) totale/lineare Ordnung Eine Halbordnung (reflexiv, transitiv und antisymmetrisch) ohne R-unvergleichbaren Elemente (zyklenfrei) Wohlordnung Eine totale Ordnung, bei welcher alle nicht leeren Teilmenge mindestens ein R-minimales Element (Element, auf welches keine Pfeile zeigen) enhalte (zyklenfrei) topologische Sortierung Einen Pfad von Elemente, welche alle miteinander verbunden sind. Matematisch ist dies eine Ordnung: \\((\\preceq) \\subseteq (M\\times M\\)). \\(a\\preceq b\\) sagt aus, dass a der Vorg\u00e4nger von b ist"},{"location":"21HS/DM/Summaries/01_summary_2022_01_17.html#hase-diagram","title":"Hase Diagram","text":"<p>Funktioniert nur auf Halbordnungen, welche DAGs sind (also zyklen frei). F\u00fcr gr\u00f6ssere Diagramme kann man alle Elemente mit ihren Nachfolgern aufschreiben und danach alle Nachfolger streichen, welche ein Nachfolger eines Nachfolgers sind. Es lohnt sich zudemmit dem R-maximalen Element zu starten.</p> <p></p>"},{"location":"21HS/DM/Summaries/01_summary_2022_01_17.html#volstandige-induktion","title":"Volst\u00e4ndige Induktion","text":"<ol> <li>IV - Induktions Verankerung: \\(A(0)\\), \\(A(1)\\), oder anderen Startwert</li> <li>IA - Induktions Annahme: \\(A(n)\\)</li> <li>IB - Induktions Behauptung: \\(A(n+1)\\)</li> <li>IS - Induktions Schluss: \\(A(n)\\Rightarrow A(n+1)\\)</li> </ol>"},{"location":"21HS/DM/Summaries/01_summary_2022_01_17.html#kleinster-verbrecher","title":"Kleinster Verbrecher","text":"<p>Es gibt eine Aussage \\(A(n), n\\in \\N\\), welche wahr sein soll.</p> <ol> <li>Behauptung: Es gibt ein \"kleinsten Verbrecher\" aka. die kleinste Zahl, welche die eigentlich Behaupt verletzt. (\\(A(n_0):f\\))</li> <li>Man versucht nun mit der kleinsten Zahl aus \\(\\N\\), \\(0\\): \\(A(0): t\\) \\(\\Rightarrow\\) Daher muss gelten \\(n&gt;0 \\Rightarrow k+1=n\\) (wobei \\(k\\in \\N\\))</li> <li>Nun kann \\(k+1\\) als \\(n\\) in \\(A(n)\\) eingesetzt werden (\\(A(k+1)\\)). Falls dies ein Wiederspruch ergibt, ist die Aussage \\(A(n)\\) wahr, da es keinen kleinsten Verbrecher gibt</li> </ol>"},{"location":"21HS/DM/Summaries/01_summary_2022_01_17.html#teilbarkeit","title":"Teilbarkeit","text":"Begriff Erkl\u00e4rung \\(x\\mid y\\) X teilt y (achtung Reihenfolge) \\(T(x)\\) Menge aller Teile von \\(x\\) (\\(T(15)=\\{1, 3, 5, 15\\}\\)) \\(\\pi(n)\\) Wie viel Primzahlen kleiner als n sind Prime Restklassen (\\(\\Z^*_{/7}\\)) Eine Menge von Elementen mit einem multiplikativen inversem Element Faktormenge (\\(X_{/R}\\)) Die Menge aller \u00c4quivalenzklassen von \\(X\\) modulo \\(R\\)\\(X_{/R}=\\{[x]_R\\mid x \\in X\\}\\) Peano-Axiomen Die Zahl 0 ist eine nat\u00fcrliche Zahl. Jede nat\u00fcrliche Zahl \\(k\\) hat gtenau einen Nachfolger \\(k+1\\), welcher auch eine nat\u00fcrliche Zahl ist. Die Zahl \\(0\\) ist die einzige Zahl, welc"},{"location":"21HS/DM/Summaries/01_summary_2022_01_17.html#rechnenregeln-ggt","title":"Rechnenregeln ggT","text":"<ul> <li>\\(n\\cdot m=kgv(n, m)\\cdot ggT(n, m) \\Rightarrow kgV(n, m)=\\frac{n \\cdot m}{ggT(n, m)}\\)</li> <li>\\(ggT(n, n)=n\\)</li> <li>\\(ggT(n, 1)=1\\)</li> <li>\\(ggT(n, 0)=n\\)</li> <li>\\(ggT(n, m)=ggT(n, m-n)\\)</li> <li>\\(ggT(n, m)=ggT(n, m-k\\cdot n)\\), wenn \\(k\\cdot n \\le m\\)</li> <li>\\(ggT(n, m)=a\\cdot n + b \\cdot m\\), wenn \\(x\\neq y\\) und \\(a,b \\in \\N\\)</li> </ul> <p>Um das \\(kgV(x, y)\\) zu bestimmen, wird eine Primfaktorzerlegung von \\(x\\) und \\(y\\) durchgef\u00fchrt. Danach werden die h\u00f6chsten Potenzen zusammen gerechnet. F\u00fcr den \\(ggT\\) werden die tiefsten Potenzen verwendet.</p>"},{"location":"21HS/DM/Summaries/01_summary_2022_01_17.html#erweiterten-euklischer-algorithmus","title":"(Erweiterten) Euklischer Algorithmus","text":"\\[ x_0=1\\\\ x_1=0\\\\ x_k=x_{k-2}-q_k\\cdot x_{k-1}\\\\ \\space \\\\ y_0=0\\\\ y_1=1\\\\ y_k=y_{k-2}-q_k\\cdot y_{k-1} \\]"},{"location":"21HS/DM/Summaries/01_summary_2022_01_17.html#modulare-arithmethik","title":"Modulare Arithmethik","text":"<p>f\u00fcr Multiplikation:</p> <ul> <li>neutrales Element: \\([1]_n\\)</li> <li>inverses Element:</li> <li>Nur Zahlen, welche teilefrmed sind (\\(ggT(Zahl, N)=1\\))</li> <li>Eine Zahl multipliziert mt ihrem inversen Element gibt \\(1\\)</li> <li>Kann mit dem Erweiterten Euklidischen Algorithmus berechnet werden:     \\(Zahlenbereich \\cdot x + Zahl \\cdot y=1\\) \\(\\Rightarrow y\\) ist das multiplikative Inverse. (Zahl muss kleiner sein als Zahlenbereich, sonst muss gewechselt werden)</li> </ul>"},{"location":"21HS/DM/Summaries/01_summary_2022_01_17.html#eulerische-varphi-funktion","title":"Eulerische \\(\\varphi\\)-Funktion","text":"<p>Findet die M\u00f6chtigkeit einer Prime Restklassen heraus:</p> <ol> <li>\\(\\varphi(n\\cdot m)=\\varphi(n)\\cdot \\varphi(m)\\), wobei gillt \\(ggT(n, m)=1\\)</li> <li>\\(\\varphi(p)=p-1\\), wobei gillt \\(p\\in \\mathbb P\\)</li> <li>\\(\\varphi(p^k)=p^k-p^{k-1}\\), wobei gillt \\(k\\in \\N_{\\gt0}\\)</li> </ol> <p>Beispiel:</p> \\[ |\\Z_{/8}^*|=\\varphi(8)=\\varphi(2^3)=2^3-2^{3-1} = 8 -4 =4\\\\ |\\Z_{/15}^*|=\\varphi(15)=\\varphi(3\\cdot5)=\\varphi(3)\\cdot \\varphi(5)\\\\ |\\Z_{/240}^*|=\\varphi(240)=\\varphi(2^4\\cdot3\\cdot5)=.. \\]"},{"location":"21HS/DM/Summaries/01_summary_2022_01_17.html#chinesischer-restsatz","title":"Chinesischer Restsatz","text":"<p>Es gibt garantiert eine L\u00f6sung, wenn alle Modulos paarweise teilerfremd sind (alle mit allen den \\(ggT\\) von \\(1\\) haben)</p> <p>Beispiel, um zu sehen, wie \\(a_1\\) und \\(m_1\\) zustande kommen: \\(\\(\\begin{aligned}   x\\equiv_3 2 &amp; \\rightarrow &amp;a_1=2 &amp;m_1=3\\\\   x\\equiv_5 7 &amp; \\rightarrow &amp;a_2=3 &amp;m_2=5\\\\   x\\equiv_7 2 &amp; \\rightarrow &amp;a_3=2 &amp;m_3=7 \\end{aligned}\\)\\)</p> <ol> <li>\\(M_k\\) berechnen: \\(M_k=\\frac{\\prod m_i}{m_k}\\)</li> <li>Das multiplaktive Inverse \\(N_k\\) f\u00fcr jedes \\(M_k\\) berechnen mit dem Module der Linie k</li> <li>Das Ergebnis mit \\(x=\\sum^n_{k=1}a_kM_kN_k\\) berechnen</li> </ol> <p>\\(x\\) ist im Modulo \\(\\prod_{i=1}m_i\\) (das Produkt von allen Modulos)</p>"},{"location":"21HS/DM/Summaries/01_summary_2022_01_17.html#kleiner-satz-von-fermat","title":"Kleiner Satz von Fermat","text":"<p>F\u00fcr \\((p \\in \\R \\wedge a \\in \\Z)\\wedge p \\not{|} a\\) gillt \\(a^{p-1}\\equiv 1 \\mod p\\)</p> <p>Beispiel: </p> \\[ \\begin{aligned} \\begin{gathered} 26^{123}\\mod 7 &amp; ggT(26, 7)=1\\\\ 26^{7-1}\\equiv_7 26^6\\equiv_7 1\\\\ 26^{123}\\equiv_7 (26^6)^{20}\\cdot 26^3\\equiv_7 1^20\\cdot 26^3\\equiv_7 5^3\\equiv_7(-2^3) \\equiv_7 -8 \\equiv_76 \\end{gathered} \\end{aligned} \\]"},{"location":"21HS/GED/Elektronik/Maschen%20und%20Knotensatz.html","title":"Knotenregel","text":"<p>Was in ein Kabel an Ladung(I) hinein geht, muss auch wieder raus.</p> <p>Mit der Knotenregel kann man erkl\u00e4ren, wieso in einer Parallelschaltung die Ladung sich aufteilt. Denn was in einen Knoten hinein geht, muss sich aufteilen.</p>"},{"location":"21HS/GED/Elektronik/Maschen%20und%20Knotensatz.html#maschensatz","title":"Maschensatz","text":"<p>Eine Masche ist ein \"Loop\" im Stromkreis. Alle Str\u00f6me (V) zusammen m\u00fcssen 0 ergeben. Mit dem kann man erkl\u00e4ren, wieso in Parallelschaltungen auf beiden Leitungen der Strom gleich bleibt. Bei einer Serienschaltung gibt es nur eine Masche, daher bleibt der Strom nicht gleich bei einer Serienschaltung.</p>"},{"location":"21HS/GED/Elektronik/Maschen%20und%20Knotensatz.html#elektronischebauteile","title":"Elektronischebauteile","text":"<ul> <li>Ohm'scher Leiter hat eine Lineare Spannungs-Strom-Charakteristik. Nicht-Ohm'scher Leiter hingegen nicht (z.B. LED's).</li> </ul>"},{"location":"21HS/GED/Elektronik/Maschen%20und%20Knotensatz.html#wiederstanden","title":"Wiederst\u00e4nden","text":"<ul> <li>Das Ohm'sche Gesetzt gillt: \\(U=R \\cdot I\\)</li> <li>Die Leistung : \\(P=U\\cdot I=\\frac {U^2} R = I^2R\\)</li> </ul>"},{"location":"21HS/GED/Elektronik/Maschen%20und%20Knotensatz.html#kondensatoren","title":"Kondensatoren","text":"<p>Ein Kondensator ist eine Art Feder, durch welche kein Strom fliessen kann. Beim Aufladen werden immer mehr Elektronen hinein gepumpt. Daher wird es immer schwieriger noch mehr Elektronen hinein zu pressen, je voller der Kondensator wird.</p> <ul> <li>Ladung kann mit \\(CU_c = Q\\) berechnen. C stellt dabei die Kapazit\u00e4t in Farad [F] and (nicht die Ladung)</li> <li>Ein Kondensator ist kein Ohm'sches Bauteil und folgt demnach nicht dem Ohm'schen gesetzt.   Anstatt kann folgende Exponentialfunktion f\u00fcr Q benutzt werden. \\(U_0\\) ist dabei die Spannungsquelle, C die Kapazit\u00e4t in Fahrad und R der Wiederstand, durch welcher der Strom fliessen muss: </li> <li>f\u00fcr zum Laden: \\(Q(t) = U_0\\cdot C (1 - e^{\\frac{-t}{R\\cdot C}})\\)</li> <li>f\u00fcr zum Entladen: \\(Q(t) = U_0\\cdot C (e^{\\frac{-t}{R\\cdot C}})\\)</li> <li>Um U (Strom) des Kondensators zu berechnen, einfach das \\(\\cdot C\\) aus der Gleichung entfernen, da \\(C\\cdot U_c=Q \\rightarrow U_c=\\frac Q C\\) bedeutet</li> </ul>"},{"location":"21HS/GED/Elektronik/Maschen%20und%20Knotensatz.html#schwinungen","title":"Schwinungen","text":"<p>//TODO</p>"},{"location":"21HS/GED/Elektronik/Maschen%20und%20Knotensatz.html#spule","title":"Spule","text":"<p>Wenn durch eine Spule Strom (V) fliesst, dann erzeugt dies ein Magnetfeld. Beim Hochfahren des Stromes (V) wird Energie ben\u00f6tig, um das Magnetfeld zu erzeugen. Wenn der Strom (V) zur\u00fcckgefahren wird, wird die Energie wieder freigegeben.</p> <ul> <li>Es gilt: \\(U=L\\frac {dI}{dt}\\)</li> <li>L ist die Induktivit\u00e4t in Henry [H]</li> <li>I Formel</li> </ul>"},{"location":"21HS/GED/Elektronik/Maschen%20und%20Knotensatz.html#lange-kabeldrahte","title":"Lange Kabel/Dr\u00e4hte","text":"<p>Der Wiederstand eines Drahtes kann mit der Formel \\(R=\\rho \\frac L A\\). Grunds\u00e4tzlich gillt je L\u00e4nger und je d\u00fcnner ein Draht ist, desto h\u00f6her ist der Wiederstand. Nat\u00fcrlich h\u00e4ngt es auch noch von \\(\\rho\\) (\\(mm^2m^{-1}...\\)), dem Spezifischer Wierstand, ab.</p>"},{"location":"21HS/GED/Elektronik/Maschen%20und%20Knotensatz.html#spannungsbander","title":"Spannungsb\u00e4nder","text":"<p>Da man im Computer nicht genau 0V oder 5V, definiert man Spannungsb\u00e4nder, in welcher eine Schaltung einen Input oder Output als 1 oder 0 erkennt.</p> <p>![](/res/2021-10-27-08-57-35-image.png</p>"},{"location":"21HS/GED/Physik/00_Formeln.html","title":"Formeln","text":"<p>In dieser Datei werden alle Formeln und Konstanten zusammen gefasst.</p> Prefix Exponent peta \\(10^{15}\\) tera \\(10^{12}\\) giga \\(10^9\\) mega \\(10^6\\) kilo \\(10^3\\) hecto \\(10^2\\) deca \\(10^1\\) - \\(10^0\\) dezi \\(10^{-1}\\) cento \\(10^{-2}\\) milli \\(10^{-3}\\) micro \\(10^{-6}\\) nano \\(10^{-9}\\) pico \\(10^{-12}\\) femto \\(10^{-15}\\)"},{"location":"21HS/GED/Physik/00_Formeln.html#elektronik","title":"Elektronik","text":"Thema Formeln Erkl\u00e4rung \\(I [A]\\) Strom \\(U [V]\\) Spannung Wiederst\u00e4nde \\(U=R\\cdot I\\) Formel f\u00fcr Ohmnische Wiederst\u00e4nde Wiederst\u00e4nde \\(R_{12}=\\frac 1 {\\frac 1 {R_1} + \\frac 1 {R_2}}\\) Formel zum zwei parallele Wiederst\u00e4nde zusammen zu fassen Kondensator \\(CU_c=Q\\) Der Zusammenhang zwischen der Spannung \\(U\\) und der Ladung \\(Q\\) Kondensator \\(Q(t)=CU_0(1-e^{-\\frac t{RC}})\\) Wie sich die Ladung \\(Q\\) beim Laden Kondensator \\(U_C(t)=\\frac{Q(t)}{C}=U_0(1-e^{-\\frac t{RC}})\\) Wie sich die Spannung \\(U\\) beim Laden verhaltet Kondensator \\(I(t)=\\frac{U_0}{R}e^{-\\frac t {RC}}\\) Wie sich der Strom \\(I\\) beim Laden verhaltet Kondensator \\(\\tau=R\\cdot C\\) Der Kondensator f\u00e4llt/steigt auf ca \\(\\frac 1 e\\approx0.37\\) auf/ab in der Zeit \\(\\tau\\)"},{"location":"21HS/GED/Physik/00_Formeln.html#themische-strahlungen","title":"Themische Strahlungen","text":"Konstante Erkl\u00e4rung \\(c=3\\cdot 10^8m/s\\) Lichtgeschwindigkeit im Vakum \\(h=6.626\\cdot10^{-34} Js\\) Planck'sche Konstante Formel Erkl\u00e4rung \\(c=\\lambda \\cdot\\nu\\) Dies ist der Zusammenhang zwischen der Wellenl\u00e4nge \\(\\lambda\\)\u00a0und der Frequenz \\(\\nu\\)\u00a0. \\(c\\)\u00a0ist die Lichtgeschwindigkeit \\(E=h\\nu\\) Die Energie einer Strahlung mit der Frequenz \\(\\nu\\). \\(h\\)\u00a0ist die Plank'sche Konstante \\(\\rho(\\nu)=1-\\alpha(\\nu)\\) Umrechnungs Formel zwischen Reflektionskoeffizenten (\\(\\rho\\)) und Absorptionskoeffizenten (\\(\\alpha\\))"},{"location":"21HS/GED/Physik/00_Formeln.html#noch-zu-lernen","title":"Noch zu lernen","text":"<ul> <li>B-Felder induziert E-Felder</li> <li>In welche Richtung positive E-Felder anziehen oder abstossen</li> </ul>"},{"location":"21HS/GED/Physik/01_ch%C3%BCgelif%C3%BCsik.html","title":"Ch\u00fcgeli F\u00fcsik","text":""},{"location":"21HS/GED/Physik/01_ch%C3%BCgelif%C3%BCsik.html#kraft","title":"Kraft","text":"<p>\\(\\vec F = m \\cdot \\vec a\\)</p> <p>Diese Formel nimmt einiges an:</p> <ul> <li>Bewegung in einer Dimension (keine Vektoren)</li> <li>Konstante Beschleunigung (a = const.)</li> <li>Start bei \\(s(0)=0\\)</li> <li>Anfangsgeschwindigkeit bei </li> </ul>"},{"location":"21HS/GED/Physik/01_ch%C3%BCgelif%C3%BCsik.html#beschleunigung-und-co","title":"Beschleunigung und co.","text":"<p>Hier sind einige g\u00e4ngige Formeln aufgelistet, welche hilfreich bei Beschleunigung sind. In der obersten Reihe steht, was die Formel ergeben soll. In der ersten Spalte, was sich nicht \u00e4ndert und somit nicht in der Formel erw\u00e4hnt wird.</p> t s v a t - \\(s=\\frac{v^2}{2a}\\) \\(v=\\sqrt{2as}\\) \\(a=\\frac{v^2}{2s}\\) s \\(t=\\frac{v}{a}\\) - \\(v=at\\) \\(a=\\frac{v}{t}\\) v \\(t=\\sqrt{\\frac{2s}{a}}\\) \\(s=\\frac{at^2}{2}\\) - \\(a=\\frac{2s}{t^2}\\) a \\(t=\\frac{2s}{v}\\) \\(s=\\frac{vt}{2}\\) \\(v=\\frac{2s}{t}\\) -"},{"location":"21HS/GED/Physik/01_ch%C3%BCgelif%C3%BCsik.html#energie","title":"Energie","text":"<p>Energie ist \\(Kraft \\cdot Strecke\\). Es gilt also die Formel \\(E=F\\cdot s [J]\\). Die Masseinheit \\(J\\) kann auch als \\(\\frac{kgm^2}{s^2}\\) </p>"},{"location":"21HS/GED/Physik/02_Elektrotechnik.html","title":"Elektrotechnik","text":""},{"location":"21HS/GED/Physik/02_Elektrotechnik.html#strom-spannung-und-leistung","title":"Strom, Spannung und Leistung","text":"<p>Ampere ist die Einheit des Stromes \\(I\\) und ist Coulomb pro Sekunde \\([Cs^{-1}]\\). </p> <p>Die H\u00f6he zwischen zwei Energiepotentialen nennt sich die Spannung \\(U\\) (\\(U(\\vec r_A,\\vec r_B)=\\varphi(\\vec r_A)-\\varphi(\\vec r_B)\\)). </p> <p>Spannung kann aber auch \u00fcber Arbeit definiert werden. Die Spannung zwischen zwei Punkten \\(A\\) und \\(B\\) ist die Energie pro Ladung, welche frei wird, wxenn die Ladung von \\(A\\) nach \\(B\\) bewegt wird: \\(U=\\int^{\\vec r_B}_{\\vec r_A}\\vec E d\\vec r\\).  Die kinetische Energie, welche eine Ladung \\(q\\) gewinnt, wenn sie eine Spannung \\(U\\) \"herunterf\u00e4llt\" betr\u00e4gt: \\(\\Delta E_{kin}=\\int^{\\vec r_B}_{\\vec r_A}\\vec q\\cdot E d\\vec r=q\\cdot U\\)</p>"},{"location":"21HS/GED/Physik/02_Elektrotechnik.html#schaltung","title":"Schaltung","text":""},{"location":"21HS/GED/Physik/02_Elektrotechnik.html#knotenregel","title":"Knotenregel","text":"<p>Die Knotenregel besagt, dass was in einen Knoten hinein geht, muss auch wieder aus dem Knoten hinaus.</p> <p>Oder \\(I_1=I_2+I_3\\) bzw. \\(I_6=i_5+I_4\\)</p>"},{"location":"21HS/GED/Physik/02_Elektrotechnik.html#maschenregel","title":"Maschenregel","text":"<p>Die Maschenregel besagt, dass alle Spannungen in einer Masche zusammen \\(0\\) ergeben m\u00fcssen. Man rechnet <code>plus</code> wenn es in die Referenzrichtung eines Bauteils geht und <code>minus</code>, wenn es gegen die Referenzrichtung geht.</p> <p>Ebenfalls wichtig zu erw\u00e4hnt ist, dass eine Batterie in die andere Richtung zeigt, als die anderen Bauteile (Dies ist einwenig komisch im Beispiel oben). </p> <p>In der gr\u00fcnen Maschen sieht man, wie dies aussehen kann, f\u00fcr eine Masche, welche nicht \u00fcber die Baterie geht: \\(U_4-U_5=0\\)</p>"},{"location":"21HS/GED/Physik/02_Elektrotechnik.html#batterien","title":"Batterien","text":"<p>Reale Batterien haben einen Innenwiederstand, welcher in Serie mit der Batterie geschalten ist. Dass heisst, dass die realte Spanung einer Batterie kleiner als \\(U_0\\) ist, da \\(U_{in}\\) abgezogen werden muss.</p>"},{"location":"21HS/GED/Physik/02_Elektrotechnik.html#wiederstand","title":"Wiederstand","text":"<p>Ein Wiederstand folgt dem Ohm'sche Gesetzt. Dass heisst, ein Wiederstand kann mit \\(U=R\\cdot I\\) berechnet werden.</p> <p>Da f\u00fcr die Leistung gillt \\(P=U\\cdot I\\) , kann in diese Formel das Ohm'sche Gesetzt eingesetzt werden, um die Formel \\(P=\\frac {U^2} R=I^2R\\) zu bekommen.</p> <p>Wegen der Knoten und Maschenregeln verhalten sich Wiederst\u00e4nde (wie auch andere Bauteile) anderst, jenach dem, ob sie Parallel oder Serial angeschlossen sind.</p> Name Erkl\u00e4rung Bild Parallel geschaltet In einer Parallelschaltung m\u00fcssen Wiederst\u00e4nde folgendermassen zusammen gefasst werden: \\(R_{12}=\\frac 1 {\\frac 1 {R_1} + \\frac 1 {R_2}}\\) Seriel geschaltet In einer Serielschaltung m\u00fcssen Wiederst\u00e4nde folgendermassen zusamengefasst werden: \\(R_{12}=R_1+R_2\\)"},{"location":"21HS/GED/Physik/02_Elektrotechnik.html#kondensator","title":"Kondensator","text":"<p>Ein Kondensator (oder Capacitor) kann man sich als Feder vorstellen, welche aus zwei Metallplatten nahe bei einander bestehen. Es wird Strom hinein \"gepumpt\". Dies wird immer schwerer, je voller der Kondensator wird, bis am Ende der Kondensator voll ist. Das zweite wichtige an einem Kondensator ist, dass keine Elektronen durch ihn durch fliessen k\u00f6nnen. Anstelle dessen sammeln sich auf der einen Seite mehr Elektronen an, auf der anderen Seite werden die bereits vorhanden Elektronen abgesaugt. </p> <p></p> formel Erkl\u00e4rung \\(\\frac {dQ}{dt}=I\\) Die Ver\u00e4nderungsrate der Ladung, ist der Strom \\(I\\) \\(CU_c=Q\\) Der Zusammenhang zwischen der Spannung \\(U [V]\\) und der Ladung \\(Q\\) abh\u00e4ngig von der Kapazit\u00e4t \\(C [F]\\) in Farad \\(Q(t)=CU_0(1-e^{-\\frac t{RC}})\\) Wie sich die Ladung \\(Q\\) beim Laden \\(U_C(t)=\\frac{Q(t)}{C}=U_0(1-e^{-\\frac t{RC}})\\) Wie sich die Spannung \\(U\\) beim Laden verhaltet \\(U_C(t)=U_0\\cdot e^{-\\frac t {RC}}\\) Wie sich die Spannung \\(U\\) beim Entladen verhaltet \\(I(t)=\\frac{U_0}{R}e^{-\\frac t {RC}}\\) Wie sich der Strom \\(I\\) beim Laden verhaltet \\(\\tau=R\\cdot C\\) Die Zeitkonstante \\(\\tau\\) . Der Strom des Kondensator f\u00e4llt auf ca \\(\\frac 1 e\\approx0.37\\) ab in der Zeit \\(\\tau\\) oder steigt auf \\(1-\\frac 1 e\\approx0.63\\) in \\(\\tau\\) an, wenn der Kondensator geladen wird"},{"location":"21HS/GED/Physik/02_Elektrotechnik.html#spulen","title":"Spulen","text":"<p>Wenn durch ein Draht Strom fliesst, entsteht ein Magnetfeld. Dies ist ebenfalls der Fall bei einer Spule. Wenn der Strom hochgefahren wird, dann wird ein Magnetfeld aufgebaut. Dies ben\u00f6tigt aber Energie, was wiederum einen Wiederstand erzeugt.</p> <p>Wenn der Strom abgebaut wird, wir die Energie des Magnetfeldes wieder zur\u00fcck in die Spannung gespiessen und \u00fcber der Spule entsteht eine Spannung, welche den Strom antreibt.</p> <p>Die Richtung des Magnetfeldes findet man heraus, in dem man die Rechtehand nimmt und mit dem Daumen in die Ricthung des <code>-</code> zeigt, bzw. die Stromrichtung auf dem Schaltungsplan (nicht die physikalische Stromrichtung, die ist in die andere Richtung). </p> <p></p> Formel Erkl\u00e4rung \\(U_L=L\\frac{dI}{dt}\\) Die Ver\u00e4nderungsrate von dem Strom \\(I\\) mit der Konstante \\(L [Henry]\\) multipliziert, ergibt die Spannung"},{"location":"21HS/GED/Physik/02_Elektrotechnik.html#ungedampfte-schwingkreise","title":"Unged\u00e4mpfte Schwingkreise","text":"<p>In einem Schwingungskreis, schwingen die Elektronen zwischen den zwei Platten des Kondensators hin und her. Dies kann man in die folgende Schritte unterteilen:</p> <ol> <li>Der Kondensator ist geladen und es herrscht eine Spanung \\(U_0\\) \u00fcber dem Kondensator. Der Schalter ist aber noch offen.</li> <li>Der Schalter \\(s_1\\) wurde geschlossen und der Strom fliesst. Wegen dem Maschensatz muss \\(U_C=U_L\\)  sein. Da die Spannung \\(U_C\\)w\u00e4chst, muss auch der Strom \\(I\\) wachsen und somit ein Magnetfeld \u00fcber L entstehen.</li> <li>Der Strom \\(I\\) und somit auch das Magnetfeld \\(B\\) sind maximal. Irgendwann wird der Kondensator leer sein (Auf beiden Seiten der Platte sind gleich viele Elektronen) und \\(U_L\\) und \\(UC\\) sind 0. Somit gilt auch \\(I=0\\). </li> <li>Da nun der Strom in der Spule freigesetzt wird, l\u00e4dt sich der Kondensator wieder auf (allerdings mit einem anderen Vorzeichen) und so entsteht wieder eine Spannung \\(U_C\\) \u00fcber dem Kondensator.</li> <li>So bald die Spule \"leer\" ist, wechselt die Stromrichtung wieder</li> <li>Der Zyklus wiederholt sich nun wiede</li> </ol> Formel Erkl\u00e4rung \\(Q(t)=CU_0\\cdot \\cos(\\frac 1 {\\sqrt {LC}}\\cdot t)\\) Die Ladung \\(Q\\) eines Schwinungskreises \\(I(t)=-\\sqrt {\\frac C L}\\cdot U_0\\cdot \\sin(\\frac 1 {\\sqrt {LC}}\\cdot t)\\) Der Strom \\(I\\) eines Schwinungskreises \\(U_L(t)=-\\frac 1 {\\sqrt{LC}}\\cdot U_0\\cdot \\cos(\\frac 1 {\\sqrt{LC}} \\cdot t)\\) Die Spannun \\(U_L\\) eines Schwinungskreises \\(f=\\frac 1 {2\\pi\\sqrt{LC}}\\) Die Frequenz \\(f\\), mit welcher der Schwingunskreis schwingt \\(T=2\\pi\\sqrt{LC}\\) Die Periodendauer \\(T\\), welche eine Schwinung des Schwingungskreis ben\u00f6tigt"},{"location":"21HS/GED/Physik/02_Elektrotechnik.html#gedampfte-schwingungskreise","title":"Ged\u00e4mpfte Schwingungskreise","text":"<p>Der Strom im Schwinungskreis wird schw\u00e4cher, wenn \\(R &lt; 2\\sqrt {\\frac L C}\\)  (oder wenn \\(\\frac{R^2}{4L^2}&gt;\\frac 1 {LC}\\) ist) Wenn dies gegeben ist, dann ist es ein ged\u00e4mpfter Schwingungskreis.</p> Formel Erkl\u00e4rung \\(Q(t)=Q_0e^{-\\frac t \\tau}\\cos(\\omega_dt-\\phi_0)\\) Die Ladung des Schwinungskreis1 \\(f=\\frac 1 {2\\pi}\\sqrt{\\frac 1 {LC} -\\frac{R^2}{4L^2}}\\) , \\(T=\\frac 1 f\\) Die (Kreis-)frequenz \\(\\omega_d\\) \\(\\tau=\\frac{2L} R\\) Die Zeitkonstante \\(\\tau\\) der D\u00e4mpfung. Der Strom des Kondensator f\u00e4llt/steigt auf ca \\(\\frac 1 e\\approx0.37\\%\\) auf/ab in der Zeit \\(\\tau\\)"},{"location":"21HS/GED/Physik/02_Elektrotechnik.html#low-pass-und-high-pass-filter","title":"Low-Pass und High-Pass-Filter","text":"<p>Bei einem Low-Pass-Filter werden die tiefen Frequenzen durchgelassen und die Hochen weggefiltert.</p> <p>Bei einem High-Pass-Filter ist es umgekehrt und die hochen Frequenzen werden duch gelassen und die tiefen weggefiltert.</p> <p></p> <p>\u00dcber dem Wiederstand misst man ein Signal, bei welchem die tiefen Frequenzen ged\u00e4mpft wurden und die hochen Frequenzen fast unver\u00e4ndert. Dies w\u00e4re ein High-Pass-Filter.</p> <p>Hingegen \u00fcber dem Kondensator misst werden die hochen Frequenzen ged\u00e4mpft und die tiefen durchgelassen, was ein Low-Pass-Filter ist.</p>"},{"location":"21HS/GED/Physik/02_Elektrotechnik.html#draht","title":"Draht","text":"<p>Der Wiederstand in einem Kabel ist ungef\u00e4hr: \\(R=\\rho\\frac L A\\), wobei \\(\\rho\\) den <code>spezifischen Wiederstand</code> mit der Einheit \\([mm^2m^{-1}\\Omega]\\). \\(L\\) ist die L\u00e4nge in \\([m]\\) und \\(A\\) ist die Querschnittsfl\u00e4che in \\([mm^2]\\).</p>"},{"location":"21HS/GED/Physik/02_Elektrotechnik.html#karnaugh-veitsch-diagramme","title":"Karnaugh-Veitsch Diagramme","text":"<p>Ein KV-Diagram kann praktisch sein, um eine Wahrheitstabelle mit vier Inputs in eine Schaltung zu verwandeln.</p> <p>Daf\u00fcr wird zuerst die Wahrheitstabelle in das folgende Raster einf\u00fchrt. Dabei ist oben, bzw. auf der linken Seite das erste Bit und auf der unteren/rechten Seite das linke Bit. Das Feld oben rechts stellt also f\u00fcr den Wert aus der Wahrheitstabelle A=1, B=0, C=0, D=0. </p> <p></p> <p>Wenn dies getan ist, versucht man Bl\u00f6cke mit Einsen zu finden. Die Bl\u00f6cke k\u00f6nnen 1, 2, 4, 8 oder 16 lang und/oder breit sein. Falls es egal ist, ob ein Input <code>0</code> oder <code>1</code> ist, kann er so betrachtet werden, dass es sch\u00f6nere Bl\u00f6cke gibt. Ebenfalls wichtig, ein Block darf \u00fcber die Kante hinausgehen.</p> <p></p> <p>Im letzten Schritt wird nun aus den Bl\u00f6cken Und-Schaltungen gebaut. Dabei m\u00fcssen zwei Dinge beachtet werden:</p> <ol> <li>Wenn ein Block \u00fcber den not und \"normalen\" Block geht (z.B. A und not-A), dann muss das And-Gate keine Verbindung zu diesem Input haben, da es in beiden F\u00e4llen true ist.</li> <li>Wenn ein Block nur \u00fcbr ein Block geht (z.B. nur \u00fcber den A oder nur den not-A Block), dann muss das And-Gate mit diesem Input verbunden sein.</li> </ol> <p>Hier sieht man noch das Beispiel f\u00fcr die oberigen Bl\u00f6cke.</p> <p></p>"},{"location":"21HS/GED/Physik/02_Elektrotechnik.html#transformer","title":"Transformer","text":""},{"location":"21HS/GED/Physik/02_Elektrotechnik.html#stromnetz","title":"Stromnetz","text":"<p>In unserem Stromnetzt werden mehrere Spannungen gen\u00fctzt. Zum einten m\u00f6chte man hohe Spannungen f\u00fcrs Transportieren von Strom ben\u00fctzten, da dies um einiges effizienter ist. Allerdings ist es zu gef\u00e4hrlich Hochspannung direkt im Haus zu gebrauchen. Daher hat man vier Netzebenen, welche mit Transformern gekoppelt sind.</p> <ul> <li>1 Ebene - H\u00f6chstspannungsebene: 380kV, bzw. 220 kV aus dem Kraftwerk oder vom Ausland</li> <li>3 Ebene - Hochspannungsebene: 36kV - 150kV: \u00dcberregionale Verteilungsnetzte</li> <li>5 Ebene - Mittelspannungsebene: 1kV - 36kV: Regionale Verteilungsnetzte</li> <li>7 Ebene - Niederspannungsebene: &lt; 1kV: Lokale Verteilungsnetzte</li> </ul> <p>Die Ebenen 2, 4 und 6 sind die Transformatorenebenen. Auf diesen Ebenen wird der Strom auf die n\u00e4chst tiefere oder h\u00f6here Ebene transformiert.</p> <p></p>"},{"location":"21HS/GED/Physik/02_Elektrotechnik.html#wechsel-vs-gleichstrom","title":"Wechsel- vs. Gleichstrom","text":"<p>Man hat sich in der Vergangenheit auf Wechselstrom geeinigt, weil es relativ einfach ist, Wechselstrom zu transformieren. Heute ist dies aber auch mit Gleichstrom m\u00f6glich. Gleichstrom erzeugt weniger Verl\u00fcste, wenn transportiert auf lange Streckenen, als Wechselstrom, da Wechselstrom nah an der Kabeloberfl\u00e4chse fliest und daher ein st\u00e4rkeres Magnetfeld erzeugt.</p> <p></p> <p>Der \\(U_{Eff}\\) kann mit der folgender Formel berechnet werden: \\(U_{Eff}=\\frac{U_S}{\\sqrt 2}\\) . Dies berechnet den quadratischen Mittelwert einer Wechselspannung.</p> <p>Der Sinus kann mit der folgenden Formel angegebene werden: \\(f(t)=U_{Eff}\\cos(\\omega\\cdot t)=U_{Eff}\\cos(f\\cdot 2\\pi\\cdot t)\\)</p>"},{"location":"21HS/GED/Physik/02_Elektrotechnik.html#drehstrom","title":"Drehstrom","text":"<p>(Siehe Script_GED_Lect_3_4.pdf)</p> <p></p> <p></p> <p>Drehstrom ist praktisch f\u00fcr Motoren, da es keine \"Totenp\u00fcnkte\" gibt, an dem ein Magnet stoppen k\u00f6nnte. Zudem sind alle H\u00e4user in der Schweiz an einem Drehstrom angeschlossen.</p> <p></p> <p>Auf den Aussenleiter wird der Strom \"transportiert\" und stehen gegen\u00fcber der Erde unter einer Spannung von 230V. </p> <p>Der Neutralleiter ist der \"Ausgang\" f\u00fcr die Elektronen, welche \u00fcber die Aussenleiter hinein gepumpt werden.</p>"},{"location":"21HS/GED/Physik/02_Elektrotechnik.html#gefahr-durch-strom","title":"Gefahr durch Strom","text":"<p>Wie gef\u00e4hrlich Strom ist h\u00e4ngt von der Stromst\u00e4rke und der Dauer ab. </p> <p>Gefahrebereiche:</p> <ol> <li>Wird nicht wahrgenommen, da der Strom zu klein ist</li> <li>Kribbeln, Kr\u00e4mpfte, aber keine bleibenden Sch\u00e4den</li> <li>Stromquelle kann wegen Museklverkrampfung nicht mehr losgelassen werden (bei Gleichstrom)</li> <li>T\u00f6dlich, wegen z.B. Herzkammerflimmern</li> </ol>"},{"location":"21HS/GED/Physik/03_Elektromagnetismus.html","title":"Elektromagnetismus","text":""},{"location":"21HS/GED/Physik/03_Elektromagnetismus.html#formeln","title":"Formeln","text":"Formel Erkl\u00e4rung $\\vec F_{12}=\\frac 1 {4\\pi\\varepsilon_0}\\cdot \\frac {Q_1Q_2}{ \\vec r_{12} $\\vec E(\\vec r)=\\frac 1 {4\\pi\\varepsilon_0}\\cdot \\frac Q { \\vec r - \\vec r_Q \\(\\vec F =q\\vec E(\\vec r, t)\\) Die Kraft \\(\\vec F\\), mit welcher das Feld \\(\\vec E\\) die Probeladung \\(q\\) beschleunigt \\(\\vec F_L=q\\cdot(\\vec v\\times\\vec B)\\) Die Kraft, eines Magnetfeldes auf eine Ladung \\(q\\), welche sich mit \\(\\vec v\\) bewegt. $m=\\frac{rq \\vec B <p>Auf dem TI-nspire cx gibt es den Befehl \\(crossP(x, y)\\), um mit den Vektoren \\(\\vec x\\) und \\(\\vec y\\) ein Kreuzprodukt zu rechnen.</p> <p>Das Skalarprodukt ist folgendermassen definiert: \\(\\vec a \\cdot \\vec b=|\\vec a| \\cdot |\\vec b|\\cdot \\cos(\\alpha)\\)  Aus dem kann geschlossen werden, dass wenn \\(\\alpha=90\u00b0\\) , bzw. die Vektoren \\(\\vec a\\) und \\(\\vec b\\) senkrecht aufeinander stehen, dass das Skalarprodukt <code>0</code> is</p>"},{"location":"21HS/GED/Physik/03_Elektromagnetismus.html#linienintegrale","title":"Linienintegrale","text":"<p>\\(W=\\int_\\gamma\\vec F\\cdot d\\vec \\gamma\\)</p> <p>Arbeit wurde in der BMS als \\(W=F\\cdot s\\) definiert. Nun kann aber \\(F\\) und \\(s\\) auch Vektoren sein. Hier kommt das Linienintegral ins Spiel, denn mit diesem kann man die Arbeit mit Vektoren ausrechnen.</p> <p>Der Vektor \\(\\vec F\\) und \\(\\vec \\gamma\\) m\u00fcssen nicht umbedingt in dieselbe Richtung zeigen. Wenn man z.B. einen Schlitten zieht, hat die Kraft \\(\\vec F\\) ca. eine 45\u00b0 gegen oben, w\u00e4hrend \\(\\vec \\gamma\\) die Strecke des Schlittens darstellt.</p> <p>Spannung kann auch als Linienintegral angesehen werden: \\(U(\\gamma)=\\int_\\gamma\\vec E \\cdot d\\vec \\gamma\\)</p>"},{"location":"21HS/GED/Physik/03_Elektromagnetismus.html#spezialfalle","title":"Spezialf\u00e4lle","text":"Name Formel Bild KreisDas Vektorfeld liegt \u00fcberall tangential an der Kurve und alle Vektoren haben dieselbe L\u00e4nge. \\(\\int_\\gamma\\vec U\\cdot d\\vec\\gamma =2\\pi r\\vert\\vec U\\vert\\) RechteckDas Vektorfeld ist parallel zu zwei Seiten (A, C) des Rechteck. Entlang einer Seite haben die Vektoren eine konstante Gr\u00f6sse \\(\\int_\\gamma\\vec U \\cdot d\\vec \\gamma=aU_1-aU_5\\)"},{"location":"21HS/GED/Physik/03_Elektromagnetismus.html#flussintegrale","title":"Flussintegrale","text":"<p>Beim Flussintegral wie viel Volumen \\(vdt\\) fliesst durch \\(A\\), wenn es die Geschwindigkeit \\(\\vec U\\) hat. Dies kann als Integral geschrieben werden, in GED wird allerdings nur folgende Spezialf\u00e4lle behandelt.</p> <p></p> <p>\\(U\\) sind in diesen Formel die L\u00e4nge der Pfeile.</p>"},{"location":"21HS/GED/Physik/03_Elektromagnetismus.html#maxwellgleichungen","title":"Maxwellgleichungen","text":""},{"location":"21HS/GED/Physik/03_Elektromagnetismus.html#geschlossene-und-nicht-geschlossene-flachen","title":"Geschlossene und nicht-geschlossene Fl\u00e4chen","text":"<p>Eine geschlossene Fl\u00e4che hat keinen Rand (wie zB. eine Kugel) und es gibt ein klares Innen und Aussen.</p> <p>Eine nicht geschlossene Fl\u00e4che hat einen Rand. </p>"},{"location":"21HS/GED/Physik/03_Elektromagnetismus.html#gausssche-gesetzt","title":"Gauss'sche Gesetzt","text":""},{"location":"21HS/GED/Physik/03_Elektromagnetismus.html#metalle","title":"Metalle","text":""},{"location":"21HS/GED/Physik/03_Elektromagnetismus.html#rechte-hand-regel","title":"Rechte-Hand Regel","text":""},{"location":"21HS/GED/Physik/03_Elektromagnetismus.html#rechte-hand-regel-2","title":"Rechte-Hand Regel 2","text":"<p>Wenn der Daumen in die technische Stromrichtung zeigt, dann zeigen die Finger den Umlaufsinn des \\(\\vec B\\)-Feldes an.</p>"},{"location":"21HS/GED/Physik/03_Elektromagnetismus.html#vektorfelder","title":"Vektorfelder","text":"\\[ \\vec E (x, y, z, t)=\\begin{bmatrix} E_x(x, y, z, t) \\\\ E_y(x, y, z, t) \\\\ E_z(x, y, z, t) \\\\ \\end{bmatrix} \\] <p>Ein Vektor kann ein 2D oder 3D Koordinatensystem sein, in welchem Vektoren in eine Richtung zeigen. Diese Richtung kann zus\u00e4tzlich auch noch von der Zeit abh\u00e4ngig sein.</p>"},{"location":"21HS/GED/Physik/03_Elektromagnetismus.html#magnetfeld","title":"Magnetfeld","text":"<p>\\([\\vec B(\\vec r, t)]=\\frac {Ns}{Cm}=\\frac{\\text{Newton Sekunden}}{\\text{Coulomb Meter}}=\\frac{kg}{s C} = \\text{Tesla}\\)</p> <p>Ein Magnetfeld wird in Teslas angegeben. Dabei ist ein Tesla kg pro Coulomb Sekunde oder Newton Sekunden pro Coulomb Meter.</p> <p>Um zu berechnen, mit vieviel Kraft ein Objekt mit einer Ladung beeinflusst wird, gibt es folgende Formel: \\(\\vec F = q(\\vec v \\times \\vec B)\\)</p>"},{"location":"21HS/GED/Physik/03_Elektromagnetismus.html#elektrofeld","title":"Elektrofeld","text":"<p>\\([\\vec E (\\vec r, t)]=\\frac N C = \\frac V M = \\frac{kg}{ms^3A}\\)</p> <p>Ein Elektrofeld wird Newton pro Coulomb, Volt pro Meter oder Kilogram pro Meter Sekunden\u00b3 Amper angegeben. Die Einheiten bedeuten dasselbe (Coulomb = Amper Sekunde)</p> <p>Wenn ein Leiter positiv geladen ist, wirkt er abstossend zu Elektronen, wenn ein Leiter negative geladen ist, dann wirkt er anziehend. Zu dem sind die Pfeile im senkrecht auf dem Leiter.</p> <p></p> <p>Um das Elektrofeld einer einzuelne Ladung zu berechnen, kann die folgende Formel verwendet werden</p>"},{"location":"21HS/GED/Physik/03_Elektromagnetismus.html#elektrofelder-und-magnetfelder-zusammen","title":"Elektrofelder und Magnetfelder zusammen","text":"<p>Zeitlich ver\u00e4nderliche B-Felder erzeugen zeitlich ver\u00e4nderliche E-Felder, welche wiederum zeitlich ver\u00e4nderliche B-Felder erzeugen. Diesen Effekt f\u00fchrt zu einer Welle, welche sich ausbreitet.</p> <p>Initialisiert kann es z.B. von einer Antenne werden, welche nichts anderses als Str\u00f6me zeitlich ver\u00e4ndert durch einen Draht schickt.</p> <p></p>"},{"location":"21HS/GED/Physik/03_Elektromagnetismus.html#magnete","title":"Magnete","text":"<p>Magnete haben immer einen Nord- und S\u00fcdpol. Wenn man ein Magnet trennt, entstehen zwei neue Magnete, mit jeweils einem Nord- und S\u00fcdpol.  </p> <p>Wie auch bei elektrischen Feldern kann man auch bei magnetischen Feldern Linien zeichnen.</p> <p></p> <p>Magnete wirken eine Kraft auf bewegte Ladung  aus. Auf ruhende Ladung hat es keinen Effekt. Diese Kraft nennt sich Lorentz-Kraft und kann mit folgender Formel berechnet werden: \\(\\vec F_L=q\\cdot(\\vec v \\times \\vec B)\\)</p> <p>Wenn \\(\\vec v\\) senkrecht auf \\(\\vec B\\) steht,und \\(\\vec B\\) konstant ist, kann mit folgender Formel den Zusammenhang von der Geschwindigkeit der Ladung \\(\\vec v\\) mit dem Magnetfeld \\(\\vec B\\) und dem Radius \\(r\\) beschrieben werden: \\(m=\\frac{rq|\\vec B|}{v}\\)</p> <p>Bei Elementarteilchen ist die Ladung entweder \\(0\\), \\(e\\) oder \\(-e\\).</p>"},{"location":"21HS/GED/Physik/03_Elektromagnetismus.html#intensitat","title":"Intensit\u00e4t","text":"<p>Die Intensit\u00e4t einer ebenen Welle kann mit der folgenden Formeln berechnet werden: $$ I_{em}=\\frac{E_0B_0}{2 \\mu _0}=\\frac{E^2_0}{2c\\mu_0}=\\frac{cB^2_0}{2\\mu_0}\\ $$ Dabei ist \\(\\mu_0\\) die magnetische Feldkonstante \\(1.257\\cdot10^{-6}=4\\pi\\cdot 10^{-7}\\)</p>"},{"location":"21HS/GED/Physik/03_Elektromagnetismus.html#strahlendruck","title":"Strahlendruck","text":"<p> $$ p_s=\\frac{I_{em}}c=\\frac{E_0B_0}{2c\\mu_0}=\\frac{E^2}{2c^2\\mu_0}=\\frac{B^2_0}{2\\mu_0} $$</p>"},{"location":"21HS/GED/Physik/04_Thermische_Strahlung.html","title":"Termische Strahlung","text":"<p>Wichtig: Alle Temperaturen sind in Kelvin.</p> <p>Um von Celsius zu Kelvin zu konvertieren: \\(T_{kelvin}=T_{celsius}+273.15\\)</p>"},{"location":"21HS/GED/Physik/04_Thermische_Strahlung.html#formeln","title":"Formeln","text":"Formel Erkl\u00e4rung \\(E\\)"},{"location":"21HS/GED/Physik/04_Thermische_Strahlung.html#sichtbares-licht","title":"Sichtbares Licht","text":"<p>Sichtbares Licht:</p>"},{"location":"21HS/GED/Physik/04_Thermische_Strahlung.html#lichtbrechung","title":"Lichtbrechung","text":"<p> $$ \\frac{\\sin(\\alpha)}{\\sin(\\beta)}=\\frac {c_1} {c_2}=\\frac{n_2}{n_1} $$ Dabei stellt \\(c\\) die Lichtgeschwindigkeit im jeweiligen Material dar und \\(n\\) der Brechungsindex.</p>"},{"location":"21HS/GED/Physik/04_Thermische_Strahlung.html#totalreflexion","title":"Totalreflexion","text":"<p>Wenn ein Lichtstrahl genug Flach auf die \"Bruchkanta\" (z.B. die Wasseroberfl\u00e4che). In diesemfall wird alles zur\u00fcck reflektiert. F\u00fcr die Formel heisst das, dass \\(\\alpha\\ge 90\u00b0\\) oder \\(\\beta \\ge 90\u00b0\\) </p> <p></p>"},{"location":"21HS/GED/Physik/04_Thermische_Strahlung.html#photonen","title":"Photonen","text":"<p>Jedem Photon wird eine Wellenl\u00e4nge, bzw eine Frequenz zu geordnet: \\(E=h\\nu\\) , dabei ist die Planck'sche Konstante \\(h=6.626\\cdot 10^{-34} [Js]\\) und \\(E\\) die Energie des Photons.</p>"},{"location":"21HS/GED/Physik/04_Thermische_Strahlung.html#elektromagnitische-strahlung","title":"Elektromagnitische Strahlung","text":"<p>Eine Elektromagnetische Strahlung besteht aus einer Welle mit einer Wellenl\u00e4nge \\(\\lambda\\) und einer Frequenz \\(\\nu\\).</p> <p>Die Formel \\(c=\\lambda\\cdot \\nu\\) zeigt den Zusammenhang zwischen \\(\\lambda\\) und \\(\\nu\\). \\(c\\) ist dabei die Lichtgeschwindigkeit (\\(c=3\\cdot10^8 m/s\\))</p> <p>Die Energie einer Strahlung kann mit \\(E=h\\nu\\) errechnet werden. \\(h\\) ist dabei die Planck'sche Konstante (\\(h=6.626\\cdot10^b{-34}\\))</p> <p></p> <p>Der Absorptionskoeffizent beschreibt, wie viel der Frequenzen ein K\u00f6rper absorbiert. <code>1</code> heisst, dass alles absorbiert wird, <code>0</code>, dass nichts absorbiert wird. </p> <p>Der Gegenpol, der Reflexionskoeffizent, beschreibt, wie viel der Frequenzen reflektiert werden und kann mit der folgenden Formel umgerechnet werden: \\(\\rho=1-\\alpha\\)</p> <p>Oft sind diese Koeffizenten abh\u00e4hngig von der Frequenz (also \\(\\alpha(\\nu)\\) und \\(\\rho(\\nu)\\)). Ein blaues T-Shirt w\u00fcrde die \"blauen Frequenzen\" reflektieren und die anderen absorbieren.</p> <p></p> <p>Bei einem schwarzen Strahler kann bewiessen werden, dass es keinen Unterschied gibt, ob die Strahlung vom Material 1 ins Material 2 oder umgekehrt geht.</p> \\[ \\alpha_{1\\rightarrow 2}=\\alpha_{2\\rightarrow 1}\\\\ \\sigma_{1\\rightarrow 2}=\\sigma_{2\\rightarrow 1} \\]"},{"location":"21HS/GED/Physik/04_Thermische_Strahlung.html#emission","title":"Emission","text":"<p>Wenn eine Strahle von einem \"d\u00fcnnem\" Material, wie Luft, aufgenommen wird, wird von Emission von Strahlung gesprochen und anstatt dem Absorptionskoeffizent, wird der Emissionskoeffizenten \\(\\varepsilon\\) verwendet (es gilt also: \\(\\alpha_{2\\rightarrow1}=\\varepsilon_{2\\rightarrow 1}\\))</p>"},{"location":"21HS/GED/Physik/04_Thermische_Strahlung.html#schwarzer-strahler","title":"Schwarzer Strahler","text":"<p>Ein K\u00f6rper mit dem Reflexionskoeffizent \\(\\rho=0\\) und Absorptionskoeffizenten von \\(\\alpha=1\\) wird <code>schwarzer Strahler</code> genannt. Ein schwarzer Block kann als Schwarzerstrahler angen\u00e4hert werden (er reflektiert trotzdem noch ein wenig Licht), aber auch die Sonne, da diese keine Frequenzen und somit auch Licht reflektiert.</p>"},{"location":"21HS/GED/Physik/04_Thermische_Strahlung.html#grauer-strahler","title":"Grauer Strahler","text":"<p>Ein grauer Strahler ist ein K\u00f6rper,  welcher in gewissen Wellenbereichen nicht so stark strahlen, wie ein schwarzer Strahler. Dass heisst, dass der Emmisionskoeffizent \\(\\varepsilon\\) nicht umbedingt <code>1</code> muss sein.</p>"},{"location":"21HS/GED/Physik/04_Thermische_Strahlung.html#wiensches-verschiebungsgesetzt","title":"Wien'sches Verschiebungsgesetzt","text":"<p>Mit \\(\\lambda_{max}=\\frac b T\\) kann man die Temperatur in Kelvin zu der maximalen Wellenl\u00e4nge umrechnen.</p> <p>Mit dieser Formel kann man auch die Lichtfarbe, welche in Kelvin angegeben wird, erkl\u00e4ren.</p> <p></p>"},{"location":"21HS/GED/Physik/04_Thermische_Strahlung.html#stefan-boltzmann-gesetzt-gesammtleistung","title":"Stefan-Boltzmann Gesetzt (Gesammtleistung)","text":"<p>Um die Gesamtleistung eines Strahlendenk\u00f6rpers zu berechnen kann man die folgende Formel ben\u00fctzten: \\(P_{rad}=\\sigma AT^4\\) Dabei ist \\(\\sigma=5.67\\cdot10^{-8} [Wm^{-2}K^{-4}]\\) , \\(A\\) die Oberfl\u00e4che des K\u00f6rpers und \\(T\\) die Temperatur des K\u00f6rpers.</p>"},{"location":"21HS/GED/Physik/04_Thermische_Strahlung.html#energetische-bilanz-eines-strahlers","title":"Energetische Bilanz eines Strahlers","text":"<p>Die Energiebilanz sagt aus, ob Energie vom K\u00f6rper aufgenommen wird und er daher w\u00e4rmer wird oder ob mehr Energie abgegeben wird und er daher k\u00e4lter wird. Dies kann mit der folgenden Formel berechnet werden:  $$ I=-\\frac{dE}{dt}=\\sigma\\varepsilon A(T^4-T_{env}^4) $$ Dabei ist \\(\\sigma=5.67\\cdot10^{-8}\\), \\(\\varepsilon\\) den Emmisionskoeffizenten, \\(A\\) die Oberfl\u00e4che des K\u00f6rpers, \\(T\\) die Temperator des K\u00f6rpers und \\(T_{env}\\) die Umgebungstemperatur.</p> <p>Bei einem grauen Strahler kann \\(\\varepsilon \\neq1\\) sein.</p> <p>Wie man an der Formeln mit den Temperaturen erkennen kann, wird die Temperatur hoch 4 gerechnet. Dies f\u00fchrt bei einer 16-facher vergr\u00f6sserung, wenn die Temperatur verdoppelt wird.</p> <p>Ein \u00e4hliches Ph\u00e4nomen gibt es, wenn die L\u00e4nge eines K\u00f6rpers veroppelt werden, wird die Fl\u00e4che vervierfacht und das Volumen verachtfacht.</p>"},{"location":"21HS/GED/Physik/04_Thermische_Strahlung.html#sonneneinstrahlung","title":"Sonneneinstrahlung","text":"<p>Um zu berechnen, wie viel Energie die Sonne auf die Erde strahlt, kann folgende Formel gebraucht werden: $$ I=\\sin(\\beta)Aj $$ Dabei ist \\(\\beta\\) den Einstrahls-Winkel der Sonne, \\(A\\) die Fl\u00e4che, wo f\u00fcr man die Energie \\(I\\) berechnen m\u00f6chte und \\(j\\) der Faktor der Sonneneinstrahlung.</p> <p></p>"},{"location":"21HS/GED/Physik/04_Thermische_Strahlung.html#warmeleitung","title":"W\u00e4rmeleitung","text":"\\[ I=-Ah_{X,Y}(T_X-T_Y) \\] <p>Mit dieser Formel kann der W\u00e4rmestrom (Energie pro Zeit) berechnet werden, welcher von einem Objekt \\(X\\) mit der Temperatur \\(T_X\\) zu einem Objekt \\(Y\\) mit der Temperatur \\(T_Y\\) fliesst. \\(A\\) ist dabei die Ber\u00fchrungsfl\u00e4che der zwei Objekte und \\(h_{X,Y}\\) ist der W\u00e4rme\u00fcbertragunskoeffizent.</p>"},{"location":"21HS/GED/Physik/05_Signale.html","title":"Signale","text":""},{"location":"21HS/GED/Physik/05_Signale.html#signalarten","title":"Signalarten","text":"Name Bild Sinussignal Rechtecksignal S\u00e4gezahnsignal Dreieckssignal <p>Eine Welle wird haupts\u00e4chlich durch ihre Amplitude \\(A\\), Periode \\(T\\), Frequenz \\(\\nu\\) und Phasenverschiebung \\(\\varphi\\) definiert. Mit \\(T=\\frac 1 \\nu\\) kann man von der Frequenz \\(\\nu\\) zur Periode \\(T\\) umwandeln.</p> <p></p> <p>Ein Sinussignal kann in ein Cosinussignal und umgekehrt folgendermassen umgewandelt werden: $$ sin(a-\\frac \\pi 2)=cos(a)\\ cos(a+\\frac \\pi 2)=sin(a) $$</p>"},{"location":"21HS/GED/Physik/05_Signale.html#fourierzerlegung","title":"Fourierzerlegung","text":"<p>Man kann jede Funktion in eine Summe von Cosinusen oder Sinusen zerlegen</p>"},{"location":"21HS/GED/Physik/05_Signale.html#tone-und-klangfarbe","title":"T\u00f6ne und Klangfarbe","text":"<p>Neben eines Grundtones produziert ein Instrument auch noch Obert\u00f6ne. Als Daumenregeln: Je mehr Obert\u00f6ne, desto sch\u00e4rfer t\u00f6nt ein Instrument.</p> <p></p> <p></p>"},{"location":"21HS/GED/Physik/05_Signale.html#nyquist-shannon-theorem","title":"Nyquist - Shannon Theorem","text":"<p>Es m\u00fcssen doppelt so viele Messpunkte existieren, wie die maximale Frequenz: \\(f_{measure}&gt;2\\cdot f_{max}\\). Wenn dies nicht gegeben ist, tritt Aliasing auf und es werden falsche Frequenzen gespeichert.</p> <p>F\u00fcr die tiefste Frequenz gilt, dass das Intervall \\(T\\) zwischen den Messpunkten : \\(T &gt; \\frac 1 {f_{min}}\\)</p>"},{"location":"21HS/GED/Physik/05_Signale.html#blip","title":"Blip","text":"<p>Ein Blip ist ein kurzes Signal. Dabei gilt, je k\u00fcrzer der Blip, desto mehr Frequenzen gibt es um die Hauptfrequenz \\(\\nu_0\\)</p> <p></p> <p>Ein zweites Prinzip, das \u00e4hlich funktioniert: Je steiler eine Flanke eines Signales, desto mehr Frequenzen werden ben\u00f6tigt, um die Flanke darzustellen.</p>"},{"location":"21HS/GED/Physik/05_Signale.html#schnelle-orgeln","title":"Schnelle Orgeln","text":"<p>Damit ein Ton als harmonisch empfunden wird, muss eine Frequenz domonieren. Bei einem Blip ist dies allerdings nicht umbedingt gegeben. Ebenfalls gilt, je h\u00f6her ein Ton, desto k\u00fcrzer kann er sein, dass trotzdem noch eine Frequenz dominiert und der Ton harmonisch klingt. </p> <p>Aus diesem Grund kann eine Picolo schnell spielen und eine tiefe Orgel nicht.</p> <p></p> <p>Mathematisch kann diese Relation folgendermassen ausgedr\u00fcckt werden:  $$ \\frac{\\Delta f\\cdot \\Delta t}{2}\\sim 1 $$</p>"},{"location":"21HS/GED/Physik/05_Signale.html#signal-to-noise-ratio","title":"Signal-to-Noise Ratio","text":"<p>\\(A_{noise}=\\text{Die durchschnittliche Noise Amplitude}\\) $$ SNR=\\frac{P_{signal}} {P_{noise}}=\\frac{I_{signal}} {I_{noise}}=\\frac{A^2_{signal}}{A^2_{noise}} $$</p> <p>Dabei bezeichnet \\(P\\) die Leistung, \\(I\\) die Intensit\u00e4t und \\(A\\) die Amplitude.</p> <p></p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html","title":"All ged summaries","text":"<ul> <li>Formeln<ul> <li>Elektronik</li> <li>Themische Strahlungen</li> <li>Noch zu lernen</li> </ul> </li> <li>Ch\u00fcgeli F\u00fcsik<ul> <li>Kraft</li> <li>Beschleunigung und co.</li> <li>Energie</li> </ul> </li> <li>Elektrotechnik<ul> <li>Strom, Spannung und Leistung</li> <li>Schaltung<ul> <li>Knotenregel</li> <li>Maschenregel</li> <li>Batterien</li> <li>Wiederstand</li> <li>Kondensator</li> <li>Spulen</li> <li>Unged\u00e4mpfte Schwingkreise</li> <li>Ged\u00e4mpfte Schwingungskreise</li> <li>Low-Pass und High-Pass-Filter</li> </ul> </li> <li>Draht</li> <li>Karnaugh-Veitsch Diagramme</li> <li>Transformer</li> <li>Stromnetz</li> <li>Wechsel- vs. Gleichstrom</li> <li>Drehstrom</li> <li>Gefahr durch Strom</li> </ul> </li> <li>Elektromagnetismus<ul> <li>Formeln</li> <li>Linienintegrale<ul> <li>Spezialf\u00e4lle</li> </ul> </li> <li>Flussintegrale</li> <li>Maxwellgleichungen<ul> <li>Geschlossene und nicht-geschlossene Fl\u00e4chen</li> <li>Gauss'sche Gesetzt<ul> <li>Metalle</li> </ul> </li> </ul> </li> <li>Rechte-Hand Regel</li> <li>Rechte-Hand Regel 2</li> <li>Vektorfelder</li> <li>Magnetfeld</li> <li>Elektrofeld</li> <li>Elektrofelder und Magnetfelder zusammen</li> <li>Magnete</li> <li>Intensit\u00e4t</li> <li>Strahlendruck</li> </ul> </li> <li>Termische Strahlung<ul> <li>Formeln</li> <li>Sichtbares Licht</li> <li>Lichtbrechung<ul> <li>Totalreflexion</li> </ul> </li> <li>Photonen</li> <li>Elektromagnitische Strahlung<ul> <li>Emission</li> <li>Schwarzer Strahler</li> <li>Grauer Strahler</li> </ul> </li> <li>Wien'sches Verschiebungsgesetzt</li> <li>Stefan-Boltzmann Gesetzt (Gesammtleistung)<ul> <li>Energetische Bilanz eines Strahlers</li> <li>Sonneneinstrahlung</li> <li>W\u00e4rmeleitung</li> </ul> </li> </ul> </li> <li>Signale<ul> <li>Signalarten</li> <li>Fourierzerlegung</li> <li>T\u00f6ne und Klangfarbe</li> <li>Nyquist - Shannon Theorem</li> <li>Blip<ul> <li>Schnelle Orgeln</li> </ul> </li> <li>Signal-to-Noise Ratio</li> </ul> </li> </ul>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#formeln","title":"Formeln","text":"<p>In dieser Datei werden alle Formeln und Konstanten zusammen gefasst.</p> Prefix Exponent peta \\(10^{15}\\) tera \\(10^{12}\\) giga \\(10^9\\) mega \\(10^6\\) kilo \\(10^3\\) hecto \\(10^2\\) deca \\(10^1\\) - \\(10^0\\) dezi \\(10^{-1}\\) cento \\(10^{-2}\\) milli \\(10^{-3}\\) micro \\(10^{-6}\\) nano \\(10^{-9}\\) pico \\(10^{-12}\\) femto \\(10^{-15}\\)"},{"location":"21HS/GED/Physik/all-ged-summaries.html#elektronik","title":"Elektronik","text":"Thema Formeln Erkl\u00e4rung \\(I [A]\\) Strom \\(U [V]\\) Spannung Wiederst\u00e4nde \\(U=R\\cdot I\\) Formel f\u00fcr Ohmnische Wiederst\u00e4nde Wiederst\u00e4nde \\(R_{12}=\\frac 1 {\\frac 1 {R_1} + \\frac 1 {R_2}}\\) Formel zum zwei parallele Wiederst\u00e4nde zusammen zu fassen Kondensator \\(CU_c=Q\\) Der Zusammenhang zwischen der Spannung \\(U\\) und der Ladung \\(Q\\) Kondensator \\(Q(t)=CU_0(1-e^{-\\frac t{RC}})\\) Wie sich die Ladung \\(Q\\) beim Laden Kondensator \\(U_C(t)=\\frac{Q(t)}{C}=U_0(1-e^{-\\frac t{RC}})\\) Wie sich die Spannung \\(U\\) beim Laden verhaltet Kondensator \\(I(t)=\\frac{U_0}{R}e^{-\\frac t {RC}}\\) Wie sich der Strom \\(I\\) beim Laden verhaltet Kondensator \\(\\tau=R\\cdot C\\) Der Kondensator f\u00e4llt/steigt auf ca \\(\\frac 1 e\\approx0.37\\) auf/ab in der Zeit \\(\\tau\\)"},{"location":"21HS/GED/Physik/all-ged-summaries.html#themische-strahlungen","title":"Themische Strahlungen","text":"Konstante Erkl\u00e4rung \\(c=3\\cdot 10^8m/s\\) Lichtgeschwindigkeit im Vakum \\(h=6.626\\cdot10^{-34} Js\\) Planck'sche Konstante Formel Erkl\u00e4rung \\(c=\\lambda \\cdot\\nu\\) Dies ist der Zusammenhang zwischen der Wellenl\u00e4nge \\(\\lambda\\)\u00a0und der Frequenz \\(\\nu\\)\u00a0. \\(c\\)\u00a0ist die Lichtgeschwindigkeit \\(E=h\\nu\\) Die Energie einer Strahlung mit der Frequenz \\(\\nu\\). \\(h\\)\u00a0ist die Plank'sche Konstante \\(\\rho(\\nu)=1-\\alpha(\\nu)\\) Umrechnungs Formel zwischen Reflektionskoeffizenten (\\(\\rho\\)) und Absorptionskoeffizenten (\\(\\alpha\\))"},{"location":"21HS/GED/Physik/all-ged-summaries.html#noch-zu-lernen","title":"Noch zu lernen","text":"<ul> <li>B-Felder induziert E-Felder</li> <li>In welche Richtung positive E-Felder anziehen oder abstossen</li> </ul>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#chugeli-fusik","title":"Ch\u00fcgeli F\u00fcsik","text":""},{"location":"21HS/GED/Physik/all-ged-summaries.html#kraft","title":"Kraft","text":"<p>\\(\\vec F = m \\cdot \\vec a\\)</p> <p>Diese Formel nimmt einiges an:</p> <ul> <li>Bewegung in einer Dimension (keine Vektoren)</li> <li>Konstante Beschleunigung (a = const.)</li> <li>Start bei \\(s(0)=0\\)</li> <li>Anfangsgeschwindigkeit bei </li> </ul>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#beschleunigung-und-co","title":"Beschleunigung und co.","text":"<p>Hier sind einige g\u00e4ngige Formeln aufgelistet, welche hilfreich bei Beschleunigung sind. In der obersten Reihe steht, was die Formel ergeben soll. In der ersten Spalte, was sich nicht \u00e4ndert und somit nicht in der Formel erw\u00e4hnt wird.</p> t s v a t - \\(s=\\frac{v^2}{2a}\\) \\(v=\\sqrt{2as}\\) \\(a=\\frac{v^2}{2s}\\) s \\(t=\\frac{v}{a}\\) - \\(v=at\\) \\(a=\\frac{v}{t}\\) v \\(t=\\sqrt{\\frac{2s}{a}}\\) \\(s=\\frac{at^2}{2}\\) - \\(a=\\frac{2s}{t^2}\\) a \\(t=\\frac{2s}{v}\\) \\(s=\\frac{vt}{2}\\) \\(v=\\frac{2s}{t}\\) -"},{"location":"21HS/GED/Physik/all-ged-summaries.html#energie","title":"Energie","text":"<p>Energie ist \\(Kraft \\cdot Strecke\\). Es gilt also die Formel \\(E=F\\cdot s [J]\\). Die Masseinheit \\(J\\) kann auch als \\(\\frac{kgm^2}{s^2}\\) </p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#elektrotechnik","title":"Elektrotechnik","text":""},{"location":"21HS/GED/Physik/all-ged-summaries.html#strom-spannung-und-leistung","title":"Strom, Spannung und Leistung","text":"<p>Ampere ist die Einheit des Stromes \\(I\\) und ist Coulomb pro Sekunde \\([Cs^{-1}]\\). </p> <p>Die H\u00f6he zwischen zwei Energiepotentialen nennt sich die Spannung \\(U\\) (\\(U(\\vec r_A,\\vec r_B)=\\varphi(\\vec r_A)-\\varphi(\\vec r_B)\\)). </p> <p>Spannung kann aber auch \u00fcber Arbeit definiert werden. Die Spannung zwischen zwei Punkten \\(A\\) und \\(B\\) ist die Energie pro Ladung, welche frei wird, wenn die Ladung von \\(A\\) nach \\(B\\) bewegt wird: \\(U=\\int^{\\vec r_B}_{\\vec r_A}\\vec E d\\vec r\\).  Die kinetische Energie, welche eine Ladung \\(q\\) gewinnt, wenn sie eine Spannung \\(U\\) \"herunterf\u00e4llt\" betr\u00e4gt: \\(\\Delta E_{kin}=\\int^{\\vec r_B}_{\\vec r_A}\\vec q\\cdot E d\\vec r=q\\cdot U\\)</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#schaltung","title":"Schaltung","text":""},{"location":"21HS/GED/Physik/all-ged-summaries.html#knotenregel","title":"Knotenregel","text":"<p>Die Knotenregel besagt, dass was in einen Knoten hinein geht, muss auch wieder aus dem Knoten hinaus.</p> <p>Oder \\(I_1=I_2+I_3\\) bzw. \\(I_6=i_5+I_4\\)</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#maschenregel","title":"Maschenregel","text":"<p>Die Maschenregel besagt, dass alle Spannungen in einer Masche zusammen \\(0\\) ergeben m\u00fcssen. Man rechnet <code>plus</code> wenn es in die Referenzrichtung eines Bauteils geht und <code>minus</code>, wenn es gegen die Referenzrichtung geht.</p> <p>Ebenfalls wichtig zu erw\u00e4hnt ist, dass eine Batterie in die andere Richtung zeigt, als die anderen Bauteile (Dies ist einwenig komisch im Beispiel oben). </p> <p>In der gr\u00fcnen Maschen sieht man, wie dies aussehen kann, f\u00fcr eine Masche, welche nicht \u00fcber die Baterie geht: \\(U_4-U_5=0\\)</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#batterien","title":"Batterien","text":"<p>Reale Batterien haben einen Innenwiederstand, welcher in Serie mit der Batterie geschalten ist. Dass heisst, dass die realte Spanung einer Batterie kleiner als \\(U_0\\) ist, da \\(U_{in}\\) abgezogen werden muss.</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#wiederstand","title":"Wiederstand","text":"<p>Ein Wiederstand folgt dem Ohm'sche Gesetzt. Dass heisst, ein Wiederstand kann mit \\(U=R\\cdot I\\) berechnet werden.</p> <p>Da f\u00fcr die Leistung gillt \\(P=U\\cdot I\\) , kann in diese Formel das Ohm'sche Gesetzt eingesetzt werden, um die Formel \\(P=\\frac {U^2} R=I^2R\\) zu bekommen.</p> <p>Wegen der Knoten und Maschenregeln verhalten sich Wiederst\u00e4nde (wie auch andere Bauteile) anderst, jenach dem, ob sie Parallel oder Serial angeschlossen sind.</p> Name Erkl\u00e4rung Bild Parallel geschaltet In einer Parallelschaltung m\u00fcssen Wiederst\u00e4nde folgendermassen zusammen gefasst werden: \\(R_{12}=\\frac 1 {\\frac 1 {R_1} + \\frac 1 {R_2}}\\) Seriel geschaltet In einer Serielschaltung m\u00fcssen Wiederst\u00e4nde folgendermassen zusamengefasst werden: \\(R_{12}=R_1+R_2\\)"},{"location":"21HS/GED/Physik/all-ged-summaries.html#kondensator","title":"Kondensator","text":"<p>Ein Kondensator (oder Capacitor) kann man sich als Feder vorstellen, welche aus zwei Metallplatten nahe bei einander bestehen. Es wird Strom hinein \"gepumpt\". Dies wird immer schwerer, je voller der Kondensator wird, bis am Ende der Kondensator voll ist. Das zweite wichtige an einem Kondensator ist, dass keine Elektronen durch ihn durch fliessen k\u00f6nnen. Anstelle dessen sammeln sich auf der einen Seite mehr Elektronen an, auf der anderen Seite werden die bereits vorhanden Elektronen abgesaugt. </p> <p></p> formel Erkl\u00e4rung \\(\\frac {dQ}{dt}=I\\) Die Ver\u00e4nderungsrate der Ladung, ist der Strom \\(I\\) \\(CU_c=Q\\) Der Zusammenhang zwischen der Spannung \\(U [V]\\) und der Ladung \\(Q\\) abh\u00e4ngig von der Kapazit\u00e4t \\(C [F]\\) in Farad \\(Q(t)=CU_0(1-e^{-\\frac t{RC}})\\) Wie sich die Ladung \\(Q\\) beim Laden \\(U_C(t)=\\frac{Q(t)}{C}=U_0(1-e^{-\\frac t{RC}})\\) Wie sich die Spannung \\(U\\) beim Laden verhaltet \\(U_C(t)=U_0\\cdot e^{-\\frac t {RC}}\\) Wie sich die Spannung \\(U\\) beim Entladen verhaltet \\(I(t)=\\frac{U_0}{R}e^{-\\frac t {RC}}\\) Wie sich der Strom \\(I\\) beim Laden verhaltet \\(\\tau=R\\cdot C\\) Die Zeitkonstante \\(\\tau\\) . Der Strom des Kondensator f\u00e4llt auf ca \\(\\frac 1 e\\approx0.37\\) ab in der Zeit \\(\\tau\\) oder steigt auf \\(1-\\frac 1 e\\approx0.63\\) in \\(\\tau\\) an, wenn der Kondensator geladen wird"},{"location":"21HS/GED/Physik/all-ged-summaries.html#spulen","title":"Spulen","text":"<p>Wenn durch ein Draht Strom fliesst, entsteht ein Magnetfeld. Dies ist ebenfalls der Fall bei einer Spule. Wenn der Strom hochgefahren wird, dann wird ein Magnetfeld aufgebaut. Dies ben\u00f6tigt aber Energie, was wiederum einen Wiederstand erzeugt.</p> <p>Wenn der Strom abgebaut wird, wir die Energie des Magnetfeldes wieder zur\u00fcck in die Spannung gespiessen und \u00fcber der Spule entsteht eine Spannung, welche den Strom antreibt.</p> <p>Die Richtung des Magnetfeldes findet man heraus, in dem man die Rechtehand nimmt und mit dem Daumen in die Ricthung des <code>-</code> zeigt, bzw. die Stromrichtung auf dem Schaltungsplan (nicht die physikalische Stromrichtung, die ist in die andere Richtung). </p> <p></p> Formel Erkl\u00e4rung \\(U_L=L\\frac{dI}{dt}\\) Die Ver\u00e4nderungsrate von dem Strom \\(I\\) mit der Konstante \\(L [Henry]\\) multipliziert, ergibt die Spannung"},{"location":"21HS/GED/Physik/all-ged-summaries.html#ungedampfte-schwingkreise","title":"Unged\u00e4mpfte Schwingkreise","text":"<p>In einem Schwingungskreis, schwingen die Elektronen zwischen den zwei Platten des Kondensators hin und her. Dies kann man in die folgende Schritte unterteilen:</p> <ol> <li>Der Kondensator ist geladen und es herrscht eine Spanung \\(U_0\\) \u00fcber dem Kondensator. Der Schalter ist aber noch offen.</li> <li>Der Schalter \\(s_1\\) wurde geschlossen und der Strom fliesst. Wegen dem Maschensatz muss \\(U_C=U_L\\)  sein. Da die Spannung \\(U_C\\)w\u00e4chst, muss auch der Strom \\(I\\) wachsen und somit ein Magnetfeld \u00fcber L entstehen.</li> <li>Der Strom \\(I\\) und somit auch das Magnetfeld \\(B\\) sind maximal. Irgendwann wird der Kondensator leer sein (Auf beiden Seiten der Platte sind gleich viele Elektronen) und \\(U_L\\) und \\(UC\\) sind 0. Somit gilt auch \\(I=0\\). </li> <li>Da nun der Strom in der Spule freigesetzt wird, l\u00e4dt sich der Kondensator wieder auf (allerdings mit einem anderen Vorzeichen) und so entsteht wieder eine Spannung \\(U_C\\) \u00fcber dem Kondensator.</li> <li>So bald die Spule \"leer\" ist, wechselt die Stromrichtung wieder</li> <li>Der Zyklus wiederholt sich nun wiede</li> </ol> Formel Erkl\u00e4rung \\(Q(t)=CU_0\\cdot \\cos(\\frac 1 {\\sqrt {LC}}\\cdot t)\\) Die Ladung \\(Q\\) eines Schwinungskreises \\(I(t)=-\\sqrt {\\frac C L}\\cdot U_0\\cdot \\sin(\\frac 1 {\\sqrt {LC}}\\cdot t)\\) Der Strom \\(I\\) eines Schwinungskreises \\(U_L(t)=-\\frac 1 {\\sqrt{LC}}\\cdot U_0\\cdot \\cos(\\frac 1 {\\sqrt{LC}} \\cdot t)\\) Die Spannun \\(U_L\\) eines Schwinungskreises \\(f=\\frac 1 {2\\pi\\sqrt{LC}}\\) Die Frequenz \\(f\\), mit welcher der Schwingunskreis schwingt \\(T=2\\pi\\sqrt{LC}\\) Die Periodendauer \\(T\\), welche eine Schwinung des Schwingungskreis ben\u00f6tigt"},{"location":"21HS/GED/Physik/all-ged-summaries.html#gedampfte-schwingungskreise","title":"Ged\u00e4mpfte Schwingungskreise","text":"<p>Der Strom im Schwinungskreis wird schw\u00e4cher, wenn \\(R &lt; 2\\sqrt {\\frac L C}\\)  (oder wenn \\(\\frac{R^2}{4L^2}&gt;\\frac 1 {LC}\\) ist) Wenn dies gegeben ist, dann ist es ein ged\u00e4mpfter Schwingungskreis.</p> Formel Erkl\u00e4rung \\(Q(t)=Q_0e^{-\\frac t \\tau}\\cos(\\omega_dt-\\phi_0)\\) Die Ladung des Schwinungskreis1 \\(f=\\frac 1 {2\\pi}\\sqrt{\\frac 1 {LC} -\\frac{R^2}{4L^2}}\\) , \\(T=\\frac 1 f\\) Die (Kreis-)frequenz \\(\\omega_d\\) \\(\\tau=\\frac{2L} R\\) Die Zeitkonstante \\(\\tau\\) der D\u00e4mpfung. Der Strom des Kondensator f\u00e4llt/steigt auf ca \\(\\frac 1 e\\approx0.37\\%\\) auf/ab in der Zeit \\(\\tau\\)"},{"location":"21HS/GED/Physik/all-ged-summaries.html#low-pass-und-high-pass-filter","title":"Low-Pass und High-Pass-Filter","text":"<p>Bei einem Low-Pass-Filter werden die tiefen Frequenzen durchgelassen und die Hochen weggefiltert.</p> <p>Bei einem High-Pass-Filter ist es umgekehrt und die hochen Frequenzen werden duch gelassen und die tiefen weggefiltert.</p> <p></p> <p>\u00dcber dem Wiederstand misst man ein Signal, bei welchem die tiefen Frequenzen ged\u00e4mpft wurden und die hochen Frequenzen fast unver\u00e4ndert. Dies w\u00e4re ein High-Pass-Filter.</p> <p>Hingegen \u00fcber dem Kondensator misst werden die hochen Frequenzen ged\u00e4mpft und die tiefen durchgelassen, was ein Low-Pass-Filter ist.</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#draht","title":"Draht","text":"<p>Der Wiederstand in einem Kabel ist ungef\u00e4hr: \\(R=\\rho\\frac L A\\), wobei \\(\\rho\\) den <code>spezifischen Wiederstand</code> mit der Einheit \\([mm^2m^{-1}\\Omega]\\). \\(L\\) ist die L\u00e4nge in \\([m]\\) und \\(A\\) ist die Querschnittsfl\u00e4che in \\([mm^2]\\).</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#karnaugh-veitsch-diagramme","title":"Karnaugh-Veitsch Diagramme","text":"<p>Ein KV-Diagram kann praktisch sein, um eine Wahrheitstabelle mit vier Inputs in eine Schaltung zu verwandeln.</p> <p>Daf\u00fcr wird zuerst die Wahrheitstabelle in das folgende Raster einf\u00fchrt. Dabei ist oben, bzw. auf der linken Seite das erste Bit und auf der unteren/rechten Seite das linke Bit. Das Feld oben rechts stellt also f\u00fcr den Wert aus der Wahrheitstabelle A=1, B=0, C=0, D=0. </p> <p></p> <p>Wenn dies getan ist, versucht man Bl\u00f6cke mit Einsen zu finden. Die Bl\u00f6cke k\u00f6nnen 1, 2, 4, 8 oder 16 lang und/oder breit sein. Falls es egal ist, ob ein Input <code>0</code> oder <code>1</code> ist, kann er so betrachtet werden, dass es sch\u00f6nere Bl\u00f6cke gibt. Ebenfalls wichtig, ein Block darf \u00fcber die Kante hinausgehen.</p> <p></p> <p>Im letzten Schritt wird nun aus den Bl\u00f6cken Und-Schaltungen gebaut. Dabei m\u00fcssen zwei Dinge beachtet werden:</p> <ol> <li>Wenn ein Block \u00fcber den not und \"normalen\" Block geht (z.B. A und not-A), dann muss das And-Gate keine Verbindung zu diesem Input haben, da es in beiden F\u00e4llen true ist.</li> <li>Wenn ein Block nur \u00fcbr ein Block geht (z.B. nur \u00fcber den A oder nur den not-A Block), dann muss das And-Gate mit diesem Input verbunden sein.</li> </ol> <p>Hier sieht man noch das Beispiel f\u00fcr die oberigen Bl\u00f6cke.</p> <p></p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#transformer","title":"Transformer","text":""},{"location":"21HS/GED/Physik/all-ged-summaries.html#stromnetz","title":"Stromnetz","text":"<p>In unserem Stromnetzt werden mehrere Spannungen gen\u00fctzt. Zum einten m\u00f6chte man hohe Spannungen f\u00fcrs Transportieren von Strom ben\u00fctzten, da dies um einiges effizienter ist. Allerdings ist es zu gef\u00e4hrlich Hochspannung direkt im Haus zu gebrauchen. Daher hat man vier Netzebenen, welche mit Transformern gekoppelt sind.</p> <ul> <li>1 Ebene - H\u00f6chstspannungsebene: 380kV, bzw. 220 kV aus dem Kraftwerk oder vom Ausland</li> <li>3 Ebene - Hochspannungsebene: 36kV - 150kV: \u00dcberregionale Verteilungsnetzte</li> <li>5 Ebene - Mittelspannungsebene: 1kV - 36kV: Regionale Verteilungsnetzte</li> <li>7 Ebene - Niederspannungsebene: &lt; 1kV: Lokale Verteilungsnetzte</li> </ul> <p>Die Ebenen 2, 4 und 6 sind die Transformatorenebenen. Auf diesen Ebenen wird der Strom auf die n\u00e4chst tiefere oder h\u00f6here Ebene transformiert.</p> <p></p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#wechsel-vs-gleichstrom","title":"Wechsel- vs. Gleichstrom","text":"<p>Man hat sich in der Vergangenheit auf Wechselstrom geeinigt, weil es relativ einfach ist, Wechselstrom zu transformieren. Heute ist dies aber auch mit Gleichstrom m\u00f6glich. Gleichstrom erzeugt weniger Verl\u00fcste, wenn transportiert auf lange Streckenen, als Wechselstrom, da Wechselstrom nah an der Kabeloberfl\u00e4chse fliest und daher ein st\u00e4rkeres Magnetfeld erzeugt.</p> <p></p> <p>Der \\(U_{Eff}\\) kann mit der folgender Formel berechnet werden: \\(U_{Eff}=\\frac{U_S}{\\sqrt 2}\\) . Dies berechnet den quadratischen Mittelwert einer Wechselspannung.</p> <p>Der Sinus kann mit der folgenden Formel angegebene werden: \\(f(t)=U_{Eff}\\cos(\\omega\\cdot t)=U_{Eff}\\cos(f\\cdot 2\\pi\\cdot t)\\)</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#drehstrom","title":"Drehstrom","text":"<p>(Siehe Script_GED_Lect_3_4.pdf)</p> <p></p> <p></p> <p>Drehstrom ist praktisch f\u00fcr Motoren, da es keine \"Totenp\u00fcnkte\" gibt, an dem ein Magnet stoppen k\u00f6nnte. Zudem sind alle H\u00e4user in der Schweiz an einem Drehstrom angeschlossen.</p> <p></p> <p>Auf den Aussenleiter wird der Strom \"transportiert\" und stehen gegen\u00fcber der Erde unter einer Spannung von 230V. </p> <p>Der Neutralleiter ist der \"Ausgang\" f\u00fcr die Elektronen, welche \u00fcber die Aussenleiter hinein gepumpt werden.</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#gefahr-durch-strom","title":"Gefahr durch Strom","text":"<p>Wie gef\u00e4hrlich Strom ist h\u00e4ngt von der Stromst\u00e4rke und der Dauer ab. </p> <p>Gefahrebereiche:</p> <ol> <li>Wird nicht wahrgenommen, da der Strom zu klein ist</li> <li>Kribbeln, Kr\u00e4mpfte, aber keine bleibenden Sch\u00e4den</li> <li>Stromquelle kann wegen Museklverkrampfung nicht mehr losgelassen werden (bei Gleichstrom)</li> <li>T\u00f6dlich, wegen z.B. Herzkammerflimmern</li> </ol>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#elektromagnetismus","title":"Elektromagnetismus","text":""},{"location":"21HS/GED/Physik/all-ged-summaries.html#formeln_1","title":"Formeln","text":"Formel Erkl\u00e4rung $\\vec F_{12}=\\frac 1 {4\\pi\\varepsilon_0}\\cdot \\frac {Q_1Q_2}{ \\vec r_{12} $\\vec E(\\vec r)=\\frac 1 {4\\pi\\varepsilon_0}\\cdot \\frac Q { \\vec r - \\vec r_Q \\(\\vec F =q\\vec E(\\vec r, t)\\) Die Kraft \\(\\vec F\\), mit welcher das Feld \\(\\vec E\\) die Probeladung \\(q\\) beschleunigt \\(\\vec F_L=q\\cdot(\\vec v\\times\\vec B)\\) Die Kraft, eines Magnetfeldes auf eine Ladung \\(q\\), welche sich mit \\(\\vec v\\) bewegt. $m=\\frac{rq \\vec B <p>Auf dem TI-nspire cx gibt es den Befehl \\(crossP(x, y)\\), um mit den Vektoren \\(\\vec x\\) und \\(\\vec y\\) ein Kreuzprodukt zu rechnen.</p> <p>Das Skalarprodukt ist folgendermassen definiert: \\(\\vec a \\cdot \\vec b=|\\vec a| \\cdot |\\vec b|\\cdot \\cos(\\alpha)\\)  Aus dem kann geschlossen werden, dass wenn \\(\\alpha=90\u00b0\\) , bzw. die Vektoren \\(\\vec a\\) und \\(\\vec b\\) senkrecht aufeinander stehen, dass das Skalarprodukt <code>0</code> is</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#linienintegrale","title":"Linienintegrale","text":"<p>\\(W=\\int_\\gamma\\vec F\\cdot d\\vec \\gamma\\)</p> <p>Arbeit wurde in der BMS als \\(W=F\\cdot s\\) definiert. Nun kann aber \\(F\\) und \\(s\\) auch Vektoren sein. Hier kommt das Linienintegral ins Spiel, denn mit diesem kann man die Arbeit mit Vektoren ausrechnen.</p> <p>Der Vektor \\(\\vec F\\) und \\(\\vec \\gamma\\) m\u00fcssen nicht umbedingt in dieselbe Richtung zeigen. Wenn man z.B. einen Schlitten zieht, hat die Kraft \\(\\vec F\\) ca. eine 45\u00b0 gegen oben, w\u00e4hrend \\(\\vec \\gamma\\) die Strecke des Schlittens darstellt.</p> <p>Spannung kann auch als Linienintegral angesehen werden: \\(U(\\gamma)=\\int_\\gamma\\vec E \\cdot d\\vec \\gamma\\)</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#spezialfalle","title":"Spezialf\u00e4lle","text":"Name Formel Bild KreisDas Vektorfeld liegt \u00fcberall tangential an der Kurve und alle Vektoren haben dieselbe L\u00e4nge. \\(\\int_\\gamma\\vec U\\cdot d\\vec\\gamma =2\\pi r\\vert\\vec U\\vert\\) RechteckDas Vektorfeld ist parallel zu zwei Seiten (A, C) des Rechteck. Entlang einer Seite haben die Vektoren eine konstante Gr\u00f6sse \\(\\int_\\gamma\\vec U \\cdot d\\vec \\gamma=aU_1-aU_5\\)"},{"location":"21HS/GED/Physik/all-ged-summaries.html#flussintegrale","title":"Flussintegrale","text":"<p>Beim Flussintegral wie viel Volumen \\(vdt\\) fliesst durch \\(A\\), wenn es die Geschwindigkeit \\(\\vec U\\) hat. Dies kann als Integral geschrieben werden, in GED wird allerdings nur folgende Spezialf\u00e4lle behandelt.</p> <p></p> <p>\\(U\\) sind in diesen Formel die L\u00e4nge der Pfeile.</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#maxwellgleichungen","title":"Maxwellgleichungen","text":""},{"location":"21HS/GED/Physik/all-ged-summaries.html#geschlossene-und-nicht-geschlossene-flachen","title":"Geschlossene und nicht-geschlossene Fl\u00e4chen","text":"<p>Eine geschlossene Fl\u00e4che hat keinen Rand (wie zB. eine Kugel) und es gibt ein klares Innen und Aussen.</p> <p>Eine nicht geschlossene Fl\u00e4che hat einen Rand. </p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#gausssche-gesetzt","title":"Gauss'sche Gesetzt","text":""},{"location":"21HS/GED/Physik/all-ged-summaries.html#metalle","title":"Metalle","text":""},{"location":"21HS/GED/Physik/all-ged-summaries.html#rechte-hand-regel","title":"Rechte-Hand Regel","text":""},{"location":"21HS/GED/Physik/all-ged-summaries.html#rechte-hand-regel-2","title":"Rechte-Hand Regel 2","text":"<p>Wenn der Daumen in die technische Stromrichtung zeigt, dann zeigen die Finger den Umlaufsinn des \\(\\vec B\\)-Feldes an.</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#vektorfelder","title":"Vektorfelder","text":"\\[ \\vec E (x, y, z, t)=\\begin{bmatrix} E_x(x, y, z, t) \\\\ E_y(x, y, z, t) \\\\ E_z(x, y, z, t) \\\\ \\end{bmatrix} \\] <p>Ein Vektor kann ein 2D oder 3D Koordinatensystem sein, in welchem Vektoren in eine Richtung zeigen. Diese Richtung kann zus\u00e4tzlich auch noch von der Zeit abh\u00e4ngig sein.</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#magnetfeld","title":"Magnetfeld","text":"<p>\\([\\vec B(\\vec r, t)]=\\frac {Ns}{Cm}=\\frac{\\text{Newton Sekunden}}{\\text{Coulomb Meter}}=\\frac{kg}{s C} = \\text{Tesla}\\)</p> <p>Ein Magnetfeld wird in Teslas angegeben. Dabei ist ein Tesla kg pro Coulomb Sekunde oder Newton Sekunden pro Coulomb Meter.</p> <p>Um zu berechnen, mit vieviel Kraft ein Objekt mit einer Ladung beeinflusst wird, gibt es folgende Formel: \\(\\vec F = q(\\vec v \\times \\vec B)\\)</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#elektrofeld","title":"Elektrofeld","text":"<p>\\([\\vec E (\\vec r, t)]=\\frac N C = \\frac V M = \\frac{kg}{ms^3A}\\)</p> <p>Ein Elektrofeld wird Newton pro Coulomb, Volt pro Meter oder Kilogram pro Meter Sekunden\u00b3 Amper angegeben. Die Einheiten bedeuten dasselbe (Coulomb = Amper Sekunde)</p> <p>Wenn ein Leiter positiv geladen ist, wirkt er abstossend zu Elektronen, wenn ein Leiter negative geladen ist, dann wirkt er anziehend. Zu dem sind die Pfeile im senkrecht auf dem Leiter.</p> <p></p> <p>Um das Elektrofeld einer einzuelne Ladung zu berechnen, kann die folgende Formel verwendet werden</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#elektrofelder-und-magnetfelder-zusammen","title":"Elektrofelder und Magnetfelder zusammen","text":"<p>Zeitlich ver\u00e4nderliche B-Felder erzeugen zeitlich ver\u00e4nderliche E-Felder, welche wiederum zeitlich ver\u00e4nderliche B-Felder erzeugen. Diesen Effekt f\u00fchrt zu einer Welle, welche sich ausbreitet.</p> <p>Initialisiert kann es z.B. von einer Antenne werden, welche nichts anderses als Str\u00f6me zeitlich ver\u00e4ndert durch einen Draht schickt.</p> <p></p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#magnete","title":"Magnete","text":"<p>Magnete haben immer einen Nord- und S\u00fcdpol. Wenn man ein Magnet trennt, entstehen zwei neue Magnete, mit jeweils einem Nord- und S\u00fcdpol.  </p> <p>Wie auch bei elektrischen Feldern kann man auch bei magnetischen Feldern Linien zeichnen.</p> <p></p> <p>Magnete wirken eine Kraft auf bewegte Ladung  aus. Auf ruhende Ladung hat es keinen Effekt. Diese Kraft nennt sich Lorentz-Kraft und kann mit folgender Formel berechnet werden: \\(\\vec F_L=q\\cdot(\\vec v \\times \\vec B)\\)</p> <p>Wenn \\(\\vec v\\) senkrecht auf \\(\\vec B\\) steht,und \\(\\vec B\\) konstant ist, kann mit folgender Formel den Zusammenhang von der Geschwindigkeit der Ladung \\(\\vec v\\) mit dem Magnetfeld \\(\\vec B\\) und dem Radius \\(r\\) beschrieben werden: \\(m=\\frac{rq|\\vec B|}{v}\\)</p> <p>Bei Elementarteilchen ist die Ladung entweder \\(0\\), \\(e\\) oder \\(-e\\).</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#intensitat","title":"Intensit\u00e4t","text":"<p>Die Intensit\u00e4t einer ebenen Welle kann mit der folgenden Formeln berechnet werden: $$ I_{em}=\\frac{E_0B_0}{2 \\mu _0}=\\frac{E^2_0}{2c\\mu_0}=\\frac{cB^2_0}{2\\mu_0}\\ $$ Dabei ist \\(\\mu_0\\) die magnetische Feldkonstante \\(1.257\\cdot10^{-6}=4\\pi\\cdot 10^{-7}\\)</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#strahlendruck","title":"Strahlendruck","text":"<p> $$ p_s=\\frac{I_{em}}c=\\frac{E_0B_0}{2c\\mu_0}=\\frac{E^2}{2c^2\\mu_0}=\\frac{B^2_0}{2\\mu_0} $$</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#termische-strahlung","title":"Termische Strahlung","text":"<p>Wichtig: Alle Temperaturen sind in Kelvin.</p> <p>Um von Celsius zu Kelvin zu konvertieren: \\(T_{kelvin}=T_{celsius}+273.15\\)</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#formeln_2","title":"Formeln","text":"Formel Erkl\u00e4rung \\(E\\)"},{"location":"21HS/GED/Physik/all-ged-summaries.html#sichtbares-licht","title":"Sichtbares Licht","text":"<p>Sichtbares Licht:</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#lichtbrechung","title":"Lichtbrechung","text":"<p> $$ \\frac{\\sin(\\alpha)}{\\sin(\\beta)}=\\frac {c_1} {c_2}=\\frac{n_2}{n_1} $$ Dabei stellt \\(c\\) die Lichtgeschwindigkeit im jeweiligen Material dar und \\(n\\) der Brechungsindex.</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#totalreflexion","title":"Totalreflexion","text":"<p>Wenn ein Lichtstrahl genug Flach auf die \"Bruchkanta\" (z.B. die Wasseroberfl\u00e4che). In diesemfall wird alles zur\u00fcck reflektiert. F\u00fcr die Formel heisst das, dass \\(\\alpha\\ge 90\u00b0\\) oder \\(\\beta \\ge 90\u00b0\\) </p> <p></p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#photonen","title":"Photonen","text":"<p>Jedem Photon wird eine Wellenl\u00e4nge, bzw eine Frequenz zu geordnet: \\(E=h\\nu\\) , dabei ist die Planck'sche Konstante \\(h=6.626\\cdot 10^{-34} [Js]\\) und \\(E\\) die Energie des Photons.</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#elektromagnitische-strahlung","title":"Elektromagnitische Strahlung","text":"<p>Eine Elektromagnetische Strahlung besteht aus einer Welle mit einer Wellenl\u00e4nge \\(\\lambda\\) und einer Frequenz \\(\\nu\\).</p> <p>Die Formel \\(c=\\lambda\\cdot \\nu\\) zeigt den Zusammenhang zwischen \\(\\lambda\\) und \\(\\nu\\). \\(c\\) ist dabei die Lichtgeschwindigkeit (\\(c=3\\cdot10^8 m/s\\))</p> <p>Die Energie einer Strahlung kann mit \\(E=h\\nu\\) errechnet werden. \\(h\\) ist dabei die Planck'sche Konstante (\\(h=6.626\\cdot10^b{-34}\\))</p> <p></p> <p>Der Absorptionskoeffizent beschreibt, wie viel der Frequenzen ein K\u00f6rper absorbiert. <code>1</code> heisst, dass alles absorbiert wird, <code>0</code>, dass nichts absorbiert wird. </p> <p>Der Gegenpol, der Reflexionskoeffizent, beschreibt, wie viel der Frequenzen reflektiert werden und kann mit der folgenden Formel umgerechnet werden: \\(\\rho=1-\\alpha\\)</p> <p>Oft sind diese Koeffizenten abh\u00e4hngig von der Frequenz (also \\(\\alpha(\\nu)\\) und \\(\\rho(\\nu)\\)). Ein blaues T-Shirt w\u00fcrde die \"blauen Frequenzen\" reflektieren und die anderen absorbieren.</p> <p></p> <p>Bei einem schwarzen Strahler kann bewiessen werden, dass es keinen Unterschied gibt, ob die Strahlung vom Material 1 ins Material 2 oder umgekehrt geht.</p> \\[ \\alpha_{1\\rightarrow 2}=\\alpha_{2\\rightarrow 1}\\\\ \\sigma_{1\\rightarrow 2}=\\sigma_{2\\rightarrow 1} \\]"},{"location":"21HS/GED/Physik/all-ged-summaries.html#emission","title":"Emission","text":"<p>Wenn eine Strahle von einem \"d\u00fcnnem\" Material, wie Luft, aufgenommen wird, wird von Emission von Strahlung gesprochen und anstatt dem Absorptionskoeffizent, wird der Emissionskoeffizenten \\(\\varepsilon\\) verwendet (es gilt also: \\(\\alpha_{2\\rightarrow1}=\\varepsilon_{2\\rightarrow 1}\\))</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#schwarzer-strahler","title":"Schwarzer Strahler","text":"<p>Ein K\u00f6rper mit dem Reflexionskoeffizent \\(\\rho=0\\) und Absorptionskoeffizenten von \\(\\alpha=1\\) wird <code>schwarzer Strahler</code> genannt. Ein schwarzer Block kann als Schwarzerstrahler angen\u00e4hert werden (er reflektiert trotzdem noch ein wenig Licht), aber auch die Sonne, da diese keine Frequenzen und somit auch Licht reflektiert.</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#grauer-strahler","title":"Grauer Strahler","text":"<p>Ein grauer Strahler ist ein K\u00f6rper,  welcher in gewissen Wellenbereichen nicht so stark strahlen, wie ein schwarzer Strahler. Dass heisst, dass der Emmisionskoeffizent \\(\\varepsilon\\) nicht umbedingt <code>1</code> muss sein.</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#wiensches-verschiebungsgesetzt","title":"Wien'sches Verschiebungsgesetzt","text":"<p>Mit \\(\\lambda_{max}=\\frac b T\\) kann man die Temperatur in Kelvin zu der maximalen Wellenl\u00e4nge umrechnen.</p> <p>Mit dieser Formel kann man auch die Lichtfarbe, welche in Kelvin angegeben wird, erkl\u00e4ren.</p> <p></p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#stefan-boltzmann-gesetzt-gesammtleistung","title":"Stefan-Boltzmann Gesetzt (Gesammtleistung)","text":"<p>Um die Gesamtleistung eines Strahlendenk\u00f6rpers zu berechnen kann man die folgende Formel ben\u00fctzten: \\(P_{rad}=\\sigma AT^4\\) Dabei ist \\(\\sigma=5.67\\cdot10^{-8} [Wm^{-2}K^{-4}]\\) , \\(A\\) die Oberfl\u00e4che des K\u00f6rpers und \\(T\\) die Temperatur des K\u00f6rpers.</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#energetische-bilanz-eines-strahlers","title":"Energetische Bilanz eines Strahlers","text":"<p>Die Energiebilanz sagt aus, ob Energie vom K\u00f6rper aufgenommen wird und er daher w\u00e4rmer wird oder ob mehr Energie abgegeben wird und er daher k\u00e4lter wird. Dies kann mit der folgenden Formel berechnet werden:  $$ I=-\\frac{dE}{dt}=\\sigma\\varepsilon A(T^4-T_{env}^4) $$ Dabei ist \\(\\sigma=5.67\\cdot10^{-8}\\), \\(\\varepsilon\\) den Emmisionskoeffizenten, \\(A\\) die Oberfl\u00e4che des K\u00f6rpers, \\(T\\) die Temperator des K\u00f6rpers und \\(T_{env}\\) die Umgebungstemperatur.</p> <p>Bei einem grauen Strahler kann \\(\\varepsilon \\neq1\\) sein.</p> <p>Wie man an der Formeln mit den Temperaturen erkennen kann, wird die Temperatur hoch 4 gerechnet. Dies f\u00fchrt bei einer 16-facher vergr\u00f6sserung, wenn die Temperatur verdoppelt wird.</p> <p>Ein \u00e4hliches Ph\u00e4nomen gibt es, wenn die L\u00e4nge eines K\u00f6rpers veroppelt werden, wird die Fl\u00e4che vervierfacht und das Volumen verachtfacht.</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#sonneneinstrahlung","title":"Sonneneinstrahlung","text":"<p>Um zu berechnen, wie viel Energie die Sonne auf die Erde strahlt, kann folgende Formel gebraucht werden: $$ I=\\sin(\\beta)Aj $$ Dabei ist \\(\\beta\\) den Einstrahls-Winkel der Sonne, \\(A\\) die Fl\u00e4che, wo f\u00fcr man die Energie \\(I\\) berechnen m\u00f6chte und \\(j\\) der Faktor der Sonneneinstrahlung.</p> <p></p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#warmeleitung","title":"W\u00e4rmeleitung","text":"\\[ I=-Ah_{X,Y}(T_X-T_Y) \\] <p>Mit dieser Formel kann der W\u00e4rmestrom (Energie pro Zeit) berechnet werden, welcher von einem Objekt \\(X\\) mit der Temperatur \\(T_X\\) zu einem Objekt \\(Y\\) mit der Temperatur \\(T_Y\\) fliesst. \\(A\\) ist dabei die Ber\u00fchrungsfl\u00e4che der zwei Objekte und \\(h_{X,Y}\\) ist der W\u00e4rme\u00fcbertragunskoeffizent.</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#signale","title":"Signale","text":""},{"location":"21HS/GED/Physik/all-ged-summaries.html#signalarten","title":"Signalarten","text":"Name Bild Sinussignal Rechtecksignal S\u00e4gezahnsignal Dreieckssignal <p>Eine Welle wird haupts\u00e4chlich durch ihre Amplitude \\(A\\), Periode \\(T\\), Frequenz \\(\\nu\\) und Phasenverschiebung \\(\\varphi\\) definiert. Mit \\(T=\\frac 1 \\nu\\) kann man von der Frequenz \\(\\nu\\) zur Periode \\(T\\) umwandeln.</p> <p></p> <p>Ein Sinussignal kann in ein Cosinussignal und umgekehrt folgendermassen umgewandelt werden: $$ sin(a-\\frac \\pi 2)=cos(a)\\ cos(a+\\frac \\pi 2)=sin(a) $$</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#fourierzerlegung","title":"Fourierzerlegung","text":"<p>Man kann jede Funktion in eine Summe von Cosinusen oder Sinusen zerlegen</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#tone-und-klangfarbe","title":"T\u00f6ne und Klangfarbe","text":"<p>Neben eines Grundtones produziert ein Instrument auch noch Obert\u00f6ne. Als Daumenregeln: Je mehr Obert\u00f6ne, desto sch\u00e4rfer t\u00f6nt ein Instrument.</p> <p></p> <p></p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#nyquist-shannon-theorem","title":"Nyquist - Shannon Theorem","text":"<p>Es m\u00fcssen doppelt so viele Messpunkte existieren, wie die maximale Frequenz: \\(f_{measure}&gt;2\\cdot f_{max}\\). Wenn dies nicht gegeben ist, tritt Aliasing auf und es werden falsche Frequenzen gespeichert.</p> <p>F\u00fcr die tiefste Frequenz gilt, dass das Intervall \\(T\\) zwischen den Messpunkten : \\(T &gt; \\frac 1 {f_{min}}\\)</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#blip","title":"Blip","text":"<p>Ein Blip ist ein kurzes Signal. Dabei gilt, je k\u00fcrzer der Blip, desto mehr Frequenzen gibt es um die Hauptfrequenz \\(\\nu_0\\)</p> <p></p> <p>Ein zweites Prinzip, das \u00e4hlich funktioniert: Je steiler eine Flanke eines Signales, desto mehr Frequenzen werden ben\u00f6tigt, um die Flanke darzustellen.</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#schnelle-orgeln","title":"Schnelle Orgeln","text":"<p>Damit ein Ton als harmonisch empfunden wird, muss eine Frequenz domonieren. Bei einem Blip ist dies allerdings nicht umbedingt gegeben. Ebenfalls gilt, je h\u00f6her ein Ton, desto k\u00fcrzer kann er sein, dass trotzdem noch eine Frequenz dominiert und der Ton harmonisch klingt. </p> <p>Aus diesem Grund kann eine Picolo schnell spielen und eine tiefe Orgel nicht.</p> <p></p> <p>Mathematisch kann diese Relation folgendermassen ausgedr\u00fcckt werden:  $$ \\frac{\\Delta f\\cdot \\Delta t}{2}\\sim 1 $$</p>"},{"location":"21HS/GED/Physik/all-ged-summaries.html#signal-to-noise-ratio","title":"Signal-to-Noise Ratio","text":"<p>\\(A_{noise}=\\text{Die durchschnittliche Noise Amplitude}\\) $$ SNR=\\frac{P_{signal}} {P_{noise}}=\\frac{I_{signal}} {I_{noise}}=\\frac{A^2_{signal}}{A^2_{noise}} $$</p> <p>Dabei bezeichnet \\(P\\) die Leistung, \\(I\\) die Intensit\u00e4t und \\(A\\) die Amplitude.</p> <p></p>"},{"location":"21HS/GED/Physik/include.html","title":"Include","text":"<p>[[TOC]] !!!include(./00_Formeln.md)!!! !!!include(./01_ch\u00fcgelif\u00fcsik.md)!!! !!!include(./02_Elektrotechnik.md)!!! !!!include(./04_Thermische_Strahlung.md)!!! !!!include(./05_Signale.md)!!!</p>"},{"location":"21HS/INCO/00_Infos.html","title":"Infos","text":""},{"location":"21HS/INCO/00_Infos.html#prufung","title":"Pr\u00fcfung","text":"<ul> <li>Zusammenfassung (14 Seiten/7-A4 Seiten)</li> <li>CAS-Taschenrechner ist erlaubt</li> <li>Keine weiteren Hilfsmittel sind erlaubt</li> </ul>"},{"location":"21HS/INCO/00_Infos.html#tipps-vom-dozenten","title":"Tipps vom Dozenten","text":"<ul> <li>Dezibel weden oft schlecht verstanden</li> <li>Huffman kommt (fast) sicher</li> <li>Faltungscode</li> </ul>"},{"location":"21HS/INCO/2_Sequenzelle%20Bauteile.html","title":"2 Sequenzelle Bauteile","text":"<p>Software zur Simulierng: https://kra.lc/projects/jdigitalsimulator/download.html</p>"},{"location":"21HS/INCO/2_Sequenzelle%20Bauteile.html#d-flip-flop","title":"D-Flip-Flop","text":"<ul> <li>1bit Speicher</li> <li>hat 3 Eing\u00e4ge</li> <li>Clock (C)</li> <li>Eingang (D)</li> <li>Ausgang (Q)</li> </ul> <p>Wenn C von niedrig zu hoch geht (steigende Flanke), wird D gelesen und gespeichert. Der gespeicherte Wert wird auf Q ausgegeben</p> <p>Beispiele:</p> <ul> <li>Wenn D hoch ist und C steigt, dann wird ein 1 gespeichert.</li> <li>Wenn D tief ist und C steigt, dann wird ein 0 gespeichert</li> <li>Wenn D hoch oder tief ist, aber C nicht steigt, dann passiert nichts</li> </ul> <p>Fakten:</p> <ul> <li>n Flip-Flop k\u00f6nnen \\(2^n\\) Zust\u00e4nde speichern</li> <li>Periode T = T0 + T1 [s]</li> <li>T0 = Periode, in welcher das Signal 0 ist</li> <li>T1 = Periode, in welcher das Signal 1 ist</li> <li>Frequenz f = 1/T [HZ]</li> <li>Duty Cycle = T1/T = Wie viel Prozent das Signal auf 1 ist</li> </ul>"},{"location":"21HS/INCO/2_Sequenzelle%20Bauteile.html#beispiel-frequenzteiler","title":"Beispiel: Frequenzteiler","text":"<p>Bilder einf\u00fcgen</p>"},{"location":"21HS/INCO/2_Sequenzelle%20Bauteile.html#generelle-form","title":"Generelle Form","text":"<p>Bild von Folien einf\u00fcgen</p> <p>Typsiche Anwendungen</p> <ul> <li>Counter</li> <li>... (von Folien)</li> </ul>"},{"location":"21HS/INCO/2_Sequenzelle%20Bauteile.html#finit-state-machine","title":"Finit State Machine","text":""},{"location":"21HS/INCO/2_Sequenzelle%20Bauteile.html#shift-register","title":"Shift Register","text":""},{"location":"21HS/INCO/2_Sequenzelle%20Bauteile.html#paralleles-register","title":"Paralleles Register","text":""},{"location":"21HS/INCO/2_Sequenzelle%20Bauteile.html#zustands-automaten","title":"Zustands-Automaten","text":"<p>Zustands Tabelle einf\u00fcgen</p>"},{"location":"21HS/INCO/3_Zahlensysteme.html","title":"Zahlensysteme","text":""},{"location":"21HS/INCO/3_Zahlensysteme.html#generel","title":"Generel","text":"<ul> <li>Das Zusammen-Rechnen kann auch als Summenzeichen: \\(\\sum^{n}_{i=0}(a_i\\cdot b^i)\\)</li> </ul>"},{"location":"21HS/INCO/3_Zahlensysteme.html#binar","title":"Bin\u00e4r","text":"<ul> <li>Abek\u00fcrzungen:</li> <li>0b0010 0000</li> <li>0B0010 0000</li> <li>\\(0010'0000_b\\)</li> </ul>"},{"location":"21HS/INCO/3_Zahlensysteme.html#hexadezimal","title":"Hexadezimal","text":"<ul> <li>Abk\u00fcrzungen:</li> <li>\\(AF3C_h\\)</li> <li>AF3Ch (&lt;- h am Ende anf\u00fcgen)</li> <li>0xAF3C</li> </ul>"},{"location":"21HS/INCO/3_Zahlensysteme.html#umrechnen","title":"Umrechnen","text":"<ul> <li>Achtung von welcher Richtung man den Rest liest</li> </ul> <p>TODO</p> <ol> <li>\\(\\frac{a_n\\cdot b^n + a_2\\cdot b^2+a_1\\cdot b^1+a_0}{b}\\)</li> <li></li> </ol> <p>Beispiel:</p> <ol> <li>\\(1000_d:16_d = 62_d R8_d=8_h\\)</li> <li>\\(62_d : 16_d = 3_d R 14_d=E_h\\)</li> <li>\\(3_d : 16d = 0_d R 3_d=3_h\\)</li> <li>\\(\\text{Daraus gibt es von unten nach oben gelesen: } 3E8_h=1000_d\\)</li> </ol> <p>Beispiel #2:</p> <ul> <li>\\(26.6875_d = binar\\)</li> <li>Man beginnt nur mit der ganz Zahl, also 26</li> <li>\\(26_d : 2_d = 13_d R0\\)</li> <li>\\(13_d : 2_d = 6_d R1\\)</li> <li>\\(6_d : 2_d = 3_d R0\\)</li> <li>\\(3_d : 2_d = 1_d R1\\)</li> <li>\\(1_d : 2_d = 0_d R1\\)</li> <li>Von unten nach oben gelesen gibt dies: \\(11010_b\\)</li> <li>Nun noch \\(0.6875_d\\)</li> <li>\\(0.6875_d \\cdot 2 = 0.375 + 1\\)</li> <li>\\(0.374 \\cdot 2 = 0.75 + 0\\)</li> <li>\\(0.75 * 2 = 0.5 + 1\\)</li> <li>\\(0.5 * 2 = 0 + 2\\)</li> <li>Nun von oben nach unten lesen: \\(1011_b\\)</li> <li>Zusammen: \\(11010.1011_b\\)</li> </ul>"},{"location":"21HS/INCO/3_Zahlensysteme.html#addition-subtraktion","title":"Addition &amp; Subtraktion","text":"<ul> <li>Wie Schriftliches-Addieren</li> <li>Bei Hexadezimal darauf denken, dass der \u00dcbertrag im Hexadezimal-System ist. Heisst eine 1 beim \u00dcbertrag von der Einerstelle ist 16</li> </ul>"},{"location":"21HS/INCO/3_Zahlensysteme.html#ziffern-verschieben","title":"Ziffern verschieben","text":"<p>Wenn man eine 0 anh\u00e4nkt, rechnet man Mal die Basis.  Als Beispiel: \\(12 \\cdot 10 = 120\\) oder \\(10b\\cdot2_d=100_b\\)</p>"},{"location":"21HS/INCO/3_Zahlensysteme.html#multiplikaton","title":"Multiplikaton","text":"<p>Beim Bin\u00e4r (oder auch andre Zahlensystem) multiplizeren, wird jede einzelne Stelle mit der ganzen anderen Zahlen multipliziert und die Ergebnisse addiert. Dies funktioniert im Zehnersystem, wie auch in Bin\u00e4r.</p> <p>Beispiel:</p> <pre>\n101 x 1110\n  1 x 1110 =   1110\n 0  x 1110 =  0000\n1   x 1110 = 1110\n            1000110\n</pre>"},{"location":"21HS/INCO/3_Zahlensysteme.html#dividieren","title":"Dividieren","text":"<pre>\n 6   : 5   = 1.2\n 110 : 101 = 1.0001\n-         (hat 1x platz -&gt; 1.)\n 001\n  010      (ein 0 wird hinzugef\u00fcgt)      \n  0100     (da 101 nicht in 100 hineinpasst, wird ein weiteres 0 hinzugef\u00fcgt -&gt; 1.0)\n  01000    (ein weiteres 0 wird hinzugef\u00fcgt -&gt; 1.00)\n   -101    (jetzt kann 101 abgezogen werden -&gt; 1.001)\n    011\n</pre> <p>Dieses Spiel k\u00f6nnte man nun wiederholen bis in alle Ewigkeit, da 1.2 sich nicht als bin\u00e4r oder hexadezimal Zahle l\u00e4sst.</p>"},{"location":"21HS/INCO/3_Zahlensysteme.html#minuszahlen","title":"Minuszahlen","text":"<p>Um Minuszahlen ohne ein Minuszeichen darzustellen wird in der Informatik einen Trick verwendet. </p>"},{"location":"21HS/INCO/3_Zahlensysteme.html#9er-10er-komplement","title":"9er- &amp; 10er-Komplement","text":"<p>Wenn man von 0 Eins abzieht (-1 rechnet), dann bekommt man -1. Wenn man nun dasselbe durchf\u00fchrt, aber ohne Minuszeichen, dann wird aus 0000 \\(\\to\\) 9999, da es einen Underflow gibt. Man halbiert die Anzahl m\u00f6glichen Zahlen, da nun die H\u00e4lfte der Zahlen f\u00fcr positive Zahlen und die andere H\u00e4lfte f\u00fcr die negativen Zahlen steht. Dies nennt sich das Komplement.</p> <p>Wenn im 10-er System gedacht wird,  ist das 9-er Komplement, wenn jede Ziffer von <code>9</code> abgez\u00e4hlt wird. Die negative Representation von <code>0001</code> (also -1), w\u00e4re <code>9998</code>. Dieses System hat aber den Nachteil, dass man zwei 0 hat: <code>9999</code> und <code>0000</code>. </p> <p>Da dies Platzverschwendung w\u00e4re, gibt es das 10er-Komplement, in dem noch <code>+1</code> gerechnet wird. Aus <code>0001</code> wird zuerst <code>9998</code> und dann <code>9999</code>.</p> <p></p>"},{"location":"21HS/INCO/3_Zahlensysteme.html#1er-2er-komplement","title":"1er- &amp; 2er-Komplement","text":"<p>Dasselbe Konzept, wie beim 9er-, bzw. 10er-Komplement kann auch auf das 1er- und 2er-Komplement \u00fcbertragen werden. </p> <p>Beim 1er-Komplement wird jede Ziffer von <code>1</code> abegez\u00e4hlt. Die negative Representation von <code>0001</code> ist also <code>1110</code>. Auch hier hat man zwei Representation f\u00fcr die Zahl <code>0</code>, daher wird im 10er-Komplement noch <code>+1</code> gerechnet. Aus <code>1110</code> wird also <code>1111</code> f\u00fcr <code>-1</code>.</p> <p>Hier sieht man die verschiednenen Verfahren</p> Bin\u00e4r unsigned 1er-Komplement 2er-Komplement 1111 15 -0 -1 1110 14 -1 -2 1101 13 -2 -3 1100 12 -3 -4 1011 11 -4 -5 1010 10 -5 -6 1001 9 -6 -7 1000 8 -7 -8 0111 7 7 7 0110 6 6 6 0101 5 5 5 0100 4 4 4 0011 3 3 3 0010 2 2 2 0001 1 1 1 0000 0 0 0 <p>Dasselbe Verfahren funktioniert auch f\u00fcr Kommazahlen. In diesemfall wird die ganze Kommazahl als eine Zahl gedacht und nur einmal +1 beim 2er-Komplement gerechnet. </p> <p>Um eine Zahl in ihr Komplement um zuwandeln, muss der Umwandler wissen, wie viel Stellen die Zahl hat. Daher am besten 1, als 0001 schreiben.</p>"},{"location":"21HS/INCO/3_Zahlensysteme.html#over-underflows","title":"Over- &amp; Underflows","text":"<p>Ein Overflow, bzw. ein Underflow passieren, wenn eine Zahl gr\u00f6sser ist, als der Wertebereich, in denen man sie speichert. Je nachdem ob ein Komplement verwendet wird oder nicht, ist dieser Punkt an einem anderen Ort.</p> <p>Bei Zahlen ohne Vorzeichen ist der Overflow-Punkt zwischen 0 und 15: </p> <p>Bei Zahlen, welche mit dem 2er-Komplement formatiert sind, ist dieser Punkt zwischen 7 und -8:</p>"},{"location":"21HS/INCO/3_Zahlensysteme.html#verschiedene-codes","title":"Verschiedene Codes","text":""},{"location":"21HS/INCO/3_Zahlensysteme.html#bcd-code-binary-code-decimal","title":"BCD Code (Binary Code Decimal)","text":"<p>Ein Code, welcher verwendet wird, wenn Dezimalzahlen auf einer Anzeige dargestellt werden. Die Bin\u00e4rzahlen <code>0000</code> bis <code>1001</code> gelten f\u00fcr 0 - 9, die anderen sind ung\u00fcltige Zeichen.</p> <p></p>"},{"location":"21HS/INCO/3_Zahlensysteme.html#gray-code","title":"Gray Code","text":"<p>Gray Code ist ein Code, bei welchen maximal 1 Bit von einem Codewort zum einem benachbarten Codewort (z.B. 5 zu 6 oder 5 zu 4). Dieses System wird f\u00fcr Schleifkontakte genutzt, da es dort problematisch sein kann, wenn sich mehrere Bits gleichzeitig \u00e4ndern. Wenn sich zwei Bits \u00e4ndern, kann es sein, dass ein Bit sich ein wenig sp\u00e4ter \u00e4ndert und so der Computer eine Falsche Zahl liest.</p> Dezimal GrayCode 0 000 1 001 2 011 3 010 4 110 5 111 6 101 7 100 <p>Oft wird ein Graycode f\u00fcr Schleifkontakte auf einer Drehscheibe genutzt.</p> <p></p>"},{"location":"21HS/INCO/3_Zahlensysteme.html#ascii-code","title":"ASCII Code","text":""},{"location":"21HS/INCO/3_Zahlensysteme.html#unicode","title":"Unicode","text":"<p>Unicode ist ein Zeichensatz in dem alle Modernensprachen (und viele historische Sprachen) abgebildet werden k\u00f6nnen und hat das Ziel die inkompatibilit\u00e4t zwischen Encodings aufzuheben. Dabei hat Unicode Platz f\u00fcr rund 1 Milion Zeichen, wovon heute ca 10% genutzt sind. </p> <p>Dabei definiert der Standart 17 Ebenen. Die erste ist die Base Multilinugal Plane (BMP), in welcher die Zeichen der modernen Sprachen abgelegt sind. In der Supplementary Multilingual Plane (SMP) sind historische Zeichen, Symbole und auch Emoticons abgelegt.</p>"},{"location":"21HS/INCO/3_Zahlensysteme.html#utf-8-utf-16-utf-32","title":"UTF-8, UTF-16 &amp; UTF-32","text":"<p>UTF-8 ist ein Code mit variabler Breite und kann 1 bis 4 Bytes pro Zeichen gross sein. </p> Unicode-Bereicht Utf-8 Codierung Anzahl Code-Bits 0000'0000 - 0000'007F 0xxxxxxx 7 0000'0080-0000'07FF 110xxxxx 10xxxxxx 11 (5 + 1*6) 0000'0800-0000'FFFF 1110xxxx 10xxxxxx 10xxxxxx 16 (4 + 2*6) 0001'0000-0010'FFFF 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx 21 (3 + 3*6) <p>UTF-16 ist ein Encoding, welches entweder aus 2 oder 4 Bytes besteht. Die Code Points zwischen \\(0000_h\\) und \\(FFFF_h\\) k\u00f6nnen mit 2 Bytes dargestellt werden. F\u00fcr h\u00f6hrere Code Points werden 4 Bytes ben\u00f6tigt. Das ein 2 bytiges und 4 bytiges Code Wort nicht verwechselt werden, wird der Bereich \\(D800_h\\) bis \\(DFFF_h\\) freigehalten. Wenn ein Code Wort in diesem Bereich liegt, dann ist es klar, dass die n\u00e4chsten zwei Bytes auch noch dazu geh\u00f6ren.</p>"},{"location":"21HS/INCO/3_Zahlensysteme.html#endiannes","title":"Endiannes","text":"<p>Wenn mehrere Bytes als eine Zahl verschickt werden, stellt sich die Frage, welches Byte zuerst kommt. Hier gibt es zwei Varianten.</p> Name Beschreibung Darstellung Little Endian Das niederstwertige Byte wird zuerst geschickt FEDCBA9 87654321 Big Endian Das h\u00f6chstwertige Byte wird zuerst geschickt 87654321 FEDCBA9"},{"location":"21HS/INCO/4_Informationstheorie.html","title":"Was ist Information","text":"<ul> <li>Etwas, was das eigene Wissen erweitert; etwas neues, was wir vorhin noch nicht wussten</li> <li>mit \\(F=ceiling(log(_2(N))\\)</li> </ul>"},{"location":"21HS/INCO/4_Informationstheorie.html#daten-quellen","title":"Daten Quellen","text":""},{"location":"21HS/INCO/4_Informationstheorie.html#discrete-memoryless-source-dms","title":"Discrete Memoryless Source (DMS)","text":"<ul> <li>Discrete = Einzelne Nachrichten</li> <li>Die einzelnen Nachrichten sind Unabh\u00e4ngig</li> </ul> <p>Beispiele:</p> <ul> <li>W\u00fcrfel (errinnert sich nicht an den letzten Wurf, getrennte Nachrichten)</li> <li>Liste von Nummerschild von Autos von einer Kamera auf der Autobahn</li> </ul>"},{"location":"21HS/INCO/4_Informationstheorie.html#binary-memoryless-source-bms","title":"Binary Memoryless Source (BMS)","text":"<ul> <li>Wie eine DMS, aber nur 1 oder 0</li> <li>(scheint ein wenig nutzlos zu sein\u2026)</li> </ul>"},{"location":"21HS/INCO/4_Informationstheorie.html#irrelevanz","title":"Irrelevanz","text":"<p>Informationen ist irrelevant, wenn f\u00fcr den Empf\u00e4nger die Informationen nicht ben\u00f6tigt. Um dies festzustellen zu k\u00f6nnen, muss man wissen, f\u00fcr was der Empf\u00e4nger die Informationen verwendet.</p>"},{"location":"21HS/INCO/4_Informationstheorie.html#mathe-dahinter","title":"Mathe dahinter","text":""},{"location":"21HS/INCO/4_Informationstheorie.html#information","title":"Information","text":"<p>\\(I(x)=log_2(\\frac 1 {P(x)})\\)</p> <p>Diese Formel stellt dar, wie gross der \u00dcberraschungseffekt ist. Die Einheit ist \"Bits\". </p> <p>(\\(P(x)\\) ist, wie wahrscheinlich es ist, dass x vorkommt)</p>"},{"location":"21HS/INCO/4_Informationstheorie.html#entropie","title":"Entropie","text":"<p>Die Entropie ist der gewichtete Durchschnitt der Informationen und wird mit folgender Formel berechnet:</p> <p>\\(H(X)=\\sum^{N-1}_{n=0} P(x_n)\\cdot I(x_n)=\\sum^{N-1}_{n=0}P(x_n)\\cdot log_2(\\frac 1 {P(x_n)})\\)</p> <p>Das folgende Bild zeigt die Entropie von einer BMS mit der Wahrscheinlichkeit von \\(p\\) f\u00fcr das eine Zeichen (und die Wahrscheinlichkeit \\(1-p\\) f\u00fcr das andere Zeichen). Wie man sieht, ist die Entropie am h\u00f6chsten, wenn alle Zeichen gleich oft Vorkommen.</p> <p></p>"},{"location":"21HS/INCO/4_Informationstheorie.html#zweier-logarithmus-ohne-zweier-logarithmus","title":"Zweier Logarithmus ohne zweier Logarithmus","text":"<ul> <li>\\(2^x=K\\)</li> <li>\\(log(2^x)=log(K)\\)</li> <li>\\(x\\cdot log(2)=log(K)\\)</li> <li>\\(x=\\frac{log(K)}{log(2)}\\)</li> </ul>"},{"location":"21HS/INCO/4_Informationstheorie.html#quellenkodierung","title":"Quellenkodierung","text":""},{"location":"21HS/INCO/4_Informationstheorie.html#redundanz","title":"Redundanz","text":"<p>Daten, welche reversible entfernt werden k\u00f6nnen. </p> <p>Um dies zu berechnen, kann man von der Code-L\u00e4nge die Entropie abziehen. Jetzt kann es aber sein, dass es Codierungen gibt, bei welcher nicht alle Zeichen dieselbe L\u00e4nge haben. Daher braucht man die mittlere Codewortl\u00e4nge, welche wie folgt berechnet wird:</p> <p>\\(L(X)=\\sum^{N-1}_{n=0}P(x_n)\\cdot l(x_n)\\)</p> <p>(Also eigentlich einfach nur der gewichtete Durchschnitt von allen Codel\u00e4ngen)</p> <p>Die Redundanz ist nun folgendes:</p> <p>\\(R(X)=L(X)-H(X)\\)</p> <p>Wenn die Redundanz &lt; 0 ist, dann komprimiert man mit Verl\u00fcste, da nicht alle Informationen hineinpassen und somit Informationen weggeworfen wird</p>"},{"location":"21HS/INCO/4_Informationstheorie.html#huffman-codes","title":"Huffman Codes","text":"<p>Codes mit dem Huffmanverfahren sind:</p> <ul> <li> <p>automatisch pr\u00e4fixfrei</p> </li> <li> <p>optimal (Das heisst, es gibt keine besseren pr\u00e4fixfreie Code)</p> </li> </ul>"},{"location":"21HS/INCO/4_Informationstheorie.html#vorgehen","title":"Vorgehen","text":"<ol> <li>Ordne alle Symbole nach aufsteigenen Auftretenswahrscheinlichkeiten auf einer Zeile. Dies sind die Bl\u00e4tter</li> <li>Notiere unter jedes Blatt seine Wahrscheinlichkeit</li> <li>Schliesse die beiden Bl\u00e4tter mit der kleinsten Wahrscheinlichekit an einer gemeinsamen Astgabel an und ordne dem Ast die Summe der Wahrscheinlichkeiten zu</li> <li>Wiederhole Schritt 2 es nur noch ein Stamm gibt</li> <li>Jedem Ast wird nun ein eine 0, wenn man links geht und eine 1 wenn man rechts geht, zugewiessen</li> <li>Die Pfade zu allen Bl\u00e4tter aufschreiben. Das ist der Huffmancode</li> </ol>"},{"location":"21HS/INCO/4_Informationstheorie.html#lauflangenkodierung","title":"Laufl\u00e4ngenkodierung","text":"<p>Man speichert, wie oft ein Symbol vorkommt. Anstatt \"AAAAAABBC\" k\u00f6nnte man einfach \"6A2B1C\"</p> <p>Um auch Symbole, welche nur einmal vorkommen, effizent zu speichern, wird ein Token benutzt, welcher symbolisiert, dass nun eine Laufl\u00e4ngenkodierung kommt.</p> <p>Um das obere Beispiel nochmals aufzugreiffen: \"Z6AZ2BC\". Hier wurde Z als Marker (oder Token) gew\u00e4hlt, und nur wenn ein Z gelesen wird, wird das folgende als L\u00e4nge interpretiert.</p> <p>Wie viel Zeichen als Marker reserviert werden soll, ist abh\u00e4ngig von der Quelle in ihre statistischen Eigenschaften.</p>"},{"location":"21HS/INCO/4_Informationstheorie.html#lz77","title":"LZ77","text":"<p>Ein Token ist definiert als (Offset, L\u00e4nge, Zeichen). Es hat eine fixe L\u00e4nge.</p> <p>Es gibt ebenfalls ein Such- und ein Vorschau-Buffer. Es werden im Such-Buffer nach denselben Muster gesucht.</p> <p>Falls ein Match gefunden wurde, wird ein Token geschrieben. In diesem ist der Offset des Such-Buffer, die L\u00e4nge ist die L\u00e4nge des Musters, und das Zeichen das n\u00e4chste Zeichen nach dem gemachten Muster.</p> <p>Falls kein Match gefunden wurde, wird folgender Token geschrieben (0, 0, Zeichen). Dies ist n\u00f6tig, da zu Beginn des Algorithmus noch nichts im Such-Buffer ist.</p> <p></p> <p>Um dies zu dekodieren, wird dies R\u00fcckw\u00e4rts durch gearbeitet</p>"},{"location":"21HS/INCO/4_Informationstheorie.html#lzw","title":"LZW","text":"<p>LZW bassiert auf LZ77 mit einigen \u00c4nderungen. Anstatt eines \"Sliding Window\" ben\u00fctzt man ein W\u00f6rterbuch. Ein Token besteht nur aus einem Index, welchen auf das W\u00f6rterbuch referenziert. Der Dekoder baut gleichzeitig mit den empfangenen Tokens das W\u00f6rterbuch auf.</p> <p>Um ein Text zu enkodieren, werden folgende Schritte durchgef\u00fchrt</p> <ol> <li> <p>Suche das aktuelle Zeichen im W\u00f6rterbuch</p> </li> <li> <p>So lange verl\u00e4ngern, wie m\u00f6glich und dieses als Token versenden</p> </li> <li> <p>Ein neuen Eintrag Token + der n\u00e4chste Zeichen ins W\u00f6rterbuch hinzuf\u00fcgen</p> </li> </ol> <p>Um nun einen Tokenstream wieder zu dekodieren, muss man folgendes tun:</p> <ol> <li> <p>Empfangener Token ausgeben</p> </li> <li> <p>Empfangener Token ins W\u00f6rterbuch als neuer Eintrag hinzuf\u00fcgen (mit einem Blank am Ende)</p> </li> <li> <p>N\u00e4chster empfangener Token ausgeben und die Blank vom letzten Schritt ausf\u00fcllen mit dem ersten ausgegeben Buchstaben des empfangen Tokens</p> </li> <li> <p>Gehe zu Schritt 2</p> </li> </ol>"},{"location":"21HS/INCO/5_JEPG.html","title":"5 JEPG","text":""},{"location":"21HS/INCO/5_JEPG.html#was-ist-ein-digitales-bild","title":"Was ist ein digitales Bild?","text":"<p>Ein Bild ist ein zweidimensionales Pixel-Array</p> <ul> <li> <p>schwarzweiss Bild: 2-wertige Pixel</p> </li> <li> <p>Graustufenbild: Pixel mit Wertebereich \\([0..2^W-1]\\), typisch W=8 bit</p> </li> <li> <p>nat\u00fcrliches Bild: (Farb-)Pixel mit 3 Komponenten (z.B. RGB). Benachbarte Pixelwerte sind oft fast gleich gross</p> </li> <li> <p>Grafik oder syntetisches Bild: haben oft scharfe Kanten</p> </li> </ul>"},{"location":"21HS/INCO/5_JEPG.html#jpeg-verfahren","title":"JPEG Verfahren","text":"<ol> <li> <p>Das RGB Bild wird zu einem YCrCb Bild umgewandelt</p> </li> <li> <p>Das Bild in 8x8 Bl\u00f6cke aufteilen</p> </li> <li> <p>Eine Discrete Cosine Transform (DCT) wird auf das Bild angewendet</p> </li> <li> <p>Quanitzation - Es werden gewisse Bildinformationen mehr komprimiert als andere, da sie der Mensch besser wahrnehmen kann</p> </li> <li> <p>DC und AC Seperation</p> </li> <li> <p>Runlength Encoding &amp; Huffman enkodierung</p> </li> <li> <p>In ein File verpacken</p> </li> </ol> <p>Man benutzt bei JPG die Luminance, da das menschliche Auge auf Helligkeit empfindlicher ist</p>"},{"location":"21HS/INCO/5_JEPG.html#schritt-1-rgb-zu-ycrcb","title":"Schritt 1 - RGB zu YCrCb","text":"<ul> <li> <p>Y - Helligkeitinformationen (eigentlich. ein Graustufenbild)</p> </li> <li> <p>Cb - Blau anteil</p> </li> <li> <p>Cr - Rotanteil</p> </li> </ul> <p>Im Folgenden Bild sieht man die Beziehung von Cb und Cr:</p> <p></p> <p>Um die Luminaz von einem Pixel zu berechnen, kann man eine gewichtetes Summe der RGB Pixel errechnen: \\(L=0.299\\cdot R + 0.587 \\cdot G + 0.115\\cdot B\\). Die Faktoren kommen davon, dass das menschliche Auge die Farben Blau, Gelb und Rot verschieden wahrnehmen.</p> <p>\\(\\begin{bmatrix} Y \\\\ C_B \\\\ C_R \\end{bmatrix} = \\begin{bmatrix}0.299 &amp; 0.587 &amp; 0.114\\\\ -0.1687 &amp; -0.3313 &amp; 0.5\\\\ 0.5 &amp; -0.4187 &amp; -0.0813\\end{bmatrix} \\cdot \\begin{bmatrix} R\\\\G\\\\B \\end{bmatrix} + \\begin{bmatrix} 0 \\\\ 128 \\\\ 128 \\end{bmatrix}\\)</p> <p>Umgekehrt kann man folgende Formel benutzen:</p> <p>\\(\\begin{bmatrix} R \\\\ G \\\\ B \\end{bmatrix} = \\begin{bmatrix}1 &amp; 0 &amp; 1.402\\\\ 1 &amp; -0.34414 &amp; -0.71414\\\\ 1 &amp; 1.772 &amp; 0\\end{bmatrix} \\cdot \\begin{bmatrix} Y\\\\C_B - 128\\\\C_R - 128\\end{bmatrix}\\)</p>"},{"location":"21HS/INCO/5_JEPG.html#downsampling","title":"Downsampling","text":"<p>Man gibt mit dem folgenden Muster \"Blockbreite:Reduktion Breite:Redutktion H\u00f6he\"</p> <p></p>"},{"location":"21HS/INCO/5_JEPG.html#diskrete-cosinus-transformation-dct","title":"Diskrete Cosinus Transformation (DCT)","text":"<p>Die Idee von einer DCT ist, dass anstatt in einem Pixel zu speichern, wie Schwarz dieser Pixel ist, speichert man, wie stark eine Frequenz in einem 8x8-Block vorkommt. Diese Operation ist komplet reversieble und es werden keine Informationen verloren.</p> <p>Im unteren Beispiel sieht man eine 1D-DCT. In diesem Fall ist der Pixel-Block 8x1 gross. Im ersten Pixel wird gespeichert, wie hell das Bild ist. Dieser Wert wird auch DC-Wert genannt von Direct Current, da die dargestelle \"Frequenz\" 0Hz hat, wie man im unteren Beispiel sieht.</p> <p>Der zweite Pixel stellt danach dar, wie stark die Frequenz mit 1Hz in diesem 8x1-Block verterten ist. Der dritte Pixel, wie stark 2Hz vertretten sind und so weiter.</p> <p></p> <p>Dieses Prinzip, wie es in 1D funktioniert, kann auch f\u00fcr ein 2D Bild angewendet werden. Hierbei stellen die Pixel dar, wie stark eine horizontale und vertikale Frequenz vertreten sind. Im Beispiel unten ist der Pixel 1/1 (der erste Pixel) wieder der DC, mit den Frequenzen 0Hz/0Hz. Der Pixel 2/2 hat die Frequenz 1Hz/1Hz, der Pixel 4/3 hat die Frequenzen 3Hz/2Hz. Im unteren Bild sieht man die Muster, welche erkannt werden.</p> <p></p> <p>F\u00fcr diese Konvertierung gilt die folgende Formel: $$ F_{vu}=\\frac 1 4 C_u C_v \\sum^7_{x=0}\\sum^7_{y=0}B_{yx} \\cos(\\frac {(2x+1)u\\pi} {16})\\cos(\\frac{(2y+1)v\\pi} {16}) $$ Dies gibt f\u00fcr jedes \\(B_{yx}\\) einen Wert \\(F_{vu}\\).</p> <p>Diese Konvertierung kann mit einer Inversen DCT wieder r\u00fcckg\u00e4ngig gemacht werden: $$ B_{yx}=\\frac 1 4 \\sum^7_{u=0}\\sum^7_{v=0}C_uC_vF_{vu}\\cos(\\frac{(2x+1)u\\pi}{16})\\cos(\\frac{(2y+1)v\\pi}{16}) $$ Nach einer DCT ergibt dies ein Resultat, wie dies:</p> <p></p> <p>In diesem Bild gibt es einige gr\u00f6ssere Werte im oberen linken Ecken. Die anderen Werte sind relative klein. </p>"},{"location":"21HS/INCO/5_JEPG.html#quantisierung","title":"Quantisierung","text":"<p>Beim Quantisieren wird das Resultat der DCT gewichtet. Daf\u00fcr nimmt man eine weitere  Tabelle mit Werte. Jeder Wert in der DCT Tabelle wird durch den Wert an derselben Position in der Gewichtungstabelle geteilt. Danach wird auf Ganzzahlen gerundet. Damit wirft man Daten weg, welche weniger relevant sind.</p> <p></p> <p></p>"},{"location":"21HS/INCO/5_JEPG.html#run-lenght-encoding","title":"Run-Lenght Encoding","text":"<p>Es gibt folgende Tokens:</p> <ul> <li> <p>(DC Wert) - Ein Token f\u00fcr den DC Wert. Dies ist der Wert oben links</p> </li> <li> <p>(Anzahl Nullen, n\u00e4chstes nicht Null-Zeichen) - Die Anzahl Nullen vor dem n\u00e4chsten Zeichen</p> </li> <li> <p>(EOB) - End Of Block -&gt; der Rest ist Null</p> </li> </ul> <p>Dies wird danach noch mit einem Huffmancode enkodiert. Daf\u00fcr kann eine fixen Code verwendet werden oder der Encoder kann einen selbst erstellen.</p> <p>Der DC Wert wird mit eine \"horizontale Pr\u00e4diktion\" verwendet. Dabei sieht ein Token (Anzahl Bits,  \\(DC_n-DC_{n-1}\\)). Es wird also die Differenz des DC-Wertes zwischen zwei Bl\u00f6cken gespeichert, da sich diese selten komplet \u00e4ndert.</p>"},{"location":"21HS/INCO/5_JEPG.html#mpeg","title":"MPEG","text":"<p>Ansatz: Man speichert nicht jedes Frame einzeln, sondern die Unterschiede</p>"},{"location":"21HS/INCO/5_JEPG.html#makroblocke","title":"Makrobl\u00f6cke","text":"<p>Wenn man ein Video komprimiert, teilt man ein Frame in mehrere Makrobl\u00f6cke auf. Danach sucht man im letzten Bild nach demselben Block. Da man nicht das ganze Bild absuchen m\u00f6chte, sucht man nur in einem Suchfenster um den Block herum, da man an nimmt, dass sich das Bild nicht gross ver\u00e4ndert. </p> <p>Wenn kein Makroblock im letzten Frame im Suchfenster gefunden wurde, wird der Block als JPG komprimiert und gespeichert.</p> <p>Um Makrobl\u00f6cke zu finden, werden nicht die eigentlich Pixel verglichen, da kleine \u00c4nderungen, welche von z.B. von Sensorrauschen verursacht wurde, dazuf\u00fchren w\u00fcrde, dass man keine Bl\u00f6cke finden.</p> <p>MPEG schreibt nicht vor, wie man nach diesen Bl\u00f6cke sucht. Meistens schr\u00e4nkt man aber das Fenster zwischen 7-15 Pixel ein.</p>"},{"location":"21HS/INCO/5_JEPG.html#frames","title":"Frames","text":"<ul> <li> <p>Intra Frame (I-Frame) - Ein koplettes Frame als JPG</p> </li> <li> <p>Predicated Frame (P-Frame) - ein vorheriges Frame wird als Referenz benutzt</p> </li> <li> <p>Bidirectional Frame (B-Frame) - ein vorheriges Frame, wie auch das n\u00e4chste Frame kann als Referenz benutzt werden</p> </li> </ul> <p></p> <p>Da man bei den B-Frames auch voraussehen kann, ist die Reihenfolge der Frames wie man es schaut, nicht dieselbe, wie man es sendet.</p> <p></p>"},{"location":"21HS/INCO/5_JEPG.html#geschichte","title":"Geschichte","text":"<ul> <li> <p>MPEG-1:</p> </li> <li> <p>Typisch f\u00fcr Fernseher</p> </li> <li> <p>318 MBit/s -&gt; 1.5 MBit/s</p> </li> <li> <p>MPEG-2:</p> </li> <li> <p>F\u00fcr HD-TV </p> </li> <li> <p>Resultierte in ca. 80 - 100 MBit/s</p> </li> </ul>"},{"location":"21HS/INCO/6_Audio.html","title":"Audio","text":""},{"location":"21HS/INCO/6_Audio.html#abtastrate","title":"Abtastrate","text":"<p>Um  ein Audio-Signal digital zu verwenden, muss man es Abtasten. Laut dem Abtasttheorem von Shanon muss die Abtastrate doppelt so gross sein, wie die maximale Frequenz (\\(f_{abtast} &gt; 2\\cdot f_{max}\\)). Wegen dem Abtasten wird das Signal quantisiert. </p> <p>Wenn man \\(2\\cdot f_{max}\\) \u00fcbersteigt, beginnt sich die Frequenz zu spiegeln. Die hat die Frequenz \\(f_{abtast}-f_{zu hohe Frequenz}\\)</p>"},{"location":"21HS/INCO/6_Audio.html#quantisierungsrauschen","title":"Quantisierungsrauschen","text":"<p>Das Quantisierungsrauschen entsteht bei Rundungsfehler auf die n\u00e4chste Zahl, welche abgespeichert weren kann.</p> <p></p> <p>Das Rauschen ist die Differenz zwischen dem Analogensignal und dem digitalen Signal. Das Rauschen wird durch die gr\u00fcne \"Kurve\" dargestellt.</p> <p></p> <p>Um jede erh\u00f6hung um 1 Bit nimmt das Rauschen um 6dB ab</p>"},{"location":"21HS/INCO/6_Audio.html#schalldruckpegel-db","title":"Schalldruckpegel (dB)","text":"<p>Der Schallpegel wird mit der folgenden Formel berechnet: </p> <p>\\(L=20\\cdot log_{10}(\\frac p {p_0})\\) </p> <ul> <li> <p>\\(p\\) = Effiektiver Schaldruck [PA]</p> </li> <li> <p>\\(p_0\\)=Bezugsschalldruck </p> </li> </ul> <p>Wie man in der Formel sieht, ist Decibel eine Logarithmischeschwelle</p>"},{"location":"21HS/INCO/6_Audio.html#puls-code-modulation-pcm","title":"Puls Code Modulation (PCM)","text":""},{"location":"21HS/INCO/6_Audio.html#itu-t-g711-a-law","title":"ITU-T G.711 (A-law)","text":"<p>Der Frequenzbereicht ist 300-3400Hz und wird mit 8000Hz abgetastet. Ein Abtastpunkt werden als 8 bit gespeichert, das ergibt eine Datenrate von \\(8000Hz \\cdot 8Bit = 64KBit/s\\)</p>"},{"location":"21HS/INCO/6_Audio.html#cd-adio","title":"CD-Adio","text":"<p>Eine CD ben\u00fctzt eine Abtastfrequenz von 44.1kHz und speichert dies als 16-bit Wert ab. Die Datenrate ist \\(44'100 Hz * 2Byte * 2 Kan\u00e4le = 176'400 Byte/s=1.411 MBit/s\\)</p> <p>Quantisiert wird Linear. Dies heisst dass die Y-Achse in einem solchen Diagram linear ist.</p>"},{"location":"21HS/INCO/6_Audio.html#arten-von-pcm","title":"Arten von PCM","text":"<p>PCM kann auf mehrere Arten abgespeichert werden</p> <ul> <li> <p>Absolut: Jeder Wert wird als absoluter Wert abgespeichert</p> </li> <li> <p>Diffrerential-PCM (DPCM): Es werden nur die Differenzen gespeichert </p> </li> <li> <p>Adaptive Differential-PCM (ADPCM): Es werden die Differenzen der Differenzen gespeichert. Der Sinn dahinter: Bei Audio-Files \u00e4ndert sich die Differenz nicht fest, also ist es effizenter nur die Differenzen der Differenzen zu speichern   </p> </li> </ul>"},{"location":"21HS/INCO/6_Audio.html#linear-prediction-coder-lpc","title":"Linear Prediction Coder (LPC)","text":"<p>Das \u00c4quivelent zu der DCT in der Audio Welt. Wird heutzutage nicht mehr verwendet.</p>"},{"location":"21HS/INCO/6_Audio.html#wave-file-format","title":"Wave File Format","text":"<p>Hier ist das Header Format von einem Wave-Files, welches PCM Daten enth\u00e4lt. Werte im Wave-Format sind im Little-Endian Format abgespeichert (Tieferer Wert kommt zu erst)</p> <p></p> Offset Byte Name Erkl\u00e4rung 0 4 ChunkID Contains the letters \"RIFF\" in ASCII form 4 4 ChunkSize 36 + SubChunk2Size, or more precisely:4 + (8 + SubChunk1Size) + (8 + SubChunk2Size)This is the size of the rest of the chunkfollowing this number. This is the size of theentire file in bytes minus 8 bytes for thetwo fields not included in this count: ChunkID and ChunkSize. 8 4 Format Contains the 4 letters \"WAVE\" 12 4 Subchunk1ID Contains the 4 letters \"fmt \" 16 4 Subchung1Size 16 for PCM. This is the size of the rest of the Subchunk which follows this number. 20 2 AudioFormat PCM = 1 (i.e. Linear quantization) Values other than 1 indicate some form of compression. 22 2 NumChannels Mono = 1, Stereo = 2, etc. 24 4 SampleRate 8000, 44100, etc. 28 4 ByteRate == SampleRate * NumChannels * BitsPerSample/8 32 2 BlockAlign == NumChannels * BitsPerSample/8The number of bytes for one sample including all channels. 34 2 BitsPerSample 8 bits = 8, 16 bits = 16, etc. 36 4 Subchunk2Id Contains the 4 letters \"data\" 40 4 Cubchank2Size == NumSamples * NumChannels * BitsPerSample/8This is the number of bytes in the data. You can also think of this as the size of the read of the subchunk following this number. 44 * Data The actual sound data."},{"location":"21HS/INCO/6_Audio.html#flac-free-lossless-audio-codec","title":"FLAC (Free Lossless Audio Codec)","text":"<ul> <li> <p>Kompressionsrate: 30-50%</p> </li> <li> <p>Ben\u00fctzt ein Verfahren \u00e4hlich auf die LZ-Codierung</p> </li> </ul>"},{"location":"21HS/INCO/6_Audio.html#mpeg","title":"MPEG","text":"<p>Es werden zwei Fakten des Menschlichen Geh\u00f6hres ausgenutzt:</p> <ol> <li> <p>die menschliche H\u00f6hrschwelle        Die H\u00f6hrschwelle ist bei jedem Mensch verschieden und \u00e4ndert isch auch \u00fcber das Leben einer Person.    </p> </li> <li> <p>Spektrale Maskierung    Wenn ein Lauterton abgespielt wird, werden leisere T\u00f6ne unh\u00f6hrbar. Kurz bevor einem Lautenton h\u00f6hrt man bereits leisse T\u00f6ne nicht mehr. Dasselbe gillt auch f\u00fcr danach.    </p> </li> </ol> <p>Diese zwei Fakten m\u00fcssen zusammen betrachtet werden. In der Unteren Graphik sieht man, wie die beiden Effekte kombiniert wurden.</p> <p></p> <p>Man unterteilt das Audiosignal in mehrere Frequenzb\u00e4nder. Jedes Frequenband enkodiert man mit genau so viel Bits, so dass das Quantisierungsrauschen unter der H\u00f6hrschwelle bzw. Maskierungsschwelle bleibt.  </p> <p></p>"},{"location":"21HS/INCO/6_Audio.html#mp3","title":"MP3","text":"<ul> <li>Frequenzb\u00e4nder in MP3: 512 (in ACC: 2048 Frequenb\u00e4nder)</li> </ul> <ul> <li> <p>Frequenz-Transformation - Adiosignal in mehrere Frequenzb\u00e4nder aufteilen</p> </li> <li> <p>Psycho-Akustisches-Modell - Man entscheidet, wie viel bits man ben\u00f6tigt (siehe oben)</p> </li> </ul>"},{"location":"21HS/INCO/7_Kanalkodierung.html","title":"Kanalkodierung","text":"<p>Man kann nicht garantieren, dass ein Kanal eine \u00dcbertragung fehlerlos \u00fcbertragen hat.</p>"},{"location":"21HS/INCO/7_Kanalkodierung.html#binaren-kanal","title":"Bin\u00e4ren Kanal","text":"<p>\\(\\varepsilon\\) (Epsilon) ist die Wahrscheinlichkeit, wie oft ein Fehlerauftritt (Bit Error Ratio = BER)</p>"},{"location":"21HS/INCO/7_Kanalkodierung.html#symmetrische-und-asymmetrische-kanale","title":"Symmetrische und asymmetrische Kan\u00e4le","text":"<p>Ein symetrischen kanal hat die selben \\(\\varepsilon\\) f\u00fcr beide wege. Ein Asymetrischen Kanal hat hingegen eine andere warscheinlichkeit, dass eine 0 zu einem 1 wird als umgekehrt.</p> <p>In dem folgenden Bild sieht man ein symmetrischen Kanal</p> <p> </p> <p>\\(P(y_m|x_n)\\) steht f\u00fcr die Wahrscheinlichkeit, dass \\(x_n\\) zu \\(y_m\\) wird.</p> <p></p> <p>Im obigen Bild sieht man nun, wie die Formeln f\u00fcr die Wahrscheinlichkeit f\u00fcr das \\(y_0\\) eintritt, bzw. dass \\(y_1\\) eintritt. Die Summe von \\(P(y_1)\\) und \\(P(y_0)\\) muss 1 ergeben.</p> <p>TODO: Entropie berechnen</p>"},{"location":"21HS/INCO/7_Kanalkodierung.html#kanalkapazitat","title":"Kanalkapazit\u00e4t","text":"<p>Die h\u00f6chste Kapazit\u00e4t eines Kanals ist 1bit Information pro versendetes 1 bit.</p> <p>Beides, die maximale Kanalkapazit\u00e4t, wie auch die St\u00f6rquelle, kann als Binary Memoryless Source (BMS) interpretiert werden und so die standard Entropie Formeln ben\u00fctzt werden.</p> <p>Daher kommt man auf die foglenden Formel:</p> <p>\\(C_{BSC}(\\varepsilon)=1-H(\\varepsilon)=1-(\\varepsilon \\cdot log_2 \\frac 1 \\varepsilon + (1-\\varepsilon )\\cdot log_2 \\frac 1 {1 - \\varepsilon})\\)</p> <p>\\(C_{BSC}\\) hat die Masseinheit bits/bits (bits pro bits).</p> <p></p>"},{"location":"21HS/INCO/7_Kanalkodierung.html#mathe","title":"Mathe","text":"<p>Um ein Frame zu brechnen gillt folgene Formel: \\(A_1 = A(1 - \\varepsilon)\\), dabei ist A die l\u00e4nge in Bits des Frames.</p> <p>F\u00fcr mehrere Frames gillt: \\(A_N=A(1-\\varepsilon)^N\\)</p> <p>Wenn \\(\\varepsilon\\) nahe an 1 ist, kann die folgende N\u00e4herung genutzt wird: \\(1 - N\\cdot \\varepsilon\\)</p>"},{"location":"21HS/INCO/7_Kanalkodierung.html#mehr-bit-fehlerwahrscheinlichkeit","title":"Mehr-Bit-Fehlerwahrscheinlichkeit","text":"<p>Wenn berechnet werden soll, was die Wahrscheinlichkeit ist, dass eine N-lange Sequenz genau F Fehler auftreten, dann kann folgende Formel genutzt werden:</p> <p>\\(P_{F,N}=\\begin{pmatrix}N \\\\ F\\end{pmatrix} \\cdot \\varepsilon^F \\cdot (1-\\varepsilon)^{N-F}\\)</p> <p>Dabei stellt <code>F</code> die Anzahl Fehler dar, <code>N</code> die L\u00e4nge des Block-Codes und \\(\\varepsilon\\) die Bit Error Ratio des Kanales. </p>"},{"location":"21HS/INCO/7_Kanalkodierung.html#binominalkoeffizenten","title":"Binominalkoeffizenten","text":"<p>\\(\\begin{pmatrix}N \\\\ F\\end{pmatrix}\\) wird gesprochen als n choose r und kann folgender massen berechnet werden</p> <p>\\(\\begin{pmatrix}n \\\\ k \\end{pmatrix}=\\frac{n!}{k!\\cdot(n-k)!}\\)</p> <p>Einige Taschenrechner haben eine Taste nCr, welche dies ausrechnen kann (der Canon F-718SGA hat dies ebenfalls)</p>"},{"location":"21HS/INCO/7_Kanalkodierung.html#framegrossen","title":"Framegr\u00f6ssen","text":"<p>Im obigen Bild sieht man die Wahrscheinlichkeit, dass ein Frame ankommt f\u00fcr eine gewisse Frame-Gr\u00f6sse.</p> <p>In dieser Abbildung sieht man, dass grosse Frames erst wirklich Sinn ergeben, wenn man Fehlerresistenten Kanal hat.</p>"},{"location":"21HS/INCO/7_Kanalkodierung.html#fehlerkorrekturverfahren","title":"Fehlerkorrekturverfahren","text":""},{"location":"21HS/INCO/7_Kanalkodierung.html#backward-error-correction","title":"Backward Error Correction","text":"<p>Es wird eine gewisse Redundanz hinzugef\u00fcgt (z.B. CRC), welche es erlauben, einen Fehler zu erkennen und die Daten nochmals anzufordern. </p> <ul> <li> <p>Der Empf\u00e4nger schickt eine Quittung zur\u00fcck. Wenn keine Quittung erhalten wurde, wird das Packet nochmals gesendet.   </p> </li> <li> <p>Nachteile:</p> </li> <li> <p>Langsam, da immer gewartet werden muss (Dies kann etwas mitigert werden, in dem die n\u00e4chste Nachricht bereits versendet wird, bevor die Quittung ankommt)</p> </li> <li> <p>Ein R\u00fcckkanal ist erfoderlich</p> </li> </ul>"},{"location":"21HS/INCO/7_Kanalkodierung.html#forward-error-correction","title":"Forward Error Correction","text":"<ul> <li>Mehr Redundanz, so dass der Fehler sogar korrigiert werden kann</li> </ul>"},{"location":"21HS/INCO/7_Kanalkodierung.html#hamming-distanz","title":"Hamming-Distanz","text":"<p>Die Hamming-Distanz beschreibt, wie viel Bits sich zwischen zwei Codew\u00f6rter \u00e4ndert. </p> <p>Die Codw\u00f6rter k\u00f6nnen auch auf einem W\u00fcrfel dargestellt werden in dem die Codew\u00f6rter in folgendes Koordinatensystem eingetragen werden:</p> <p></p> <p>Wenn alle Codew\u00f6rter  (im Beispiel unten ein 3-Zeichen langen Block-Code) in einem solchen Koordiantesystem eingetragen werden, kommt einen W\u00fcrfel oder \u00e4hliches heraus.</p> <p>Pro Zahl braucht man eine Dimension.</p> <p></p> <p>Die minimale Hamming-Distanz ist die kleinste Distanz zwischen zwei korrekten Code-Words.</p>"},{"location":"21HS/INCO/7_Kanalkodierung.html#fehlerkorrektur-mit-matrizen","title":"Fehlerkorrektur mit Matrizen","text":""},{"location":"21HS/INCO/7_Kanalkodierung.html#block-code","title":"Block-Code","text":"<p>Bei einem Blockcode werden die Informationen in Bl\u00f6cke verschickt. Dabei gibt es die N, die Anzahl Bits f\u00fcr Informationen und K, die Bits f\u00fcr den Fehlerschutz</p> <p>Systematische Blockcodes sind Blockcodes, bei welcher die Fehlerschutzbits zu Beginn oder am Ende steht.</p>"},{"location":"21HS/INCO/7_Kanalkodierung.html#systematischer-block-code","title":"Systematischer Block-Code","text":"<p>In einem Systematischer Block-Code sind die Informationsbits klar von den Fehlerschutz-Bits getrennt. Als entweder kommen zuerst die informations-Bits und dann die Fehlerschutz-Bits oder umgekehrt.</p> <p></p>"},{"location":"21HS/INCO/7_Kanalkodierung.html#linearer-block-code","title":"Linearer Block-Code","text":"<p>In einem linearen Block-Code, wenn man zwei beliebige Codes zusammen xored, dann ergibt dies einen weiteren g\u00fclltigen Code.</p> <p>Der Code C={000, 110, 001, 101} w\u00e4re zum Beispiel einer.</p> <p>Jeder Linearer Block-Code ben\u00f6tigt einen Code mit nur 0.</p> <p>Wenn Codew\u00f6rter aus einer Generatormatrix generiert wird, dann ist der Code linear.</p>"},{"location":"21HS/INCO/7_Kanalkodierung.html#zyklischer-block-code","title":"Zyklischer Block-Code","text":"<p>Ein zyklischer Block-Code kann man um eins Rotieren und bekommt wieder ein valides Codewort. </p> <p>Als Beispiel. Aus \"110\"  wird \"011\", dann \"101\" und dann wieder \"110\".</p> <p></p>"},{"location":"21HS/INCO/7_Kanalkodierung.html#perfekter-block-code","title":"Perfekter Block-Code","text":"<p>Ein Perfekter Blockcode hat die selbe Hamming-Distanz zwischen allen Codw\u00f6rtern</p>"},{"location":"21HS/INCO/7_Kanalkodierung.html#fehlererkennung","title":"Fehlererkennung","text":""},{"location":"21HS/INCO/7_Kanalkodierung.html#parity","title":"Parity","text":"<p>F\u00fcr ein Datenblock gibt es ein Parity-Bit.</p> <ul> <li> <p>Even Parity: Parity-Bit ist 1, wenn die Anzahl 1-er inkl. Parity-Bit is gerade, sonst 0</p> </li> <li> <p>Odd Parity: Parity-Bit ist 1, wenn die Anzahl 1-Bit inklusiv Parity-Bit  ungerade ist, sonst 0</p> </li> </ul> <p>Der Vorteil von Even-Parity ist, dass es linearen Block-Code ist.</p> <p>Mit dieser Methode kann 1-Bit Fehler erkennt wrden.</p>"},{"location":"21HS/INCO/7_Kanalkodierung.html#quer-pariy","title":"Quer-Pariy","text":"<p>Es wird ein Parity-Bit horizontal gebildet und ein Parity-Bit vertikal. F\u00fcr einen Block gibt es nun eine Linie f\u00fcr die horizontale gebildete Parity-Bits und eine Line f\u00fcr die vertikal gebildete Parity-Bits. Diese zwei Parity-Bit-Linien werden nun in ein Gesamt-Parity-Bit gerechnet.</p> <p>Die Coderate (\\(\\frac K N\\)) ist \\(\\frac{l\u00e4nge\\cdot breite}{l\u00e4nge \\cdot breite + l\u00e4nge + breite + 1}\\) </p> <p>Um dies zu optimieren, sollte probiert weden, den Bl\u00f6ck m\u00f6glich Quadratisch zu gestalten. L\u00e4nge und Breite sollte also m\u00f6glich gleich sein.</p>"},{"location":"21HS/INCO/7_Kanalkodierung.html#prufsumme","title":"Pr\u00fcfsumme","text":"<p>Man summiert alle Reihen/Elemente zusammen (\\(\\sum^{n-1}_{i=0}Element_i\\))</p> <p>Dabei hat man eine minimale Hamming-Distanz von 2. Die Hamming-Distanz in einigen F\u00e4llen kann auch h\u00f6her sein, da es ein \u00dcbertrag geben kann und somit ein Bit-Wechsel mehrere Bit-\u00c4nderungen in der Pr\u00fcfsumme zu folge haben.</p>"},{"location":"21HS/INCO/7_Kanalkodierung.html#tcp-udp-prufsumme","title":"TCP &amp; UDP Pr\u00fcfsumme","text":"<p>Die Pr\u00fcfsumme wird \u00fcber ein Frame gebildet mit der Wortbreite von 16 Bis.</p> <p>//TODO</p>"},{"location":"21HS/INCO/7_Kanalkodierung.html#1-bit-arithmetik","title":"1-Bit Arithmetik","text":"<p>Wichtig ist, dass es keine 2 geben kann (1+1=0). Der \u00dcbertrag wird vergessen.</p> <p>Man kann eine solche Zahl auch als Polynom darstellen.</p> <p>\\(1011=1\\cdot z^3+0\\cdot z^2+1\\cdot z^1+1\\cdot z^0\\)</p> <p>Auch mit diesem Polynomen kann man mit der 1-Bit Arithmetik rechnen. Beispiel: \\(\\begin{alignat} {1} (z^3+z^2+1)\\pm(z^2+z+1)=&amp;z^3\\cdot(1\\pm0)+z^2\\cdot(1\\pm1)+z^1\\cdot(0\\pm1)+z^0\\cdot (1\\pm1)\\\\=&amp;z^3+z\\end{alignat}\\)</p> <p>Dasselbe Spiel kann auch den anderen Rechnenoperationen durchgespielt werden.</p>"},{"location":"21HS/INCO/7_Kanalkodierung.html#crc","title":"CRC","text":"<p>Bei CRC teilt man den Datenblock als Polynom durch ein Generator-Polynom. Der dabei resultierender Rest ist die Pr\u00fcfsumme, welche mit verschickt wird.</p> <p>Es gibt verschiedene Generator-Polynome, jenach dem welchen Standard man folgt.</p> <p>Im Verfahren wird der Datenblock um die Anzahl Bits der Pr\u00fcfsumme verschoben (also aus 10, wird zB. 1000, wenn die Pr\u00fcfsumme 2-bit lang ist). Danach wird das Datenblock Polynom durch das Generator-Polynom geteilt. Der Rest, der dabei heraus kommt wird zum Datenblock addiert. Da man um die Anzahl Stellen der Pr\u00fcfsumme zu begin verschoben hat, hat man nun die Pr\u00fcfsumme vor der Zahl \"eingef\u00fcgt\".</p> <p>Nun haben wir ein Datenblock, welchen sicher durch den Generatorblock geteilt werden kann.</p> <p>Beispiel mit Dezimalzahlen: Datenblock: 123, Generatorbits: 12)</p> <p>1230 : 12 = R6 -&gt; 1236 ist teilbar</p> <p>Ebenfalls wichtig ist, dass wenn man durch eine Zahl teilt, ist der Rest h\u00f6chsten der Rest-1. In Bin\u00e4r heisst dass, eine Stelle weniger als durch was man geteilt hat.</p>"},{"location":"21HS/INCO/7_Kanalkodierung.html#fehlerkorrektur","title":"Fehlerkorrektur","text":""},{"location":"21HS/INCO/7_Kanalkodierung.html#forward-error-correction_1","title":"Forward Error Correction","text":"<p>Wenn man eine Hammingdistanz von 3 hat, kann man ein Bit korigieren. Dabei wird angenommen, dass ein Bit falsch ist und korrigiert zum n\u00e4chsten validen Codewort. Dies kann aber auch falsch sein!!</p> <p>Wie man oben bereits gesehen hat, nimmt man das Codewort, welches am n\u00e4chsten ist. </p> <p>Dabei kann man \\(\\left \\lfloor{\\frac{d_{min}-1)} 2}\\right \\rfloor\\) Fehler korrigieren.</p> <p></p>"},{"location":"21HS/INCO/8_Matrix.html","title":"Matrix","text":"<p>Eine Matrix ist ein rechteckiges Zahlenfeld, wie z.B. diese 3x2 Matrix: \\(\\begin{bmatrix}7 &amp; 6 &amp; 2\\\\2 &amp; 3 &amp; 3\\end{bmatrix}\\)</p>"},{"location":"21HS/INCO/8_Matrix.html#addition-und-subtraktion","title":"Addition und Subtraktion","text":"<p>Matrizen addieren und subtrahieren ist denkbar einfach. Jede Zahl wird mir der Zahl an der gleichen Stelle in der anderen Matrix addiert, bzw. subtrahiert. $$ \\begin{bmatrix}x_1 &amp; x_2 &amp; x_3 \\ x_4 &amp; x_5 &amp; x_6\\end{bmatrix} -  \\begin{bmatrix}y_1 &amp; y_2 &amp; y_3 \\ y_4 &amp; y_5 &amp; y_6\\end{bmatrix} =  \\begin{bmatrix}x_1-y_1 &amp; x_2-y_2 &amp; x_3-y_3 \\ x_4-y_4 &amp; x_5-y_5 &amp; x_6-y_6\\end{bmatrix} $$ Dasselbe gilt auch f\u00fcr die Addition.</p>"},{"location":"21HS/INCO/8_Matrix.html#skalar-multiplikation","title":"Skalar Multiplikation","text":"<p>Wenn eine Matrix mit einem Wert, wie 3 multipliziert wird, entsteht eine neue Matrix, in welcher alle Werte mit diesem Wert multipliziert wurden: $$ c \\cdot \\begin{bmatrix}x_1 &amp; x_2 &amp; x_3 \\ x_4 &amp; x_5 &amp; x_6\\end{bmatrix}=  \\begin{bmatrix}c\\cdot x_1 &amp; c\\cdot x_2 &amp; c\\cdot x_3 \\ c\\cdot x_4 &amp; c\\cdot x_5 &amp; c\\cdot x_6\\end{bmatrix} $$</p>"},{"location":"21HS/INCO/8_Matrix.html#matrix-multiplikation","title":"Matrix Multiplikation","text":"<p>Wenn zwei Matrizen multipliziert werden, wie \\(A\\cdot B\\), dann muss die Breite von \\(A\\) gleich die H\u00f6he von \\(B\\) sein.  Das Resultat ist eine Matrix, welche so hoch ist, wie \\(A\\) und so breit ist, wie \\(B\\). $$ \\begin{bmatrix}x_{11} &amp; x_{21} &amp; x_{31} \\ x_{12} &amp; x_{22} &amp; x_{32}\\end{bmatrix} \\cdot \\begin{bmatrix}y_{11} &amp; y_{21} \\ y_{12} &amp; y_{22} \\ y_{13} &amp; y_{23}\\end{bmatrix} =  \\begin{bmatrix}     x_{11}\\cdot y_{11} + x_{21}\\cdot y_{12} + x_{31}\\cdot y_{13} &amp;      x_{11}\\cdot y_{21} + x_{21}\\cdot y_{22} + x_{21}\\cdot y_{23} \\     x_{12}\\cdot y_{12} + x_{22}\\cdot y_{12} + x_{32}\\cdot y_{13} &amp;      x_{12}\\cdot y_{21} + x_{22}\\cdot y_{22} + x_{22}\\cdot y_{23}  \\end{bmatrix} $$ Oder in Worte, in das Feld (1/1) wird jeder Wert der Zeile 1 von A mit jedem Wert der Spalte 1 von B gerechnet. In den Wert (1/2), wird Zeile 1 mit der Spalten 2 gerchnet.</p> <p>Das Feld (2/1) wird berechnet, in dem die Reihe 2 mit der Spalte 1 multipliziert wird und das Feld (2/2) wird berechnet in dem, die Reihe 2 mit der Spalte 2 gerechnet wird.</p> <p>Wegen dieser Rechnenart, ist die Multiplikation mit zwei Matrizen nicht kommunikativ.</p> <p>Mit dem TR und Ein-Bit Arithmethik, kann modulo 2 gerechnet werden, um das korrekte Resultat zu bekommen.</p>"},{"location":"21HS/INCO/8_Matrix.html#einheitsmatrix","title":"Einheitsmatrix","text":"<p>Eine Einheitsmatrix, ist eine quadratische Matrix, welche Diagonal \u00fcberall eine <code>1</code> hat und sonst <code>0</code>: $$ \\begin{bmatrix} 1 &amp; 0 &amp; 0 &amp; 0\\ 0 &amp; 1 &amp; 0 &amp; 0\\ 0 &amp; 0 &amp; 1 &amp; 0\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{bmatrix} $$ Diese Matrix hat die Eigenschaft, dass wenn eine Matrix \\(A\\) mit einer Identit\u00e4tsmatrix multipliziert wird, dass wieder die Matrix \\(A\\) herauskommt.</p>"},{"location":"21HS/INCO/8_Matrix.html#inverse-matrix","title":"Inverse Matrix","text":"<p>Die Inverse Matrix, ist die Matrix \\(A^{-1}\\), welche mit der Matrix \\(A\\), eine Identit\u00e4tsmatrix \\(I\\) ergibt:</p> <p>\\(A\\cdot A^{-1}=I\\)</p>"},{"location":"21HS/INCO/8_Matrix.html#transponierte-matrix","title":"Transponierte Matrix","text":"<p>Eine transponierte Matrix \\(A^T\\) von \\(A\\) ist, wenn die Spalten in \\(A\\) zu Reihen werden und die Reihen in \\(A\\) zu Spalten werden: $$ B= \\begin{bmatrix} 1 &amp; 2 &amp; 3\\ 3 &amp; 4 &amp; 5 \\end{bmatrix}\\ B^T= \\begin{bmatrix} 1 &amp; 3 \\ 2 &amp; 4\\ 3 &amp; 5 \\end{bmatrix} $$</p>"},{"location":"21HS/INCO/9_Faltungscode.html","title":"9 Faltungscode","text":""},{"location":"21HS/INCO/9_Faltungscode.html#faltungscode","title":"Faltungscode","text":"<p>Ein Faltungscode ist ein Linearer code.</p> <p>Der Input wird dabei durch Flip-Flops gesendet, welche bewirken, dass ein Bit sich auf die n\u00e4chsten Outputs auswirken. So wird eine Redundantz geschaffen.</p> <p>(Im Beispiel unten sind die gelben Elemente die Flip-Flops, die Plus im Kreis sind XOR-Gates)</p> <p></p> <p>Wichtig zu erw\u00e4hnen ist, dass nach einem Codewort m\u00fcssen noch so viele \"0\" gesendet werden, wie die Anzahl Bits des Ged\u00e4chnis, da sonst das vorherige Codewort auf das n\u00e4chste Codewort einfluss nehmen w\u00fcrde. Diese Nullen nennt man \"Tail-Bits\". Diese sind in der unterigen Tabelle eingezeichnet.</p> <p></p> <p>Ein solche Schaltung kann man auch als Statemachine anschauen. In der unteren Tabelle sieht man, wie der aktuellen Zustand der Statemachine zum m\u00e4chsten Zustand wird. Die Output Spalte kann an der \"Present State\" Spalten abgelesen werden.</p> <p></p> <p>Das Zustanddiagramm unten ist eine Abbildung der Tabelle oben. Dabei kann jeder Zu</p> <p></p>"},{"location":"21HS/INCO/9_Faltungscode.html#eigenschaften","title":"Eigenschaften","text":"<p>Die Coderate kann folgendermassen ausgerechnet werden: \\(R=\\frac N {2\\cdot(N+m)}\\)</p> <p>Dabei ist \\(N\\) die Anzahl Inputs und \\(m\\) die Anzahl Tailbits, bzw. wie gross das Ged\u00e4chniss des Faltungscode ist.</p>"},{"location":"21HS/INCO/9_Faltungscode.html#freie-hamming-distanz","title":"Freie Hamming-Distanz","text":"<p>Das ist der Pfad im Zustandsdiagramm mit m\u00f6glichst wenig <code>1</code> (aber nicht nur <code>0</code>) beim Output des Encoders.  Im oberen Zustandsdiagram h\u00e4tten wir eine Freie Hamming-Distanz von 5 (Von <code>00</code> zu <code>10</code> (dabei hat man 2 <code>1</code>); von <code>10</code> zu <code>01</code> (dabei hat man 1x<code>1</code>); von <code>01</code>  zu <code>00</code> (nochmals 2x<code>1</code>); Im gesammten kommt man auf 5). Dies funktioniert auch im Tellis-Diagramm.</p> <p>Aus dies kann ausgerechnet werden, wie viel Fehler behoben werden k\u00f6nnen: \\(\\lfloor\\frac{d_{free}-1}2\\rfloor\\)</p>"},{"location":"21HS/INCO/9_Faltungscode.html#generatoren","title":"Generatoren","text":"<p>Unten sieht man die Schaltung f\u00fcr die Generatoren \\((1101b;1111b)\\)</p> <p></p> <p>Hier k\u00f6nnen die XOR-Gates, welche zu Null verbinden, weggelassen werden und zu folgendem Diagramm optimiert werden:</p> <p></p> <p>In dem Beispiel von oben, waren es immer zwei Generatoren, da zwei Linien von mit XOR von \\(U_K\\) weggingen.</p> \\[ g_1=(111)=z^2+1\\\\ g_2=(101)=z^2+z+1\\\\ u=(1011)=z^3+z+1\\\\  \\\\ g_2\\cdot u=(z^2 + 1) \\cdot (z^3 + z + 1)=z^5+z^3+z^2+z^3+z+1=z^5+z^2+z+1)\\\\ \\rightarrow c_{2k}=(100111) \\] <p>Achtung: wir rechnen mit 1-Bit Arithmetik</p>"},{"location":"21HS/INCO/9_Faltungscode.html#decodieren","title":"Decodieren","text":"<p>Beim Decodieren wird jeden m\u00f6glichen Pfad durch gerechnet und dabei die Bitfehler gez\u00e4hlt, welche auftretten m\u00fcssten. Wenn zwei Pfade sich treffen, wird der Pfad mit den kleinsten Bitfehler gew\u00e4hlt. Am Ende bleibt ein Pfad mit den wenigsten Bitfehler, welcher am Wahrscheinlichsten ist.</p>"},{"location":"21HS/INCO/9_Faltungscode.html#tail-bits","title":"Tail-Bits","text":"<p>Dies sind Bits, welche am Ende eines Inputs noch angeh\u00e4ngt werden m\u00fcssen um die Schaltung wieder in den <code>0</code>-Zustand zur\u00fcck zu setzten. Dass heisst, wenn die Schaltung des Faltungscodes zwei Bits, bzw. zwei Flip-Flops enth\u00e4lt, dann werden zwei Tail-Bits ben\u00f6tigt.</p>"},{"location":"21HS/INCO/summaries/summary_2022-01-20.html","title":"INCO Summary - 20.01.2022","text":"<ul> <li>INCO Summary - 20.01.2022<ul> <li>Kombinatorische Logik</li> <li>Digitaltechnik<ul> <li>Addierer</li> <li>Flip-Flops</li> </ul> </li> <li>Zahlensystem<ul> <li>Zahlen Umwandeln</li> <li>Negative Zahlen</li> <li>Codes<ul> <li>Gray Code</li> <li>ASCII Code</li> <li>UTF-8</li> </ul> </li> <li>Endiannes</li> </ul> </li> <li>Informationstheorie</li> <li>Quellenencoding<ul> <li>Laufenl\u00e4ngen Encoding</li> <li>Huffman Codes</li> </ul> </li> <li>LZ77 &amp; LZW</li> <li>JPEG</li> <li>Audiocodierung</li> <li>Kanalcodierung</li> <li>Fehlererkennung</li> <li>Fehlerkorrigierende Codes</li> <li>CRC</li> <li>Faltunscode</li> </ul> </li> </ul>","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#kombinatorische-logik","title":"Kombinatorische Logik","text":"Gatter Name Formel NOT-Gate \\(!A\\) AND-Gate \\(A\\&amp;B=A\\wedge B\\) NAND-Gate \\(!(A\\&amp;B)\\) OR-Gate \\(A\\#B=A\\vee B\\) NOR-Gate \\(!(A\\#B)\\) XOR-Gate \\(A\\$B\\) XNOR-Gate \\(!(A\\$B)\\) Disjunktive Normalform \\((A\\&amp;B)\\#(C\\&amp;D)\\#..\\) <p>\\(!(A\\&amp;B)=!A\\#!B\\) \\(A\\&amp;(B\\#C)=(A\\&amp;B)\\#(A\\&amp;C)\\)</p> <p>Wenn man aus einer Wahrheitstabelle eine Formel bilden muss, kann man f\u00fcr jedes 1 im Output einen Ausdruck aus den Inputs bilden, welche in diesem Fall 1 ergeben. Diese Ausdr\u00fccken werden mit OR-Gates verbunden. </p>","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#digitaltechnik","title":"Digitaltechnik","text":"","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#addierer","title":"Addierer","text":"<p>Halbaddierer Ein Addierer, welcher nur mit 1Bit ohne Eingang-Carry-Bit umgehen kann. Aus einem Halbaddierer kann einen Volladdierer erstellt werden, welcher zus\u00e4tzlich auch noch ein \u00dcbetrag der Vorheriger Addition ben\u00fctzen kann. Mehrere Volladdierer k\u00f6nnen hintereinander gesetzt werden und so beliebig viel stellen berechnet werden.</p>","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#flip-flops","title":"Flip-Flops","text":"<p>Wenn an C eine \"Rising-Edge\" anliegt, dann wird D gelesen, gepseichert und auf Q ausgegeben, bis auf C die n\u00e4chste \"Rising-Edge\" anliegt.</p> <p>Mit Flip-Flops werden oft Sequentielle Logik gebaut. Dabei werden mehrere Flip-Flips in serie geh\u00e4ngt.</p> <p></p> <p>Beipiele:</p> Bild Erkl\u00e4rung Frequenzteiler Gesetuerter Frequenzteiler FlankendeketorErkennt Flanken bei einer st <p>Synchronschaltung: Eine Schaltung, welche sich nur bei einer positiven Clock-Flanke \u00e4ndert (oder anderes Clocksignal).</p>","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#zahlensystem","title":"Zahlensystem","text":"","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#zahlen-umwandeln","title":"Zahlen Umwandeln","text":"\\[ \\begin{alignat} {6} \\text{Zu konvertieren:}12.6875\\\\ 12 &amp;: 2 &amp;= 6 \\text{ Rest } 0 &amp;&amp; 0.6875 \\cdot 2 &amp;= 0.375 + 1\\\\ 6 &amp;: 2 &amp;= 3 \\text{ Rest } 0 &amp;&amp; 0.375 \\cdot 2 &amp;= 0.750 + 0\\\\ 3 &amp;: 2 &amp;= 1 \\text{ Rest } 1&amp;&amp; 0.750 \\cdot 2 &amp;=0.500 + 1\\\\ 1 &amp;: 2 &amp;= 0 \\text{ Rest } 1&amp;&amp;0.500\\cdot 2 &amp;= 0 + 1\\\\  \\text{Ergebniss: } 1100_b&amp;&amp;&amp;\\hspace{2cm}&amp;&amp;\\text{Ergebniss: }0.1011_b\\\\  \\text{Zusammen: } 1100.1011_b \\end{alignat} \\] <p>(Achtung Reihenfolge: bei Nicht-Kommastellen, von unten nach oben; bei Kommastellen: von oben nach unten)</p>","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#negative-zahlen","title":"Negative Zahlen","text":"System Verfahren Beispiel 9er-Komplement Jede Ziffer von 9 abziehen \\(0022\\to 9977\\) 10er-Komplement Jede Ziffer von 9 abziehen und das Result +1 rechnen \\(0022 \\to 9977 \\to 9978\\) 1er-Komplement Jede Ziffer von 1 abziehen \\(0011_b \\to 1100_b\\) 2er-Kompelemnt Jede Ziffer von 1 abziehen und das Resultat +1 rechnen \\(0011_b \\to 1100_b \\to 1101_b\\) <p>Mit und Ohne Vorzeichen:  </p>","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#codes","title":"Codes","text":"DEZ HEX BIN Dez Hex Bin DEZ HEX BIN 0 0 0000 6 6 0110 12 C 1100 1 1 0001 7 7 0111 13 D 1101 2 2 0010 8 8 1000 14 E 1110 3 3 0011 9 9 1001 15 F 1111 4 4 0100 10 A 1010 5 5 0101 11 B 1011","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#gray-code","title":"Gray Code","text":"<p>Ein Code, welcher f\u00fcr Schleifkontakte be\u00fctzt wird und es \u00e4ndert sich maximal 1 Bit f\u00fcr benachbarte Codew\u00f6rter. </p>","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#ascii-code","title":"ASCII Code","text":"","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#utf-8","title":"UTF-8","text":"Unicode-Bereicht Utf-8 Codierung Anzahl Code-Bits 0000'0000 - 0000'007F 0xxxxxxx 7 0000'0080-0000'07FF 110xxxxx 10xxxxxx 11 (5 + 1*6) 0000'0800-0000'FFFF 1110xxxx 10xxxxxx 10xxxxxx 16 (4 + 2*6) 0001'0000-0010'FFFF 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx 21 (3 + 3*6)","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#endiannes","title":"Endiannes","text":"Name Beschreibung Darstellung Little Endian Das niederstwertige Byte wird zuerst geschickt FEDCBA9 87654321 Big Endian Das h\u00f6chstwertige Byte wird zuerst geschickt 87654321 FEDCBA9","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#informationstheorie","title":"Informationstheorie","text":"<p>Discrete Memoryless Source (DMS) gibt einzelne unabh\u00e4ngige Nachrichten aus. Ein Beispiel w\u00e4re einen W\u00fcrfel.</p> Formel Erkl\u00e4rung \\(I(x_n)=\\log_2(\\frac 1 {P(x_n)}) [Bits]\\) \\(I\\) ist der Informationsgehalt von der Nachricht \\(x_n\\) \\(H(X)=\\sum^{N-1}_{n=0}P(x_n)\\cdot \\log_2(\\frac 1 {P(x_n)}) [Bit/Symbol]\\) \\(H\\) ist die Entropie der Quelle \\(X\\)","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#quellenencoding","title":"Quellenencoding","text":"Formel/Wort Erkl\u00e4rung Codwortl\u00e4nge \\(l_n\\) Die Anzahl Bits eines Codewortes \\(L=\\sum^{N-1}_{n=0} P(x_n)\\cdot l_n [Bits/Symbol]\\) Die Codewortl\u00e4nge \\(L\\) einer Quelle \\(R(X)=L(X)-H(X) [Bits/Symbol]\\) Redundanz: Wie viele Bits pro Symbol in einer Quelle redundant sind \\(R(X)=\\frac{\\text{komprimierte Bits}}{\\text{unkombrimierte Bits}}\\) Die Coderate \\(R\\); besagt, wie fest komprimiert wurde <p>}So lange die Redundanz \\(R\\) eines Codes gr\u00f6sser als <code>0</code> ist, kann noch verlustfrei komprimiert werden.</p>","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#laufenlangen-encoding","title":"Laufenl\u00e4ngen Encoding","text":"<p>Anstatt \"AAAABDEFGG\" speichert man \"B04A B01B DEFGG\". Hier wurde B als Token genutzt, da es am seltesten vorkommt.  Ebenfalls wurde der Z\u00e4hler auf eine zweistellige Zahl festgelegt. </p> <p>Bei Schwarzweiss Bilder kann zwischen Schwarz und Weiss gewechselt weden (10, 5, 3), w\u00e4ren 10 schwarze Pixel, 5 weisse Pixel, gefolgt von 3 schwarzen Pixeln.</p>","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#huffman-codes","title":"Huffman Codes","text":"<p>Codes mit dem Huffmanverfahren sind automatisch pr\u00e4frixfrei und optimal (es gibt keinen besseren pr\u00e4fixfreien Code)</p> <p>Folgendes ist das Vorgehen:</p> <ol> <li>Ordne alle Symbole nach aufsteigenen Auftretenswahrscheinlichkeiten auf einer Zeile. Dies sind die Bl\u00e4tter</li> <li>Notiere unter jedes Blatt seine Wahrscheinlichkeit</li> <li>Schliesse die beiden Bl\u00e4tter mit der kleinsten Wahrscheinlichekit an einer gemeinsamen Astgabel an und ordne dem Ast die Summe der Wahrscheinlichkeiten zu</li> <li>Wiederhole Schritt 2 es nur noch ein Stamm gibt</li> <li>Jedem Ast wird nun ein eine 0, wenn man links geht und eine 1 wenn man rechts geht, zugewiessen</li> <li>Die Pfade zu allen Bl\u00e4tter aufschreiben. Das ist der Huffmancode</li> </ol>","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#lz77-lzw","title":"LZ77 &amp; LZW","text":"<p>Wenn keine Sequenz gefunden wird, wird der Token <code>(0, 0, T)</code>, wobei <code>T</code> der n\u00e4chste Buchstabe ist.</p> <p>LZW: Die l\u00e4ngste Zeichenkette im W\u00f6rterbuch f\u00fcr die n\u00e4chsten Zeichen finden und ein neuen W\u00f6rterbucheintrag erstellen, mit dem aktuellen Token + das n\u00e4chste Zeichen.</p> <p>Empfangener Token ausgeben und im W\u00f6rterbuch eintragen mit einem Blank am Ende. Beim n\u00e4chsten Token wird die Blank des letzten W\u00f6rterbuch erg\u00e4nzt</p>","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#jpeg","title":"JPEG","text":"<p>YCrCb (Y=Helligkeit, Cb=Blau Anteil, Cr=Rot Anteil)</p> <p>\\(\\begin{bmatrix} Y \\\\ C_B \\\\ C_R \\end{bmatrix} = \\begin{bmatrix}0.299 &amp; 0.587 &amp; 0.114\\\\ -0.1687 &amp; -0.3313 &amp; 0.5\\\\ 0.5 &amp; -0.4187 &amp; -0.0813\\end{bmatrix} \\cdot \\begin{bmatrix} R\\\\G\\\\B \\end{bmatrix} + \\begin{bmatrix} 0 \\\\ 128 \\\\ 128 \\end{bmatrix}\\)</p> <p>\\(\\begin{bmatrix} R \\\\ G \\\\ B \\end{bmatrix} = \\begin{bmatrix}1 &amp; 0 &amp; 1.402\\\\ 1 &amp; -0.34414 &amp; -0.71414\\\\ 1 &amp; 1.772 &amp; 0\\end{bmatrix} \\cdot \\begin{bmatrix} Y\\\\C_B - 128\\\\C_R - 128\\end{bmatrix}\\)</p> <p></p> <p>Nur die Farbkan\u00e4le werden \"gedownsamplet\", der Helligkeitskanal bleibt bei der vollen Aufl\u00f6sung.</p> <p>  $$ F_{vu}=\\frac 1 4 C_u C_v \\sum^7_{x=0}\\sum^7_{y=0}B_{yx} \\cos(\\frac {(2x+1)u\\pi} {16})\\cos(\\frac{(2y+1)v\\pi} {16})\\ B_{yx}=\\frac 1 4 \\sum^7_{u=0}\\sum^7_{v=0}C_uC_vF_{vu}\\cos(\\frac{(2x+1)u\\pi}{16})\\cos(\\frac{(2y+1)v\\pi}{16}) $$</p>","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#audiocodierung","title":"Audiocodierung","text":"<p>Pro Verdoppelung in Schalldruck, nimmt es 6.0206dB zu: \\(L=20\\cdot log_{10}(\\frac p {p_0})\\)  (\\(p\\)=Schalldruck; \\(p_0\\)=Bezugsschalldruck)</p> <p>\\(f_{abtast} &gt; 2\\cdot f_{max}\\)</p> <p></p> <p>Um jede erh\u00f6hung um 1 Bit nimmt das Rauschen um 6dB ab</p> <p>PCM: </p> <ul> <li>Absolut: Jeder Wert wird als absoluter Wert gespeichert</li> <li>Differential-PCM (DPCM): Es werden die Differenzen gespeichert</li> <li>Adaptive Differenztial-PCM (ADPCM): Es wird die Differenz der Differenz gespeichert.</li> </ul>","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#kanalcodierung","title":"Kanalcodierung","text":"<p>\\(\\varepsilon\\) (Epsilon) ist die Wahrscheinlichkeit, wie oft ein Fehlerauftritt (Bit Error Ratio = BER) Coderate: \\(R=\\frac{K}{N}\\) \\(K\\)=Informationsbits; \\(N\\)=Totale Bits</p> <p></p> <p>KanalKapazit\u00e4t: \\(C_{BSC}(\\varepsilon)=1-H(\\varepsilon)=1-(\\varepsilon \\cdot log_2 \\frac 1 \\varepsilon + (1-\\varepsilon )\\cdot log_2 \\frac 1 {1 - \\varepsilon}) [Bits/Bits]\\)</p> Formel Erkl\u00e4rung \\(P_{F,N}=\\begin{pmatrix}N \\\\ F\\end{pmatrix} \\cdot \\varepsilon^F \\cdot (1-\\varepsilon)^{N-F}\\) (N=L\u00e4nge des Block-Codes, F=Anzahl Fehler, \\(\\varepsilon\\) =Bit Error Ratio des Kanales). Rechnet die Wahrscheinlichkeit aus, dass \\(F\\) Fehler bei einem \\(N\\) langem Block-Code auftreten \\(P_{\\le1,N}=\\sum^1_{t=0}\\begin{pmatrix}N \\\\ t\\end{pmatrix} \\cdot \\varepsilon^t \\cdot (1-\\varepsilon)^{N-t}\\) Die Wahrscheinlichkeit, dass ein Codewort korrekt \u00fcbertragen wurde \\(I(X,Y)=H(Y)-H(\\varepsilon) [bit/bit]\\) Die bleibende Informationen im Kanal","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#fehlererkennung","title":"Fehlererkennung","text":"<ul> <li>Backward Error Correction: Fehler kann erkennt werden und die Daten neuangefordert werden</li> <li>Forward Error Correction: Die Fehler k\u00f6nnen erkennt und zu einem gewissen Punkt korrigiert werden</li> </ul> <p>Blockcodes:</p> <ul> <li>Systematischer Block-Code: Informationsbits und Fehlerschutsbits sind klar getrennt (N=Anzahl CodeBits, K= InformationsBits)</li> <li>Linearer Block-Code: Jedes mit Jedem geXored Codewort gibt ein Codewort (jeder Code mit einer Generatormatrix ist linear)</li> <li>Zyklischer Block-Code: Rotierbar (<code>110</code> \\(\\rightarrow\\) <code>011</code>\\(\\rightarrow\\) <code>101</code> \\(\\rightarrow\\) <code>110</code>)</li> <li>Perfekter Block-Code: gleiche Hammingdistanz zwischen allen Codew\u00f6rtern</li> <li>Das Hamming-Gewicht=die kleinste Anzahl <code>1</code> auf einer Linie der Generator-Matrix   Das Hamming-Gewicht ist gleich die Hamming Distanz \\(d_{min}\\)</li> <li>Erkennbare Fehler: \\(d_{min}-1\\) und korrigierbare Fehler: \\(\\frac{d_{min}-1}2\\)</li> </ul>","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#fehlerkorrigierende-codes","title":"Fehlerkorrigierende Codes","text":"<p>\\(\\frac {d_{min}-1}2\\) korrigierbar </p> <p>Generatormatrix Bedinungen:</p> <ol> <li>f\u00fcr \\(d_{min}=3\\) muss jeder Code (ausser dem 0-Code) min. 3x<code>1</code> haben</li> <li>Mindestens eine <code>1</code> muss in der Einheitsmatrix sein</li> <li>Jede Pari\u00e4tsmatrix-Zeile muss 2x<code>1</code> beinhalten</li> </ol>","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#crc","title":"CRC","text":"<p>Das Datenpolynom wird um die Anzahl Stellen des Generatorpolynoms verschoben und anschliessend durch das Generatorpolynom geteilt. Das Resultat wird zum Datenpolynom hinzu addiert. Dabei werden die entstandenen <code>0</code> des Datenpolynoms gef\u00fcllt. </p> <p>Der Empf\u00e4nger kann den empfangenen Wert durch das Generatorpolynom teilen und muss <code>0</code> erhalten.</p>","tags":["summary","INCO"]},{"location":"21HS/INCO/summaries/summary_2022-01-20.html#faltunscode","title":"Faltunscode","text":"<p>Die Freie Distanz \\(d_{free}=w_{min}\\) und kann bestimmt werden, in dem der Pfad mit den wenigsten Ausgang <code>1</code> stehen (aber nicht nur <code>0</code>). Die Anzahl <code>1</code> beim Ausgang ist die minimale freie Distanz. Die Coderate \\(R=\\frac K N = \\frac{K}{2\\cdot(K+m)}\\), wobei \\(m\\) die Anzahl Tail-Bits sind.</p> <p></p> <p></p> <p></p>","tags":["summary","INCO"]},{"location":"21HS/PM1/Beschlussprotokoll.html","title":"Beschlussprotokoll","text":"<ul> <li>Retrospektive (m\u00fcndliches Gespr\u00e4ch) &amp; Beschlussprotokoll von Retrospektive</li> <li>Teamreflexion (Wie funktioniert unser Team)</li> </ul>"},{"location":"21HS/PM1/Beschlussprotokoll.html#beschlussprotokoll","title":"Beschlussprotokoll","text":"<p>Funktion:</p> <ul> <li>Man Informiert Teammitglieder und Aussenstehende</li> <li>Aufgabenverteilung</li> <li>Man kann in Protokoll klar definieren, wer, was, auf wann macht und sp\u00e4ter auf das zur\u00fcck verweissen</li> <li>Ged\u00e4chnisst\u00fcze</li> <li>(Juristischer Beweis)</li> </ul> <p>Protokollarten:</p> <ul> <li>Ergebnissprotokoll</li> <li>H\u00e4lt nur das Ergebniss fest</li> <li>Verlaufsprotokoll</li> <li>W\u00f6rtliches Protokoll<ul> <li>Jedes Wort wird festgehalten (wie z.B. in Gericht)</li> </ul> </li> <li>Ausf\u00fchrliches Protokoll</li> </ul> <p>In unserem Protokoll m\u00fcssen folgenedes festgehaltet werden:</p> <ul> <li>Dokumentation der Ergebnisse</li> <li>Die Logik hinter den Entscheidngen (Ist das logisch verst\u00e4ndlich?)</li> <li>keine Redebeitr\u00e4ge</li> </ul> <p>Vor der Sitzung soll ein Protokoll schreiber festgelegt werden, welcher sich w\u00e4hrend der Sitzung Notizen erstellt und danach das Protokoll davon erstellt.</p>"},{"location":"21HS/PM1/Projekt%203%20-%20Siedler%20von%20Catan.html","title":"Projekt 3 - Siedler von Catan","text":"<ul> <li>Handeln und Bauen in beliebigereren Reihenfolge</li> <li> <p>Hexboard nicht bearbeiten</p> </li> <li> <p>Config darf nicht angepasst werden</p> </li> <li> <p>Die \u00f6ffentliche Schnittstelle der SiedlerGame darf nicht angepasst werden </p> </li> <li> <p>Dummy kann am Ende gel\u00f6scht werden</p> </li> <li> <p>L\u00e4ngste Strasse ODER R\u00e4uber</p> </li> </ul>"},{"location":"21HS/PM1/Retrospektive.html","title":"Retrospektive","text":"<ol> <li>Erfolge (was hat gut geklappt)</li> <li>Herausforderungen, die L\u00f6sung und die Probleml\u00f6sungsstrategie</li> <li>Umgang mit Herausforderungen</li> <li>Wichtigste Erkenntnisse aus der Teamreflexion</li> <li>Pers\u00f6nliche Ziele und Teamziele (Massnahmen) f\u00fcr das n\u00e4chste Projekt</li> <li>Feedback von Tech-doz zum Code und Projekt allgemein</li> <li>Besprechung der Erkenntnise f\u00fcr das n\u00e4chste Projekt</li> </ol> <p>Jeder sollte etwas sagen. Allerdings ist es sinnvoll einen Sitzungsleiter zu definiert.</p> <p>Es kann eine Presentation als Strukturierung (mit max. 10 Folien) erstellt werden. Die Slides k\u00f6nnen von allen Teammitglieder beigetragen werden.</p>"},{"location":"21HS/PM1/Retrospektive.html#things-to-remember","title":"Things to remember:","text":"<ul> <li>Struktur geben</li> <li>Traktandenliste</li> <li>Sitzungsleiter</li> <li>Wenn jemand von einem Thema abschweift, soll der Sitzungsleiter, oder jemand anders vom Team, wieder auf das eigentliche Thema zur\u00fcckf\u00fchren. Wenn das Thema allerdings f\u00fcr alle wichtig ist, dann kann es sinnvoll sein, auf das Thema einzugehen.</li> </ul>"},{"location":"22FS/AN2/summary_2022_06_20.html","title":"AN2 Summary 26.01.2022","text":"<ul> <li>AN2 Summary 26.01.2022<ul> <li>Reihen &amp; Folgen</li> <li>Grenzwert<ul> <li>Stetigkeit<ul> <li>Nullstellen finden mit Stetigkeit</li> </ul> </li> </ul> </li> <li>Hornerschema</li> <li>Polynomdivision</li> <li>Extremwerte (ev. l\u00f6schen)<ul> <li>Wendepunkte und Sattelpunkte (ev. l\u00f6schen)<ul> <li>Fragen f\u00fcr die Kurvendiskussion (ev. l\u00f6schen)</li> </ul> </li> </ul> </li> <li>Extremaufgaben (ev. l\u00f6schen)</li> <li>Ableiten<ul> <li>Newton Verfahren</li> </ul> </li> <li>Integrieren<ul> <li>Substition</li> <li>Partielle-Integration</li> <li>Partielbruchzerlergung</li> <li>Uneigentliche Integrale</li> </ul> </li> <li>Differentialgleichungen<ul> <li>Gew\u00f6hliche Differentialgleichung 1. Ordnung<ul> <li>Richtungsfeld</li> <li>Euler-Schritte</li> </ul> </li> <li>Separierbare Differentialgleichungen<ul> <li>Autonome Differentialgleichung</li> </ul> </li> <li>Lineare Differentialgleichungen</li> </ul> </li> <li>Anwendung von Integrale<ul> <li>Mittelwert</li> <li>Arbeitsintegral</li> <li>Rotationsk\u00f6rper</li> <li>Bogenl\u00e4nge</li> <li>Mantelfl\u00e4che eines Rotationsk\u00f6rpers</li> <li>Schwerpunkt einer Fl\u00e4che von zwischen zwei Kurven</li> <li>Schwerpunkt eines Rotationosk\u00f6rper</li> </ul> </li> <li>Taylor-Reihen<ul> <li>Komposition</li> <li>Konvergenz</li> </ul> </li> <li>Hopital-Regel</li> </ul> </li> </ul> Begriff Erkl\u00e4rung gerade Funktion Wenn der Graph achsensymmetrisch mit der y-Achse ist (wie bei \\(x^2\\)) ungerade Funktion Wenn der Graph punktsymmetrisch mit dem Nullpunkt ist (wie bei \\(x^3\\)) Komposition \\((g\\circ f)(x)=g(f(x))\\) Injektive Funktion Keine zwei \\(x\\) f\u00fchren zum selben \\(y\\). Von einer injektiven Funktion gibt es eine Umkehrfunktion. \\(\\sum^5_{k=1}a_k\\) Addiert \\(a_k\\) bis (inklusiv) \\(5\\): \\(a_1+a_2+a_3+a_4+a_5\\) \u00dcbliche Summenformeln \\(\\sum^n_{k=1}k=\\frac{n(n+1)}2\\)\\(\\sum^n_{k=1}k^2=\\frac{n(n+1)(2n+1)}6\\) Polynomfunktion \\(f(x)=a_n\\cdot x^n+a_{n-1}\\cdot x^{n-1}+..+a_1\\cdot x + a_0\\) Komposition \\((g\\circ f)(2)=g(f(2))\\) Funktion Mapt vom Definitionsbereich \\(D\\) zum Wertebereich \\(W\\) Mitternachtsformel \\(D=b^2-4ac\\) und \\(x=\\frac{-b\\pm \\sqrt D}{2a}\\)","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#reihen-folgen","title":"Reihen &amp; Folgen","text":"Name explizite Darstellung implizite Darstellung aufz\u00e4hlende Darstellung Arithmetische Folge \\(a_n=c+(n-1)\\cdot d\\) \\(a_1=c\\\\a_{n+1}=a_n+d\\) \\(c,c+d,c+2d,c+3d,...\\) Geometrische Folge \\(a_n=c\\cdot q^{n-1}\\) \\(a_1=c\\\\a_{n+1}=q\\cdot a_n\\) \\(c, c\\cdot q, c\\cdot q^2, c\\cdot q^3, ...\\) Harmonische Folge \\(a_n=\\frac 1 n\\) (nicht \u00fcblich) \\(1, \\frac 1 2, \\frac 1 3, \\frac 1 4, ...\\) Fibonacci-Folge (nicht elementar) \\(a_1=1, a_2=1\\\\a_{n+1}=a_n+a_{n+1}\\) \\(1, 1, 2, 3, 5, 8, ...\\) <ul> <li>Arithmetische Reihee</li> <li>\\(a_k=a_1+(k-1)\\cdot d\\)</li> <li>\\(s_n=n\\cdot a_1+\\frac{n(n-1)}2 \\cdot d\\)</li> <li>\\(\\sum^n_{k=0}(k^2)=\\frac{n(n+1)(2n+1)}{6}\\)</li> <li>\\(\\sum^n_{k=0}k=\\frac{n(n+1)}{2}\\)</li> <li>Strebt immer geben \\(\\infty\\) oder \\(-\\infty\\)</li> <li>Geometrische Reihe</li> <li>\\(a_n=q^{(k-1)}\\cdot a_1\\)</li> <li>\\(s_n=\\frac{a_1(q^n-1)}{q-1}\\)</li> <li>Wenn \\(|q|&lt;1\\) ist, dann ist der Grenzwert \\(\\frac {a_1}{1-q}\\)</li> </ul>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#grenzwert","title":"Grenzwert","text":"<ul> <li>\\(\\lim_{n\\to\\infty}(c\\cdot a_n)=c\\cdot \\lim_{n\\to \\infty} a_n\\)</li> <li>\\(\\lim_{n\\to \\infty}(a_n+b_n)=\\lim_{n\\to \\infty}=\\lim_{n\\to \\infty}a_n + \\lim_{n\\to \\infty} b_n\\)</li> <li>\\(\\lim_{n\\to \\infty}(a_b\\cdot b_n)=\\lim_{n\\to \\infty}a_b \\cdot \\lim_{n\\to \\infty} b_n\\)</li> <li>\\(\\lim_{n\\to \\infty}(\\frac {a_n} {b_n})=\\lim_{n\\to \\infty} a_n : \\lim_{n\\to \\infty}b_n\\)</li> <li>\\(\\lim_{n\\to\\infty}(\\sqrt a - \\sqrt b)=\\lim_{n\\to\\infty}(\\frac{(\\sqrt a-\\sqrt b)(\\sqrt a + \\sqrt b)}{\\sqrt a + \\sqrt b})=\\lim_{n\\to\\infty}(\\frac{a-b}{\\sqrt a + \\sqrt b})\\)</li> </ul> <p>Wenn man einen Bruch in einem \\(\\lim\\) hat, dann kann mit dem h\u00f6chsten \\(n^k\\) mit dem h\u00f6chsten \\(k\\) gek\u00fcrzt werden</p> <p>Beispiel:  $$ \\lim_{n\\to \\infty}=\\frac{3n^2+7n-3}{n^2+4n-11}=\\lim_{n\\to \\infty}\\frac{n^2(3+\\frac 7 n-\\frac 3 {n^2})}{n^2(1+\\frac 4 n - \\frac {11} {n^2})}\\rightarrow\\frac {3+0+0}{1+0+0}=\\frac 3 1 = 3 $$ </p> <p>Spezialfall: \\(\\lim_{n\\to\\infty}(1+\\frac 1 n)^n=e=2.718\\)  $$ \\text{Speziallfall: }\\lim_{n\\to\\infty}(1+\\frac 1 n)^n=e=2.718\\ \\text{Beispiel: } \\lim_{n\\to\\infty}(1+\\frac{9}{4n})^{-5n}\\ (1+\\frac{9}{4n})^{-5n}=(1+\\frac{9}{4n}\\cdot\\frac{\\frac 1 9}{\\frac 1 9})^{-5n}=(1+\\frac 1 {\\frac {4n} 9})^{-5n}\\=(1+\\frac 1 {\\frac {4n} 9})^{-5n\\cdot\\frac{\\frac{4n} 9}{\\frac{4n} 9}}=(1+\\frac 1 {\\frac {4n} 9})^{\\frac{4n} 9\\cdot \\frac{-5n}{\\frac{4n} 9}}=(1+\\frac 1 {\\frac {4n} 9})^{\\frac {4n} 9\\cdot \\frac{-45} 4}\\=((1+\\frac 1 {\\frac {4n} 9})^{\\frac{4n} 9})^{\\frac{-45} 4}=e^{\\frac{-45} 4} $$</p> Typ Funktionswert Beispiel Typ 1: Hebbare Definitionsl\u00fcckeDas Z\u00e4hler- und Nennerpolynom haben dieselbe Nullstelle. Diese kann gek\u00fcrzt werden Strebt gegen den gek\u00fcrzten Bruch Typ 2: PolstelleNur das Nennerpolynom hat die Nullstelle. Dies kann nicht gek\u00fcrzt werden Strebt gegen \\(\\infty\\) oder \\(-\\infty\\)","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#stetigkeit","title":"Stetigkeit","text":"<p>Eine Funktion ist stetig, wenn man sie zeichnen kann, ohne den Stift abzusetetzen.  Eine stetige Funktion hat keine Spr\u00fcnge in der ersten Ableitung und keine Spr\u00fcnge in der eigentlichen Funktion.</p>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#nullstellen-finden-mit-stetigkeit","title":"Nullstellen finden mit Stetigkeit","text":"<ol> <li>Zwei Punkte, bei denen der Y-Wert ein verschiedenes Vorzeichen hat</li> <li>Den Mittelwert zischen den Punkten bilden</li> <li>Zu 1. gehen, aber diesem mit dem Mittelpunkt als Punkt, so dass die zwei P\u00fcnkte ein verschiedenes Vorzeichen haben</li> </ol>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#hornerschema","title":"Hornerschema","text":"<p>Die Werte (\\(b_n\\)), welche unter dem Strich stehen, sind die Koeffizenten f\u00fcr das \\(q(x)\\) in \\(f(x)=(x-x_0)\\cdot q(x)\\). In diesem fall also \\(q(x)=3x^3-8x^2+21x-49\\). Daf\u00fcr muss das Resultat/Rest 0 sein!</p>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#polynomdivision","title":"Polynomdivision","text":"","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#extremwerte-ev-loschen","title":"Extremwerte (ev. l\u00f6schen)","text":"1. Ableitung 2. Ableitung Beschreibung Bild \\(f'(x)&gt;0\\) \\(f''(x_0)&gt;0\\) \\(f\\) macht eine Linkskurve nach oben bei \\((x_0, y_0)\\) \\(f'(x)&gt;0\\) \\(f''(x_0)&lt;0\\) \\(f\\) macht eine Rechtskurve nach oben bei \\((x_0, y_0)\\) \\(f'(x)&lt;0\\) \\(f''(x_0)&gt;0\\) \\(f\\) nmacht eine Linkskurve nach unten bei \\((x_0, y_0)\\) \\(f'(x)&lt;0\\) \\(f''(x_0)&lt;0\\) \\(f\\) macht eine Rechtskurve nach unten bei \\((x_0, y_0)\\) \\(f'(x)=0\\) \\(f''(x)&lt;0\\) \\(f\\) hat ein lokales Maximum bei \\((x_0, y_0)\\) \\(f'(x)=0\\) \\(f''(x)&gt;0\\) \\(f\\) hat ein lokales Minimum bei \\((x_0, y_0)\\) \\(x_0\\) heisst \\(f(x_0)\\) heisst \\((x_0, y_0)\\) heisst Maxiumum (relative) Maximalstelle (relatives) Maximum/Maximalwert (relativer) Hochpunkt Minimum (relative) Minimalstelle (relatives) Minimum/Minimalwert (relativer) Tiefpunkt Oberbegriff (relative) Extremalstelle (relatives) Extremum/Extremalwert (relativer) Extremalpunkt","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#wendepunkte-und-sattelpunkte-ev-loschen","title":"Wendepunkte und Sattelpunkte (ev. l\u00f6schen)","text":"<p>Eine Wendepunkt, ist wenn eine Rechtskurve in eine Linkskurve,  oder umgekehrt, geht. Ein Spezialfall ist es, wenn \\(f'(x)=0\\) ist, dann spricht man von einem <code>Sattelpunkt</code>. </p> <p></p> <p>Wenn \\(f''(x_0)=0\\) und \\(f'''(x_0)\\neq 0\\) ist, dann ist es sicherlich einen <code>Wendepunkt</code>. </p> <p>Wenn zus\u00e4tzlich noch \\(f'(x_0)=0\\) gilt, dann ist es ein <code>Sattelpunkt</code></p>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#fragen-fur-die-kurvendiskussion-ev-loschen","title":"Fragen f\u00fcr die Kurvendiskussion (ev. l\u00f6schen)","text":"<ol> <li>Definitionsbereich?</li> <li>Symmetrieeigenschaften (gerade/ungerade), Periode?</li> <li>Schnittpunkte mit Achsen, Polstellen?</li> <li>Randpunkte, bzw. Verhalten, wenn \\(x\\) gegen die Grenzen des Definitionsbereichs strebt?</li> <li>Kandidaten f\u00fcr Extrema bestimmen und untersuchen</li> <li>Wendepunkte suchen</li> <li>Tabelle von Werten aufstellen (falls noch n\u00f6tig)</li> </ol>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#extremaufgaben-ev-loschen","title":"Extremaufgaben (ev. l\u00f6schen)","text":"<ol> <li>Zielgr\u00f6sse identifizieren</li> <li>Unabh\u00e4ngige Variable identifizieren</li> <li>Definitionsbereich bestimmen</li> <li>Zielgr\u00f6sse als Funktion mit unabh\u00e4ngigen Variabeln als Argument ausdr\u00fccken</li> <li>Relative Maxima/Minima bestimmen; Randpunkte auch ber\u00fcrcksichtigen!</li> <li>Welche relative Extrema sind auch absolute?</li> </ol>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#ableiten","title":"Ableiten","text":"Name Formel \\(x^k=k\\cdot x^{k-1}\\) Faktorregel \\((c\\cdot f)'(x)=c\\cdot f'(x)\\) Summenregel \\((f+g)'(x)=f'(x)+g'(x)\\) Produktregel \\((u\\cdot v)'(x)=u'(x)\\cdot v(x)+u(x)\\cdot v'(x)\\) Quotientenregel \\((\\frac u v)'(x)=\\frac{u'(x)\\cdot v(x)-u(x)\\cdot v'(x)}{v(x)^2}\\) Kettenregel \\((F\\circ u)'(x)=F'(x)\\cdot u'(x)\\) sin \\(sin(x)'=cos(x)\\) cos \\(cos(x)'=-sin(x)\\) tan \\(\\tan(x)'=\\frac 1 v{\\cos^2(x)}\\) arcsin \\(\\arcsin(x)'=\\frac 1 {\\sqrt{1 - x^2}}\\) arccos \\(\\arccos(x)'=-\\frac 1 {\\sqrt{1-x^2}}\\) arctan \\(\\arctan(x)'=\\frac 1 {1+x^2}\\) \\(e^x\\) \\((e^x)'=e^x\\) \\((a^x)'\\) \\((a^x)'=a^x\\cdot \\ln(a)\\) \\(\\ln(x)'\\) \\(\\ln(x)'=\\frac 1 x\\) \\(\\log_a(x)'\\) \\(\\log_a(x)'=\\frac 1 {x\\cdot \\ln(a)}\\) Funktionsgleichung f\u00fcr Tangente \\(y(x)=f'(x_0)\\cdot (x-x_0)+f(x_0)\\) <p>Achtung: Nicht jede Funktion ist differenzierbar. Die Ableitung einer Funktion darf keine pl\u00f6tzliche Spr\u00fcnge machen</p>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#newton-verfahren","title":"Newton Verfahren","text":"<p>\\(x_{n+1}=x_n-\\frac{f(x_n)}{f'(x_n)}\\)</p>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#integrieren","title":"Integrieren","text":"<p>Ableiten: \\(a\\cdot x^n\\rightarrow \\frac{a}{n+1}\\cdot x^{n+1}\\)</p> <p>Schreibweise von Integral von der Fl\u00e4che zwischen \\([a;b]\\):  \\(\\int^b_a f(x) \\mathrm d x =F(b)-F(a)\\)$</p> <ul> <li>\\(\\int a^x \\mathrm d x =\\frac {a^x}{\\ln(a)} + C\\)</li> <li>\\(\\int e^{ax}=ae^{ax}\\)</li> <li>\\(\\int \\ln(x)\\mathrm dx=x\\cdot \\ln(x)-x + C\\)</li> <li>\\(\\int \\log_a(x)\\mathrm dx=\\frac 1 {\\ln(a)}\\cdot (x \\cdot \\ln(x) -x) + C\\)</li> <li>\\(\\int \\sin(x)\\mathrm dx=-\\cos(x)+C\\)</li> <li>\\(\\int \\cos(x)\\mathrm dx=\\sin(x)+C\\)</li> <li>\\(\\int \\tan(x)\\mathrm dx = -\\ln |\\cos(x)|+C\\)</li> <li>\\(\\int u^{-1}\\mathrm dx=\\ln(|u|)\\)</li> </ul>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#substition","title":"Substition","text":"<ol> <li>Substitutionsgleichung f\u00fcr \\(x: u = g(x)\\)</li> <li>Substitionsgleichung f\u00fcr \\(\\mathrm dx: \\frac {\\mathrm du}{\\mathrm dx}=g'(x) \\Rightarrow \\mathrm dx = \\frac{\\mathrm du}{g'(x)}\\)</li> <li>Integralsubstition: \\(\\mathrm dx\\) und \\(x\\) durch \\(\\mathrm du\\) und \\(u\\) ersetzen (Es darf nach dem k\u00fcrzen kein \\(x\\) im Integral mehr haben)</li> <li>Integration: Bei bestimmten Integralen m\u00fcssen die Integralsgrenzen auch durch \\(u(x)\\) gelassen werden</li> <li>R\u00fccksubstition (nur bei unbestimmten Integralen): Alle \\(u\\)s m\u00fcssen durch \\(u(x)\\) ersetzt werden</li> </ol> <p>Wenn \\(u(x)\\) linear ist, kann der Satz \\(\\int f(ax + b)\\mathrm dx =\\frac 1 a\\cdot F(ax + b)\\) f\u00fcr das integrieren genutzt werden. (Dabei muss \\(f(x)\\) nicht gleich \\(u(x)\\) sein)</p>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#partielle-integration","title":"Partielle-Integration","text":"<p>\\(\\int u(x)\\cdot v'(x)\\mathrm dx = u(x)\\cdot v(x) - \\int u'(x)\\cdot v(x)\\mathrm dx\\) oder \\(\\int^b_a u(x)\\cdot v'(x)\\mathrm dx = \\left[u(x)\\cdot v(x)\\right]^b_a - \\int^b_a u'(x)\\cdot v(x)\\mathrm dx\\)</p> <p>\\(u(x)\\) muss einfach abgeleitet werden k\u00f6nnen und \\(v(x)\\) sollte nicht komplizierter in der Stammfunktion werden.</p>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#partielbruchzerlergung","title":"Partielbruchzerlergung","text":"<p>Es braucht ein Integral der Form \\(\\int \\frac {g(x)}{h(x)}\\mathrm dx=\\int f(x)\\mathrm dx\\)</p> <ol> <li>Nullstellen in \\(h(x)\\) bestimmen: Erraten, mit Hornerschema oder faktorisieren</li> <li>Jeder Nullstelle eine Summe von Br\u00fcchen zuweissen</li> <li>\\(x_1\\) ist eine einfache Nullstelle \\(\\rightarrow \\frac A {x-x_1}\\)</li> <li>\\(x_2\\) ist eine doppelte Nullstelle \\(\\rightarrow \\frac{B_1}{x-x_2}+\\frac{B_2}{(x-x_2)^2}\\)</li> <li>\\(x_3\\) ist eine r-fache Nullstelle \\(\\rightarrow \\frac {C_1}{x-x_3}+\\frac{C_2}{(x-x_3)^2}+...+\\frac{C_r}{(x-x_3)^r}\\)</li> <li>\\(f(x)\\) mit der Summe aller Partialbr\u00fcche gleichgesetzt</li> <li>Konstante (\\(A_i\\), \\(B_i\\), \\(C_i\\), ...) bestimmen</li> <li>Alle Partialbr\u00fcche auf den selben Nenner bringen. Da auf beiden Seiten derselbe Nenner steht, m\u00fcssen die Z\u00e4hler auch gleich sein</li> <li>F\u00fcr das Gleichungssystem der Z\u00e4hler die Nulstellen in \\(x\\) einsetzen</li> <li> <p>Lineares Gleichungssystem l\u00f6sen</p> </li> <li> <p>Integrieren</p> </li> <li>\\(\\int \\frac 1 {x-x_0}\\mathrm dx=\\ln\\vert x-x_0\\vert + C\\)</li> <li>\\(\\int \\frac 1 {(x-x_0)^2}\\mathrm dx=-\\frac 1 {1(x-x_0)}+C\\)</li> <li>\\(\\int \\frac 1 {(x-x_0)^3}\\mathrm dx=-\\frac 1 {2(x-x_0)^{2}}+C\\)</li> <li>\\(\\int \\frac 1 {(x-x_0)^r}\\mathrm dx=\\frac 1 {(1 - r)(x-x_0)^{r-1}}+C\\)</li> </ol>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#uneigentliche-integrale","title":"Uneigentliche Integrale","text":"<ul> <li>\\(\\int ^\\infty_a f(x)\\mathrm dx = \\lim_{t\\to \\infty}\\int ^t_a f(x) \\mathrm dx=\\lim_{t\\to \\infty}F(t)-F(a)\\)</li> <li>Zuerst die Stammfunktion berechnen und danach \\(F(t)-F(a)\\) berechnen mit \\(t\\) nach \\(\\infty\\) gehen lassen</li> <li>\\(\\int^b_a f(x)\\mathrm dx=\\lim_{t \\to a} f(x)\\mathrm dx=\\lim_{t\\to a}F(b) - F(a)\\)</li> </ul>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#differentialgleichungen","title":"Differentialgleichungen","text":"<p>Eine Funktion, in welcher die die gesuchte Funktion \\(f\\) und die Ableitung dieser Funktion \\(f'\\) Beispiel: </p> <ul> <li>\\(y'=0\\rightarrow y=c\\) </li> <li>\\(y'=y\\rightarrow y=c\\cdot e^x\\)</li> <li> <p>\\(y'=7y\\rightarrow y=e^{7x}\\)</p> </li> <li> <p>Ordnung einer Ableitung ist die Ordnung der h\u00f6chsten vorkommenden Ableitung</p> </li> <li>Die Partikul\u00e4re L\u00f6sung?: </li> <li>Anfangsbedingungen: vorgegebene Werte f\u00fcr \\(y(x_0), y'(x_0),...,y^{(n-1)}(x_0)\\)</li> <li>Randbedinungen: vorgegebene Werte f\u00fcr \\(y(x_1), y(x_2),...,y(x_n)\\)</li> </ul>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#gewohliche-differentialgleichung-1-ordnung","title":"Gew\u00f6hliche Differentialgleichung 1. Ordnung","text":"<p>\\(y'=F(x, y)\\)</p>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#richtungsfeld","title":"Richtungsfeld","text":"","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#euler-schritte","title":"Euler-Schritte","text":"<p>\\(x_n=x_{n-1}+h\\) und  \\(y_n=y_{n-1}+h\\cdot F(x_{n-1}, y_{n-1})\\) </p> <p>Dabei ist \\(h\\) die Schrittgr\u00f6sse. Je kleiner, desto genauer ist die Approximation</p>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#separierbare-differentialgleichungen","title":"Separierbare Differentialgleichungen","text":"\\[ y'=f(x)\\cdot g(y) \\] <p>Die Differentialgleichung darf umgeformt werden, damit sie in diese Form passt (\\(x+y\\cdot y'=0 \\Rightarrow y\\cdot y'=-x\\Rightarrow y'=-x\\cdot \\frac 1 y\\))</p> <ol> <li>\\(y'=\\frac{\\mathrm dy}{\\mathrm dx}=f(x)\\cdot g(y)\\)</li> <li>Trennung der Variablen: \\(\\frac {\\mathrm dy}{g(y)}=f(x)\\cdot \\mathrm dx\\)</li> <li>Integration auf beiden Sieten(\\(+C\\) nicht vergessen): \\(\\int \\frac 1{g(y)}\\mathrm dy=\\int f(x)\\mathrm dx\\)</li> <li>Aufl\u00f6sen nach \\(y\\)</li> </ol>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#autonome-differentialgleichung","title":"Autonome Differentialgleichung","text":"\\[ y'=f(y) \\] <p>Autonome Differentialgleichungen sind separierbar.</p> <ul> <li>autonom:</li> <li>\\(y'=y^2 + 6\\)</li> <li>\\(y'=y^2\\cdot \\sqrt{1 - \\sin(y)}-\\ln(y)\\)</li> <li>nicht autonom</li> <li>\\(y' = x + y\\)</li> <li>\\(y'=\\frac y x\\)</li> </ul>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#lineare-differentialgleichungen","title":"Lineare Differentialgleichungen","text":"\\[ y'+f(x)\\cdot y=g(x) \\] <ol> <li>\\(f(x)\\) und \\(g(x)\\) bestimmen</li> <li>Stammfunktion \\(F(x)\\) und \\(G(x)\\) bestimmen</li> <li>In die Formel \\(y_0=C\\cdot e^{-F(x)}\\) einsetzen</li> <li>\\(C\\) durch \\(K(x)\\) ersetzen: \\(y=K(x)\\cdot e^{-F(x)}\\)</li> <li>\\(K(x)\\) berechnen (\\(+C\\) nicht vergessen): \\(K(x)=\\int g(x)\\cdot e^{F(x)}\\mathrm dx\\) </li> <li>Einstezen von \\(K(x)\\) in \\(y=K(x)\\cdot e^{-F(x)}\\)</li> </ol>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#anwendung-von-integrale","title":"Anwendung von Integrale","text":"","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#mittelwert","title":"Mittelwert","text":"<p>\\(\\mu=\\frac 1 {b - a}\\cdot \\int^b_a f(x)\\mathrm dx\\)</p>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#arbeitsintegral","title":"Arbeitsintegral","text":"<p>Die Formel f\u00fcr die Arbeit ist: \\(Arbeit=Kraft \\cdot Weg\\).  Somit kann mit der Funktion \\(f(x)\\), welche die Kraft an einer Strecke zur\u00fcck gibt, integriert werden. </p>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#rotationskorper","title":"Rotationsk\u00f6rper","text":"<p> $$ \\text{Horizontal: } &amp; V=\\pi \\cdot \\int^b_a(f(x))^2\\mathrm dx\\ \\text{Vertikal: } &amp; V=\\pi\\cdot \\int^d_c(g(y))^2 \\mathrm dx\\ \\text{wobei gilt: } &amp;c \\le y \\le d \\text{ und } g(y)=x \\text{ ist die Umkehr-Funktion von } f(x) $$</p>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#bogenlange","title":"Bogenl\u00e4nge","text":"<p> $$ s=\\int^b_a\\sqrt{1+(y')^2}\\mathrm dx $$</p>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#mantelflache-eines-rotationskorpers","title":"Mantelfl\u00e4che eines Rotationsk\u00f6rpers","text":"\\[ M=2\\pi \\cdot \\int^b_a y\\cdot \\sqrt{1 + (y')^2}\\mathrm dx \\]","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#schwerpunkt-einer-flache-von-zwischen-zwei-kurven","title":"Schwerpunkt einer Fl\u00e4che von zwischen zwei Kurven","text":"<p> $$ x_s=&amp;\\frac 1 A \\int^b_a x\\cdot (f_o(x) - f_u(x))\\mathrm dx\\ y_s=&amp;\\frac 1 {2A}\\int^b_a(f^2_o(x)-f^2_u(x))\\mathrm dx $$</p>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#schwerpunkt-eines-rotationoskorper","title":"Schwerpunkt eines Rotationosk\u00f6rper","text":"<p> $$ x_s=&amp;\\frac \\pi V \\int^b_a x\\cdot f^2(x) \\mathrm dx\\ y_s=&amp;0\\ z_s=&amp;0 $$</p>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#taylor-reihen","title":"Taylor-Reihen","text":"\\[ p_n=\\sum^n_{k=0}\\frac{f^{(k)}(x_0)}{k!}\\cdot (x-x_0)^k \\] Funktion \\(x_0\\) Taylor-Reihe Radius \\(e^x\\) 0 \\(\\sum^\\infty_{k=0}\\frac {x^k}{k!}=1+x+\\frac {x^2} {2!} + \\frac{x^3}{3!}+...\\) \\(\\infty\\) \\(e^{-2x}\\) 0 \\(\\sum^\\infty_{k=0}\\frac{-x^{2k}}{k!}=1-x^2-\\frac {x^4}{2!} - \\frac{x^6}{3!}+...\\) \\(\\infty\\) \\(\\sin(x)\\) 0 \\(\\sum^\\infty_{k=0}(-1)^k\\cdot\\frac{x^{2k+1}}{(2k+1)!}=x-\\frac{x^3}{3!}+\\frac{x^5}{5!}-\\frac{x^7}{7!}\\) q \\(\\cos(x)\\) 0 \\(\\sum^\\infty_{k=0}(-1)^k\\cdot \\frac{x^{2k}}{(2k)!}=1-\\frac{x^2}{2!}+\\frac{x^4}{4!}-\\frac{x^6}{6!}+...\\) \\(\\ln(x)\\) 1 \\(\\sum^\\infty_{k=0}(-1)^{k}\\cdot\\tfrac 1 {k+1}(x-1)^{k+1}=(x-1)-\\tfrac 1 2(x-1)^2+\\tfrac 1 3(x-1)^3-\\tfrac 1 4 (x-1)^4+...\\) \\(x^{-1}=\\frac 1 x\\) 1 \\(\\sum^\\infty_{k=0}(-1)^k\\cdot(x-1)^k=1-(x-1)+(x-1)^2-(x-1)^3+(x-1)^4-...\\)","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#komposition","title":"Komposition","text":"\\[ T_{h,x_0}\\text{ bezeichnet die Taylor-Reihe von } h(x) \\text{ um } x_0\\\\ T_{g,f(x_0)}(f(x))=T_{g\\circ f),x_0}(x_0) \\] <p>Beispiel: $$ f(x)=-x^2\\ g(x)=e^x\\ x_0=0\\ g(x)=e^2\\approx T_{g,0}(z)=1+z+\\frac {z^2}{2!}+\\frac{z^3}{3!}+...\\ g(f(x))=e^{-x^2}\\approx T_{(g\\circ f), x_0}=T_{g, f(x_0)}=1+(-x^2)+\\frac{(-x^2)^2}{2!} \\frac{(-x^2)^3}{3!}+...=1-x^2+\\frac{x^4}{2!}-\\frac{x^6}{3!}+... $$</p>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#konvergenz","title":"Konvergenz","text":"\\[ f(x)=\\sum^\\infty_{k=0}a_k(x-x_0)^k\\\\ r=\\lim_{k\\to\\infty}\\left\\vert\\frac{a_k}{a_{k+1}}\\right\\vert\\\\ x_1=\\vert x - x_0\\vert\\\\ x_2 = \\vert x + x_0\\vert \\] <p>\\(r\\) ist der Radius um \\(x_0\\), in welchem das Taylor-Polynom genau ist, wenn \\(k\\) gegen Unendlich geht. \\(x_1\\) und \\(x_2\\) stellen die \u00e4usserst m\u00f6glichsten Punkte, welche vom Taylor-Polynom genau bestimmt werden k\u00f6nnen. </p>","tags":["summary","AN"]},{"location":"22FS/AN2/summary_2022_06_20.html#hopital-regel","title":"Hopital-Regel","text":"\\[ \\lim_{x\\to x_0}\\frac{f(x)}{g(x)}=\\lim_{x\\to x_0}\\frac{f'(x)}{g'(x)} \\]","tags":["summary","AN"]},{"location":"22FS/Communication2/01_Presentation.html","title":"Presentation","text":""},{"location":"22FS/Communication2/01_Presentation.html#presentation_1","title":"Presentation","text":"<ol> <li>Too Much    Don't present too much</li> <li>Too Complex    Don't present a topic too complex</li> </ol>"},{"location":"22FS/Communication2/01_Presentation.html#fachtext","title":"Fachtext","text":"<ol> <li>Ziel-Publikum</li> <li>Struktur von anderen Fachtext \"kopieren\"</li> <li>present findings of the research topic</li> <li>Der Text soll informieren (nicht einen anderen Text kommentieren oder appellieren): Informieren mit Neigkeiten (nicht durch Strenge)</li> </ol> <p>Form: 5-10 seitigen Bericht mit Autorenangaben, Titel, Abstract </p> <p>Fachtext:</p> <ul> <li>kein \"man\"</li> <li>Umformung ins Passiv</li> <li>Umformung ins Ersatzpassiv</li> <li>Nominalsierung statt Verbalisierung</li> </ul>"},{"location":"22FS/Communication2/01_Presentation.html#poster","title":"Poster","text":"<ul> <li>Example?</li> <li>Coaching about Presentation?</li> <li>The poster has to contain the most important information. The presentation should add something</li> <li>Important points:</li> <li>What is the goal/aim of the presentation?</li> <li>What is the take-home message?</li> <li>Call-To-Action in Presentation</li> <li>Reader should be able to absorbe the main content in 2 min</li> <li>50% text - 50% images ratio</li> <li>clear structure (columns, circles, rectangles, ...)</li> </ul> <p>Poster Critic</p> <p></p> <p></p> <p></p> <ul> <li>Plaza</li> </ul>"},{"location":"22FS/Communication2/Presentation_Script.html","title":"Presentation Script","text":"<p>Welcome to my presentation about 5G's adaptive antennas.</p> <p>Today, nearly everybody has a cellphone. Using it in public to browse social media sites, like Twitter and Facebook, or watch a Video on Netflix or YouTube, is socially accepted and a common occurrence. </p> <p>Because of this increase in usage of cellular data, new standards were developed. From 2G to 3G, which allowed mobile users to browse the internet with acceptable loading times, to 4G, with which, the populous could watch videos on the go. The most recent standard is 5G, which boasts up to 10Gbit/s in an optimal situation. As you can see on this graph, the data rates have increased exponentially. All of these standards are full duplex systems, meaning a device can send and receive simultaneously. </p> <p>As a side note: The maximum speed of 5G in Switzerland is lower than the theoretical maximum, which can also be seen on the graph. This is because the higher frequency bands used in other countries aren't permitted for use with 5G in Switzerland. Using a higher frequency band yields increased the speed, but comes at the cost of range.</p> <p>With the need for more speed, data through-put and broader coverage, its tempting to let the the antennas send with more power. But this would cause higher radiation levels for people around the antenna and wasting energy by blasting electromagnetic radiation everywhere instead of just the device of the user.</p> <p>The solution to these problems are adaptive antennas which can, thanks to multiple subarrays, steer their beam towards the receiving device. This enables operating these antennas at a higher power level but with similar radiation levels resulting in better coverage, higher data rates and improved energy efficiency. </p> <p>However, in Switzerland the law did not distinguish between \"normal\" antennas and adaptive antennas. To remedy this, the Swiss government instructed the BAFU to research adaptive antennas and find a correction factor which can be applied to the power level of an antenna. This would enable the antenna to send at a higher power level as the actual power level is corrected to a lower level while simultaneously reducing the consumed energy. Because the maximal power level is multiplied with a correction factor, the law which specifies the maximum permitted energy levels does not need to be modified, which should help these laws getting through parlament.</p> <p>As you can see in this graph, the more sub-arrays an antenna has, the lower the correction factor gets. This is because as the number of sub-arrays increases the amount of control over the direction of the beam becomes more accurate, resulting in lower radiation levels. The correction factor is between 0.4 and 0.1. Because the power level is multiplied with a number between one and zero, the result will be less then the original power level.</p> <p>To address the safety of these antennas,  an automated limiter needs to be installed which will reduce the power level if it is too higher over a span of 6 minute. This will ensure that the radiation threshold isn't exceeded by an antenna.</p> <p>Another important detail of the provision specifies that applying the correction factor to an already existing antenna doesn't count as modifying the antenna resulting in hopefully lower administrative burden.</p> <p>An other obstacle towards adaptive antennas comes from the federalistic structure of the Swiss government. Each canton has its own law regarding the accepted radiation level of antennas and how companies apply for building and changing antennas. The report does lay the legal foundation to allow the cantons to change their law without fearing legal repercussion. With the hype around 5G, companies, like Swisscom, are anxious to build new antennas and will surly pressure the cantons to hurry up with these laws, however law-makers aren't known the be rapid. </p> <p>To monitor how effective these antennas are, the BAFU started to monitor the electromagnetic pollution and will publish a report later in 2022. It will be interesting to see, if the electromagnetic pollution will stay stable at the current level or will increase.</p>"},{"location":"22FS/KT/00_Glossar.html","title":"Glossar","text":"Begriff Definition Protokoll Definiert, wie Daten versendet werden Dienst Etwas, was eine Schicht, der n\u00e4chst h\u00f6hreren Schicht anbietet. Schittstelle SAP Service Application Point = eine Schnittstelle Schicht Peer-To-Peer Wenn zwei Ger\u00e4te direkt miteinander verbunden sind Shared-Medium Wenn mehrere Ger\u00e4te miteinander verbunden sind Simplex Die Kommunikation funktioniert nur in eine Richtung Half-Duplex Es kann Empfangen und Gesendet werden, aber nicht beides gleichzeitig Full-Duplex Es kann Empfangen und Gesendet weden zur selben Zeit"},{"location":"22FS/KT/01_OSI-Modell.html","title":"OSI-Modell","text":"<p>Die Schicht \\(i-1\\) bietet der h\u00f6hreren Schicht \\(i\\) einen Dienst an, w\u00e4hrend die Schicht \\(i\\) eine Schnittstellen oder Service Access Protocol (SAP) implementiert. Wenn sich die Schnittstelle/Dienst \u00e4ndert, hat dies auswirkungen auf die Schichten darum herum. Das Protokoll einer Schicht kann allerdings ge\u00e4ndert werden, da dies nur von derselben Schicht bei der anderen Anwendung ben\u00fctzt wird. </p> <p>Ein Protokol legt das Format und die Bedeugng von Nachrichten, welche zwischen denselben Schichten ausgetauscht werden.</p> <p></p> <p>Die Schicht 1-4 wird \u00fcbllicherweisse vom OS abgedeckt. Die Schichten 5-7 werden oft zusammen gefasst als eine.</p> <p>Daten werden von jeder Schicht bearbeitet und an die n\u00e4chste Schicht weitergegeben. Wenn ein Packet verschickt wird, werden die Daten zuerst vom Layer 7 zum Layer 1 verpackt und beim Empf\u00e4nger vom Layer 1 wird bis zum Layer 7 enpackt.</p> <p>Veschiedene Protokolle weden in verschiedene Layers eingeteilt. Unten folgt ein Bild mit den meist verwendeten Protokolle.</p> <p></p>"},{"location":"22FS/KT/01_OSI-Modell.html#physical-layer-bitubertragungsschicht","title":"Physical Layer (Bit\u00fcbertragungsschicht)","text":"<p>Das physikalische Medium, was die Ger\u00e4te verbindet. Dies kann ausgetauscht werden und die anderen Schichten bleiben umbetroffen.</p>"},{"location":"22FS/KT/01_OSI-Modell.html#data-link-layer-sicherungsschicht","title":"Data Link Layer (Sicherungsschicht)","text":"<p>Stellt eine sichere Verbindung den h\u00f6hreren Schichten zu verf\u00fcgung. </p> <p>Dieser Layer muss folgendes sicherstellen:</p> <ul> <li>sichere Verbindung zwischen zwei Punkten. Daf\u00fcr braucht es Massnahmen zur Fehlererkennung und Fehlerkorrektur</li> <li>Framing bzw. Datenbl\u00f6cke vom Network Layer werden verpackt, um die Funktionalit\u00e4t des Layers sicherzustellen</li> <li>Fluss-Steuerung, dass der Sender nicht schneller sendet, als es der Empf\u00e4nger verstehen kann</li> </ul> <p>Wenn an das \u00dcbertragungsmedium mehr als zwei Teilnehmer angeschlossen sind, muss der Layer zus\u00e4tzlich auch noch:</p> <ul> <li>Jeder Teilnehmer adressieren. Hierbei werden die MAC-Adressen verwenden (IP-Adressen werden vom Layer 3 verwendet)</li> <li>Steuerung des Zugriffs auf das Medium. Wenn mehrere Teilnehmer auf das Medium zugreifen k\u00f6nnen, muss definiert werden, wann, wer darf.</li> </ul>"},{"location":"22FS/KT/01_OSI-Modell.html#kommunikations-art","title":"Kommunikations-Art","text":"<p>Je nachdem wie das \u00dcbertragungsmedium aufgebaut ist, ist die Art der Kommunikation verschieden:</p> <ul> <li>Simples: Es ist nur einen Kanal in eine Richtung vorhanden (Radio, TV)</li> <li>Half-Duplex: Es ist nur ein Kanal vorhanden. Dieser wird aber abwechslungsweise genutzt (einfaches Funkger\u00e4t)</li> <li>Full-Duplex: Es sind f\u00fcr beide Richtungen ein Kanal vorhanden (Telefon)</li> </ul>"},{"location":"22FS/KT/01_OSI-Modell.html#network-layer-vermittlungsschicht","title":"Network Layer (Vermittlungsschicht)","text":"<p>Dieser Layer stellt sicher, dass das Packet vom Sender zum Empf\u00e4nger durch ein Netzwerk von Konten gesendet werden. Daf\u00fcr gibt es eine netzweite eindeutige Layer 3 Adressierung (IPv4 oder IPv6 im Fall des IP-Protokolls), wie auch ein Verfahren, mit welchem eine Route durchs Netzwerk gefunden wird.</p>"},{"location":"22FS/KT/01_OSI-Modell.html#verbindungsorientierter-dienst","title":"Verbindungsorientierter Dienst","text":"<p>In einem verbindungsoritentierem Netzwerk Layer wird eine Verbindung f\u00fcr ein (oder mehrere) Packete aufgebaut. Durch diese Verbindung k\u00f6nnen Daten gesendet werden, welche in derselben Reihenfolge ankommen, wie sie gesendet werden. Nach dem alle Daten gesendet wurden, muss die Verbindung wieder abgebaut werden.</p> <p>Um dies zu bewerkstelligen kann jedes Paket mit einer Verbindungs-Nummer ausgestattet werden. Anhand dieser, wissen die Knoten im Netzwerk zu welcher Verbindung das Paket geh\u00f6rt und wohin es gesendet werden muss.</p> <p></p> <p>Es gibt Verbindungen, welche permantent stehen. Diese werden Permanent Virtual Circuit (PVC) genannt. Eine Verbindung, welche jedes mal aufgebaut und danach abgebaut wird, nennt sich Switched Virtual Circuits (SVC).</p> <p>Diese Art von Dienst wird bei Provider Backbones mit dem Multi Protocol Label Switching (MPLS) Protkoll verwendet.</p>"},{"location":"22FS/KT/01_OSI-Modell.html#fragen","title":"Fragen","text":"<ul> <li>Wie wird diese Pfad gefunden?</li> </ul>"},{"location":"22FS/KT/01_OSI-Modell.html#verbindungsloser-dienst","title":"Verbindungsloser Dienst","text":"<p>Bei einem verbindungsloser Dienst wird die Zieladresse mit jedem Paket mit geschickt. Wie bei z.B. der Post gibt es keine Garantie in welcher Reihenfolge die Pakete ankommen. </p> <p>Jeder Knoten im Netzwerk muss das Netzwerk verstehen und wissen, wohin ein Paket gesendet werden muss, damit es beim Empf\u00e4nger ankommt. Daf\u00fcr gibt es Routing-Tables, in welchen diese Informationen stehen. </p> <p>Wenn sich das Netzwerk \u00e4ndert, kann es sein, dass ein Paket ein anderen Weg zum Ziel nimmt.</p> <p></p> <p>Ein typisches Beispiel ist das IP-Protokoll.</p>"},{"location":"22FS/KT/01_OSI-Modell.html#vorteile-und-nachteile","title":"Vorteile und Nachteile","text":"<ul> <li>Bei einem verbindungsorientiertem Dienst muss zuerst eine Verbindung aufgebaut werden, w\u00e4hrend bei einem verbindungsloser Dienst spontan ein Paket gesendet werden kann</li> <li>Da eine Verbindung bei einem verbindungsorientiertem Dienst aufgebaut wird, k\u00f6nnen geforderte Eigenschaften, wie Latenz oder Durchsatz, eingehalten werden. Bei einem verbindungslosem Dienst k\u00f6nnen diese Eigenschaften von Paket zu Paket anders sein.</li> <li>Verbindungsorienterte Dienste k\u00f6nnen Verkehrsstr\u00f6me gezielt lenken und so das Netzwerk verteilter auslasten</li> <li>Verbindslose Dienste k\u00f6nnen von selbst eine andere Route ben\u00fctzten, wenn eine Route ausgelastet oder unterbrochen ist</li> <li>Die Reihenfolge muss bei einem Verbindungslosem Dienst durch den Transport Layer sicher gestellt werden.</li> </ul>"},{"location":"22FS/KT/01_OSI-Modell.html#transport-layer-transportschicht","title":"Transport Layer (Transportschicht)","text":"<p>Die Aufgabe des Transport Layers ist es, die ben\u00f6tigte Qualit\u00e4t des Netzwerks sicher zu stellen. Wenn die Layer 1-3 unzuverl\u00e4ssig arbeiten, muss der Transport Layer diese Zuverl\u00e4ssigkeit wiederherstellen. Wenn die Reihenfolge darauf ankommt und dies nicht von den unteren Layers sichergestellt wird, dann wird dies zur Aufgabe des Transport Layers. Das heisst auch, dass der Transport Layer auf die unteren und oberen Schichten abgestimmt werden muss.</p> <p>Im Transport Layer gibt es nur noch der Sender und den Empf\u00e4nger. Die weiteren Konten werden von den Layers 1-3 abstrahiert und werden daher von dem Transport Layer nicht mehr ben\u00f6tigt.</p> <p></p> <p>Zwei wichtige Layer 4 Protokolle sind User Data Protocol (UDP), welches ein verbindungsloser, unsicherer Dienst sicherstellt und das Transmission Control Protocol (TCP), welches eine verbindungsorientierter sicherer Dienst sicherstellt.</p>"},{"location":"22FS/KT/01_OSI-Modell.html#session-layer-kommunikationsschicht","title":"Session Layer (Kommunikationsschicht)","text":"<p>Der Session Layer stellt eine sichere Verbindung bereit. Wenn der Transport Layer zusammen bricht, ist es die Aufgabe des Session Layers, diese Verbinung wieder aufzubauen und es f\u00fcr die Layers weiter oben, so auszusehen zu lassen, als ob nichts passiert w\u00e4re.</p>"},{"location":"22FS/KT/01_OSI-Modell.html#presentation-layer-darstellungsschicht","title":"Presentation Layer (Darstellungsschicht)","text":"<p>Die Aufgabe des Presentations Layers ist es, die Informationen des Applikations Layers in eine neutrale Form zu bringen.</p> <p>Ein Beispiel w\u00e4re Unicode oder ASCII.</p>"},{"location":"22FS/KT/01_OSI-Modell.html#applikations-layer-verarbeitungsschicht","title":"Applikations Layer (Verarbeitungsschicht)","text":"<p>Der Applikations Layer ist das Bindeglied zwischen dem Netzwerk und der Anwendung. </p> <p>Beispiele w\u00e4ren:</p> <ul> <li>File Transfer Protocol (FTP)</li> <li>Simple Mail Transfer Protocol (SMTP)</li> <li>Hyper Text Transport Protocol (HTTP)</li> <li>Domain Name System (DNS)</li> </ul>"},{"location":"22FS/KT/03_%C3%9Cbertragunsmedien.html","title":"\u00dcbertragungsmedien (Layer 1)","text":"Begriff Erkl\u00e4rung Freiraum \u00dcbertragung Medien, wie WLAN, 5G, welche ohne Kabel \u00fcbertragen symmetrische Leiter Twinax verdrillte Kupferader assymetrisch"},{"location":"22FS/KT/03_%C3%9Cbertragunsmedien.html#physik-ausbreitungsgeswindigkeit","title":"Physik - Ausbreitungsgeswindigkeit","text":"<p>Die Lichtgeschwindigkeit im Glas mit dem Brechungsindex \\(n=1.5\\) ist: \\(c_{Glass}=\\frac{c_0}{n}=\\frac{299'792'458}{1.5}\\approx200'000\\frac{km} s\\)</p> <p>In einem elektrischen Leiter ist es ebenfalls \\(200'000\\frac{km}s\\)</p>"},{"location":"22FS/KT/03_%C3%9Cbertragunsmedien.html#signaldampfung","title":"Signald\u00e4mpfung","text":"<p>Wie viel Leistung (in Dezibel) geht auf dem Weg zwischen \\(U_1\\) und \\(U_2\\) verloren.</p> <p>Die D\u00e4mpfung ist \\(10\\cdot \\log(\\frac {P1}{P2})\\). Dabei ist \\(P1\\) die Eingangsleistung und \\(P2\\) die Ausgangsleistung. Dies kann auch als \\(Signald\u00e4mpfung [dB] = 20\\cdot \\log(\\frac{U1}{U2})\\), wobei \\(U1\\) die Eingangs- und \\(U2\\) die Ausgangsleistung ist. Ebenfalls gilt \\(\\frac{P1}{P2}=\\left(\\frac{U1}{U2}\\right)^2\\)</p>"},{"location":"22FS/KT/03_%C3%9Cbertragunsmedien.html#cat-kabel","title":"CAT-Kabel","text":"<p>Bei \u00dcbertragungsmedien wird die Signald\u00e4mpfung meistens in \\(\\left[\\frac{dB}{100m}\\right]\\) oder \\(\\left[\\frac{dB}{km}\\right]\\) angegben. Diese Gr\u00f6sse wird D\u00e4mpfungsbelag genannt.</p> <p></p> Bezeichung Frequenzberreich Erkl\u00f6rung CAT-1-4 0.4/4/16/20 MHz F\u00fcr Telefone und Modemleitungen oder langsames LAN CAT-5 100 MHz Weitverbreitet. Erlaubt eine max. Bitrate von 1000Mbit/s bis zu 100m CAT-6 250 MHz Wird meistens f\u00fcr Gigabit (1000 Mbit/s) ben\u00fctzt CAT-7 600 MHz Geeigent f\u00fcr 10 Gigabit.  Es werden aber S/FTP Kabel ben\u00f6tigt CAT-8 2000 MHz Datenraten bis 40 Gigabit bis zu 30m"},{"location":"22FS/KT/03_%C3%9Cbertragunsmedien.html#signal-noise","title":"Signal-Noise","text":"<p>Nach einer gewissen Zeit nimmt die Signalst\u00e4rke ab</p>"},{"location":"22FS/KT/03_%C3%9Cbertragunsmedien.html#kabel-arten","title":"Kabel-Arten","text":""},{"location":"22FS/KT/03_%C3%9Cbertragunsmedien.html#koaxialkabel","title":"Koaxialkabel","text":"<p>Ein Koaxialkabel besteht aus einem Leiter. Sie sind geeignet f\u00fcr hochfrequente Signale und haben im Vergleich mit paarsymmetrischen Kabel einen kleinen D\u00e4mpfungsbelag und sind unempfindlicher gegen\u00fcber elektromagnetischen St\u00f6rungen. Die Kabel sind daf\u00fcr relativ empfindlich.</p> <p></p>"},{"location":"22FS/KT/03_%C3%9Cbertragunsmedien.html#paarsymmetrische-kabel-twisted-pair","title":"Paarsymmetrische Kabel (Twisted Pair)","text":"<p>Bei paarsymmetrischen Kabeln wird zwischen geschirmten Kabeln (Shielded Twisted Pair/STP) und ungeschirmten Kabeln (Unshielded Twisted Pair/UTP) unterschieden. Geschirmte Kabel sind st\u00f6rsicherer, aber auch teurer, schwerer und steifer. </p> <p>Das Namensschema von Twisted Pairs ist wie folgt: \\(xx/y\\text{TP}\\) (Beispiel: U/UTP, S/UTP, ...)</p> Werte f\u00fcr \\(xx\\) Werte f\u00fcr \\(y\\) Erkl\u00e4rung U U ungeschirmt F F Folienschirm S S Geflechtschirm SF &lt;gibt es nicht&gt; Schirm aus Geflecht und Folie <p>Schirme funktionieren nur, wenn sie gut geerdet sind!</p>"},{"location":"22FS/KT/03_%C3%9Cbertragunsmedien.html#twisted-pair-und-storungen","title":"Twisted pair und St\u00f6rungen","text":"<p>Zwei Leitungen, welche parallel gef\u00fchrt werden, verhalten sich, wie Sender und Empf\u00e4nger .</p> <p>Dies kann minimiert werden, in dem auf zwei Leitungen ein komplement\u00e4res Signal gesendet wird. Der Empf\u00e4nger kann danach die zwei Leitungen zusammen rechnen, und die herauskommende Spannung ist das St\u00f6rsignal.</p> <p></p> <p>Wenn ein Magnetfeld eine St\u00f6rung induziert (Induktiver Effekt), wirkt sich diese auf die beide Leiter umgekehrt aus. Aus diesem Grund werden die Kabel verdreht. Dadurch entstehen kleinere Schleifen und in der benachbarten Schleife ist die St\u00f6rung verkehrt, was die St\u00f6rung gr\u00f6sstenteils aufhebt.</p> <p></p>"},{"location":"22FS/KT/03_%C3%9Cbertragunsmedien.html#glassfaser","title":"Glassfaser","text":"<p>Glassfaser-Kabel funktionieren dank der totalen Reflektio.</p> <p></p>"},{"location":"22FS/KT/03_%C3%9Cbertragunsmedien.html#dispersion","title":"Dispersion","text":"<p>Es wird von Dispersion gesprochen, wenn das Signal verzert und nicht mehr erkannt wird. Es gibt mehrere Ursachen daf\u00fcr, die offensichtlichste die Modendispersion. Dies passiert, da unterschiedliche Lichtstrahlen einen k\u00fcrzeren oder l\u00e4ngeren Weg (je nachdem wie sie vom Kabel abprallen) haben und so zu verschiedenen Zeiten ankommen. Dieses wird auch Delay Skew genannt. Bei zu hoher Distanz oder zu hoher Pulsdichte kann dies zu Problemem f\u00fchren.</p>"},{"location":"22FS/KT/03_%C3%9Cbertragunsmedien.html#stufenfaser","title":"Stufenfaser","text":"<p>Kann mit einfachen Leuchtdioten angesprochen werden, hat aber viel Dispersion und Delay Skew (50 ns/km)</p>"},{"location":"22FS/KT/03_%C3%9Cbertragunsmedien.html#gradientenfasern","title":"Gradientenfasern","text":"<p>Der \u00dcbergang zwischen Glaskern und Schirmung ist ein Verlauf. Dies bewirkt, dass die Moden mit dem k\u00fcrzesten Weg gebremst werden und sie gleichzeitig mit den L\u00e4ngeren ankommen. Gradientenfasern haben eine Delay Skew von ca. 0.5ns/km</p>"},{"location":"22FS/KT/03_%C3%9Cbertragunsmedien.html#monomode-faser","title":"Monomode-Faser","text":"<p>Es werden Laser-Dioden ben\u00f6tigt, da die Faser zu d\u00fcnn ist f\u00fcr eine Lichtdiode. Dies macht die Monomode-Fasern auch teuer.</p>"},{"location":"22FS/KT/04_Data%20Link.html","title":"Data Link Layer (Layer 2)","text":""},{"location":"22FS/KT/04_Data%20Link.html#layer-2-protokolle","title":"Layer 2 Protokolle","text":"<ul> <li>HDLC</li> <li>PPP</li> <li>X.25 / Frame Relay</li> <li>MPLS</li> <li>ATM</li> </ul>"},{"location":"22FS/KT/04_Data%20Link.html#ubertragungsverfahren","title":"\u00dcbertragungsverfahren","text":"<p>Daten k\u00f6nen seriell oder parallel \u00fcbertragen werden. Bei der parallelen \u00dcbertragungen werden mehrere Bits gleichzeitig \u00fcbertragen. Dies funktioniert nur auf kurze Distanz, da sonst die Toleranzen zu gross w\u00e4ren.</p> <p>Bei der seriellen \u00dcbertragen werden die Bits nacheinander \u00fcbertragen. Hier sind sehr viel h\u00f6hrere Datenraten auf l\u00e4ngere Distanzen m\u00f6glich, da nicht mehrere Leitungen synchronisiert werden m\u00fcssen.</p> <p>Die serielle \u00dcbertragung kann noch weiter in synchrone und asynchrone serielle \u00dcbertragung unterteilt werden. Bei der asynchronen Verbindung wird kein Clock Signal \u00fcbertragen. Die Clock des Empf\u00e4nger und Senders sind daher nicht zusammen. Damit es trotzdem funktioniert, wird die Bitrate, die Start- und Stop-Bits abemacht. F\u00fcr jedes Zeichen wird ein Startbit gesendet und zum Abschluss ein Stopbit. Zu erst wird das niederwertigste (LSB = Least Significant Bit) \u00fcbertragen und zu letzt das h\u00f6chstwertige (MSB Most Significant Bit). (wirklich?)</p> <p>Der Emfp\u00e4nger tastet sehr schnell ab, bis das Startbit findet. Danach wird in der abgemachten Bitrate abgetastet. Der Takt darf nicht mehr als die halbe Bitzeit T abweichen, da sonst das falsche Bit gelesen w\u00fcrde werden.</p> <p></p> <p>Dagegen steht die synchrone \u00dcbertragung. Bei dieser sendet der Sender ein Takt mit den Daten mit. Daher werden auch keine Start und Stop-Bits ben\u00f6tigt.</p>"},{"location":"22FS/KT/04_Data%20Link.html#gleichspannungsfreiheit","title":"Gleichspannungsfreiheit","text":"<p>Der Sender und Empf\u00e4nger sind galvanisch (elektrisch nicht direkt verbunden) getrennt. Dies sch\u00fctzt die Ger\u00e4te davon, dass Falls beim anderen Ger\u00e4t ein Blitz einschl\u00e4gt oder es anderweitig eine \u00dcberspannung gibt.</p> <p>Da dies mit Capacitor gearbeitet wird, m\u00f6chte man, dass das Signal nicht immer bei 1 oder bei 0 ist, sondern m\u00f6glichst oft wechselt. Dies nennt sich gleichspannungsfrei. Daf\u00fcr kann z.B. eine Codierung, wie AMI, HDB3 oder PAM3 verwendet werden.</p>"},{"location":"22FS/KT/04_Data%20Link.html#taktruckgewinnung","title":"Taktr\u00fcckgewinnung","text":"<p>Das Ziel der Taktr\u00fcckgewinnung ist, ein Taktsignal aus dem normalen Datenstrom zu lesen. Daf\u00fcr darf der Datenstrom aber nicht zu lange nur <code>1</code> oder nur <code>0</code> senden, da sonst der Empf\u00e4nger kein Takt daraus lesen kann.</p>"},{"location":"22FS/KT/04_Data%20Link.html#ami-codierung","title":"AMI-Codierung","text":"<p>Ein <code>0</code> wird in Ami als <code>0</code> encodiert. Ein <code>1</code> wird alternativ als <code>U+</code> und <code>U-</code> gesendet. D</p> <p>Daher ist die Taktr\u00fcckgewinnung schwierig, wenn l\u00e4nger <code>0</code> gesendet werden. Daher ist AMI nicht f\u00fcr die Taktr\u00fcckgewinnung geignet. Es wird anstatt HDB3 ben\u00fctzt.</p> <p>Bei der HDB3-Encoding wird zus\u00e4tzlich nach <code>000</code> eine <code>1</code> gesendet. Diese <code>1</code> hat den selben Pegel, wie die letzte <code>1</code>, also entweder <code>U+</code> oder <code>U-</code>. Da normalerweise immer zwischen <code>U+</code> und <code>U-</code> gewechselt wird, kann der Empf\u00e4nger dieses Bit korrekt interpretieren. Bei langen Sequenzen von <code>0</code> w\u00fcrde dabei die Gleichspannungsfreiheit verletzt werden, daher wird wenn wenn weniger als zwei <code>1</code> seit dem letzten <code>000V</code> gesendet wurden, anstatt <code>000V</code> ein <code>B00V</code> gesendet. Dabei verhaltet sich das <code>B</code> wie ein normales Datenbit und wechselt zwischen <code>U+</code> und <code>U-</code> hin und her.</p>"},{"location":"22FS/KT/04_Data%20Link.html#pam3-4b3t-codierung","title":"PAM3 (4B3T-Codierung)","text":"<p>In dieser werden 4Bit Daten zu 3 ten\u00e4re Symbolen (Ein Symbol mit 3 Werten) \u00fcbersetzt</p> <p></p>"},{"location":"22FS/KT/04_Data%20Link.html#datenubertragung","title":"Daten\u00fcbertragung","text":"<p>Zehnerpotenzen: kBit = 103 Bit kbps = 103 bps MBit = 106 Bit Mbps = 106 bps GBit = 109 Bit Gbps = 109 bps</p>"},{"location":"22FS/KT/04_Data%20Link.html#baud-rate","title":"Baud-Rate","text":"<p>Die Anzahl Symbole pro Sekunde. Ein Symbol ist dabei ein Zustand im Datenstrom</p>"},{"location":"22FS/KT/04_Data%20Link.html#bitrate-nyquist","title":"Bitrate (Nyquist)","text":"<p>\\(f_s\\le2B\\), dabei ist \\(f_s\\) die Symbolrate/Baudrate und \\(B\\) die Bandbreite des Kanals in Hz.</p> <p>Diese Formel besagt, dass die Symbolrate in Baud (oder Nyquist Rate) doppelt so gross, wie die Frequenz des \u00dcbertragungskanal ist.</p>"},{"location":"22FS/KT/04_Data%20Link.html#maximale-bitrate-hartleys-gesetzt","title":"Maximale Bitrate (Hartley's Gesetzt)","text":"<p>Die Bitrate \\(R [bit/s] \\le 2B [Hz] \\cdot \\log_2(M)\\) </p> <p>wobei \\(M\\) folgendermassen definiert ist: \\(M=1+\\frac A {\\Delta V}\\)</p> <p>TODO</p>"},{"location":"22FS/KT/04_Data%20Link.html#kanalkapazitat-theorem-von-shanon","title":"Kanalkapazit\u00e4t (Theorem von Shanon)","text":"<p>\\(C_s=B\\cdot \\log_2(1+\\frac S N)\\), wo bei \\(C_s\\) die Kanalkapazit\u00e4t, \\(B\\) die Baudrate, \\(S\\) die Signal-Aplitude und \\(N\\) die Noise-Aplitude ist. \\(\\frac S N\\) ist die Signal-to-Noise Ratio</p>"},{"location":"22FS/KT/04_Data%20Link.html#synchrone-ubertragung","title":"Synchrone \u00dcbertragung","text":"<p>Bei der synchronen \u00dcbertragung wird immer gesendet, auch wenn keine Daten \u00fcbertragen werden. In diesem Fall werden konstant Flags \u00fcbertragen. Folgeadermassen wird eine M\u00f6glichkeit aufgezeichnet, wie dies gestaltet werden k\u00f6nnte.</p> <p> </p> <p>Ein Flag ist der Start bzw. Ende eines Datenrahmens. Da ein Flag <code>01111110</code> ist, kann dies nicht im Datenblock vorkommen. Daher wird nach f\u00fcnf <code>1</code> eine <code>0</code> eingesetzt. Diese <code>0</code> wird vom Empf\u00e4nger verworfen. Dies wird auch Bit-Stopfen (engl. \"Bit-Stuffing\")</p> <p></p>"},{"location":"22FS/KT/04_Data%20Link.html#asynchrone-ubertrageethernet","title":"Asynchrone \u00dcbertrage/Ethernet","text":""},{"location":"22FS/KT/04_Data%20Link.html#wieso-immer-noch-ethernet","title":"Wieso immer noch Ethernet?","text":"<p>Alle Ethernet-Standard ben\u00fctzten den RJ45 Stecker von 10MBit/s bis zu 10Gbit/s. Diese R\u00fcckwarts-Kompatibilit\u00e4t ist enorm wertvoll.</p> <p></p>"},{"location":"22FS/KT/04_Data%20Link.html#ethernet-standard","title":"Ethernet-Standard","text":"<p>Das prominentiste Beispiel der asynchronen \u00dcbertragung ist Ethernet, daher wird die asynchrone \u00dcbertragung an Ethernet vorgestellt.</p> <p></p>"},{"location":"22FS/KT/04_Data%20Link.html#preamble","title":"Preamble","text":"<p>Die Preamble werden 7 Bytes, welche aus Abwechslungsweise <code>0</code> und <code>1</code> bestehen. Das 8 Byte hat die Form <code>10101011</code>.</p>"},{"location":"22FS/KT/04_Data%20Link.html#bytes-korrekt-lesen","title":"Bytes korrekt lesen","text":"<p>Daten werden Umgekehrt gesendet (Zuerst das LSB und dann das MSB). Wenn man es von Hand lesen m\u00f6chte, m\u00fcssen die Bits umgedreht werden.</p>"},{"location":"22FS/KT/04_Data%20Link.html#frame-grosse","title":"Frame-Gr\u00f6sse","text":"<p>Da der Overhead fix ist, wird der Overhead eine kleinere Prozentanteil, je mehr Daten gesendet werden.</p> <p>Auf der anderen Seite, je gr\u00f6sser der Frame, desto h\u00f6her die Wahrscheinlichkeit, dass ein Fehler bei der \u00dcbertragung auftritt. Wenn ein Medium von mehreren Nutzer genutzt wird, m\u00fcssen die anderen Nutzer lange warten, wenn grosse Frames \u00fcbertragen werden.</p> <p></p>"},{"location":"22FS/KT/04_Data%20Link.html#sende-zeit","title":"Sende Zeit","text":"<p>Es braucht die Zeit \\(t_{frame}&gt;2\\cdot(n\\cdot t_{transfer}+ n\\cdot t_{forwarding})\\) und \\(t_{frame}&gt;2\\cdot t_{transfer}\\)</p> <p>Dabei ist \\(t_{frame}=\\frac{Framesize_{min}}{Bitrate}\\) und \\(t_{transfer}=\\frac{d_{max}}{c_{line}}\\)</p> <p>Aus dem allen geht herfor: \\(\\frac{Framesize_{min}}{Bitrate}&gt;2\\cdot \\frac{d_{max}}{c_{line}}\\)</p> <p>F\u00fcr die Framerate gilt: \\(Framerate = \\frac{Preabmle + SFD+DestinationAddress + SourceAddress+LT+Data+FCS+InterFrameGap}{Bitrate}\\) </p> <p>Die Interfrace Gap muss nur dazu gerechnet werden, wenn die Framerate berechet wird.</p>"},{"location":"22FS/KT/04_Data%20Link.html#collission-domain-und-broadcasat-domain","title":"Collission Domain und Broadcasat Domain","text":""},{"location":"22FS/KT/04_Data%20Link.html#repeater-vs-l2-switchbridge","title":"Repeater vs L2-Switch/Bridge","text":"<ul> <li>wegen kollision, k\u00f6nnen nicht beliebig Repeater hintereinander geh\u00e4nkt werden. Es verk\u00fcrzt die Collision </li> <li>Der Switch verk\u00fcrzt die Collision Domain</li> </ul>"},{"location":"22FS/KT/04_Data%20Link.html#bit-rahmenfehlerwahrscheinlichkeit","title":"Bit-/Rahmenfehlerwahrscheinlichkeit","text":"\\[ P_{Erfolg}=(1-p_e)\\\\ P_{Erfolg,Frame}=(1-p_e)^N\\\\ P_{Fehler,Frame}=1-(1-p_e)^N \\]"},{"location":"22FS/KT/04_Data%20Link.html#kollision-bei-shared-medium","title":"Kollision bei Shared-Medium","text":""},{"location":"22FS/KT/04_Data%20Link.html#autonegotiation","title":"Autonegotiation","text":"<p>Dieses Protokoll wird ab 100BASE-T unterst\u00fctzt und schaut, dass der Empf\u00e4nger und Sender die selbe Geschwindigkeit unterst\u00fctzt.</p>"},{"location":"22FS/KT/04_Data%20Link.html#vlan","title":"VLAN","text":"<p>Mit einem VLAN k\u00f6nnen seperate virtuelle Gruppen in einem LAN erstellen. Die Kommunikation zwischen VLANs sind meistens eingeschr\u00e4nkt oder nicht m\u00f6glich.</p>"},{"location":"22FS/KT/04_Data%20Link.html#vlan-tag","title":"VLAN-Tag","text":"<p>Damit dies auch in einem Netzwerk mit mehreren Switches m\u00f6glich ist, wird in VLAN-Tag im Ethernet-Frame eingef\u00fchrt.</p> <p></p> <p>Dieser Tag besteht aus:</p> <ul> <li>Tag Protocol Identifier:</li> <li>User Priority: (3 Bit),</li> <li>Cannonical Format Identifier</li> <li>VLAN-Identifier: (12-Bit)</li> </ul> <p></p>"},{"location":"22FS/KT/05_LAN.html","title":"LAN","text":"<p>LAN steht f\u00fcr Local Area Network ist ein r\u00e4umliches begrenztes Netzwer.</p>"},{"location":"22FS/KT/05_LAN.html#topologien","title":"Topologien","text":""},{"location":"22FS/KT/05_LAN.html#bus-topologie","title":"Bus-Topologie","text":"<p>Alle Ger\u00e4te sind direkt am \u00dcbertragungsmedium angeschlossen und werden nur aktiv, wenn sie senden.</p> <p></p>"},{"location":"22FS/KT/05_LAN.html#linien-topologie","title":"Linien-Topologie","text":"<p>Bei der Linien-Topologie sind die jeweils benachbarten Knoten miteinander verbunden. Wenn eine Nachricht von A zu D  geschickt wird, muss sie von B und C weiter geleitet werden. </p> <p>Diese Topologie ist zudem recht anf\u00e4llig, da wenn ein Knoten aussteigt, die Verbindung unterbrochen ist.</p> <p></p>"},{"location":"22FS/KT/05_LAN.html#ring-topologie","title":"Ring-Topologie","text":"<p>Eine Ring-Topologie wurde eine Linien-Topologie an den Enden verbunden. Dies verbessert die Redundanz, da bei einem Ausfall, jeder Knoten von der anderen Seite erreichbar ist. Um die Redundanz noch weiter zu erh\u00f6hen, wird manchmal auch eine doppelte Ring-Topologie verwendet.</p> <p>Bei der Ring-Topologie muss sichergestellt werden, dass sich eine Nachricht nicht im Kreis dreht.</p> <p></p>"},{"location":"22FS/KT/05_LAN.html#stern-topologie","title":"Stern-Topologie","text":"<p>Bei der Stern-Topologie geht alles \u00fcber einen Switch oder Hub. Dies hat zur folge, dass ein Knoten aussteigen kann ohne, dass das ganze Netzwerk lahm gelegt wird. Allerdings wenn der Switch oder Hub aussteigt, kann nicht mehr kommuniziert werden.</p> <p></p>"},{"location":"22FS/KT/05_LAN.html#baum-topologie","title":"Baum-Topologie","text":"<p>Die Baum-Topologie kann aus mehreren Stern-Topologien hergestellt werden.</p> <p></p>"},{"location":"22FS/KT/05_LAN.html#ubertragungsarten","title":"\u00dcbertragungsarten","text":"Art Erkl\u00e4rung Unicast Ein Paket hat wird genau an ein Ziel gesendet. Das Paket wird mit einer Adresse ausgestattet, so dass es am Ziel sicher ankommt. (Netflix) Broadcast Das Paket wird an alle Knoten im Netzwerk gesendet. Das Paket wird mit einer Broadcast-Adresse ausgestattet (Live-Stream/Twitch) Multicast Das Paket wird an eine Gruppen von Knoten gesendet. (Radio) (Anycast) Mehrere Server mit den selben Adressen. Der Knoten davor entscheidet, an welchen Knoten \u00fcbertragen wird"},{"location":"22FS/KT/05_LAN.html#ieee-namensgebung","title":"IEEE Namensgebung","text":"<ul> <li>1000BASE-T = Ethernet mit Basisband-Kanalcodierung mit einer Bitrate von 1Gbit/s mit Twisted-Pairs</li> <li>10BASE5 = 10Mbit/s Basisband-Ethernet mit max 500m Segmentenl\u00e4nge</li> </ul>"},{"location":"22FS/KT/05_LAN.html#manchester-codierung-10mbits","title":"Manchester-Codierung (10Mbit/s)","text":"<p>In Ethernet wird die Manchester-Codierung zwischen 0V und -2V angewendet.</p> <ul> <li>Eine steigene Flanke ist eine <code>1</code></li> <li>eine sinkende Flanke ist eine <code>0</code> </li> </ul> <p>Um z.B. zwei <code>1</code>  senden zu k\u00f6nnen, muss nach dem ersten <code>1</code> zuerst auf -2V gehen, damit eine zweite steigende Flanke gebildet werden kann. Da diese sinkende Flanke ausserhalb des Clocksignal ist, erkennt der Sender dies nicht.</p> <p>Ein Nachteil der Manchester-Codierung ist, dass nur die H\u00e4lfte der Bandbreite genutzt werden kann, da f\u00fcr zwei <code>1</code> das Signal 4 Flanken machen muss. Daher wird bei Geschwindigkeit h\u00f6her als 10Mbit/s keine Manchester-Codierung verwendet</p> <p></p>"},{"location":"22FS/KT/05_LAN.html#nrz-i-100mbits","title":"NRZ-I (100Mbit/s)","text":"<ul> <li>bei einer <code>1</code> wechselt der Pegel</li> <li>bei einer <code>0</code> bleibt der Pegel </li> </ul>"},{"location":"22FS/KT/05_LAN.html#shared-ethernet","title":"Shared-Ethernet","text":"<p>Das urspr\u00fcngliche Ethernet wurde f\u00fcr eine Bus-Topologie entwickelt. Dabei wurden Koaxial-Kabel verwendet, welche angebohrt wurden (Daher auch der Name Tick-Wire-Ethernet)</p> <p></p>"},{"location":"22FS/KT/05_LAN.html#mac-adresse","title":"MAC-Adresse","text":"<ul> <li>Individual/Group</li> <li>0 = individual address</li> <li>1 = group address</li> <li>Universally / Locally </li> <li>0 = universally administrated address (Normalfall)</li> <li>1 = locally administrated address</li> </ul>"},{"location":"22FS/KT/05_LAN.html#ethernet-frame-format","title":"Ethernet Frame Format","text":""},{"location":"22FS/KT/06_Network%20Layer.html","title":"Network Layer (Layer 3)","text":""},{"location":"22FS/KT/06_Network%20Layer.html#ip-adressen","title":"IP-Adressen","text":"<p>Mit hilfe von IP-Adressen routen Router die Pakete umher. IP-Adressen sind hirarchisch aufgebaut.</p>"},{"location":"22FS/KT/06_Network%20Layer.html#classful-vs-classless","title":"Classful vs Classless","text":"Klassen Adressbereich Anzahl Netze Interfaces pro netz A 1.0.0.0 - 127.255.255.255 127 16'777'214 B 128.0.0.0 - 191.255.255.255 16'384 65'534 C 192.0.0.0-223.255.255.255 2'097'152 254 <p>Die Klasse D (224.0.0.0 - 239.255.255.255) sind f\u00fcr Multicast-Adressen vorgesehen. Dies ist ein separates Protokoll mit separaten Adressierung.</p> <p>Die Klasse E (224.0.0.0 - 255.255.255.255) ist reserviert f\u00fcr zuk\u00fcnftige Netzwerke.</p> <p>Die folgenden privaten Netzwerke gibt es:</p> Klasse Netzadresse Subnetmaske A 10.0.0.0 255.0.0.0 B 172.16.0.0 - 172.31.0.0 255.255.0.0 C 192.168.0.0 - 192.168.255.0 255.255.255.0"},{"location":"22FS/KT/06_Network%20Layer.html#netmask","title":"Netmask","text":"<p>Die IP-Adresse ist in zwei Teile aufgeteilt: Die Netzadresse und Host-Adressen. Die Netzmaske unterteilt eine IP-Adresse in die Netzadresse und Hostadresse.</p> <p></p> <p>Alternativ schreibweisse ist \"/24\" f\u00fcr eine Subnetzmaske mit 24 <code>1</code> und 8 <code>0</code>. Daher gibt es \\((32-24)^2-2=255-2=254\\) addressierbare Hosts. Es werden noch zwei Adressen abgezogen, da zwei Adressen f\u00fcr die Broadcast- und Netzwerk-Adresse ben\u00f6tigt werden.</p>"},{"location":"22FS/KT/06_Network%20Layer.html#routing","title":"Routing","text":"<p>Dank routing weiss ein Router wohin ein Paket gesendet werden muss. Dies wird anhand der IP-Adresse gemacht.</p>"},{"location":"22FS/KT/06_Network%20Layer.html#routing-tabelle","title":"Routing-Tabelle","text":"<p>In der Routing-Tabelle steht, \u00fcber welcher Port welches Netzwerk ansprechbar ist. Darin steht der Port, an dem das Netzwerk erreichbar ist, die Netzwerkadresse und Netzmaske. Zus\u00e4tzlich gibt es ein Default-Gateway. \u00dcber diesen werden alle Pakete weitergeleitet, welche zu keinem anderen Netzwerk passt. Es kann f\u00fcr ein Netzwerk mehrere Eintr\u00e4ge geben.</p> <p>Die Routing-Tabelle ist geordnet nach der Netzmaske. Dabei ist das kleinste Netzwerk zu oberst (die h\u00f6chste Subnetz). Die Routing-Tabelle wird von oben nach unten durch geschafft. Zum ersten Hit wird das Paket gesendet.</p>"},{"location":"22FS/KT/06_Network%20Layer.html#flaches-vs-hirarchisches-routing","title":"Flaches- vs Hirarchisches- Routing","text":"<p>Bei Flachem-Routing kennt jeder Router jedes m\u00f6gliche Ziel im Netzwerk und andere Zielnetzwerke. Das Netzwerk Verhalten kann besser vorausgesagt werden und es k\u00f6nnen alternative Routings festgelegt werden, welche verwendet werden, wenn die schnellste Route ausf\u00e4llt. Die Routing-Tabellen aktuell zu halten, ist allerdings ein sehr grossen Aufwand.</p> <p>Beim Hirarchieschen-Routing hat jeder Host zwei Eintr\u00e4ge in der Routing-Tabelle. Ein Eintrag f\u00fcr das lokale Netz und ein Eintrag f\u00fcr alles andere, was an Router weitergeleitet wird.</p> <p></p>"},{"location":"22FS/KT/06_Network%20Layer.html#internet-protokoll-ip-format","title":"Internet Protokoll (IP) Format","text":"<p>Das folgende Diagramm zeigt der Header des IP-Protokolles:</p> <p></p> <ul> <li> <p>Version (4 Bit)   Gibt die Version des IP-Headers an. Es ist somit m\u00f6glich mehrere IP-Version (IPv4 oder IPv6) zu betreiben.</p> </li> <li> <p>Internet Header Length (IHL) (4 Bit)    Gibt die L\u00e4nge allen Headers an. Der gelesene Wert wird mit dem Faktor 4 multipliziert. Wenn also 5 gelesen wird, sind die Headers 20 Bytes lang. IHL muss zwiscehn 5 (20 Bytes) und 15 (60 Bytes) sein. Der fixe Teil eines IP-Headers sind 20 Bytes, also bleiben 40 Bytes f\u00fcr Optionale Felder.</p> </li> <li> <p>Type of Service (8 Bit)   Gibt an, was f\u00fcr eine Art von Leitung es ist. Ein Sender kann danach entscheiden, ob er eine Leitung, welche eine hoche Bandbreite hat, daf\u00fcr ein schlechten Ping (wie eine Satelitenverbindung) oder lieber eine \"normale\" Glassfasserleitung ben\u00fctzt. Dies wurde nie von allen Service-Providern unterst\u00fctzt.</p> </li> <li> <p>Total Length (16 Bit)   Die totale L\u00e4nget des IP-Paketes mit Headers  und Daten. </p> </li> <li> <p>Identifiaction (16 Bit)   Ein Wert, welches ein Paket eindeutig identifiziert. Dieser Wert wird ben\u00fctzt, um fragmentierte Pakete wieder zu einem Paket zusammen zusetzen.</p> </li> <li> <p>Flags (3 Bit)   Beinhaltet Kontrollflags f\u00fcr die Fragmentierung</p> </li> </ul> Feld Position Wert Funktion Erkl\u00e4rung Bit 0 reserved, must be zero Reserviert, immer Null DF Bit 1 0/1 May / Don't Fragment keine Fragmentierung MF Bit 2 0/1 Last / More Fragments Ob ein Folgefragment kommt <ul> <li> <p>Fragment Offset (13 Bit)   An welcher stelle ein fragmentiertes Paket in das ganze Paket gesetzt werden soll. Der gelesen Wert wird mit dem Faktor 8 multipliziert. (Aus 90 wird 720 Bytes)</p> </li> <li> <p>Time to Live (TTL) (8 Bit)   Gibt die Anzahl Sekunden an, welche das Paket noch im Netz sein darf. Wenn der Wert 0 wird, wird das Paket verworfen. In der Praxis ist es schwierig zu messen, wie lange ein Paket unterwegs ist und daher dekrementiert der Router der Wert um <code>1</code> wenn er es weiter sendet.    Wenn ein Router ein Paket mit TTL=1 erhaltet, dekrementiert er es zu <code>0</code> und verwirft es.</p> </li> <li> <p>Protocol (8Bit)   Das Protokol, welches im Datenteil \u00fcbertragen wird. Folgendes sind die wichtigsten Beispiele:</p> </li> </ul> Protocol Keyword Protokollbezeichnung 1 ICMP Internet Control Message 6 TCP Transmission Controll Protocol 17 UDP User Datagram Protocol <ul> <li> <p>Header Checksum (16 Bit)   Eine Pr\u00fcfsumme, welche nur \u00fcber den IP-Header gebildet wird. Diese muss von jedem Router neu berechnet werden, da gewisse Felder vom Router modifiziert werden.</p> </li> <li> <p>Source Address (32 Bit)   Die IP-Adresse des Senders</p> </li> <li> <p>Destination Address (32 Bit)   Die IP-Adresse des Empf\u00e4ngers</p> </li> <li> <p>Options und Padding (max. 40 Bytes)   Optionale Felder</p> </li> </ul>"},{"location":"22FS/KT/06_Network%20Layer.html#maximum-transfer-unit-mtu","title":"Maximum Transfer Unit (MTU)","text":"<p>Die MTU gibt an, wie viel Bytes \u00fcber eine Leitung geschickt werden k\u00f6nnen. Dabei werden aber nur die Daten-Bytes des Ethernet-Frames gez\u00e4hlt. Die Bytes des Ethernet-Headers gelten nicht. </p> <p>Headers von gekapselten Protokollen, wie IP oder ICMP, m\u00fcssen nat\u00fcrlich mit gez\u00e4hlt werden, da sie teil der Daten-Bytes des Ethernet-Frames sind.</p>"},{"location":"22FS/KT/06_Network%20Layer.html#addressauflosung","title":"Addressaufl\u00f6sung","text":"<p>TODO</p>"},{"location":"22FS/KT/06_Network%20Layer.html#address-resolution-protocoll-arp","title":"Address Resolution Protocoll (ARP)","text":"<p>ARP ist ein Layer 2 Protokoll, da es die Namensaufl\u00f6sung von IP-Adressen zu MAC-Adressen zul\u00e4sst.</p> <p>Ger\u00e4te haben typischerweisse eine ARP-Tabelle, in welcher ARP-Responses gecachet weden.</p> <p>TODO: Beispiel</p>"},{"location":"22FS/KT/06_Network%20Layer.html#gratuitous-arp","title":"Gratuitous ARP","text":"<p>Gratuitous heisst unn\u00f6tigt/unbegr\u00fcndet.</p> <p>TODO</p>"},{"location":"22FS/KT/06_Network%20Layer.html#fragmentieren-und-reassembly","title":"Fragmentieren und Reassembly","text":"<p>Fragmentieren wird gebraucht, wenn ein Paket \u00fcber eine Leitung geschickt werden soll, welche eine kleinere Maximum Transfer Unit (MTU) hat, als die Gr\u00f6sse des Paketes. In diesem Fall wird das Paket aufgeteilt/fragmentiert.</p> <p>TODO</p>"},{"location":"22FS/KT/06_Network%20Layer.html#internet-control-message-protocol-icmp","title":"Internet Control Message Protocol (ICMP)","text":"<p>ICMP Pakete werden der Schicht 3 zugeordnet, obwohl sie in einem IP-Paket gekapselt werden.</p> <p>Es gibt einige Typen von ICMP Paketen: (4 - Source Quench ist depricated - hiess, dass der Sender langs\u00e4mer soll senden. Hat sich er\u00fcbrigt, da es in TCP eingebaut w) </p> <p></p> ICMP-Type Bedeutung Beispiel 3 Destination Unreachable Wenn der Router ein Node nicht erreiche kann, weil z.B. die MTU zu klein ist, das h\u00f6here Protokoll deaktiviert ist beim Host, das Paket fragmentiert werden muss aber DF gesetzt ist oder der Node ausgesteckt wurde: TODO Code Protocol Unreachable=Node kommuniziert nicht \u00fcber das Protokol;  Port Unreachable = Kein Program h\u00f6rt auf diesen Port; 13 Communication adminstrativvely prohibited = Die Firewall blockiert etwas.Destination Unreachable kann auch genutzt werden, um die MTU einer Leitung zu finden 4 Source Quench Der Puffer des Routers ist voll 5 Redirct Wird an ein Host geschickt, wenn der Router feststellt, dass ein Paket an den falschen Router geschickt wurde 11 Time Exceeded Wenn das TTL-Feld =0 ist, wird es vom Router nicht mehr weitergesendet. Dies kann f\u00fcr Trace-Rout genutzt weden. Jeder Router reduziert das TTL-Feld um 1. Wenn der Router ein Paket mit TTL=1 bekommt wird dies um <code>1</code> reduziert und danach verworfen. 12 Parameter Problem Falls der Host oder Router im IP-Header einen ung\u00fcltigen Wert hat 0 Echo Reply Die Antowort auf ein Echo Request 8 Echo (-Request) Pingt ein Knoten an, welcher ein Echo Reply senden sollte 13 Timestamp Verhalten sich gleich wie Echo-Requests/-Replies aber senden noch die Zeit des Senders und Empf\u00e4ngers 14 Timestamp Reply Siehe 13 - Timestamp"},{"location":"22FS/KT/06_Network%20Layer.html#destination-unreachable-type-3","title":"Destination Unreachable (Type 3)","text":"<ul> <li>Code-Feld: 0 = net unreachable; 1 = host unreachable; 2= protocol unreachable; 3 = port unreachable; 4 fragmentation needed and DF set; 5 source route failed; 13 = communication administratively prohibited</li> <li>Internet Header + 64 Bits of Original Datagram enth\u00e4lt den ersten Teil des Datagramms,   das die ICMP-Meldung ausgel\u00f6st hat. Damit ist der urspr\u00fcngliche Absender in der Lage, den   Fehler genauer zu bestimmen.</li> </ul>"},{"location":"22FS/KT/06_Network%20Layer.html#time-exceeded-message-type-11","title":"Time Exceeded Message (Type 11)","text":"<p>Das Format ist gleich, wie bei Destination Unreachable (Type 3). Das Code-Feld kann folgende Werte haben: 0 = time to live exceeded in transit; 1 = fragment reassembly time exceeded.</p>"},{"location":"22FS/KT/06_Network%20Layer.html#echo-request-reply-message-type-8-type-0","title":"Echo-Request/-Reply Message (Type 8 / Type 0)","text":"<ul> <li>Identifier: ID, damit der Sender die Echo-Reply zu einem Prozess kann. In der Reply steht die selbe Zahl</li> <li>Sequence Number: Wird bei jedem Echo-Request inkrementiert. In der Reply steht die selbe Zahl.</li> <li>Code-Feld: ist null</li> </ul>"},{"location":"22FS/KT/06_Network%20Layer.html#struktur-von-icmp-pakete","title":"Struktur von ICMP-Pakete","text":"<p>Das ICMP Paket wird in einem IP-Paket verschachtelt (<code>Protocol=1</code> steht f\u00fcr den IP-Header).</p> <p></p>"},{"location":"22FS/KT/06_Network%20Layer.html#anwendungen","title":"Anwendungen","text":"<ul> <li>MTU einer Leitung finden   Daf\u00fcr kann das Don't Fragment auf <code>1</code> gesetzt werden und versucht werden, wie hoch </li> <li>Traceroute</li> <li>ping</li> </ul>"},{"location":"22FS/KT/06_Network%20Layer.html#ipv6","title":"IPv6","text":"<p>IPv6 bnutzt 128 Bits, bzw. 16 Bytes und erm\u00f6glicht es \\(2^{128}\\) Adressen zu generieren. IPv6 bringt zus\u00e4tzlich noch mehr Vorteile:</p> <ul> <li>Entlastung der Router</li> <li>Quality of Service: Flow Labels</li> <li>Verbessertes Routing: Routing Header</li> <li>Verbesserte Sicherheitsmechanismen</li> <li>Die MTU wird durch den Absender ermittelt und es gibt daher keine Fragmentierung, was den Router weiter entlastet</li> <li>Ein Interface kann mehrere IPv6 Adressen haben</li> </ul> <p>Eine IPv6 Adresse wird Hexadezimal dargestellt: <code>2001:0620:0000:0004:0A00:20FF:FE9C:7E4A</code>. Dabei k\u00f6nnen Nullen zu begin von Zahlen weggelassen werden (<code>...:0620:...</code>=<code>...:620:...</code>). Aus dem ergibt sich <code>2001:620:0:4:A00:20FF:FE9C:7E4A</code>. Zus\u00e4tzlich k\u00f6nnen lange Nullfolgen durch 2 Doppelpunkte ersetzt weden: <code>1023:0000:0000:0000:1736:a673:88a0:a620</code> = <code>1023::1736:a673:88a0:a620</code>. </p> <p>Der Doppelpunkt darf nur einmal genutzt werden.</p>"},{"location":"22FS/KT/06_Network%20Layer.html#ipv6-adressraume","title":"IPv6 Adressr\u00e4ume","text":"<p>Es gibt eine Loopback Adresse: <code>::1/28</code></p>"},{"location":"22FS/KT/06_Network%20Layer.html#ipv6-header","title":"IPv6 Header","text":"<p>Ein IPv6 Header ist 40 Bytes lang (ein IPv4 hat nur 20 Bytes)</p> <p></p>"},{"location":"22FS/KT/06_Network%20Layer.html#header-extension","title":"Header Extension","text":"<p>Im <code>Next Header</code> Feld kann angegeben, was der n\u00e4chste Header oder Protokol ist. Dies reduziert die Gr\u00f6sse, da nur die n\u00f6tigen Headers geschickt werden m\u00fcssen. Ebenfalls gibt es f\u00fcr den Router weniger zu tun, da es weniger Felder zu verarbeiten gibt.</p> <p></p> <p>In der folgenden Tabele sind die Header-Extension Types und Protokol-Types f\u00fcr das <code>Next Header</code>-Feld im IPv6 Header</p> <p></p> <ul> <li>Hop-by-hop (typ=0)   enth\u00e4lt Optionen, die von allen IPv6-Knoten auf der Strecke vom   Sender zum Empf\u00e4nger beachtet werden m\u00fcssen. Typisches Beispiel ist die Jumbogram   Option. Dieser Extension Header muss immer zuerst stehen.</li> <li>Routing Header (type = 43)    Wird vom Sender verwendet, um den Pfad zum Empf\u00e4nger zu   bestimmen. Er enth\u00e4lt eine Liste von Routern, \u00fcber die das betreffende IPv6 Paket geleitet   wird. Diese Option wurde als Sicherheitsrisiko erkannt und wird nur noch in modifizierter Form   f\u00fcr \u00abMobile IPv6\u00bb eingesetzt.</li> <li>Fragment Header (type = 44)   Enth\u00e4lt Informationen f\u00fcr das Reassembly analog zu IP V4</li> <li>Authentication Header AH (type = 51) und Encapsulating Security Payload Header (Type =51)   Enthalten Daten, welche die Vertraulichkeit eines IPv6 Pakets sicherstellen (RFC 4302).</li> <li>Destination Options (type = 60)   Dieser Header enth\u00e4lt Optionen, welche nur vom Endger\u00e4t   beachtet werden m\u00fcssen (im Gegensatz zu den Hop-by-Hop Options).</li> </ul> <p>Im folgenden Bild ist ein Beisiel f\u00fcr das <code>Next Header</code>-Feld:</p> <p></p>"},{"location":"22FS/KT/06_Network%20Layer.html#neigbor-discovery-protcol-ndp","title":"Neigbor Discovery Protcol (NDP)","text":""},{"location":"22FS/KT/06_Network%20Layer.html#icmpv6","title":"ICMPv6","text":""},{"location":"22FS/KT/06_Network%20Layer.html#autokonfigurieren","title":"Autokonfigurieren","text":""},{"location":"22FS/KT/07_Transport%20Layer.html","title":"Transport Layer (Layer 4)","text":"<p>[toc]</p>"},{"location":"22FS/KT/07_Transport%20Layer.html#adressierung","title":"Adressierung","text":"<p>Im Layer 4 werden \"Teilnehmer\" bzw. Applikationen mit Ports adressiert. Es gibt dabei ein Source- und ein Destination-Port. E</p> <p>Ein Port ist eine Zahl zwischen 1 und 65'536 und sind folgendermassen unterteilt:</p> <ul> <li>1-1023: Well-Known Port Nummern, wie z.B. 80 f\u00fcr HTTP</li> <li>1024-49'151: Reservierte Bereiche f\u00fcr herstellerspezifischen Applikationen</li> <li>49'152-65'536: Dynamische/Private Ports, welche beliebig verwendet werden k\u00f6nnen</li> </ul> <p>Die folgende Tabelle enth\u00e4lt die wichtigsten Well-Known Ports:</p> <p></p> <p>(465/TCP - SMTPS sollte heissen \"SMTP over SSL/TLS\")</p> <p>Um eine Kommunikationsbeziehung eindeutig zu bestimmen braucht es folgende 5 Parameter:</p> <ol> <li>Source Port</li> <li>Destination Port</li> <li>Source IP-Adresse</li> <li>Destination IP-Adresse</li> <li>Das Protokol (UDP oder TCP)</li> </ol>"},{"location":"22FS/KT/07_Transport%20Layer.html#tcp-transmission-control-protocol","title":"TCP (Transmission Control Protocol)","text":"<p>TCP bietet folgendes f\u00fcr eine Applikation:</p> <ol> <li>Verbindungsorientierte \u00dcbetragung: Eine Verbindung muss zuerst aufgebaut werden und eine TCP-Verbindung hat genau 2 Endpunkte (Multicast wird nicht unterst\u00fctzt)</li> <li>Hohe Zuverl\u00e4ssigkeit: TCP garantiert die Daten\u00fcbertragung ohne Verluste in der richtigen Reihenfolge</li> <li>Vollduplex\u00fcbertragung:  In einer TCP Verbindung k\u00f6nnen Daten in beide Richtungen fliessen</li> <li>Stream-Schnittstelle:  Eine Andwenung kann ein Stream von Bytes senden, welche vom Empf\u00e4nger in derselben Reihenfolge wieder empfangen werden.</li> <li>Zuverl\u00e4ssiger Verbindungsaufbau: Es muss zuerst eine Verbindung aufgebaut werden. Pakete von einer vorherigen Verbindungen sind danach nicht mehr g\u00fcltig</li> <li>Eleganter Verbindungsabbau: Beide Seiten k\u00f6nnen die Verbindung trennen und sie wird sauber abgebaut</li> <li>Siebes Merkmal: ?</li> </ol> <p>Im folgenden Diagramm wird aufgezeichnet, wie ein Verbindungsaufbau, das Senden/Empfangen von Nachrichten und der Verbindungsabbau beschreiben.</p> <p></p> <p>Im folgenden Diagramm sind die feinen Zust\u00e4nde eines Clients oder Server aufgezeichnet:</p> <p></p>"},{"location":"22FS/KT/07_Transport%20Layer.html#probleme","title":"Probleme","text":"<p>Die folgenden Probleme m\u00fcssen von TCP gel\u00f6st werden:</p> <ul> <li>Eine Verbindung soll zuverl\u00e4ssig auf- und abgebaut werden k\u00f6nnen</li> <li>Eine TCP-Nachricht k\u00f6nnen verloren, verf\u00e4lscht, dupliziert oder verstauscht werden. TCP muss diese Nachrichten trotzdem wieder korrekt zusammen setzen und der Applikationsschicht \u00fcbergeben. Hierf\u00fcr werden Techniken, wie Sequenznummern, Adaptiver Timeout, Sliding Window Protokoll ben\u00fctzt.</li> <li>Der Empf\u00e4nger soll nicht \u00fcberschwemmt werden. Hier f\u00fcr wird Flow Control mit Advertized Window Size gen\u00fctzt.</li> <li>Das Netzwerk dazwischen soll nicht \u00fcberlastet werden. Hier f\u00fcr gibt es Congestion Control mit Slow Start Algorithmus.</li> </ul>"},{"location":"22FS/KT/07_Transport%20Layer.html#tcp-header","title":"TCP-Header","text":"<ul> <li>TCP Source Port und Destination Port: Der genutzte Port auf dem Sender und Empf\u00e4nger</li> <li>Sequence Number: (Bezieht sich auf die Ausgangsdaten) Anhand dieser Zahl k\u00f6nnen Daten in der richtigen Reihenfolge der Applikation \u00fcbergeben werden und es wird die Acknowledgement Number damit berechnet</li> <li>Acknowledgment Number: (Bezieht sich auf die Eingangsdaten) </li> <li>Header Length/Data Offset: Gibt an, wo der TCP-Header mit optionalen Headers aufh\u00f6rt und die Daten beginnen</li> <li>Control Bits: Flags, welche z.B. den Verbindungsaufbau und -abbau einleiten      Diese Flags haben die folgende bedeutung:</li> <li>URG: Urgent-Pointer-Feld enh\u00e4lt einen g\u00fcltigen Wert</li> <li>ACK: Acknowledgment Feld enh\u00e4lt einen g\u00fcltigen Wert</li> <li>PSH: (= Push) Empf\u00e4nger soll Daten sofort an die Applikation weiterleiten</li> <li>RST (=Reset) Verbindung zur\u00fccksetzen</li> <li>SYN (=Synchronize) Verbindung aufbauen</li> <li> <p>FIN: Der Sender hat keine Daten mehr zu \u00fcbertragen. Verbindung abbauen</p> </li> <li> <p>Window: Gibt die noch verf\u00fcgbare Buffer-Gr\u00f6sse des Senders an. Wenn ein Empf\u00e4nger <code>0</code> im Window-Feld erh\u00e4lt, stoppt er zu senden, bis eine Retransmission mit einem gr\u00f6sseren Window-Feld ankommt.</p> </li> <li>Checksum: Die Checksume des TCP-Pakets</li> <li>Urgent Pointer: Falls <code>URG</code> gesetzt ist, zeigt dieses Feld an, wo die \"Urgent-Daten\" im Datenblock gefunden werden k\u00f6nnen</li> <li>Options: Optionen, wie \"SACK\" oder die maximale Segmentl\u00e4nge (MSS) k\u00f6nnen als optionale Option \u00fcbertragen werden</li> </ul>"},{"location":"22FS/KT/07_Transport%20Layer.html#verbindungsaufbau","title":"Verbindungsaufbau","text":"<p>Im folgenden Sequenz-Diagramm ist der 3-Way-Handshake eines TCP-Verbindungsaufbaus. Ein 3-Way-Handshake ist n\u00f6tig, da der Client, wie auch der Server sicher sein m\u00fcssen, dass sie eine Verbindung hat. Bei einem 2-Way-Handshake (mit nur 2 Nachrichten), weiss nur der Client sicher, dass eine Verbindung steht.</p> <p></p> <p>Das Sequenzdiagram von oben ist auch noch  in folgendem Zustandsdiagram abgebildet.</p> <p></p>"},{"location":"22FS/KT/07_Transport%20Layer.html#datenaustausch","title":"Datenaustausch","text":"<p>Im folgenden Diagram sieht man ein Austausch von Datenpaketen, nach dem letzten <code>ACK</code> Paket.</p> <p>Eine Nachricht vom Sender m\u00fcssen vom Client immer mit einem Paket, welches das <code>ACK</code>-Flag Gesetzt hat, best\u00e4tigen werden. Vor dem senden startet der Sender ein Timer. Falls dieser abl\u00e4uft, bevor der Empf\u00e4nger das Paket best\u00e4tigt hat, wird das Paket erneut versendet. Es gibt eine Retransmission.</p> <p>Die <code>Seq</code> Zahl der Antwort des Servers ist die <code>Ack</code> Zahl des Requests. Die <code>Ack</code> Zahl der Antwort des Servers ist die <code>Seq</code>-Zahl + die Anzahl empfangenen Bytes.</p> <p>Der Server kann zur Best\u00e4tigung ein leeres Datenpaket zur\u00fcck senden oder selber Daten senden, welche vom Client best\u00e4tigt werden m\u00fcssen.</p> <p></p>"},{"location":"22FS/KT/07_Transport%20Layer.html#verbindungsabbau","title":"Verbindungsabbau","text":"<p>Im folgenden Sequenzdiagram ist ein Verbinungsabbau aufgezeichnet. Dies ist nur noch ein \"2-Way-Hanshake\" und kann vom Client, wie auch vom Server initialisiert werden.</p> <p></p> <p>MSL=Maximum Segment Length</p> <p>Das Timeout am Ende ist n\u00f6tig, falls das letzte <code>ACK b+m+1</code> nicht ankommt. In diesem Fall w\u00fcrde die Passive-Seite noch mals ein <code>FIN b+m</code> Paket senden.</p> <p>Das folgende Zustandsdiagram zeigt der Verbindungsabbau.</p> <p></p>"},{"location":"22FS/KT/07_Transport%20Layer.html#adaptive-elemente-von-tcp","title":"Adaptive Elemente von TCP","text":""},{"location":"22FS/KT/07_Transport%20Layer.html#adaptives-timeout","title":"Adaptives Timeout","text":"<p>Das Timeout von TCP wird adaptiv bestimmt und \u00e4ndert sich \u00fcber die Lebenszeit der Verbindung.</p> <p>Daf\u00fcr werden folgende Formeln ben\u00fctzt: $$ RTO_n=SRTT_n + 4\\cdot RTTVAR_n\\ SRTT_n = (1 - \\alpha )\\cdot SRTT_{n-1}+\\alpha\\cdot RTT_n\\ RTTVAR_n=(1 - \\beta)\\cdot RTTVAR_{n - 1}+\\beta \\cdot \\vert SRTT_n - RTT_n \\vert $$</p> <p>Dabei steht \\(RTO\\) f\u00fcr <code>Retransmission Time-Out</code>, \\(SRTT\\) f\u00fcr <code>Smoothed Round-Trip-Time</code> und ist ein gewichteter Mittelwert, \\(RTT\\) f\u00fcr <code>Round-Trip-Time</code> und \\(RTTAV\\) f\u00fcr <code>Round-Trip-Time Variance</code> und ist der gewichteter Mittelwert der Abweichung, bzw. die Streuung.</p> <p></p> <p>Wenn die Roud-Trip-Time \u00fcberschritten wird, wird der Sender das Paket erneut senden.</p>"},{"location":"22FS/KT/07_Transport%20Layer.html#bestatigung-von-paketen","title":"Best\u00e4tigung von Paketen","text":"<p>In TCP wird das Sliding-Window Verfahren f\u00fcr die Best\u00e4tigung von Paketen gen\u00fctzt. Der Sender sendet alle Pakete im Fenster und schiebt das Fenster weiter, wenn die \u00e4lteste Nachricht best\u00e4tigt wurde.</p> <p></p> <p>Im folgenden Bild sieht man auf der linken Seite ein Verfahren, bei dem auf die Best\u00e4tigung des Empf\u00e4ngers gewartet wird. Auf der rechten Seite wird das Sliding-Window Verfahren bent\u00fczt.</p> <p>Sliding</p>"},{"location":"22FS/KT/07_Transport%20Layer.html#fluss-steuerung","title":"Fluss-Steuerung","text":"<p>Im folgenden Paket wird angenommen, dass der Empf\u00e4nger mit einer Buffergr\u00f6sse von 2'500 Bytes hat. Der Empf\u00e4nger sendet die verbleibende Buffergr\u00f6sse im <code>Window</code> Feld zur\u00fcck. Wenn der Sender eine Best\u00e4tigung mit <code>Window=0</code> empf\u00e4ngt, wartet er, bis er dieselbe Best\u00e4tigung mit einer h\u00f6heren <code>Window</code> Feld empf\u00e4ngt.</p> <p></p>"},{"location":"22FS/KT/07_Transport%20Layer.html#uberlastung-des-netzwerks-vermeiden","title":"\u00dcberlastung des Netzwerks vermeiden","text":"<p>Beim Slow-Start Algorithmus beginnt der Sender mit einer kleinen vordefinierten Gr\u00f6sse und verdoppelt dies mit jedem gesendetem Paket bis er die erste Schwelle erreicht. Danach wird die Paketgr\u00f6sse linear vergr\u00f6ssert bis ein Timeout entsteht. </p> <p>Bei einem Timeout wird die n\u00e4chste Schwelle auf die H\u00e4lfte des Paketes, bei welchem das Timeout entstand. Danach wird wieder ein Slow-Start ausgef\u00fchrt.</p> <p></p> <p>Es gibt f\u00fcr den Slow-Start Algorithmus folgende Kritikpunkte</p> <ul> <li>Die \"S\u00e4gezahnkurven\" verschiedener TCP-Sessions tendieren dazu, sich zu synchronisieren</li> <li>Die Annahme gilt f\u00fcr Wireless-Netze nicht mehr unbedingt, wo relativ viel Paketverlust durch Bitfehler   w\u00e4hrend der \u00dcbertragung vorkommt</li> <li>Slow-Start bei kurzen Transfers immer slow (www)</li> <li>Abh\u00e4ngig von Round Trip Time</li> </ul>"},{"location":"22FS/KT/07_Transport%20Layer.html#udp-user-datagram-protocol","title":"UDP (User Datagram Protocol)","text":"<p>UDP, wie auch TCP, ist ein Layer 4 Protokol und ben\u00fctzt Ports zur adressierung. Es ist aber nicht zuverl\u00e4ssig und erledigt nichts gegen Paket Verluste oder vertauschte Pakete.</p>"},{"location":"22FS/KT/07_Transport%20Layer.html#header","title":"Header","text":"<p>Der UDP Header besteht aus 8 Bytes und beinhaltet folgendes:</p> <p></p>"},{"location":"22FS/KT/08_Application_Layer.html","title":"Application Layer","text":"<ul> <li>Application Layer<ul> <li>DNS<ul> <li>Record Arten</li> <li>Root Servers</li> <li>Ablauf eines Namensaufl\u00f6sung</li> <li>Reverse DNS</li> </ul> </li> <li>BOOTP / DHCP<ul> <li>Nachteile</li> </ul> </li> <li>DHCP</li> <li>TFTP</li> <li>NAT<ul> <li>Port Mapping</li> <li>NAT und OSI</li> </ul> </li> <li>SMTP<ul> <li>Befehle</li> <li>Nachrichten</li> </ul> </li> <li>MIME<ul> <li>Base 64</li> <li>Quote Printable</li> </ul> </li> <li>HTTP</li> </ul> </li> </ul>"},{"location":"22FS/KT/08_Application_Layer.html#dns","title":"DNS","text":"<p>Jeder Full Qualified Domain Name (FQDN) muss eindeutig sein. Dass heisst, Geschwister-Knoten d\u00fcrfen nicht den selben Namen haben.</p> <p></p>"},{"location":"22FS/KT/08_Application_Layer.html#record-arten","title":"Record Arten","text":"<p>Es gibt mehrere Typen von Records, welche verschiedene Informationen enthalten.</p> <p></p>"},{"location":"22FS/KT/08_Application_Layer.html#root-servers","title":"Root Servers","text":"<p>Ein Root Server ist ein DNS-Server, welcher weiss wo z.B. der <code>ch</code> DNS-Server ist. Er ist auf der obersten Stufe. Weltweit gibt es fast 4000 Root Servers.</p>"},{"location":"22FS/KT/08_Application_Layer.html#ablauf-eines-namensauflosung","title":"Ablauf eines Namensaufl\u00f6sung","text":""},{"location":"22FS/KT/08_Application_Layer.html#reverse-dns","title":"Reverse DNS","text":""},{"location":"22FS/KT/08_Application_Layer.html#bootp-dhcp","title":"BOOTP / DHCP","text":"<p>BOOTP l\u00e4uft auf dem UDP Port 67 f\u00fcr den Server und 68 f\u00fcr den Client.</p> <p>Zu begin kenn ein BOOTP-Client nur seine eigene Mac-Adresse (nicht aber seine IP-Adresse). Daher sendet er ein Broadcast-Adresse mit seiner Mac-Addresse. Der BootP-Server empf\u00e4ngt dieser und sendet die n\u00f6tigen Netzwerk-Daten zur\u00fcck und wo das Image-File liegt, dass der Client dies herunter laden kann. BOOTP ben\u00f6tigt zwei Ports, da der Client ein Brodcast auf dem Port  67 schickt und der Server eine Antwort als Broadcast an den Port 68.</p> <p></p> <p>Wenn dies \u00fcber Netzwerkgrenzen funktionieren soll, muss der Router wissen, dass Pakete an den Port 67 und 68 weiter geleitet werden soll.</p> <p></p> <p>Ein BootP-Server kann ein Broadcast an alle Clients senden, wenn ein Update des Boot-Image gibt und so die Client benachrichtigen. Dies kann auch vom Server kommen ohne das ein Client anfragt.</p> <p></p> <p>Folgenden Screenshot ist das Paket Format gezeigt:</p> <p></p> <p>(fortsetzung des oberen Screenshots)</p>"},{"location":"22FS/KT/08_Application_Layer.html#nachteile","title":"Nachteile","text":"<ul> <li>Nachteile:</li> <li>Alles Statisch: Eine gesetzte IP-Adresse ist besetzt, auch wenn das Ger\u00e4t nicht online ist</li> <li>Manuelle Verwaltung: Alles muss manuell eingetragen werden</li> </ul>"},{"location":"22FS/KT/08_Application_Layer.html#dhcp","title":"DHCP","text":"<p>DHCP (Dynamic Host Configuration Protocol) ist r\u00fcckw\u00e4rtskompatibel mit BOOTP und benutzt dasselbe Paketformat und dieselben Ports. Damit der DHCP-Server noch weiss, ob ein Client noch gibt, m\u00fcssen Clients ein DHCP-Response senden, bevor die Lease-Time ablauft. Sonst w\u00fcrde die Adresse wieder freigegeben werden.</p> <p>Ein DHCP schickt mindestens:</p> <ul> <li>IP-Adresse</li> <li>Subnetzmaske</li> <li>Default Gateway Adresse</li> <li>DNS-Server Adresse</li> <li>Dynamischer Hostname</li> <li>Domain Name (z.B. \"zhaw.ch\")</li> </ul> <p>Optional k\u00f6nnte unter anderem auch noch ein TFTP-Server und ein Boot Image File gesendet werden.</p> <p>Ablauf eines DHCP-Reuqests.</p> <p></p>"},{"location":"22FS/KT/08_Application_Layer.html#tftp","title":"TFTP","text":"<p>TFTP ist der \"sehr kleine Bruder\" zu FTP und ben\u00fctzt den UDP Port 69.</p> <p>TODO</p>"},{"location":"22FS/KT/08_Application_Layer.html#nat","title":"NAT","text":"<p>NAT steht f\u00fcr Network Address Translation und wird ben\u00fctzt, da es zu wenig IPv4 Adressen hat, um jeden eine solche Adresse zu verteilen.  </p> <p></p> <p>Dabei hat nur noch der Router eine \u00f6ffentliche IP Adresse. Interne IP-Adressen sind in einem privaten Adressen bereich (wie 192.168.X.X, 172.X.X.X oder 10.X.X.X).</p> <p>TODO: Genaues vorgehen beschreiben</p> <p></p> <p></p>"},{"location":"22FS/KT/08_Application_Layer.html#port-mapping","title":"Port Mapping","text":"<p>TODO</p>"},{"location":"22FS/KT/08_Application_Layer.html#nat-und-osi","title":"NAT und OSI","text":"<p>NAT folgt nicht dem OSI-Schichten Model, da der Router die TCP/UDP Pakete lesen und schreiben muss. Daher muss die IP-Adresse und Port unverschl\u00fcsselt bleiben.</p> <p></p>"},{"location":"22FS/KT/08_Application_Layer.html#smtp","title":"SMTP","text":"<p>SMTP steht f\u00fcr Simple Mail Protocol und ben\u00fctzt den TCP Port 25.</p> <p></p>"},{"location":"22FS/KT/08_Application_Layer.html#befehle","title":"Befehle","text":"<p>Es gibt mehrere Befehle, welche an den Server geschickt werden. Der Server Antwortet mit Status-Codes, \u00e4hnlich wie in HTTP.</p> <ul> <li><code>HELLO ethz.ch</code>   Client meldet sich beim Server</li> <li><code>MAIL FROM max.muster@ethz.ch</code>   Client meldet den Sender</li> <li><code>RCPT TO hans.muster@zhaw.ch</code>   Client meldet den Empf\u00e4nger. Es k\u00f6nnen mehrere <code>RCPT TO</code> versendet werden.</li> <li><code>DATA</code>   Client m\u00f6chte Mail versenden.  Die Daten sind fertig, wenn ein einzelnen <code>.</code> auf einer Zeile steht</li> <li><code>QUIT</code>   Baut die SMTP Verbindung ab</li> </ul> <p>Hier nun ein Beispiel:</p> <pre><code>&gt; telnet mail.zhaw.ch 25\nS: 220 mail.zhaw.ch ESMTP \u2026 ready\nC: HELO zhaw.ch\nS: 250 mail.zhaw.ch\nC: MAIL FROM: &lt;muth@zhaw.ch&gt;\nS: 250 OK\nC: RCPT TO: &lt;klsr@zhaw.ch&gt;\nS: 250 &lt;klsr@zhaw.ch&gt;... Recipient ok\nC: RCPT TO: &lt;ksha@zhaw.ch&gt;\nS: 250 &lt;ksha@zhaw.ch&gt;... Recipient ok\nC: DATA\nS: 354 Enter mail, end with \".\" on a line by itself\nC: Date: Sat,6 Jan 2099 16:34:25 +0100\nC: To: klsr@zhaw.ch\nC: Cc: ksha@zhaw.ch\nC: Subject: Test einer Mail.\nC:\nC: Damit ist der SMTP-Teil beendet.\nC:\nC: Gruss Thomas -- und jetzt?\nC: .\nS: 250 OK\nC: QUIT\nS: 221 mail.zhaw.ch closing connection\n</code></pre>"},{"location":"22FS/KT/08_Application_Layer.html#nachrichten","title":"Nachrichten","text":"<p>Nachrichten in SMTP werden mit 7-Bit ASCII verschickt. Dabei gibt es mehrere Header-Zeilen, welche von zwei Carriage Return und Line Feeds (<code>\\r\\n\\r\\n</code>) von der Nachricht getrennt sind.</p>"},{"location":"22FS/KT/08_Application_Layer.html#mime","title":"MIME","text":"<p>MIME steht f\u00fcr Multipurpose Internet Mail Extensions und stellt eine Codierung da, beliebige Daten \u00fcber 7-Bit ASCII zu verschicken.</p> <p>Dabei gibt es ein Mime-Separator, welcher die verschiedene MIME Teile teilt. Dieser wird mit dem Header <code>Boundary</code> angegeben. Der <code>Content-Type</code> der ganzen Nachricht ist <code>multipart/mixed</code>. Nach jedem Mime-Seperator gibt es zudem noch ein <code>Content-Type</code> Header, welcher die Art der Daten zwischen den Seperator darstellt.</p> <p>Die Nachrichten selbst kann als Base64 oder Quote-Printable enkodiert werden.</p> <pre><code>MIME-Version: 1.0\nContent-Type: Multipart/Mixed; \nBoundary=\"Mime-Separator-WAB02622.926626671\"\nMime-Separator-WAB02622.926626671\nContent-Type: text/plain\n\nHier folgt der Text... bla... fasel\n\nMime-Separator-WAB02622.926626671\nContent-Type: text/html\n\n&lt;HTML&gt;...&lt;/HTML&gt;\n</code></pre> <p></p> <p>TODO: SMTP Status Codes</p>"},{"location":"22FS/KT/08_Application_Layer.html#base-64","title":"Base 64","text":"<p>TODO</p>"},{"location":"22FS/KT/08_Application_Layer.html#quote-printable","title":"Quote Printable","text":"<p>TODO</p>"},{"location":"22FS/KT/08_Application_Layer.html#http","title":"HTTP","text":"<p>HTTP steht f\u00fcr Hypertext Transfer Protocol und funktioniert auf dem TCP Port 80.</p> <p>TODO: HTTP</p>"},{"location":"22FS/KT/summary.html","title":"Summary","text":"Hex Dez Bin Hex Dez Bin 0 0 0 8 8 1000 1 1 1 9 9 1001 2 2 10 A 10 1010 3 3 11 B 11 1011 4 4 100 C 12 1100 5 5 101 D 13 1101 6 6 110 E 14 1110 7 7 111 F 15 1111","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#physical-layer-bitubertragungsschicht-layer-1","title":"Physical Layer (Bit\u00fcbertragungsschicht) (Layer 1)","text":"<p>Das physikalische Medium, was die Ger\u00e4te verbindet. Dies kann ausgetauscht werden und die anderen Schichten bleiben umbetroffen.</p> <p></p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#formeln","title":"Formeln","text":"Begriff Erkl\u00e4rung Baud-Rate Anzahl Symbole pro Sekunde. Ein Symbol ist ein Zustand im Datenstrom Bitrate (Nyquist) \\(f_s \\le 2B\\) Dabei ist\\(f_S\\) die Baud-Rate und \\(B\\) die Bandbreite des Kanals in Hz Frame-Rate \\(F\\) \\(F=\\frac B {(7+1+6+6+2+P+4+12)\\cdot 8}=\\frac B {38\\cdot 8 + P\\cdot 8}\\) Die Anzahl Ethernet-Frames pro Sekunde (wobei \\(P\\) die Payload-Bytes ist) (min. Datenblock 46 Bytes) Nutz Bitrate \\(N\\) \\(N=F\\cdot P=\\frac{P\\cdot 8 \\cdot B}{38\\cdot 8 + P \\cdot 8}\\) - Die Bitrate, welche f\u00fcr Daten nutzbar ist Delay von Store-Forwards Switch \\(t_{delay}\\) \\(t_{delay}=t_{frame}=\\frac{Framesize}{Bitrate}\\) - Wie lange das Senden eines Frames ben\u00f6tigt Transfer Delay \\(t_{transfer}\\) \\(t_{transfer}=\\frac d {C_{wire}}\\), wobei \\(d\\) die Distanz ist und \\(C_{wire}\\) Lichtgeschwindigkeit im Kabel ist. Wie lange die Daten im Transfer sind Zeichenrate \\(\\frac{Bitrate}{Bits/Zeichen}\\): Wieviel Zeichen pro Sekunde durch die Leitung passen Zust\u00e4nde \\(M=1+\\frac A {\\Delta V}\\)  wobei gilt: \\(A\\) ist die max. Amplitude \\(\\Delta V\\) die Ungenauigkeit des Empf\u00e4ngers Max Bitrate (Hartley's Gesetzt) \\(R [bit/s] \\le 2B [Hz] \\cdot \\log_2(M)\\), wobei \\(R\\) die max. Bitrate und \\(M\\) die Anzahl Zust\u00e4nde ist Informationsgehalt (Bit) \\(\\log_2(M)\\) Der Informationsgehalt eines Symboles (\\(M\\) = Anzahl Symbole) Kanalkapazit\u00e4t (\\(C\\)) \\(C=B\\cdot \\log_2\\left(1+\\frac S N\\right)\\), wobei \\(B\\) die Kanal-Bandbreite in Hz ist, \\(S\\) die Signalleistung und \\(N\\) die Rauschleistung Nettobitrate \\(Nettobitrate=Brutobitrate\\cdot\\frac{Nutzdaten}{Nutzdaten + Header}\\) Hamming-Distanz TODO <p>Beispiel: Mit AMI k\u00f6nnen 3 Werte pro Symbol \u00fcbertragen werden. Informationsgehalt: \\(I_S=\\log_2(3)=1.58 \\left[\\frac{Bit}{Symbol}\\right]\\) , da aber nur ein Bit pro Symbol \u00fcbertragen wird, liegt die Effizienz bei \\(\\frac 1 {1.58}=63\\%\\)</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#physik-ausbreitungsgeswindigkeit","title":"Physik - Ausbreitungsgeswindigkeit","text":"<p>Die Lichtgeschwindigkeit im Glas mit dem Brechungsindex \\(n=1.5\\) ist: \\(c_{Glass}=\\frac{c_0}{n}=\\frac{299'792'458}{1.5}\\approx200'000\\frac{km} s\\) In einem elektrischen Leiter ist es ebenfalls \\(200'000\\frac{km}s\\)</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#signaldampfung","title":"Signald\u00e4mpfung","text":"<p>Die D\u00e4mpfung ist \\(Signald\u00e4mpfung [dB] = 10\\cdot \\log\\left(\\frac {P1}{P2}\\right)=20\\cdot \\log\\left(\\frac {U1}{U2}\\right)\\), Dabei ist \\(P\\) die Leistung und \\(U\\) die Anzahl Spannung (Volt).</p> <p>Die D\u00e4mpfung von 6dB heisst eine Leistungsabnahme von 4 und eine Spannungsabnahme von 2</p> <p>Der D\u00e4mpfungsbelag ist wieviel D\u00e4mpfung \u00fcber 100m oder 1km statfindet (Masseinheit: <code>db/100m</code> oder <code>db/km</code>)</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#kabel-arten","title":"Kabel-Arten","text":"","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#koaxialkabel","title":"Koaxialkabel","text":"<p>Bestehen aus einem Leiter und sind geeignet f\u00fcr hochfrequente Signale, haben einen kleinen D\u00e4mpfungsbelag und sind unempfindlich gegen\u00fcber von elektromagnetischen St\u00f6rungen. Die Kabel selbst sind daf\u00fcr relative empfindlich.</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#paarsymetrische-kabel-twisted-pair","title":"Paarsymetrische Kabel (Twisted Pair)","text":"<p>Das Namensschema von Twisted Pairs ist wie folgt: \\(xx/y\\text{TP}\\).</p> Werte f\u00fcr \\(xx\\) Werte f\u00fcr \\(y\\) Erkl\u00e4rung U U ungeschirmt F F Folienschirm S S Geflechtschirm SF &lt;gibt es nicht&gt; Schirm aus Geflecht und Folie <p>Schirme funktionieren nur, wenn sie gut geerdet sind!</p> <ul> <li>St\u00f6rsignale werden minimiert, in dem auf zwei Kabeln das invertierte gesendet wird. </li> <li>F\u00fcr Elektromagnetische Str\u00f6ungen, sind die Kabel verdrillt. So heben sich die St\u00f6rungen auf</li> <li>Zudem werden noch die Leitung geschirmt. Diese Schirme m\u00fcssen geerdet sein und galvanisch getrennt sein</li> </ul>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#cat-kabel","title":"CAT-Kabel","text":"Bezeichung Frequenzberreich Data Rate Erkl\u00e4rung CAT-1-4 0.4/4/16/20 MHz 1 /  4 / 10 / 16 Mbps F\u00fcr Telefone und Modemleitungen oder langsames LAN CAT-5 100 MHz 100 Mbps Weitverbreitet. Erlaubt eine max. Bitrate von 1000Mbit/s bis zu 100m CAT-5e 1 Gbps Ethernet, Fastether, Gigabit Ethernet CAT-6 250 MHz 10 Gbps Wird meistens f\u00fcr Gigabit (1000 Mbit/s) ben\u00fctzt CAT-7 600 MHz 10Gbps Geeigent f\u00fcr 10 Gigabit.  Es werden aber S/FTP Kabel ben\u00f6tigt CAT-8 2000 MHz 40 Gbps Datenraten bis 40 Gigabit bis zu 30m","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#glassfasser","title":"Glassfasser","text":"<p>Vorteile von Glassfasser: </p> <ul> <li>Vollst\u00e4nstig unempfindlich gegen\u00fcber elektromagnetischen St\u00f6rungen</li> <li>Kleine Signald\u00e4mpfung und grosse Distanzen</li> <li>Grosse Bandbreite und somit grosse \u00dcbertragunsraten</li> </ul> <p>Nachteil:</p> <ul> <li>Dispersion (gewisse Photonen sind schneller und l\u00e4ngs\u00e4mer, was das Signal verzerrt.)</li> <li>Delay Skew: Die Zeitabweichung, welche durch die verschiedene Laufzeiten zustande kommen</li> </ul> <p></p> <ul> <li>Multimode Stufenfasern: Das Kabel und Mantel ist klar abgegrenzt (ca. Delay Skew 50ns/km)</li> <li>Multimode Gradientenfasern: Der Kern und Mantel haben einen Gradient (ca. Delay Skew 0.5 ns/km)</li> <li>Monomod</li> </ul> <p></p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#asynchrone-und-synchrone-serial-vs-parallel","title":"(Asynchrone und synchrone) Serial vs Parallel","text":"<p>Bei der paralleln \u00dcbertragung werden mehrere Signale aufsmal \u00fcbertragen. Bei hohen Takten m\u00fcssen alle Leitungen genau Lange sein und daher kommt es nur auf kurze Distanzen zum einsatz.</p> <p>Bei serieln Verbindungen wird zuerst das LSB (= Least Significant Bit) \u00fcbertragen und zuletzt das MSB (=Most Significant Bit)</p> <p>Bei der synchronen serieln \u00dcbertragung wird ein Clock-Signal \u00fcbertragen. Es werden daher keine Start- und Stop-Bits ben\u00f6tigt</p> <p>Bei der asynchroner serieln \u00dcbertragung wird kein Clock-Signal \u00fcbertragen. Anstatt gibt es ein Start und Stop bit. Wenn der Empf\u00e4nger das Start-Bit erh\u00e4lt. stellt er seine eigene Clock auf diese Zeit ein. Der Takt darf nicht mehr als die halbe Bitzeit T abweichen (\\(\\text{Frequenz Abweichung in Prozent}=\\frac{0.5T}{9.5T}\\)). Die Clock startet nach dem Start-Flag. (Zuerst wird das LSB und zuletzt das MSB verschickt)</p> <p></p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#gleichspannungsfreei","title":"Gleichspannungsfreei","text":"<p>Der Sende rund Empf\u00e4nger sind galvanisch getrennt. Dies sch\u00fctzt die Ger\u00e4te, falls beim anderen ein Blitz einschl\u00e4gt. Da hierbei oft mit Capacitors umgesetzt wird, sollte das Signal nicht immer bei <code>1</code> oder <code>0</code> sein, sonder m\u00f6glicht oft wechseln.</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#codierungen","title":"Codierungen","text":"<p>Bei der AMI-Codierung wird ein <code>0</code> als <code>0V</code> encodiert und <code>1</code> abwechslungsweise als <code>U+</code> und <code>U-</code></p> <p>Bei der HDB3 Codierung wird zus\u00e4tzlich nach <code>000</code> eine <code>1</code> mit demselben Pegel wie die letzte <code>1</code> gesendet (<code>0001</code> ist gr\u00fcn in der Grafik) . Wenn die Anzahl <code>1</code> seit der letzten Regelverletztung gerade ist, wird anstelle <code>1001</code>  (rot in der Grafik) versendet</p> <p></p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#manchester-codierung-10mbits","title":"Manchester-Codierung (10Mbit/s)","text":"<p>In Ethernet wird die Manchester-Codierung zwischen 0V und -2V angewendet und daher nicht gleichspannungsfrei.</p> <ul> <li>Eine steigene Flanke ist eine <code>1</code></li> <li>eine sinkende Flanke ist eine <code>0</code> </li> </ul> <p></p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#nrzi-codierung-non-return-to-zero-invert-on-ones","title":"NRZI-Codierung (Non Return to Zero, Invert on Ones)","text":"<p>Diese Codierung wird bei 100BASE-TX verwendet. Bei einer <code>0</code> bleibt der Pegel, bei einer <code>1</code> wechselt der Pegel.</p> <p></p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#data-link-layer-layer-2","title":"Data Link Layer (Layer 2)","text":"<p>Aufgaben:</p> <ul> <li>Sichere Verbindung zwischen zwei Teilnehmer (Fehlerkorrektur und erkennung)</li> <li>Verpacking der Daten in Frames (Framing)</li> <li>Frame Erkennung</li> <li>Flow-Controll (Fluss Steuerung)</li> <li>Adresseriung der Teilnehmer (wenn mehrere Teilnehmer im Netz sind)</li> <li>Medium Zugriff (wenn meherere Teilnhemer das Medium teilen)</li> </ul> <p>In der Regel wird immer zuerst das MSB und zu letzt das LSB versendet (als wenn auf dem Kabel <code>010011</code> gesendet wird, wird das Zeichen <code>110010</code> empfangen)</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#ethernet-frame","title":"Ethernet Frame","text":"<ul> <li>Preamble und Start Frame Delimiter (SFD)</li> </ul> <p>Die Preamble werden 7 Bytes, welche aus Abwechslungsweise <code>0</code> und <code>1</code> bestehen (<code>01010101</code> = \\(84_{10}=55_{16}\\), <code>10101010</code>=\\(170_{10}=AA_{16}\\)). Das 8 Byte (das SFD) hat die Form <code>10101011</code> (=\\(171_{10}=AB_{16}\\))</p> <ul> <li> <p>Length/Type   Wenn der Wert \\(\\le 1500_{10}=05DC_{16}\\) ist, stellt es die Anzahl von Bytes im <code>Data</code> Feld dar (ohne <code>PAD</code>). Sonst wird angegeben, was f\u00fcr ein h\u00f6heres Protokoll im Datenfeld enthalten ist. 0x8100 (=33024) ist der VLAN-Tag Typ. 0x0800 (=2048) ist IP.</p> </li> <li> <p>Data/PAD   Die Daten (zwischen 0 - 1500 Bytes). Falls die Daten kleiner als 46 Bytes sind, wird dies mit PAD aufgef\u00fcllt</p> </li> <li> <p>Frame Check Sequence   CRC32 Checksume</p> </li> <li> <p>Interframe Gap   minimaler zeitlichen Abstand zwischen zwei Frames</p> </li> </ul>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#framing-synchrone-und-asynchrone-ubertragung","title":"Framing - synchrone und asynchrone \u00dcbertragung","text":"<ul> <li>asynchroner \u00dcbertragung   Es wird ein Frame (Anzahl Elemente; Datenblock mit \\(n\\) Elementen; Fehlererkennung) gesendet und danach ist Ruhe, bis zum n\u00e4chsten Frame</li> <li>synchroner \u00dcbertragung   Es wird kontinuierlich Frames gesendet, falls n\u00f6tig auch leere. Es gibt ein Start- und End Flag (meist <code>01111110</code>). Es wird bit-stuffing verwendet, um zu verhindern, dass das Flag im Daten-Block vorkommt. Wenn 5x<code>1</code> gesendet wurde, wird eine <code>0</code> gesendet, welche vom Empf\u00e4nger ignoriert wird</li> </ul>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#lange-eines-frames","title":"L\u00e4nge eines Frames","text":"<p>\\(Nettobitrate=Brutobitrate\\cdot\\frac{Nutzdaten}{Nutzdaten + Header}\\)</p> <p>Je l\u00e4nger ein Frame ist, desto h\u00f6her ist die Nettobitrate.  Nachteile: Durchsatz (Wahrscheinlichkeit, dass ein Fehler w\u00e4hrend eines Frames auftritt); Effizienz (Wenn ein Fehler auftritt, ist das es verloren); Zuverl\u00e4ssigkeit (Wahrscheinlichkeit, dass ein undetektierbarer Fehler auftritt steigt); Jitter (Variation der Zeitabst\u00e4nde zwischen Frames)</p> <p>Durchsatz h\u00e4ngt von der Nettobitrate und der Frame-Fehlerwarscheinlichkeit ab $$ \\text{Frame-Erfolgswahrscheinlichkeit: } (1-p_e)^N\\ \\text{Frame-Fehlerwahrscheinlichkeit: } 1-(1-p_e)^N\\ \\text{Optimale Frame-L\u00e4nge: } \\sqrt{\\frac{H}{p_e}}\\ $$ Dabei ist \\(N\\) die L\u00e4nge des Frames, \\(H\\) die L\u00e4nge des Headers und \\(p_e\\) die Bitfehlerwahrscienlichkeit.</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#flusskontrolle","title":"Flusskontrolle","text":"<ul> <li>Start-Stop-Meldungen: Wenn der Emp\u00e4ngerbuffer voll l\u00e4uft wird eine Stop-Meldung verschickt. Wenn der Buffer leer wird, wird eine Start-Meldung verschickt</li> <li>Stop-and-Wait: Jede Meldung wird quitiert. Wenn der Buffer voll l\u00e4uft, wird die Quitierung erst sp\u00e4ter gesendet.</li> </ul>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#fehlererkennung","title":"Fehlererkennung","text":"<ul> <li>Backward Error Correction: Fehler kann erkennt werden und die Daten neuangefordert werden</li> <li>Forward Error Correction: Die Fehler k\u00f6nnen erkennt und zu einem gewissen Punkt korrigiert werden</li> </ul> <p>Blockcodes:</p> <ul> <li>Das Hamming-Gewicht=die kleinste Anzahl <code>1</code> auf einer Linie der Generator-Matrix   Das Hamming-Gewicht ist gleich die Hamming Distanz \\(d_{min}\\)</li> <li>Erkennbare Fehler: \\(d_{min}-1\\) und korrigierbare Fehler: \\(\\frac{d_{min}-1}2\\)</li> </ul>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#fehlerkorrigierende-codes","title":"Fehlerkorrigierende Codes","text":"<p>\\(\\frac {d_{min}-1}2\\) korrigierbar </p> <p>Generatormatrix Bedinungen:</p> <ol> <li>f\u00fcr \\(d_{min}=3\\) muss jeder Code (ausser dem 0-Code) min. 3x<code>1</code> haben</li> <li>Mindestens eine <code>1</code> muss in der Einheitsmatrix sein</li> <li>Jede Pari\u00e4tsmatrix-Zeile muss 2x<code>1</code> beinhalten</li> </ol>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#crc","title":"CRC","text":"<p>Das Datenpolynom wird um die Anzahl Stellen des Generatorpolynoms verschoben und anschliessend durch das Generatorpolynom geteilt. Das Resultat wird zum Datenpolynom hinzu addiert. Dabei werden die entstandenen <code>0</code> des Datenpolynoms gef\u00fcllt. </p> <p>Der Empf\u00e4nger kann den empfangenen Wert durch das Generatorpolynom teilen und muss <code>0</code> erhalten.Flusssteuerung</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#lan","title":"LAN","text":"Art Erkl\u00e4rung Unicast Ein Paket hat wird genau an ein Ziel gesendet. Das Paket wird mit einer Adresse ausgestattet, so dass es am Ziel sicher ankommt. (Netflix) Broadcast Das Paket wird an alle Knoten im Netzwerk gesendet. Das Paket wird mit einer Broadcast-Adresse ausgestattet (Live-Stream/Twitch) Multicast Das Paket wird an eine Gruppen von Knoten gesendet. (Radio) (Anycast) Mehrere Server mit den selben Adressen. Der Knoten davor entscheidet, an welchen Knoten \u00fcbertragen wird","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#topologien","title":"Topologien","text":"Topologie Beschreibung Bustopologie Alle Knoten sind an einer Leitung angeschlossen Linientopologie Ein Knoten ist mit dem N\u00e4chsten verbunden. Ringtopologie Eine Linientopologie, mit zusammen gef\u00fcgte Enden Sterntopologie Alle Knoten h\u00e4ngen an einem Hub/Switch Baumtopologie Entsteht, wenn die Sterntopologie hirarchisch kombiniert wird","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#rj-45","title":"RJ-45","text":"<p>Der Stecker beseitzt 4 Adernpaar, bzw. 8 Adern. </p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#ieee-namensgebung","title":"IEEE Namensgebung","text":"<p><code>(Bitrate in Mbit/s) (BASE|BROAD)-(Art/Medium L\u00e4nge)</code></p> <ul> <li>1000BASE-T = Ethernet mit Basisband-Kanalcodierung mit einer Bitrate von 1Gbit/s mit Twisted-Pairs (T)</li> <li>10BASE5 = 10Mbit/s Basisband-Ethernet mit max 500m (5) Segmentenl\u00e4nge und bis zu 100 Knoten. Es braucht ein dickes Kabel als Shared-Medium</li> <li>10BASE2 = Thin-Wire-Ethernet, was eine flexiblere und billigere Alternative zu 10BASE5 ist. Der BNC-T \"Stecker\" wurde benutzt.</li> <li>100BASE-XX: 100 MBit/s Standardt</li> <li>100BASE-TX: 2 Paar UTP Cat 5 mit max Segmentl\u00e4nge 100m</li> <li>100BASE-FX: 2 MMF (62.5 \\(\\mu\\)m) mit 2000m Segmentl\u00e4nge</li> <li>100BASE-T4/2: 4 Paar UTP Cat. 3 mit 100m Segmentl\u00e4nge</li> </ul> <p></p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#fast-ethernet-vs-10mbits","title":"Fast-Ethernet vs 10Mbit/s","text":"<p>Es wird das selbe Frame-Format und Fehlererkennung ben\u00fctzt wie f\u00fcr 10MBit/s. Die Kollisiondomain ist 10 mal kleiner, da die Geschwindikgeit 10 mal gr\u00f6sser ist.</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#shared-ethernet","title":"Shared-Ethernet","text":"<p>Bevor ein Knoten sendet, wartet er, bis die Leitung frei ist. W\u00e4hrend dem Senden wird der Pegel auf der Leitung kontroliert, um kollisisionen fest zu stellen.</p> <p>Wenn eine Kollision festgestellt wurde, wird ein Jamming Signal gesendet und ein zuf\u00e4lliges Vielfache von der Slot-Zeit \\(t_s\\). Bei der 1. Kollision wird <code>0x</code> oder <code>1x</code> gewartet, bei jedem n\u00e4chsten wird der Zeitbereich verdoppelt. Bis zu 16 Versuche, danach wird die \u00dcbertragung abgebrochen. Der andere Sender erkennt nur, dass ein Signal eine Kollision verursacht hat, wenn er w\u00e4hrend des Sendens ein Jamming Signal erhaltet.</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#medium-access-control-mac","title":"Medium Access Control (MAC)","text":"<ul> <li>Master/Slave-Verfahren: (deterministisch) Der Master fragt zyklisch jeden Slave ab und der Slave antwortet mit den vorhanden Daten. So gibt es nie Kollisionen und das Verfahren ist deterministisch, aber der Master ist der single point of failure.</li> <li>Token Passing:(deterministisch) Es wird ein Token von Node zu Node Peer-to-Peer gereicht. Ein Node darf nur senden, wenn er der Token hat. Da der Token verloreren gehen kann, muss es eine M\u00f6glichkeit geben, diesen zu regenerieren. </li> <li>Zeitgesteuerter Zugriff: (deterministisch) Jeder Node hat ein Sende-Slot. Mit diesem Verfahren kann eine hoche Auslastung des Netzes erreicht werden, allerdings muss jeder Node den \"Fahrplan\" und die genaue Zeit kennen.</li> <li>Carrier Sense Multiple Access (CSMA) (undeterministisch): Jeder Knoten pr\u00fcft zuerst ob der Bus frei ist und sendet, wann er will. </li> <li>Carrier Sense Multiple Access / Collision Detection (CSMA/CD) (undeterministisch): Zus\u00e4tzlich werden Kollisionen festgestellt und danach nach einer zuf\u00e4lligen Zeit wieder versucht</li> <li>Carrier Sense Multiple Access with Collision Resolution (CSMA/CR) (undeterministisch): Es gibt ein dominateter Pegel (1 oder 0), welcher gewinnt bei Konflikten. Nur der Verlierer kann dies allerdings feststellen und bricht die \u00dcbertragung ab.</li> </ul>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#collision-domain","title":"Collision Domain","text":"<p>Collision Domain Die Collision Domain ist der Bereich des Netzwerks, in welchem ein Fehler erkennt wird. Da der urspr\u00fcngliche Sender nur die Kollision erkennt, wenn er das Jamming Signal w\u00e4hrend des Sendens empf\u00e4ngt, muss die Collision-Domain kleiner als die Halbe-Ausbreitungsdistanz des k\u00fcrzesten Paket (46Bytes Daten) $$ t_{frame} &gt; 2\\cdot t_{transfer}\\ t_{frame} = \\frac{Framesize_{min}}{Bitrate} \\ t_{transfer}=\\frac{d_{max}}{C_{Medium}}\\ d_{max}&lt;\\frac 1 2 \\frac{Framesize_{min}}{Bitrate}\\cdot C_{Medium} $$</p> <p>Dabei ist \\(d_{max}\\) die Maximale Distanz der Collision Domain</p> <p>Wenn ein Repeater/Hub im Spiel ist, muss die Formel \\(t_{frame} &gt; 2\\left(\\sum t_{transfer} + \\sum t_{forwarding}\\right)\\) benutzen, da der Router das eigentliche Signal, wie auch das Jamming Signal verz\u00f6gert.</p> <p>Die Broadcast-Domain ist der Bereich im Netzwerk, in welcher ein Broadcast-Frame ankommt.</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#hub-vs-l-2-switch-bridge","title":"Hub vs L-2 Switch (Bridge)","text":"<p>Ein Hub ist ein \"dummes\" Ger\u00e4t, welcher alle Informationen an alle Ports senden. Ein Switch liest die Layer 2 Headers and sendet das Paket nur an die n\u00f6tigen Ports. Dadurch wird die Collision Domain unterbrochen. Dies wird auch Transparent Bridging genannt, da die Sender und Empf\u00e4nger nichts davon wissen.</p> <p>Ein Switch merkt sich die Mac-Adressen der Sender und speichert diese mit dem Port in der Filtering Database ab. Dank dieser Datenbank, muss der Switch ein Paket nur an einen Port senden (ausser Broadcast-Frames). Nach einer gewissen Zeit wird ein Eintrag wieder gel\u00f6scht. (Address Learning)</p> <p>Ein Switch hat folgende Leistungsmerkmale: Filterrate, Transferrate, Gr\u00f6sse der MAC-Adresstabelle</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#vlan","title":"VLAN","text":"<p>Bei VLAN wird ein VLAN-Tag zwischen <code>Source-Adress</code> und <code>Length/Type</code> eingef\u00fcgt. Mit diesem Tag kann ein Switch ein Paket einem bestimmten Virtuellen LAN zuordnen. Diese Zuordnung wird in einer Tabelle geregelt. Ein Virtuelles Lan bildet eine Broadcast Domain.</p> <p>Dieser Tag besteht aus:</p> <ul> <li>Tag Protocol Identifier:</li> <li>User Priority/Priority Code Point: (3 Bit) Eine Priorit\u00e4t, um z.B. gewisse Applikationen zu priorisieren</li> <li>Cannonical Format Identifier</li> <li>VLAN-Identifier: (12-Bit)</li> </ul>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#rapid-spanning-tree-protocol","title":"(Rapid) Spanning Tree Protocol","text":"<p>Beim Rapid Spanning Tree Protocol werden einige Pfade deaktiviert, um Loops zu \"entfernen\".</p> <p>Es muss ein Root-Switch im Baum gefunden werden. Der Root ist der Switch mit der tiefsten Bridge Identifier. Falls zwei die gleiche Haben, entscheided die Mac-Adresse. </p> <p>Zu begin preist jeder Switch sich selbst als Root-Switch an. \u00dcbernimmt aber ein anderen Root-Switch, sobald er eine Nachricht erhaltet, in welchem ein \"besseren\" Root-Switch erw\u00e4hnt wird. In diesen Bridge Protocol Data Unit (BPDU) Nachrichten teilt jeder Switch seinen Nachbarn mit, welches nach seiner Wissen, der n\u00e4chste Root-Switch ist und wie viel der Weg dorthin kostet. Der Root-Port eines Switches ist der Port, \u00fcber welcher der Root-Switch \u00fcber den k\u00fcrzesten Weg erreichbar ist. </p> <p>Alle Bridges senden BPDU-Nachrichten all 2 Sekunden. Falls diese Ausbleiben, wird das Netzwerk neu konfiguriert.</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#mac-adresse","title":"Mac-Adresse","text":"<p><code>04-0A-E0-13-14-26</code></p> <p>Im ersten Byte (oben <code>04</code>) <code>0000 00xy</code>, ist \\(x\\), ob es eine Group Adress (<code>1</code>) oder individual Address (<code>0</code>) ist und \\(y\\), ob es eine Locally administered Address (<code>1</code>) oder Universally adinistered address (<code>0</code>) ist.</p> <p>Die ersten 3 Bytes ist die ID der Hersteller, die letzten 3 Bytes eine Laufnummer (<code>aa-aa-aa-bb-bb-bb</code>, a ist die ID des Herstellers, b die Laufnummer)</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#network-layer-layer-3","title":"Network Layer (Layer 3)","text":"<p>Die Aufgabe des Layer 3 ist es die Kommunikation zwischen zwei Konten bereit zu stellen. Dies soll m\u00f6glich sein, unabh\u00e4ngig von den Layern 1 und 2. Daher wird eine netzweite Adressierung (IP-Adressen) ben\u00f6tigt.</p> <p>Grob kann der Layer 2 in verbindungsorientierte  Dienste und verbindungslose Dienste unterteilt werden. Ein verbindungsorientierter Dienst muss zuerst eine Verbindung aufbauen und kann sich wie ein Schlauch vorgestellt werden. Alle Daten gehen durch diesen Schlauch. </p> <p>Ein verbindungsloser Dienst funktioniert wie die Post.</p> Klassen Adressbereich Anzahl Netze Interfaces pro netz A 1.0.0.0 - 127.255.255.255 127 16'777'214 B 128.0.0.0 - 191.255.255.255 16'384 65'534 C 192.0.0.0-223.255.255.255 2'097'152 254 <p>Die folgenden privaten Netzwerke gibt es:</p> Klasse Netzadresse Subnetmaske A 10.0.0.0 255.0.0.0 B 172.16.0.0 - 172.31.0.0 255.255.0.0 C 192.168.0.0 - 192.168.255.0 255.255.255.0 APIPA-Netz 169.254.1.0 - 169.254.244.255 255.255.0.0 <p>Anzahl addressierbare Hosts: \\(2^{(32 - subnet)} - 2\\) (f\u00fcr \"/24\" \\(2^{(32-24)}-2=2^8-2=254\\))</p> <p>Die Netzadresse ist die tiefste Adresse, die Broadcast-Adresse ist die h\u00f6chste Adresse</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#ip-header","title":"IP Header","text":"<ul> <li> <p>Version (4 Bit)   Gibt die Version des IP-Headers an. Es ist somit m\u00f6glich mehrere IP-Version (IPv4 oder IPv6) zu betreiben.</p> </li> <li> <p>Internet Header Length (IHL) (4 Bit)    Gibt die L\u00e4nge allen Headers an. Der gelesene Wert wird mit dem Faktor 4 multipliziert. Wenn also 5 gelesen wird, sind die Headers 20 Bytes lang. IHL muss zwiscehn 5 (20 Bytes) und 15 (60 Bytes) sein. Der fixe Teil eines IP-Headers sind 20 Bytes, also bleiben 40 Bytes f\u00fcr Optionale Felder.</p> </li> <li> <p>Type of Service (8 Bit)   Gibt an, was f\u00fcr eine Art von Leitung es ist. Ein Sender kann danach entscheiden, ob er eine Leitung, welche eine hoche Bandbreite hat, daf\u00fcr ein schlechten Ping (wie eine Satelitenverbindung) oder lieber eine \"normale\" Glassfasserleitung ben\u00fctzt. Dies wurde nie von allen Service-Providern unterst\u00fctzt.</p> </li> <li> <p>Total Length (16 Bit)   Die totale L\u00e4nget des IP-Paketes mit Headers  und Daten. </p> </li> <li> <p>Identifiaction (16 Bit)   Ein Wert, welches ein Paket eindeutig identifiziert. Dieser Wert wird ben\u00fctzt, um fragmentierte Pakete wieder zu einem Paket zusammen zusetzen.</p> </li> <li> <p>Flags (3 Bit)   Beinhaltet Kontrollflags f\u00fcr die Fragmentierung</p> </li> </ul> Feld Position Wert Funktion Erkl\u00e4rung Bit 0 reserved, must be zero Reserviert, immer Null DF Bit 1 0/1 May / Don't Fragment keine Fragmentierung (<code>1</code>) MF Bit 2 0/1 Last / More Fragments Ob ein Folgefragment kommt (<code>1</code>) <ul> <li> <p>Fragment Offset (13 Bit)   An welcher stelle ein fragmentiertes Paket in das ganze Paket gesetzt werden soll. Der gelesen Wert wird mit dem Faktor 8 multipliziert. (Aus 90 wird 720 Bytes)</p> </li> <li> <p>Time to Live (TTL) (8 Bit)   Gibt die Anzahl Sekunden an, welche das Paket noch im Netz sein darf. Wenn der Wert 0 wird, wird das Paket verworfen. In der Praxis ist es schwierig zu messen, wie lange ein Paket unterwegs ist und daher dekrementiert der Router der Wert um <code>1</code> wenn er es weiter sendet.    Wenn ein Router ein Paket mit TTL=1 erhaltet, dekrementiert er es zu <code>0</code> und verwirft es.</p> </li> <li> <p>Protocol (8Bit)   Das Protokol, welches im Datenteil \u00fcbertragen wird. Folgendes sind die wichtigsten Beispiele:</p> </li> </ul> Protocol Keyword Protokollbezeichnung 1 ICMP Internet Control Message 6 TCP Transmission Controll Protocol 17 UDP User Datagram Protocol <ul> <li> <p>Header Checksum (16 Bit)   Eine Pr\u00fcfsumme, welche nur \u00fcber den IP-Header gebildet wird. Diese muss von jedem Router neu berechnet werden, da gewisse Felder vom Router modifiziert werden.</p> </li> <li> <p>Source Address (32 Bit)   Die IP-Adresse des Senders</p> </li> <li> <p>Destination Address (32 Bit)   Die IP-Adresse des Empf\u00e4ngers</p> </li> <li> <p>Options und Padding (max. 40 Bytes)   Optionale Felder</p> </li> </ul>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#maximum-transfer-unit-mtu","title":"Maximum Transfer Unit (MTU)","text":"<p>Die MTU gibt an, wie viel Bytes \u00fcber eine Leitung geschickt werden k\u00f6nnen. Dabei werden aber nur die Daten-Bytes des Ethernet-Frames gez\u00e4hlt. Die Bytes des Ethernet-Headers gelten nicht. </p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#fragmentation-und-reassembly","title":"Fragmentation und Reassembly","text":"<p>Es gibt folgende F\u00e4lle beim Reassembly:</p> <ul> <li>Flag <code>MF</code>=0 und <code>Fragment Offset</code>=0: Es wurde nicht fragmentiert</li> <li>Flag <code>MF</code>=1 und <code>Fragment Offset</code>=0: Dies ist das erste Fragment</li> <li>Flag <code>MF</code>=1 und <code>Fragment Offset</code>&gt;0: Dies ist ein Zwischen-Fragment</li> <li>Flag <code>MF</code>=0 und <code>Fragment Offset</code>&gt;0: Dies ist das letzte Fragment</li> </ul> <p>Reassembly wird erst beim Ziel-Host erledigt, um Routers zu entlasten und es zu erm\u00f6glichen, dass Fragmente verschiedene Pfade durchs Netzwerk nehmen k\u00f6nnten.</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#address-resolution-protocol-arp-layer-2","title":"Address Resolution Protocol (ARP) [Layer 2]","text":"<p>Ein ARP-Request wird als Broadcast-Message verschickt, die Antwort hingegen nicht.</p> <p></p> <p>F\u00fcr Requests (Bild von oben), ist die <code>Ethernet-Hardware-Address</code> auf die Broadcast-Adresse angegeben und das Feld <code>Hardware Address of Traget</code> ist <code>null</code>, da es nicht bekannt ist.</p> <p>Bei der Reply ist die <code>Ethernet Address of Destintation)</code> und <code>Hardware Address of Target</code> gesetzt.</p> <p>In einem ARP-Cache werden die Mac-Ip Paare gecached.</p> <p>Ein Gratuitous ARP Request   wird von einem Konten beim Booten oder Adresse-Ver\u00e4nderung versendet. Wenn keine Antwort zur\u00fcck kommt, ist die IP-Adresse nicht vergeben. So k\u00f6nnen Adress-Konflikte erkannt werden.</p> <p>Ein Gratuitous ARP Reply wird von Knoten beim Booten oder Adress-Ver\u00e4ndrung versendet um den ARP-Cache anderer Knoten zu berechtigen oder setzen. Da die Reply ohne Request verschickt wurde, wird sie an die Broadcast-Adresse geschickt.</p> <p>Reverse Address Resolution Protocol (RARP) kann genutzt werden, um von einer MAC-Adresse die IP-Adresse zu bekommen von einem zentralen Server. Z.B. von einer Maschine nach einem Reboot.</p> <p></p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#internet-control-message-protocol-icmp-layer-3","title":"Internet Control Message Protocol (ICMP) [Layer 3]","text":"<p>ICMP Pakete werden der Schicht 3 zugeordnet, obwohl sie in einem IP-Paket gekapselt werden.</p> ICMP-Type Bedeutung Beispiel 3 Destination Unreachable Wenn der Router ein Node nicht erreiche kann, weil z.B. die MTU zu klein ist, das h\u00f6here Protokoll deaktiviert ist beim Host, das Paket fragmentiert werden muss aber DF gesetzt ist oder der Node ausgesteckt wurde: TODO Code Protocol Unreachable=Node kommuniziert nicht \u00fcber das Protokol;  Port Unreachable = Kein Program h\u00f6rt auf diesen Port; 13 Communication adminstrativvely prohibited = Die Firewall blockiert etwas.Destination Unreachable kann auch genutzt werden, um die MTU einer Leitung zu finden 4 Source Quench Der Puffer des Routers ist voll 5 Redirct Wird an ein Host geschickt, wenn der Router feststellt, dass ein Paket an den falschen Router geschickt wurde 11 Time Exceeded Wenn das TTL-Feld =0 ist, wird es vom Router nicht mehr weitergesendet. Dies kann f\u00fcr Trace-Rout genutzt weden. Jeder Router reduziert das TTL-Feld um 1. Wenn der Router ein Paket mit TTL=1 bekommt wird dies um <code>1</code> reduziert und danach verworfen. 12 Parameter Problem Falls der Host oder Router im IP-Header einen ung\u00fcltigen Wert hat 0 Echo Reply Die Antowort auf ein Echo Request 8 Echo (-Request) Pingt ein Knoten an, welcher ein Echo Reply senden sollte 13 Timestamp Verhalten sich gleich wie Echo-Requests/-Replies aber senden noch die Zeit des Senders und Empf\u00e4ngers 14 Timestamp Reply Siehe 13 - Timestamp","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#destination-unreachable-type-3","title":"Destination Unreachable (Type 3)","text":"<ul> <li>Code-Feld: 0 = net unreachable; 1 = host unreachable; 2= protocol unreachable; 3 = port unreachable; 4 fragmentation needed and DF set; 5 source route failed; 13 = communication administratively prohibited</li> <li>Internet Header + 64 Bits of Original Datagram enth\u00e4lt den ersten Teil des Datagramms,   das die ICMP-Meldung ausgel\u00f6st hat. Damit ist der urspr\u00fcngliche Absender in der Lage, den   Fehler genauer zu bestimmen.</li> </ul>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#time-exceeded-message-type-11","title":"Time Exceeded Message (Type 11)","text":"<p>Das Format ist gleich, wie bei Destination Unreachable (Type 3). Das Code-Feld kann folgende Werte haben: 0 = time to live exceeded in transit; 1 = fragment reassembly time exceeded.</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#echo-request-reply-message-type-8-type-0","title":"Echo-Request/-Reply Message (Type 8 / Type 0)","text":"<ul> <li>Identifier: ID, damit der Sender die Echo-Reply zu einem Prozess kann. In der Reply steht die selbe Zahl</li> <li>Sequence Number: Wird bei jedem Echo-Request inkrementiert. In der Reply steht die selbe Zahl.</li> <li>Code-Feld: ist null</li> </ul>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#transport-layer-layer-4","title":"Transport Layer (Layer 4)","text":"<p>Die Aufgabe des Layer 4 ist es eine effiziente Verbindung zwischen zwei Knoten f\u00fcr den Session Layer (Layer 5) zu bereit stellen.  Dabei soll die Qualit\u00e4t der Verbindung gew\u00e4hrgeleistet sein</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#adressierung","title":"Adressierung","text":"<p>Ein Port ist eine Zahl zwischen 1 und 65'536 und sind folgendermassen unterteilt:</p> <ul> <li>1-1023: Well-Known Port Nummern, wie z.B. 80 f\u00fcr HTTP</li> <li>1024-49'151: Reservierte Bereiche f\u00fcr herstellerspezifischen Applikationen</li> <li>49'152-65'536: Dynamische/Private Ports, welche beliebig verwendet werden k\u00f6nnen</li> </ul> <p>Die folgende Tabelle enth\u00e4lt die wichtigsten Well-Known Ports:</p> <p></p> <p>(465/TCP - SMTPS sollte heissen \"SMTP over SSL/TLS\")</p> <p>Um eine Kommunikationsbeziehung eindeutig zu bestimmen braucht es folgende 5 Parameter: Source Port; Destination Port; Source IP-Adresse; Destination IP-Adresse; Das Protokol (UDP oder TCP)</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#tcp-transmission-control-protocol","title":"TCP (Transmission Control Protocol)","text":"<p>TCP bietet folgendes f\u00fcr eine Applikation:</p> <ol> <li>Verbindungsorientierte \u00dcbetragung: Eine Verbindung muss zuerst aufgebaut werden und eine TCP-Verbindung hat genau 2 Endpunkte (Multicast wird nicht unterst\u00fctzt)</li> <li>Hohe Zuverl\u00e4ssigkeit: TCP garantiert die Daten\u00fcbertragung ohne Verluste in der richtigen Reihenfolge</li> <li>Vollduplex\u00fcbertragung:  In einer TCP Verbindung k\u00f6nnen Daten in beide Richtungen fliessen</li> <li>Stream-Schnittstelle:  Eine Andwenung kann ein Stream von Bytes senden, welche vom Empf\u00e4nger in derselben Reihenfolge wieder empfangen werden.</li> <li>Zuverl\u00e4ssiger Verbindungsaufbau: Es muss zuerst eine Verbindung aufgebaut werden. Pakete von einer vorherigen Verbindungen sind danach nicht mehr g\u00fcltig</li> <li>Eleganter Verbindungsabbau: Beide Seiten k\u00f6nnen die Verbindung trennen und sie wird sauber abgebaut</li> </ol> <p>Im folgenden Diagramm wird aufgezeichnet, wie ein Verbindungsaufbau, das Senden/Empfangen von Nachrichten und der Verbindungsabbau beschreiben.</p> <p></p> <p>Im folgenden Diagramm sind die feinen Zust\u00e4nde eines Clients oder Server aufgezeichnet:</p> <p></p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#probleme","title":"Probleme","text":"<p>Die folgenden Probleme m\u00fcssen von TCP gel\u00f6st werden:</p> <ul> <li>Eine Verbindung soll zuverl\u00e4ssig auf- und abgebaut werden k\u00f6nnen</li> <li>Eine TCP-Nachricht k\u00f6nnen verloren, verf\u00e4lscht, dupliziert oder verstauscht werden. TCP muss diese Nachrichten trotzdem wieder korrekt zusammen setzen und der Applikationsschicht \u00fcbergeben. Hierf\u00fcr werden Techniken, wie Sequenznummern, Adaptiver Timeout, Sliding Window Protokoll ben\u00fctzt.</li> <li>Der Empf\u00e4nger soll nicht \u00fcberschwemmt werden. Hier f\u00fcr wird Flow Control mit Advertized Window Size gen\u00fctzt.</li> <li>Das Netzwerk dazwischen soll nicht \u00fcberlastet werden. Hier f\u00fcr gibt es Congestion Control mit Slow Start Algorithmus.</li> </ul>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#tcp-header","title":"TCP-Header","text":"<ul> <li>TCP Source Port und Destination Port: Der genutzte Port auf dem Sender und Empf\u00e4nger</li> <li>Sequence Number: (Bezieht sich auf die Ausgangsdaten) Anhand dieser Zahl k\u00f6nnen Daten in der richtigen Reihenfolge der Applikation \u00fcbergeben werden und es wird die Acknowledgement Number damit berechnet</li> <li>Acknowledgment Number: (Bezieht sich auf die Eingangsdaten) </li> <li>Header Length/Data Offset: Gibt an, wo der TCP-Header mit optionalen Headers aufh\u00f6rt und die Daten beginnen</li> <li>Control Bits: Flags, welche z.B. den Verbindungsaufbau und -abbau einleiten      Diese Flags haben die folgende bedeutung:</li> <li>URG: Urgent-Pointer-Feld enh\u00e4lt einen g\u00fcltigen Wert</li> <li>ACK: Acknowledgment Feld enh\u00e4lt einen g\u00fcltigen Wert</li> <li>PSH: (= Push) Empf\u00e4nger soll Daten sofort an die Applikation weiterleiten</li> <li>RST (=Reset) Verbindung zur\u00fccksetzen</li> <li>SYN (=Synchronize) Verbindung aufbauen</li> <li> <p>FIN: Der Sender hat keine Daten mehr zu \u00fcbertragen. Verbindung abbauen</p> </li> <li> <p>Window: Gibt die noch verf\u00fcgbare Buffer-Gr\u00f6sse des Senders an. Wenn ein Empf\u00e4nger <code>0</code> im Window-Feld erh\u00e4lt, stoppt er zu senden, bis eine Retransmission mit einem gr\u00f6sseren Window-Feld ankommt.</p> </li> <li>Checksum: Die Checksume des TCP-Pakets</li> <li>Urgent Pointer: Falls <code>URG</code> gesetzt ist, zeigt dieses Feld an, wo die \"Urgent-Daten\" im Datenblock gefunden werden k\u00f6nnen</li> <li>Options: Optionen, wie \"SACK\" oder die maximale Segmentl\u00e4nge (MSS) k\u00f6nnen als optionale Option \u00fcbertragen werden</li> </ul>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#verbindungsaufbau","title":"Verbindungsaufbau","text":"","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#datenaustausch","title":"Datenaustausch","text":"<p>Eine Nachricht vom Sender m\u00fcssen vom Client immer mit einem Paket, welches das <code>ACK</code>-Flag Gesetzt hat, best\u00e4tigen werden. Vor dem senden startet der Sender ein Timer. Falls dieser abl\u00e4uft, bevor der Empf\u00e4nger das Paket best\u00e4tigt hat, wird das Paket erneut versendet. Es gibt eine Retransmission.</p> <p>Die <code>Seq</code> Zahl der Antwort des Servers ist die <code>Ack</code> Zahl des Requests. Die <code>Ack</code> Zahl der Antwort des Servers ist die <code>Seq</code>-Zahl + die Anzahl empfangenen Bytes.</p> <p></p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#verbindungsabbau","title":"Verbindungsabbau","text":"<p>MSL=Maximum Segment Length</p> <p>Das Timeout am Ende ist n\u00f6tig, falls das letzte <code>ACK b+m+1</code> nicht ankommt. In diesem Fall w\u00fcrde die Passive-Seite noch mals ein <code>FIN b+m</code> Paket senden.</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#sliding-window","title":"Sliding Window","text":"","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#adaptive-elemente-von-tcp","title":"Adaptive Elemente von TCP","text":"","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#adaptives-timeout","title":"Adaptives Timeout","text":"<p>Das Timeout von TCP wird adaptiv bestimmt und \u00e4ndert sich \u00fcber die Lebenszeit der Verbindung.</p> <p>Daf\u00fcr werden folgende Formeln ben\u00fctzt: $$ RTO_n=SRTT_n + 4\\cdot RTTVAR_n\\ SRTT_n = (1 - \\alpha )\\cdot SRTT_{n-1}+\\alpha\\cdot RTT_n\\ RTTVAR_n=(1 - \\beta)\\cdot RTTVAR_{n - 1}+\\beta \\cdot \\vert SRTT_n - RTT_n \\vert $$</p> <p>Dabei steht \\(RTO\\) f\u00fcr <code>Retransmission Time-Out</code>, \\(SRTT\\) f\u00fcr <code>Smoothed Round-Trip-Time</code> und ist ein gewichteter Mittelwert, \\(RTT\\) f\u00fcr <code>Round-Trip-Time</code> und \\(RTTAV\\) f\u00fcr <code>Round-Trip-Time Variance</code> und ist der gewichteter Mittelwert der Abweichung, bzw. die Streuung.</p> <p>Wenn die Roud-Trip-Time \u00fcberschritten wird, wird der Sender das Paket erneut senden.</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#bestatigung-von-paketen","title":"Best\u00e4tigung von Paketen","text":"<p>In TCP wird das Sliding-Window Verfahren f\u00fcr die Best\u00e4tigung von Paketen gen\u00fctzt. Der Sender sendet alle Pakete im Fenster und schiebt das Fenster weiter, wenn die \u00e4lteste Nachricht best\u00e4tigt wurde.</p> <p>Ohne Sliding-Window Verfahren muss der Sender immer auf eine Best\u00e4tigung warten. Mit dem Sliding-Window k\u00f6nnen mehrere Pakete versendet werden.</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#fluss-steuerung","title":"Fluss-Steuerung","text":"<p>Im folgenden Paket wird angenommen, dass der Empf\u00e4nger mit einer Buffergr\u00f6sse von 2'500 Bytes hat. Der Empf\u00e4nger sendet die verbleibende Buffergr\u00f6sse im <code>Window</code> Feld zur\u00fcck. Wenn der Sender eine Best\u00e4tigung mit <code>Window=0</code> empf\u00e4ngt, wartet er, bis er dieselbe Best\u00e4tigung mit einer h\u00f6heren <code>Window</code> Feld empf\u00e4ngt.</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#uberlastung-des-netzwerks-vermeiden","title":"\u00dcberlastung des Netzwerks vermeiden","text":"<p>Beim Slow-Start Algorithmus beginnt der Sender mit einer kleinen vordefinierten Gr\u00f6sse und verdoppelt dies mit jedem gesendetem Paket bis er die erste Schwelle erreicht. Danach wird die Paketgr\u00f6sse linear vergr\u00f6ssert bis ein Timeout entsteht. </p> <p>Bei einem Timeout wird die n\u00e4chste Schwelle auf die H\u00e4lfte des Paketes, bei welchem das Timeout entstand. Danach wird wieder ein Slow-Start ausgef\u00fchrt.</p> <p>Es gibt f\u00fcr den Slow-Start Algorithmus folgende Kritikpunkte</p> <ul> <li>Die \"S\u00e4gezahnkurven\" verschiedener TCP-Sessions tendieren dazu, sich zu synchronisieren</li> <li>Die Annahme gilt f\u00fcr Wireless-Netze nicht mehr unbedingt, wo relativ viel Paketverlust durch Bitfehler   w\u00e4hrend der \u00dcbertragung vorkommt</li> <li>Slow-Start bei kurzen Transfers immer slow (www)</li> <li>Abh\u00e4ngig von Round Trip Time</li> </ul>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#udp-user-datagram-protocol","title":"UDP (User Datagram Protocol)","text":"<p>UDP, wie auch TCP, ist ein Layer 4 Protokol und ben\u00fctzt Ports zur adressierung. Es ist aber nicht zuverl\u00e4ssig und erledigt nichts gegen Paket Verluste oder vertauschte Pakete. Daf\u00fcr kann ein Knoten sofort senden, da es keinen Verbindungsaufbau gibt, es gibt weniger Overhead und ist weniger rechnungsintensiv.</p> <p>Es kann, wie auch TCP, Daten anhand von einer Port-Nummer der richtigen Anwendung zuweissen (Demultiplexing) und umgekehrt (Multiplexing).</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#header","title":"Header","text":"<p>Der UDP Header besteht aus 8 Bytes und beinhaltet folgendes:</p> <p></p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#application-layer-layer-7","title":"Application Layer (Layer 7)","text":"","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#dns-udp53","title":"DNS (UDP/53)","text":"Type Beschreibung A IPv4 Adresse des gesuchten Hosts (32 Bit) AAAA IPv6 Adresse des gesuchten Hosts (128 Bit) MX Mail Exchange (Mail Server) NS Name Server f\u00fcr eine Zone CNAME Canonical Name; Alias zum Host TXT Text Record; in Antowrten f\u00fcr verschiedenste Angaben verwendet <p>Die 13 Root Server wissen wo die NS-Server der Top-Level Domains sind.</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#ablauf-einer-namensauflosung","title":"Ablauf einer Namensaufl\u00f6sung","text":"<p>Resolver ist die lokale Software.</p> <ol> <li>Host fragt DNS-Server nach einer Adresse <code>hello.example.com.</code></li> <li>DNS Server fragt Root-Server nach dem <code>com.</code> NS</li> <li>DNS Server fragt <code>.com</code>-NS nach <code>example.com.</code></li> <li>DNS Server fragt <code>example.com.</code>-NS nach <code>hello.example.com</code></li> </ol> <p>F\u00fcr Reverse DNS werden dieselben Schritte ausgef\u00fchrt, aber mit einer IP Adresse. </p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#dhcp-bootp-udp67-udp68","title":"DHCP / BOOTP (UDP/67; UDP/68)","text":"<p>Der Client fragt den Server nach einer Konfiguration auf dem UDP Port 67 als Broadcast-Nachricht. Die Antwort wird an die MAC-Adresse des Client gesendet. BOOTP funktioniert auch \u00fcber Netzwerk-Grenzen. Dabei ist der Router so konfiguriert, dass er den BOOTP-Request liest und per Unicast an den BOOTP-Server sendet. Die Antwort wird wieder an den Client zur\u00fcck geleitet.</p> <p>Es werden folgende Infos gesendet:</p> <ul> <li>Netzwerk Configuration: IP-Adresse; Subnet; Gateway IP</li> <li>Boot File Name</li> </ul> <p>Nachteile von BootP sind: </p> <ul> <li>Bei grossen Anzahl von Knoten, m\u00f6chte man IP-Adressen gemeinsam nutzen, was mit BootP nicht praktikabel ist</li> <li>Mehraufwand, da f\u00fcr jeden Knoten eine Konfiguration eingetragen werden muss</li> </ul> <p>DHCP ist abw\u00e4rtskompatibel mit BootP.</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#network-address-translation-nat","title":"Network Address Translation (NAT)","text":"<p>Wenn ein Paket gesendet wird, wird die Source-Adresse und ev. den Port durch die des Gateways ersetzt und an den Server weitergeleitet. Anhand des Ports kann der Gateway eingehende Pakete unterscheiden und dem korrekten Client senden. Daf\u00fcr wird wieder der Header modifiziert.</p> <p>Probleme von NAT:</p> <ul> <li>OSI-Model wird verletzt, da die IP und Port ver\u00e4ndert werden und auch Checksummen neu gerechnet werden m\u00fcssen</li> <li>Die Verbindung kann nicht auf Layer 1-3 Verschl\u00fcsselt werden, da die Informationen vom Gateway ben\u00f6tigt werden</li> </ul>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#autoconfiguration-mit-ipv4-automatic-private-ip-addressing-apipa","title":"Autoconfiguration mit IPv4 - Automatic Private IP Addressing (APIPA)","text":"<p>Wenn kein DHCP-Server gefunden wird, wird eine zuf\u00e4lle IP-Adresse zwischen 169.254.1.0 bis 169.254.244.255 (Netzwerk 169.254.0.0/16) gew\u00e4hlt und mit einem Gratuious ARP-Request \u00fcberpr\u00fcft, ob die IP-Adresse bereits besetzt ist.</p> <p>Um mit dieser IP-Adresse ins Internet zu kommen, muss der Router ARP-Requests f\u00fcr alle IP-Adressen ausserhalb des Netzwerks erkennen und auf sich leiten. Der Router kann die Pakete danach an den korrekten Host weiterleiten.</p> <p>Um Ger\u00e4te ohne DHCP und DNS Server zu finden, kann multicast DNS (mDNS) verwendet werden, welches ein verteilter DNS Server ist. Es wird ein \"normalen\" DNS Request an <code>244.0.0.251</code> mit dem UDP Port 5353 geschickt. Wenn nach <code>services.dns-sd.udp.local.</code> gefragt wird, antworten alle mDNS f\u00e4higen Ger\u00e4te.</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#trivial-file-transfer-protocol-tftp-udp69","title":"Trivial File Transfer Protocol (TFTP) [UDP/69]","text":"<p>Es gibt f\u00fcnf Operationen:</p> <ul> <li>Read Request (RRQ): Fordert eine Datei an</li> <li>Write Request (WRQ): Shickt eine Datei an den Host</li> <li>Acknowledgment (ACK): Best\u00e4tigt das korrekte Empfangen von WRQ- oder DATA-Pakete. Es wird die Block-Nummer angegeben</li> <li>Data (DATA): \u00dcbermittelt die eigentlichen Daten-Bl\u00f6cke. Ein Block ist 512 Bytes (wenn nicht anderst angegeben in WRQ oder RRQ Request). Wenn ein Block kleiner ist, wird das als Ende der Datei interpretiert.</li> <li>Error (ERROR): Beschreibt den aufgetretener Fehler</li> </ul> <p>Wird ein ACK oder DATA Paket nicht innerhalbs einer Zeit empfangen, wird die letzte ACK- oder DATA Nachricht nochmals versendet.</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#simple-mail-transfer-protocol-smtp-tcp25","title":"Simple Mail Transfer Protocol (SMTP) [TCP/25]","text":"<p>Sendet ein Mal zu einem Mail-Server, welcher das Mail ebenfalls weiterleitet oder zwischen Speichert damit der Nutzer dies via POP3 oder IMAP abholen kann.</p> <p>Ablauf:</p> <ol> <li>Verbinden mit dem Server und identifizieren und authentifizieren</li> <li>Client sendet <code>MAIL FROM &lt;absender&gt;</code> und <code>RCPT TO &lt;empf\u00e4nger&gt;</code> um die Empf\u00e4nger zu definieren</li> <li>Mit <code>DATA</code> wird das Mail versendet</li> <li><code>QUIT</code> wird vom Client gesendet, was vom Server mit <code>Bye-Bye</code> quitiert wird</li> </ol> <p>Der Server-Antwortet auf die Befehle mit 3-stelligen Zahlen Codes (wie HTTP-Status Codes)</p> <pre><code>S: 220 mail.zhaw.ch ESMTP Sendmail 8.8.8/8.8.8\nC: HELO zhaw.ch\nS: 250 mail.zhaw.ch Hello mth@mail.zhaw.ch, pleased to meet you\nC: MAIL FROM:&lt;mth@zhaw.ch&gt;\nS: 250 OK\nC: RCPT TO:&lt;kls@zhaw.ch&gt;\nS: 250 &lt;kls@zhaw.ch&gt;... Recipient ok\nC: DATA\nS: 354 Enter mail, end with \".\" on a line by itself\nC: Date: 06 Jan 2099 16:34:25 +0100\nC: To: kls@zhaw.ch\nC: Subject: Test einer Mail.\nC:\nC: Damit ist der SMTP-Teil beendet.\nC: .\nS: 250 OK\nC: QUIT\nS: 221 mail.zhaw.ch closing connection\n</code></pre>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#zeichensatz","title":"Zeichensatz","text":"<p>SMTP ben\u00fctzt ein 7-Bit ASCII Zeichen-Satz.</p> <p>Folgende Headers werden gesetzt, um MIME zu verwenden. Der Mime-Seperator wird eingesetzt wenn</p> <pre><code>MIME-Version: 1.0\nContent-Type: Multipart/Mixed;\nBoundary=\"Mime-Separator-WAB02622.926626671\"\n\nMime-Separator-WAB02622.926626671\nContent-Type: text/plain\nHallo! Hier folgt der Text.\n</code></pre>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#quoted-printable","title":"Quoted-Printable","text":"<p>Jedes 8-bit Zeichen wird durch <code>=xx</code> ersetzt, wobei <code>xx</code> eine Hex-Zahl ist. (<code>1</code> -&gt; <code>=31</code>). Dies ist sehr ineffizient (Effizienz: 30%)</p>","tags":["summary","KT"]},{"location":"22FS/KT/summary.html#base64","title":"Base64","text":"<p>Alle Texte werden auf 6-Bit Zeichen aufgeteilt. Wenn es nicht aufgeht, wird mit <code>=</code> ein (6-Bit) null-Byte eingesetzt. Ausdem folgt, das ein Vielfaches von drei 8-Bit Bytes kein Padding ben\u00f6tigten. (Effiizienz: 73%)</p>","tags":["summary","KT"]},{"location":"22FS/LA/01_Lineare%20Gleichungssysteme.html","title":"Lineare Gleichungssystem","text":"<p>Eine Gleichung ist lineare, wenn sie die folgende Form entspricht: \\(ax+by+cz=d\\)</p>"},{"location":"22FS/LA/01_Lineare%20Gleichungssysteme.html#koeffizienten-matrix","title":"Koeffizienten Matrix","text":"<p>Ein lineares Gleichungssystem kann als eine Matrize Multiplikation geschrieben werden. $$ \\text{} \\begin{cases} i_1x+i_2y=c_1\\ i_3x+i_4y=c_2\\ i_5x+i_6y=c_2 \\end{cases}  \\ \\begin{pmatrix} i_1 &amp; i_2 \\ i_3 &amp; i_4\\ i_5 &amp; i_6 \\end{pmatrix} \\cdot  \\begin{pmatrix} x \\ y \\end{pmatrix} = \\begin{pmatrix} i_1x+i_2y\\ i_3x+i_4y\\ i_5x+i_5y \\end{pmatrix} = \\begin{pmatrix} c_1\\ c_2\\ c_3 \\end{pmatrix} $$ Dies kann vereinfacht als eine erweiterte Koeffizienten Matrix geschreiben werden: $$ \\left( \\begin{array}{cc|cr} i_1 &amp; i_2 &amp; c_1\\ i_3 &amp; i_4 &amp; c_2\\ i_5 &amp; i_6 &amp; c_3 \\end{array} \\right) $$</p>"},{"location":"22FS/LA/01_Lineare%20Gleichungssysteme.html#homogene-gleichungssysteme","title":"Homogene Gleichungssysteme","text":"<p>Homogene Gleichungssysteme sind Gleichungssysteme bei denen das Resultat bei allen Gleichungen <code>0</code>  ist. Es kann eine oder unendlich viele L\u00f6sungen haben. Es ist nicht m\u00f6glich, dass es keine L\u00f6sung hat.</p>"},{"location":"22FS/LA/01_Lineare%20Gleichungssysteme.html#zeilenstufenform","title":"Zeilenstufenform","text":"<p>Die Zeilenstufenform ist definiert durch die folgenden Regeln:</p> <ul> <li>Alle Zeilen mit nur <code>0</code> stehen zu unterst</li> <li>Wenn eine Zeile nicht nur aus <code>0</code> besteht, ist die erste Zahl, welche keine <code>0</code> ist, eine <code>1</code>. Diese <code>1</code> wird als f\u00fchrende Eins bezeichnet</li> <li>Eine f\u00fchrende Eins, welche weiter unten steht, muss auch weiter rechts stehen, als die anderen f\u00fchrenden Einsen</li> </ul> <p>Zus\u00e4tzlich gibt es noch die reduzierte Zeilenstufenform, bei welcher noch die Regel gilt, dass in den Spalten mit einer f\u00fchrenden Eins, die weiteren Elemente <code>0</code> sein m\u00fcssen.</p> <p>Bei der erweiterten Koeffizientenmatrix sind die Resultat-Werte (die \\(c_i\\) Werte) von den Regel ausgenommen werden.</p> <p></p> <p>Folgendes Matrix ist in der Zeilenstufenform: </p>"},{"location":"22FS/LA/01_Lineare%20Gleichungssysteme.html#losung-aus-der-zeilenstufenform","title":"L\u00f6sung aus der Zeilenstufenform","text":"<p>Um aus einer Zeilenstufenform die L\u00f6sung zu lesen, werden die Variablen in f\u00fchrende Unbekannte und freie Unbekannte unterteilt. F\u00fchrende Unbekannte sind all diese Variable, welche in ihrer Spalte eine f\u00fchrende <code>1</code> haben, die anderen Variablen sind freie Unbekannte.</p> <p></p> <p>F\u00fcr die freien Unbekannte werden nun eine beliebige Variable gleichgesetzt. Oft werden grichische Buchstaben verwendet, um die Verwechslungsgefahr gering zu halten.</p> <p>Im oberen Beispiel: $$ x_2=\\lambda\\ x_4=\\mu $$ Jede f\u00fchrende Unbekannte wird nun</p> <p>in eine Gleichung \u00fcbersetzt. Wieder f\u00fcr das Beispiel oben: $$ x_1-2x_2+3x_4=5 \\rightarrow x_1=5+2x_2-3x_4\\ x3-x4=3\\rightarrow  x_3=3+x_4 $$ Nun kann das Gleichungssystem von unten (also \\(x_4\\) in diesem Fall) gel\u00f6st werden: $$ \\begin{align} x_4&amp;=\\mu\\ x_3&amp;=3+\\mu\\ x_2&amp;=\\lambda\\ x_1&amp;=5+2\\lambda-3\\mu \\end{align} $$ In diesem Fall gibt es zwei Unbekannte \\(\\lambda\\) und \\(\\mu\\). Dank diesen gibt es unendlich viele L\u00f6sungen. Es kann auch eine spezifische L\u00f6sung oder gar keine L\u00f6sung geben.</p>"},{"location":"22FS/LA/01_Lineare%20Gleichungssysteme.html#parameterdarstellung","title":"Parameterdarstellung","text":"<p>Die Parameterdarstellung ist eine alternative Darstellungsm\u00f6glichkeit von des Resultats. Das untere Beispiel zeigt das Beispiels-Gleichungssystem von oben: $$ \\vec x=\\begin{pmatrix}x_1\\x_2\\x_3\\_x4\\end{pmatrix}= \\begin{pmatrix}5 \\0\\3\\0\\end{pmatrix} +\\lambda \\begin{pmatrix}2\\1\\0\\0\\end{pmatrix}+ \\mu\\begin{pmatrix}-3\\0\\1\\1\\end{pmatrix} $$ Anzumerken ist, dass \\(x_2\\) bei der \\(\\lambda\\) Matrix ein <code>1</code> hat. Dies liegt daran, dass \\(x_2=\\lambda\\) ist. Dasselbe gilt auch mit \\(x_4=\\mu\\) und der \\(\\mu\\) Spalte bei \\(x_4\\)</p>"},{"location":"22FS/LA/01_Lineare%20Gleichungssysteme.html#zeilenstufenform-herleiten-gauss-verfahren-und-gauss-jordan-verfahren","title":"Zeilenstufenform herleiten (Gauss-Verfahren und Gauss-Jordan-Verfahren)","text":"<p>Ein Gleichungssystem, welches bereits in der Zeilenstufenform ist zu l\u00f6sen, ist einfach. Die Frage ist nun, wie jemand ein solches Form herleiten kann.</p> <ol> <li>Wir nennen die am weitesten links stehende Spalte mit Element \\(\\neq0\\) Pivot-Spalte</li> <li>Wenn die Zeile mit dem f\u00fchrenden Eins nicht zu oberst ist, wird sie mit der obersten Zeile getauscht</li> <li>Die oberste Zeile wird durch die erste Element \\(\\neq 0\\) in der Spalte geteilt. So wird eine f\u00fchrende Eins erzeugt</li> <li>Um <code>0</code> in der Pivot-Spalte unter der obersten Zeile zu erzeugen, wird jede Zeile unter der obersten Zeile mit einem Vielfachen der obersten Zeile addiert um <code>0</code> zu forderst zu erzeugen</li> <li>Schritte 1-5 wiederholen, bis eine Zeilenstufenform vorhanden ist</li> </ol> <p>Wenn eine reduzierte Zeilenstufenform verlangt wird, muss danach ein Vielfaches der unterste Zeile auf die oberen Zeile addiert werden, so dass diese <code>0</code> ergeben. Wenn man mithilfe der reduzierten Form die Gleichung l\u00f6st, spricht man vom Gauss-Jordan-Verfahren, ansonsten nur vom Gauss-Verfahren.</p> <p>Das folgende Beispiel wird an dem folgenden Gleichungssystem durchgef\u00fchrt:</p> \\[ \\left(\\begin{array} {ccc|c}     1 &amp; -1 &amp; 1 &amp; 0\\\\     3 &amp; 1 &amp; 0 &amp; 18\\\\     0 &amp; 1 &amp; 2 &amp; 10 \\end{array}\\right) \\] Schritt Beispiel A1. Die erste Spalte ist die Pivot-SpalteA2. Das oberste Element der Pivot-Spalte ist bereits \\(\\neq 0\\)A3. Es wird von der zweiten Zeile drei mal die erste Zeile abgezogen. Die dritte Zeile hat bereits eine <code>0</code> in der Pivot-Spalte $\\left(\\begin{array} {ccc B1. Die zweite Spalte ist nun die Pivot-SpalteB2. Das oberste Element (die erste Zeile wird ignoriert, daher ist dies in der zweiten Zeile), ist eine <code>4</code>, daher wird die zweite Zeile durch eine <code>4</code> geteilt $\\left(\\begin{array} {ccc B3. Es wird das \\((-1)\\) Fache von der Zeile 2 zu der Zeile 3 addiert $\\left(\\begin{array} {ccc C1. Die dritte Spalte ist nun die Pivot-SpalteC2. Die ersten zwei Zeilen werden ignoriert, daher wird die letzte Zeile durch <code>2.75</code> geteilt, damit eine <code>1</code> zu forderst steht. $\\left(\\begin{array} {ccc <p>Die Matrix ist nun in der Zeilenstufenform. Wenn die reduzierte Stufenzeilenform verlangt wird, muss der f\u00fcnfte Schritt noch durch gef\u00fchrt werden:</p> Schritt Beispiel A5. Die zweite Zeile wird mit dem \\((-0.75)\\) Fachen der Zeile drei addiert und die erste Zeile mit der Zeile drei addiert (also \\(\\cdot 1\\)) $\\left(\\begin{array} {ccc B5. Die erste Zeile wird mit der zweiten Zeile addiert $\\left(\\begin{array} {ccc <p>Nun ist die Matrix in der reduzierten Zeilenstufenform.</p>"},{"location":"22FS/LA/01_Lineare%20Gleichungssysteme.html#losbarkeit-von-linearen-gleichungssystemen","title":"L\u00f6sbarkeit von linearen Gleichungssystemen","text":"<p>Ein lineares Gleichungssystem hat drei verschiedene L\u00f6sungsm\u00f6glichkeiten: Keine L\u00f6sung, eine L\u00f6sung, unendliche L\u00f6sungen.</p> <p>Graphisch gezeichnet, sieht dies so aus:</p> <p>Um nicht jedes mal ein Gleichungssystem zeichen zu m\u00fcssen, kann man den Rang des Gleichungssystems zu hilfe ziehen:</p> <p>Der Rang \\(rg(A)\\) des Gleichungssystems \\(A\\) ist definiert als \\(rg(A)=\\text{Gesamtanzahl Zeilen} - \\text{Anzahl Nullzeilen}\\) in der Zeilenstufenform</p> <p>\\(rg(A)\\) ist dabei die Matrix ohne die Koeffizienten \\(\\vec c\\) (also ohne die Zahlen nach dem langen Strich). \\(rg(A|\\vec c)\\) ist der Rang der kompletten Matrix (mit den Zahlen nach dem Strich inklusive)</p> <ul> <li>Ein lineares Gleichungssystem ist l\u00f6sbar, wenn \\(rg(A)=rg(A|\\vec c)\\)</li> <li>Es hat genau eine L\u00f6sung, wenn gilt: \\(rg(A)=n\\) , \\(n\\) ist die Anzahl Spalten von \\(A\\)</li> <li>Es hat unendlich viele L\u00f6sungen, wenn gilt: \\(rg(A)&lt;n\\), \\(n\\) ist die Anzahl Spalten von \\(A\\)</li> </ul> <p>Ein homogenes Gleichungssystem (alle Koeffizienten sind \\(0\\)) ist immer l\u00f6sbar, da \\(rg(A)=rg(A|\\vec c)\\) immer gilt. </p> <p>Wenn mit Restklassen gearbeitet werden, kann es vorkommen, dass ein Gleichungssystem keine L\u00f6sung hat, da es kein multiplikatives Invers einer Restklasse gibt und somit die Zeilenstufenform nicht geformt werden kann.</p>"},{"location":"22FS/LA/02_Vektoren.html","title":"Vektoren","text":"\\[ \\DeclareMathOperator{\\orth}{\\bot} \\] <p>Vektor Ein Vektor wird durch seine Richtung und Betrag definiert (Nicht aber der Ort)</p> <p>Nullvektor Ein Nullvektor \\(\\vec 0\\) hat den Betrag <code>0</code> und hat keine Richtung</p> <p>Einheitsvektor/normierter Vektor Ein Vektor \\(\\vec e\\) oder \\(\\vec e_a\\), welchen der Betrag <code>1</code> hat und kann folgendermassen berechnet werden: \\(\\vec e_a=\\frac{\\vec a}{\\vert a \\vert}\\)</p> <p>Gegenvektor Der Gegenvektor zum Vektor \\(\\vec a\\) ist \\(-\\vec a\\). Es ist also ein Vektor welcher parallel zu \\(\\vec a\\) ist, denselben Betrag hat, aber in die entgegengesetzte Richtung zeigt.</p>"},{"location":"22FS/LA/02_Vektoren.html#addition","title":"Addition","text":"<p>Wenn zwei Vektoren addiert werden, werden sie graphisch aneinander geh\u00e4ngt.</p> <p>Diese Operation ist kommutativ und assoziativ:</p>"},{"location":"22FS/LA/02_Vektoren.html#skalare-multiplikation","title":"Skalare Multiplikation","text":"<p>Wenn ein Vektor mit einer Zahl multipliziert wird, wird der Vektor gestreckt, bzw. geschrumpft. Oft wird der Faktor als griechischen Buchstaben ausgedr\u00fcckt, um Verwechslung zwischen Vektoren und Faktoren zu vermeiden.</p>"},{"location":"22FS/LA/02_Vektoren.html#linearkombination","title":"Linearkombination","text":"<p>Eine Linearkombination ist das kombinieren von mehreren skallierten Vektoren: $$ \\lambda_1\\cdot\\vec a_1+\\lambda_2\\cdot\\vec a_2+...+\\lambda_n\\cdot\\vec a_n $$</p>"},{"location":"22FS/LA/02_Vektoren.html#betrag","title":"Betrag","text":"<p>Der Betrag eines Vektores ist seine L\u00e4nge.  $$ \\begin{align} \\left\\vert\\begin{pmatrix}x\\y\\end{pmatrix}\\right\\vert&amp;=\\sqrt{x^2 + y^2}\\  \\left\\vert\\begin{pmatrix}x\\y\\z\\end{pmatrix}\\right\\vert&amp;=\\sqrt{x^2 + y^2+z^2}\\ \\end{align} $$</p>"},{"location":"22FS/LA/02_Vektoren.html#kollinear","title":"Kollinear","text":"<p>Zwei Vektoren sind kollinear, wenn es eine Gerade gibt, zu der beide parallel sind. Mathematisch kann dies als \\(\\vec a = \\lambda\\cdot\\vec b\\) ausgedr\u00fcckt werden</p>"},{"location":"22FS/LA/02_Vektoren.html#komplanar","title":"Komplanar","text":"<p>Drei Vektoren heissen komplanar, wenn es eine Ebene gibt, zu der alle drei parallel sind.</p> <p></p>"},{"location":"22FS/LA/02_Vektoren.html#linear-unabhangig","title":"Linear (Un)abh\u00e4ngig","text":"<p>Vektoren werden linear unabh\u00e4ngig genannt, wenn es nur eine M\u00f6glichkeit gibt, mit einer Linearkombination den \\(\\vec 0\\) zu bekommen. $$ \\lambda_1 \\cdot \\vec a_1+\\lambda_2\\cdot \\vec a_2 +...+\\lambda_n\\cdot \\vec a_n=\\vec 0 $$ Diese Definition ist kompatible mit Komplanar und Kollinear.</p> <p>Wenn nur ein Vektor \\(\\vec v\\) gegeben ist, welcher ungleich \\(\\vec 0\\) ist, ist dieser linear unabh\u00e4ngig. Der \\(\\vec 0\\) ist linear abh\u00e4ngig.</p> <p>Wenn \\(\\vec a\\) und \\(\\vec b\\) linear unabh\u00e4ngig sind, dann ist \\(\\begin{vmatrix}a_x &amp; b_x\\\\ a_y &amp; b_y\\end{vmatrix}\\neq 0\\). Wenn der Determinant nicht ausgerechnet werden kann, kann man sich \u00fcberlegen, ob zwei Vektoren vielfaches voneinander sind, \u00fcber den Rang oder \u00fcber ein lineares Gleichungssystem. </p> <p>Ein weiterer Tip: in \\(\\R^m\\) k\u00f6nnen maximal \\(m\\) Vektoren linear unabh\u00e4ngig sein. Wenn es mehr Vektoren sind, k\u00f6nnen sie nicht linear unabh\u00e4ngig sein.</p> <p>Eigenschaften:</p> <ul> <li>\\(\\det(A)\\neq 0\\)</li> <li>\\(\\Leftrightarrow\\) Spalten sind linear unabh\u00e4ngig</li> <li>\\(\\Leftrightarrow\\) Zeilen sind linear unabh\u00e4ngig</li> <li>\\(\\Leftrightarrow rg(A)=n\\)</li> <li>\\(\\Leftrightarrow\\) A ist regul\u00e4r, bzw. invertierbar</li> <li>\\(\\Leftrightarrow A\\cdot \\vec x=\\vec 0\\) ist eindeutig l\u00f6sbar   </li> </ul>"},{"location":"22FS/LA/02_Vektoren.html#satz-1","title":"Satz 1","text":"<p>Es l\u00e4sst sich der Vektor \\(\\vec c\\) als Linearkombination der Vektoren \\(\\vec a\\) und \\(\\vec b\\) im 2D-Raum darstellen, wenn</p> <ul> <li>\\(\\vec a\\), \\(\\vec b\\) und \\(\\vec c\\) komplanar zueinander sind</li> <li>\\(\\vec a\\) und \\(\\vec b\\) nicht kollinear sind</li> </ul>"},{"location":"22FS/LA/02_Vektoren.html#satz-2","title":"Satz 2","text":"<p>Wen drei Vektoren \\(\\vec a\\), \\(\\vec b\\) und \\(\\vec c\\) nicht komplanar sind, l\u00e4sst sich jeder Vektor \\(\\vec d\\) in \\(\\R^3\\) als eine Linearkombination von \\(\\vec a\\), \\(\\vec b\\) und \\(\\vec c\\) darstellen</p>"},{"location":"22FS/LA/02_Vektoren.html#kordinaten-system","title":"Kordinaten-System","text":"<p>Ein Kordinaten-System im Raum \\(\\R^2=R\\times R\\) hat folgendes:</p> <ul> <li>Ein Punkt \\(O\\) als Ursprung</li> <li>Ein Einheitsvektor \\(\\vec e_1\\)</li> <li>Ein zweiten Einheitsvektor \\(\\vec e_2\\), welcher 90\u00b0 im Gegenurzeigersinn zu \\(\\vec e_1\\) ist</li> </ul> <p>Jeder Vektor in diesem Kordinatensystem kann als Linearkombination von \\(\\vec e_1\\) und \\(\\vec e_2\\) gebildet werden.</p> <p></p> <p>Ein Kordinaten-System im Raum \\(R^3\\) hat folgenedes:</p> <ul> <li>Einen Punkt \\(O\\) als Ursprung</li> <li>Einen Einheitsvektor \\(\\vec e_1\\) (typischerweisse kommt dieser aus dem Display)</li> <li>Einen zweiten Einheitsvektor \\(\\vec e_2\\), welcher druch eine 90\u00b0 Drehung gegen den Urzeigensinn von \\(\\vec e_1\\)</li> <li>Einen dritten Einheitsvektor \\(\\vec e_3\\), welcher ortogonal (Rechtwinlig) zu \\(\\vec e_1\\) und \\(\\vec e_2\\) ist</li> </ul> <p></p>"},{"location":"22FS/LA/02_Vektoren.html#ortsvektor","title":"Ortsvektor","text":"<p>Ein Ortsvektor ist ein Vektor, welcher im Ursprung festgeheftet wurde. $$ \\vec r(P)=x\\cdot \\vec e_1+y\\cdot \\vec e_2=\\begin{pmatrix}x\\y\\end{pmatrix} $$ Der Ortsvektor \\(\\vec r(P)\\) ist der Vektor vom Ursprung zum Punkt \\(P\\). Dies wird zum Teil auch als \\(\\vec{OP}\\) dargestellt</p>"},{"location":"22FS/LA/02_Vektoren.html#vektor-zwischen-zwei-punkten","title":"Vektor zwischen zwei Punkten","text":"\\[ \\vec{PQ}=\\begin{pmatrix}x_Q-x_P\\\\y_Q-y_P\\end{pmatrix}=\\vec r(Q)-\\vec r(P) \\]"},{"location":"22FS/LA/02_Vektoren.html#skalar-produkt","title":"Skalar Produkt","text":"<p> $$ \\vec a \\cdot \\vec b = \\vert \\vec a \\vert \\cdot \\vert \\vec b\\vert \\cdot \\cos(\\varphi)\\ \\vec a \\cdot \\vec b=a_1b_1+a_2b_2+a_3b_3 $$ Ein Speziallfal ist, wenn \\(\\vec a\\) oder \\(\\vec b\\) den Nullvektor \\(\\vec 0\\) ist. In diesem Fall ist das Skalarprodukt \\(0\\).</p> <p>Da es zwei Definition f\u00fcr das Skalarprodukt gibt, k\u00f6nnen diese gleichgesetzt werden und nach dem Zwischenwinkel afugel\u00f6st werden. $$ \\varphi =cos^{-1}\\left(\\frac{\\vec a \\cdot \\vec b}{|\\vec a|\\cdot |\\vec b|}\\right) $$</p> <p>Wenn das Skalarprodukt \\(\\vec a \\cdot \\vec b=0\\) ist, dann ist der Winkel zwischen \\(\\vec a\\) und \\(\\vec b\\) \\(90\u00b0=\\frac 2 \\pi\\)</p>"},{"location":"22FS/LA/02_Vektoren.html#senkrechte-projektion","title":"Senkrechte Projektion","text":"<p> $$ \\vec b_a =\\frac{\\vec a \\cdot \\vec b}{|\\vec a|^2}\\cdot \\vec a\\ |\\vec b_a|=\\frac{|\\vec a \\cdot \\vec b|}{|\\vec a|} $$</p>"},{"location":"22FS/LA/02_Vektoren.html#vektorprodukt","title":"Vektorprodukt","text":"<p> $$ \\vec a \\times \\vec b \\in \\R^3\\ |\\vec a \\times \\vec b| = |\\vec a|\\cdot |\\vec b|\\cdot \\sin(\\varphi)\\ ... $$</p> <p>Das Vektorprodukt ist nur f\u00fcr Vektoren im Raum \\(\\R^3\\) definiert.</p> <p>Der resultierende Vektor ist senkrecht zu \\(\\vec a\\) und \\(\\vec b\\). Der Betrag von \\(|\\vec a \\times \\vec b|\\) ist die Fl\u00e4che eines Paralelogrammes aufgespannt von \\(\\vec a\\) und \\(\\vec b\\).</p>"},{"location":"22FS/LA/02_Vektoren.html#gerade-als-vektoren","title":"Gerade als Vektoren","text":"<p>Eine Gerade kann folgendermassen dargestellt werden: \\(\\vec r(P)+\\lambda\\cdot \\vec {PQ}\\), wobei \\(\\vec r(P)\\), ein Ortsvektor ist, \\(\\lambda\\) ein beliebiger Faktor und \\(\\vec{PQ}\\) ein Richtungsvektor, welcher die Richtung der Gerade anzeigt.</p> <p></p>"},{"location":"22FS/LA/02_Vektoren.html#wie-stehen-zwei-vektoren-zu-einander","title":"Wie stehen zwei Vektoren zu einander","text":""},{"location":"22FS/LA/02_Vektoren.html#abstand-eines-punktes-zu-einer-gerade","title":"Abstand eines Punktes zu einer Gerade","text":"<p>Es gibt 3 Varianten den Abstand zwischen einem Punkt und einer Gerade zu bestimmen: In der folgenden Erkl\u00e4rung wird mit der Geraden \\(g: \\pmatrix{1 \\\\ 13 \\\\ -5}+ \\lambda \\cdot \\pmatrix{3 \\\\ 5 \\\\ -4}\\) und dem Punkt \\(A=(3;-1;4)\\) gearbeitet.</p> <ol> <li>L\u00f6sungsweg </li> <li>Bestimme den Vektor \\(\\vec r(B)\\), abh\u00e4ngig von \\(\\lambda\\) \\(\\vec r(B)=\\pmatrix{1+3\\lambda\\\\ 13 + 5\\lambda \\\\ -5 -4\\lambda}\\)</li> <li>Bestimme den Vektor \\(\\vec{BA}=\\vec r(A) - \\vec r(B)=\\pmatrix{2 - 3\\lambda \\\\ -14  -5\\lambda \\\\ 9 + 4\\lambda}\\)</li> <li>\u00dcber das Skalarprodukt \\(\\lambda\\) bestimmen:       \\(\\vec {BA}\\orth \\vec a \\Leftrightarrow \\vec {BA} \\cdot \\vec a = 0\\\\\\pmatrix{2 - 3\\lambda \\\\ -14  -5\\lambda \\\\ 9 + 4\\lambda} \\cdot \\pmatrix{3\\\\ -1 \\\\ 4}=-100-50\\lambda=0 \\rightarrow \\lambda = 2\\)</li> <li>Nun kann die L\u00e4nge bestummen werden       \\(l=\\vert\\vec{BA}\\vert=9\\)</li> <li>L\u00f6sungsweg </li> <li>\\(\\vec{PA}\\) bestimmen       \\(\\vec{PA}=\\pmatrix{3 -1 \\\\ -1 -13 \\\\ 5 - (-5)}=\\pmatrix{2 \\\\ -14\\\\ 9}\\)</li> <li>Fl\u00e4che \\(F\\) des Parallelogrammes bestimmen       \\(F=\\vert\\vec{PA}\\times \\vec a \\vert=\\left\\vert \\pmatrix{2 \\\\ -14 \\\\ 9}\\times \\pmatrix{3 \\\\ 5 \\\\ -4} \\right\\vert=\\left\\vert \\pmatrix{11 \\\\ 35\\\\ 52}\\right\\vert=45 \\sqrt 2\\)</li> <li>Die L\u00e4nge \\(l\\) bestimmen       \\(F=\\vert\\vec{PA}\\times \\vec a \\vert \\\\F = \\vert \\vec a \\vert \\cdot l \\\\ l=\\frac{\\vert \\vec {PA} \\times \\vec a\\vert}{\\vert \\vec a \\vert}=\\frac{45\\sqrt 2}{5\\sqrt 2}=9\\)</li> <li>L\u00f6sungsweg </li> <li>\\(\\vec{PA}\\) bestimmen       \\(\\vec{PA}=\\pmatrix{3 -1 \\\\ -1 -13 \\\\ 5 - (-5)}=\\pmatrix{2 \\\\ -14\\\\ 9}\\)</li> <li>\\(\\vec{PB}\\) mit einer Projektion bestimmen       \\(\\vert \\vec{PB}\\vert=\\frac{\\vert \\vec{PA} \\cdot \\vec a \\vert}{\\vert \\vec a \\vert}=2 \\cdot \\sqrt{50}\\)</li> <li>\\(l\\) mit Pytaghoras bestimmen       \\(l=\\overline{AB}=\\sqrt{\\vert \\vec{PA}\\vert^2 - \\vert\\vec{PB}\\vert^2}\\)</li> </ol>"},{"location":"22FS/LA/02_Vektoren.html#projektion-von-einem-vektor-auf-einen-anderen","title":"Projektion von einem Vektor auf einen anderen","text":"<p>TODO</p>"},{"location":"22FS/LA/02_Vektoren.html#koordinatendarstellung-von-geraden","title":"Koordinatendarstellung von Geraden","text":"<p>Die Geradendarstellung \\(\\vec r(P)+\\lambda\\cdot \\vec{PQ}\\) kann umgestellt werden in \\(ax+bx+c=0\\). Dies kann auch gelesen werden als, alle Punkte \\(P(x, y)\\), welche diese Gleichung erf\u00fcllt, ist auf der Gerade.</p> <p>Eine Gerade kann nur in \\(\\R^2\\) in der Koordinatendarstellung dargestellt werden. </p>"},{"location":"22FS/LA/02_Vektoren.html#normalvektor","title":"Normalvektor","text":"<p>Der Normalvektor einer Gerade ist einfach aus der Koordinatendarstellung zu lesen. Die Gerade \\(ax+bx+c=0\\) hat den Normalvektor \\(\\pmatrix{a\\\\b}\\). Dieser steht orthogonal (rechtwinklig) auf der Geraden</p>"},{"location":"22FS/LA/02_Vektoren.html#umformen-von-parameterdarstellung-zu-koordinatendarstellung","title":"Umformen von Parameterdarstellung zu Koordinatendarstellung","text":"<p>Um eine Gerade in der Parameterdarstellung in die Koordinatendarstellung um zu wandeln, m\u00fcssen die \\(\\lambda\\),  \\(\\mu\\) und co. eliminiert werden. Daf\u00fcr kann man quasi den \"Gauss\" anwenden. $$ g:\\pmatrix{x\\y}=\\pmatrix{7\\1}+\\lambda\\cdot \\pmatrix{-2\\-4}\\ \\text{Aus dieser Paramterdarstellung kann nun folgendes Gleichungssystem gebaut werden:}\\ \\begin{align} x &amp;=7 -2\\cdot \\lambda \\tag 1\\ y &amp;= 1 -4 \\cdot \\lambda \\tag2 \\ 2\\cdot(1)-(2): 2x-y -13 &amp;= 0 \\end{align} $$</p>"},{"location":"22FS/LA/02_Vektoren.html#umformen-von-koordinatendarstellung-zu-parameterdarstellung","title":"Umformen von Koordinatendarstellung zu Parameterdarstellung","text":"<p>Um von der Koordinatnedarstellung in die Parameterdarstellung einer Gerade zu wechseln, m\u00fcssen zwei Punkte auf der Gerade gefunden werden. Von diesen kann die Form \\(g: \\vec r(P)+\\lambda\\cdot \\vec{PQ}\\) gebildet werden.</p> <p>Um zwei Punkte aus der Koordinatendarstellung zu lesen, hilft es, die \\(x\\) oder \\(y\\) auf  <code>0</code> zu setzen und der andere Parameter zu \u00e4ndern bis <code>0</code> erreicht wird.</p>"},{"location":"22FS/LA/02_Vektoren.html#normalisieren-der-parameterdarstellung","title":"Normalisieren der Parameterdarstellung","text":"<p>TODO</p>"},{"location":"22FS/LA/02_Vektoren.html#darstellung-einer-ebenen","title":"Darstellung einer Ebenen","text":""},{"location":"22FS/LA/02_Vektoren.html#parameterdarstellung-von-ebenen","title":"Parameterdarstellung von Ebenen","text":"<p>Eine Ebene kann mit drei Punkten beschrieben werden: \\(E: \\vec r(P)+\\lambda \\cdot \\vec{PR}+\\mu\\cdot \\vec{PQ}\\), dabei sind \\(\\lambda\\) und \\(\\mu\\) beliebige Zahlen. Der Punkt \\(P\\) heisst Aufpunkt, die Vektoren \\(\\vec{PR}\\) und \\(\\vec{PQ}\\) heissen Richtungsvektoren.</p>"},{"location":"22FS/LA/02_Vektoren.html#koordinatendarstellung-von-ebenen","title":"Koordinatendarstellung von Ebenen","text":"<p>Die Koordinatendarstellung einer Ebenen ist definiert als: \\(E: ax+by+cz+d=0\\).  Die Variablen \\(a\\), \\(b\\) und \\(c\\) bestimmen die Ausrichtung der Ebene. Die Variable \\(d\\) verschiebt die Ebene parallel.</p> <p>Die Koordinatendarstellung heisst normiert, wenn \\(|\\vec n|=1\\) (der Normalvektor) ist.</p>"},{"location":"22FS/LA/02_Vektoren.html#normalvektor-einer-ebene","title":"Normalvektor einer Ebene","text":"<p>Aus von einer Ebene kann der Normalvektor berechnet werden. Dieser steht senkrecht auf der Ebene und ist folgendermassen definiert: \\(\\vec n=\\pmatrix{a\\\\b\\\\c}\\)</p> <p>Wenn wir nicht die Koordinatendarstellung haben, sondern die Parameterdarstellung \\(E: \\vec{r}(P)+\\lambda \\cdot \\vec a+\\mu\\cdot\\vec b\\), dann ist \\(\\vec n = \\vec a \\times \\vec b\\).</p>"},{"location":"22FS/LA/02_Vektoren.html#umrechnung-von-parameterdarstellung-zu-koordinatendarstellung","title":"Umrechnung von Parameterdarstellung zu Koordinatendarstellung","text":"<p>Die Umrechnung der Parameterdarstellung zur Koordinatendarstellung einer Ebene funktioniert gleich, wie bei der Gerade. Der einzige Unterschied ist, dass es drei Gleichungen statt zwei hat.</p> <p></p> <p>Eine zweite Art, wie dasselbe bewerkstelligt werden kann, ist \u00fcber den Normalvektor. Wenn man den Normalvektor einer Ebene weiss, kann davon sehr einfach die Koordinatendarstellung abgelesen werden. Ebenfalls ist bekannt, dass der Normalvektor senkrecht/orthogonal auf der Eben steht. Mit diesen Informationen kann folgende Gleichung abgeleitet werden: $$ E: \\pmatrix{2\\4\\1}+\\lambda\\cdot\\pmatrix{1\\3\\1}+\\mu \\cdot \\pmatrix{2\\2\\-4}\\ \\vec n=\\pmatrix{1\\3\\1}\\times \\pmatrix{2\\2\\-4}=\\pmatrix{-14\\6\\-4}\\ E: -14x+6y-4z+d=0\\ \\text{Nun muss noch P eingesetzt werden, um d zu bestimmen:}\\ -14\\cdot 2 + 6\\cdot 4 -4\\cdot 1+d=0\\Rightarrow d = 8\\ E: -14x + 6y - 4z + 8 = 0 $$</p>"},{"location":"22FS/LA/02_Vektoren.html#umrechnung-von-koordinatendarstellung-zu-parameterdarstellung","title":"Umrechnung von Koordinatendarstellung zu Parameterdarstellung","text":"<p>Wie bereits bei der Gerade, m\u00fcssen drei Punkte auf der Ebenen gefunden werden. Dies ist am einfachsten, wenn ein Parameter auf <code>0</code> gesetzt wird und die anderen entsprechend ver\u00e4ndert werden, dass das Ergebnis <code>0</code> ergibt.</p> <p></p>"},{"location":"22FS/LA/02_Vektoren.html#liegt-ein-punkt-auf-einer-ebene","title":"Liegt ein Punkt auf einer Ebene","text":"<p>Wenn \u00fcberpr\u00fcft werden soll, ob ein Punkt auf einer Ebene liegt, kann die Parameterdarstellung einfach dem Punkt gleichgesetzt werden. Wenn es f\u00fcr diese Gleichung einen Wert f\u00fcr \\(\\lambda\\) und \\(\\mu\\) gefunden werden kann, dann ist der Punkt auf der Ebene.</p> <p>Bei der Koordinatendarstellung m\u00fcssen Werte f\u00fcr \\(a\\), \\(b\\), \\(c\\) und \\(d\\) gefunden werden, damit die Form \\(ax+by+cz+d=0\\) stimmt.</p>"},{"location":"22FS/LA/02_Vektoren.html#liegt-eine-gerade-auf-einer-ebene","title":"Liegt eine Gerade auf einer Ebene","text":"<p>TODO</p> <ol> <li>Parameterform gleichsetzten</li> <li>Ebene Koordiatenform, Gerade parameterform. Punkt von Gerade allgemein ausdr\u00fccken und danach in der Koordiatenform der Ebenen einsetzten</li> </ol>"},{"location":"22FS/LA/02_Vektoren.html#wie-ebenen-zu-einander-stehen","title":"Wie Ebenen zu einander stehen","text":"<p>Ebenen k\u00f6nnen entweder identisch, parallel oder schneidend zu einander stehen.</p>"},{"location":"22FS/LA/02_Vektoren.html#parallel","title":"Parallel","text":"<p>Wenn \u00fcberpr\u00fcft werden soll, ob zwei Ebenen \\(E\\) und \\(F\\) parallel zu einander sind, muss \u00fcberpr\u00fcft werden, ob die beiden Richtungsvektoren von \\(E\\) komplanar zu den Richtungvektoren von \\(F\\) sind. </p> <p>Wenn die Koordinatenformen der Ebenen gegeben sind, m\u00fcssen entweder ein Faktor \\(p\\) f\u00fcr folgende Gleichungen gefunden werden.</p> <p>Beispiel:  $$ E: a_1x+b_1y+c_1z+d_1=0\\ F: a_2x+b_2y+c_2z+d_2=0 $$ In diesem Fall muss es ein Faktor \\(p\\) geben, f\u00fcr welche gilt: $$ a_1=a_2\\cdot p\\ b_1=b_2\\cdot p\\ c_1=c_2\\cdot p\\ d_1\\neq d_2\\cdot p $$ Eine weitere M\u00f6glichkeit ist, dass die Normalvektoren ausgerechnet werden k\u00f6nnen. Diese stehen Senkrecht auf der Ebene \\(E\\). Der Normalvektor von \\(F\\) koolinear zu dem von \\(E\\) ist, dann sind die Ebenen parallel.</p>"},{"location":"22FS/LA/02_Vektoren.html#identisch","title":"Identisch","text":"<p>Wenn \u00fcberpr\u00fcft werden soll, ob zwei Ebenen identisch sind und sie in der Koordinatensform gegeben sind, muss folgendes g\u00fcltig sein (die letzte Gleichung ist anderst): $$ a_1=a_2\\cdot p\\ b_1=b_2\\cdot p\\ c_1=c_2\\cdot p\\ d_1=d_2\\cdot p $$</p>"},{"location":"22FS/LA/02_Vektoren.html#schneidend","title":"Schneidend","text":"<p>Wenn zwei Ebenen schneidend sind und sie gleichgesetzt werden, dann kommt dabei eine Geradegleichung heraus. Bei der Koordinatenform m\u00fcssen die Gleichungen der beiden Ebenen in dasselbe Gleichungssystem eingef\u00fcgt werden, bei der Parameterform m\u00fcssen die Gleichungen gleichgesetzt werden. $$ E: x-2y+2z-1=0\\ F: 2x-3y-z+2=0 $$ Diese zwei Gleichungen k\u00f6nnen in folgendes Gleichungssystem umgewandlet werden: $$ \\begin{align} x-2y+2z&amp; =1\\ 2x-3y-z&amp; =-2 \\end{align} $$ Daraus kann mit dem Gaus nach \\(x\\), \\(y\\) und \\(z\\) gel\u00f6st werden: $$ \\left( \\begin{array}{ccc|cr} 1 &amp; -2 &amp; 2 &amp; 1\\ 2 &amp; -3 &amp; -1 &amp; -2   \\end{array} \\right) \\Rightarrow \\left( \\begin{array}{ccc|cr} 1 &amp; 0 &amp; -8 &amp; -7\\ 0 &amp; 1 &amp; -5 &amp; -4   \\end{array} \\right)\\ \\ \\begin{align} x&amp;=-7+8\\lambda\\ y&amp;=-4+5\\lambda\\ z&amp;=\\lambda\\ \\end{align} $$</p> <p>Aus diesen Gleichungen kann die Parameterform abgeleitet werden: \\(\\pmatrix{x\\\\y\\\\z}=\\pmatrix{-7\\\\-4\\\\0}+\\lambda\\cdot\\pmatrix{8\\\\5\\\\1}\\)</p>"},{"location":"22FS/LA/02_Vektoren.html#abstand-von-punkt-zu-ebene","title":"Abstand von Punkt zu Ebene","text":"<p>Um den Abstand \\(l\\) zu berechnen, wird ein beliebiger Punkt \\(P\\) gew\u00e4hlt. Danach wird der Vektor \\(\\vec{PA}\\) auf den Normalvektor \\(\\vec n\\) projiziert. Die L\u00e4nge dieser Projektion ist \\(l\\). $$ \\text{Wenn die Ebene nicht normiert sind: } l=\\frac{|ax_A+by_A+cz_A+d|}{|\\vec n|}\\ \\text{Wenn die Ebene normiert ist: } l=|ax_A+by_A+cz_A+d| $$ In der Formel obenen kommen \\(x_A\\), \\(y_A\\) und \\(z_A\\) von den Koordinaten von \\(A\\) und \\(a\\), \\(b\\) und \\(c\\) von der Koordinatenform der Ebene.</p>"},{"location":"22FS/LA/03_Matrix.html","title":"Matrix","text":"\\[ \\DeclareMathOperator{\\rg}{rg} \\] <p>Eine Matrix ist ein rechteckiges Zahlenfeld, wie z.B. diese 3x2 Matrix: \\(\\begin{bmatrix}7 &amp; 6 &amp; 2\\\\2 &amp; 3 &amp; 3\\end{bmatrix}\\)</p>"},{"location":"22FS/LA/03_Matrix.html#spezial-typen","title":"Spezial-Typen","text":"<ul> <li>Null-Matrix   Eine Matrix, bei denen alle Elemente \\(0\\) sind</li> <li>Spaltenmatrix   Eine Matrix, welche nur eine Spalte haben und sind dasselbe, wie Vektoren</li> </ul>"},{"location":"22FS/LA/03_Matrix.html#addition-und-subtraktion","title":"Addition und Subtraktion","text":"<p>Matrizen addieren und subtrahieren ist denkbar einfach. Jede Zahl wird mir der Zahl an der gleichen Stelle in der anderen Matrix addiert, bzw. subtrahiert. $$ \\begin{bmatrix}x_1 &amp; x_2 &amp; x_3 \\ x_4 &amp; x_5 &amp; x_6\\end{bmatrix} -  \\begin{bmatrix}y_1 &amp; y_2 &amp; y_3 \\ y_4 &amp; y_5 &amp; y_6\\end{bmatrix} =  \\begin{bmatrix}x_1-y_1 &amp; x_2-y_2 &amp; x_3-y_3 \\ x_4-y_4 &amp; x_5-y_5 &amp; x_6-y_6\\end{bmatrix} $$ Dasselbe gilt auch f\u00fcr die Addition.</p> <p>F\u00fcr die Addition und Subtraktion m\u00fcssen beide Matrizden dieselbe Gr\u00f6sse haben, sonst ist das Ergebnis undefiniert.</p>"},{"location":"22FS/LA/03_Matrix.html#skalar-multiplikation","title":"Skalar Multiplikation","text":"<p>Wenn eine Matrix mit einem Wert, wie 3 multipliziert wird, entsteht eine neue Matrix, in welcher alle Werte mit diesem Wert multipliziert wurden: $$ c \\cdot \\begin{bmatrix}x_1 &amp; x_2 &amp; x_3 \\ x_4 &amp; x_5 &amp; x_6\\end{bmatrix}=  \\begin{bmatrix}c\\cdot x_1 &amp; c\\cdot x_2 &amp; c\\cdot x_3 \\ c\\cdot x_4 &amp; c\\cdot x_5 &amp; c\\cdot x_6\\end{bmatrix} $$</p>"},{"location":"22FS/LA/03_Matrix.html#matrix-multiplikation","title":"Matrix Multiplikation","text":"<p>Wenn zwei Matrizen multipliziert werden, wie \\(A\\cdot B\\), dann muss die Breite von \\(A\\) gleich die H\u00f6he von \\(B\\) sein.  Das Resultat ist eine Matrix, welche so hoch ist, wie \\(A\\) und so breit ist, wie \\(B\\).</p> <p></p> <p> $$ \\begin{bmatrix}x_{11} &amp; x_{21} &amp; x_{31} \\ x_{12} &amp; x_{22} &amp; x_{32}\\end{bmatrix} \\cdot \\begin{bmatrix}y_{11} &amp; y_{21} \\ y_{12} &amp; y_{22} \\ y_{13} &amp; y_{23}\\end{bmatrix} =  \\begin{bmatrix}     x_{11}\\cdot y_{11} + x_{21}\\cdot y_{12} + x_{31}\\cdot y_{13} &amp;      x_{11}\\cdot y_{21} + x_{21}\\cdot y_{22} + x_{21}\\cdot y_{23} \\     x_{12}\\cdot y_{12} + x_{22}\\cdot y_{12} + x_{32}\\cdot y_{13} &amp;      x_{12}\\cdot y_{21} + x_{22}\\cdot y_{22} + x_{22}\\cdot y_{23}  \\end{bmatrix} $$ Wegen dieser Rechnenart, ist die Multiplikation mit zwei Matrizen nicht kommunikativ.</p> <p>Eine weitere wichtige Eigenschaften von Matrix-Multiplikation ist, dass folgendes nicht gilt: \\(A\\cdot B=C \\text { und } A \\cdot D = C  \\not \\Rightarrow B=D\\), da es m\u00f6glich ist, dass \\(B\\) und \\(D\\) verschiedene Matrix sein k\u00f6nnen, welche beide dasselbe Ergebniss \\(C\\) gibt, wenn mit \\(A\\) multipliziert. </p>"},{"location":"22FS/LA/03_Matrix.html#rechnungsregeln","title":"Rechnungsregeln","text":"<p>Die folgenden Rechenregeln funktioniert f\u00fcr gleichgrosse Matrizen.</p> <ul> <li>Kommutativ-Gesetz: \\(A+B=B+A\\) (Geht NICHT bei Multiplikation)</li> <li>Assoziativ-Gesetzt: \\(A+(B+C)=(A+B)+C\\)</li> <li>Distributiv-Gesetzt: \\(\\lambda\\cdot(A+B)=\\lambda\\cdot A + \\lambda \\cdot B\\) </li> <li> <p>Aber Achtung: \\(\\lambda\\cdot A + B\\cdot \\lambda\\) kann nicht ausgeklammert werden (In k\u00f6nnte einfach \\(\\lambda \\cdot A\\) und \\(B\\cdot \\lambda\\) ausgerechnet werden)</p> </li> <li> <p>Distributiv-Gesetzt mit Transportierten Matrizen: </p> </li> <li>\\((A\\cdot B)^T=B^T \\cdot A^T\\) (Beachte die Reihenfolge von A und B)</li> <li>\\((A+B)^T=A^T+B^T=B^T+A^T\\)</li> <li>\\((A-B)^T=A^T-B^T=B^T-A^T\\)</li> </ul>"},{"location":"22FS/LA/03_Matrix.html#einheitsmatrix","title":"Einheitsmatrix","text":"<p>Eine Einheitsmatrix, ist eine quadratische Matrix, welche Diagonal \u00fcberall eine <code>1</code> hat und sonst <code>0</code>: $$ \\begin{bmatrix} 1 &amp; 0 &amp; 0 &amp; 0\\ 0 &amp; 1 &amp; 0 &amp; 0\\ 0 &amp; 0 &amp; 1 &amp; 0\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{bmatrix} $$ Diese Matrix hat die Eigenschaft, dass wenn eine Matrix \\(A\\) mit einer Identit\u00e4tsmatrix multipliziert wird, dass wieder die Matrix \\(A\\) herauskommt.</p>"},{"location":"22FS/LA/03_Matrix.html#inverse-matrix","title":"Inverse Matrix","text":"<p>Die Inverse Matrix, ist die Matrix \\(A^{-1}\\), welche mit der Matrix \\(A\\), eine Identit\u00e4tsmatrix \\(I\\) ergibt:</p> <p>\\(A\\cdot A^{-1}=I\\)</p> <p>Das Inverse Skalar-Multiplikationen kann folgendermassen gebildet werden: \\((3A)^{-1}=\\frac 1 3 A^{-1}\\)</p> <p>Das Inverse einer Matrix kann gebildet werden, wenn die \\(\\mathrm{det}(A)\\neq 0\\) ist, bzw. die \"Vektoren\" in der Matrix linear unabh\u00e4ngig sind.</p>"},{"location":"22FS/LA/03_Matrix.html#inverse-matrix-von-2x2-matrix","title":"Inverse Matrix von 2x2-Matrix","text":"<p>F\u00fcr 2x2-Matrizen gibt es eine Formel, um das Inverse zu errechnen. Dabei gilt aber: \\(ad\\neq bc\\) $$ \\pmatrix{a &amp; b\\ c &amp; d}^{-1}=\\frac 1 {ad-bc}\\cdot \\pmatrix{d &amp; -b \\ -c &amp; a} $$</p>"},{"location":"22FS/LA/03_Matrix.html#singulare-und-regulare-matrizen","title":"Singul\u00e4re und regul\u00e4re Matrizen","text":"<p>Eine Matrix wird regul\u00e4r genannt, wenn es ein Inverse von der Matrix gibt. Ansonsten wird sie Singul\u00e4r genannt.</p>"},{"location":"22FS/LA/03_Matrix.html#gauss-jordan-verfahren-zur-berechnung-der-inverse","title":"Gauss-Jordan Verfahren zur Berechnung der Inverse","text":"<p>TODO</p>"},{"location":"22FS/LA/03_Matrix.html#transponierte-matrix","title":"Transponierte Matrix","text":"<p>Eine transponierte Matrix \\(A^T\\) von \\(A\\) ist, wenn die Spalten in \\(A\\) zu Reihen werden und die Reihen in \\(A\\) zu Spalten werden. Man kann es sich auch vorstellen, als ob man die Matrix um 90\u00b0 gegen den Uhrzeigersinn dreht: $$ B= \\begin{bmatrix} 1 &amp; 2 &amp; 3\\ 3 &amp; 4 &amp; 5 \\end{bmatrix}\\ B^T= \\begin{bmatrix} 1 &amp; 3 \\ 2 &amp; 4\\ 3 &amp; 5 \\end{bmatrix} $$ Es gilt folgendes Gesetzt: \\((A\\cdot B)^T=B^T\\cdot A^T\\)</p> <p>Bemerke, dass sich die Reihenfolge von \\(A\\) und \\(B\\) sich \u00e4ndert.</p>"},{"location":"22FS/LA/03_Matrix.html#gleichheit","title":"Gleichheit","text":"<p>Zwei Matrizen sind gleich, wenn alle Elemente der Matritzen gleich sind.</p>"},{"location":"22FS/LA/03_Matrix.html#determinanten","title":"Determinanten","text":"<p>Wenn die Determinanten einer gr\u00f6sseren Matrix als 3x3 Berechnet werden soll, kann ein Verfahren nach Laplace eingesetzt werden:</p> <ol> <li> <p>Es wird eine feste Spalte oder Zeile gew\u00e4hlt</p> </li> <li> <p>Nun wird nach der folgenden Formel entwickelt:    $$    \\text{Entwicklung nach i-ten Zeilen: }\\det(A)=\\sum^n_{j=1} (-1)^{i+j}\\cdot a_{ij}\\cdot\\det(A_{ij})\\    \\text{Entwicklung nach j-ten Spalte: }\\det(A)=\\sum^n_{i=1} (-1)^{i+j}\\cdot a_{ij}\\cdot\\det(A_{ij})\\    $$    Dabei  ist \\(a_{ij}\\), das Element an \\(i\\)-ter Zeile und \\(j\\)-ter Spalte und \\(A_{ij}\\) die Matrix, bei welcher die \\(i\\)-te Zeile und \\(j\\)-Spalte weggelassen wurden</p> </li> </ol>"},{"location":"22FS/LA/03_Matrix.html#eigenschaften","title":"Eigenschaften","text":"<p>Wenn der Determinant \\(\\neq 0\\) ist, dann gilt:</p> <ul> <li>\\(\\rg(A)=0\\)</li> <li>Die Matrix ist invertierbar</li> </ul> <p>Wenn der Determinant \\(=0\\) ist, dann gilt:</p> <ul> <li>\\(\\rg(A) &lt; n\\) (wobei \\(n\\) die Anzahl Spalten der Matrix \\(A\\) ist)</li> </ul>"},{"location":"22FS/LA/03_Matrix.html#rechenoperation-mit-bilder","title":"Rechenoperation mit Bilder","text":"<p>Man kann die einzelnen Elemente einer Matrix als Pixel in einem Bild darstellen.</p> <p></p>"},{"location":"22FS/LA/03_Matrix.html#skalaroperation","title":"Skalaroperation","text":"<p>Mit einer Skalarmultiplikation kann das ganze Bild heller oder dunkler gestalltet werden. Wenn zwei Matrizen addiert werden, \u00fcberlagern sich ihre Pixel.</p> <p></p>"},{"location":"22FS/LA/03_Matrix.html#matrixen-produkt","title":"Matrixen Produkt","text":"<p>Mit dem Matrizen-Produkt k\u00f6nnen Zeilen vertauscht werden.</p> <p></p> <p></p>"},{"location":"22FS/LA/03_Matrix.html#transponieren","title":"Transponieren","text":"<p>Wenn eine Matrix transponiert wird, wird das Bild entlang der Hauptdiagonalen g</p> <p></p>"},{"location":"22FS/LA/05_Vektorr%C3%A4ume.html","title":"Vektorr\u00e4ume","text":""},{"location":"22FS/LA/05_Vektorr%C3%A4ume.html#definition-von-vektorraumen","title":"Definition von Vektorr\u00e4umen","text":"<p>Ein Vektorraum ist eine Menge \\(V\\) mit den Funktionen Addition und Skalar-Multiplikation:  $$ +:V \\times V \\rightarrow V\\ \\cdot : \\R \\times V \\rightarrow V $$ Dabei m\u00fcssen folgende Gesetze existieren:</p> <ul> <li>Kommutativgesetz: \\(a + b = b + a\\)</li> <li>Assoziativgesetzt: \\(a + (b + c)=(a + b) + c\\)</li> <li>Es gibt ein neutrales Element \\(\\vec 0\\), f\u00fcr welches gilt \\(a + 0v = \\vec a\\) und \\(0v \\in V\\)</li> <li>F\u00fcr jedes Element \\(a \\in V\\) muss es ein inverses Element \\(-a \\in V\\) geben, so dass \\(a + (-a) = 0v\\) ergibt.</li> <li>Assoziativgesetzt: \\(\\lambda \\cdot (\\mu \\cdot a) = (\\lambda \\cdot \\mu) \\cdot a\\)</li> <li>Distributivgesetzt: \\(\\lambda \\cdot(a + b) = \\lambda \\cdot a + \\lambda \\cdot b\\)</li> <li>Distirbutgesetzt: \\((\\lambda + \\mu)\\cdot a = \\lambda \\cdot a + \\mu \\cdot a\\)</li> <li>F\u00fcr jedes Element \\(a \\in V\\) gibt es ein neutrales Element \\(1\\cdot a = a\\),</li> </ul> <p>Frage: muss das Skalar \u00fcber \\(\\R\\) erstellt werden oder k\u00f6nnte auch eine andere Menge genommen werden.</p>"},{"location":"22FS/LA/05_Vektorr%C3%A4ume.html#reeler-vektoraum","title":"Reeler Vektoraum","text":"\\[ +:V \\times V \\to V: (\\vec a; \\vec b) \\mapsto \\vec a + \\vec b\\\\ \\cdot : \\R \\times V \\to V : (\\lambda; \\vec a) \\mapsto \\lambda \\cdot \\vec a \\] <p>Das neutrale Element bei der Addition ist der Nullvektor \\(\\vec 0\\) und das neutrale Element bei der Skalarmultiplikation ist \\(1\\).</p>"},{"location":"22FS/LA/05_Vektorr%C3%A4ume.html#unterraume","title":"Unterr\u00e4ume","text":"<p>Eine Teilmenge \\(U\\) eines Vektorraums \\(V\\) heisst Unterraum von \\(V\\), wenn \\(U\\) selbst auch ein Vektorraum ist. Daf\u00fcr m\u00fcssen folgende Kriterien erf\u00fcllt sein:</p> <ul> <li>F\u00fcr beliebige Element \\(a, b \\in U\\) ist auch \\(a+b\\in U\\)</li> <li>F\u00fcr jeden Skalar \\(\\lambda \\in \\R\\) und jedes Element \\(a\\in U\\) ist auch \\(\\lambda \\cdot a\\in U\\)</li> <li>Die neutralen Elemente der Addition und Skalarmultiplikation m\u00fcssen ebenfalls in \\(U\\) sein.</li> </ul>"},{"location":"22FS/LA/05_Vektorr%C3%A4ume.html#linearer-spann","title":"Linearer Spann","text":"<p>\\(spann(\\vec a_1, \\vec a_2, ..., \\vec a_n)\\) ist definiert als alle m\u00f6glichen Vektoren von der Linearkombination \\(\\lambda_1\\cdot \\vec a_1 + \\lambda_2\\cdot \\vec a_2 +...+\\lambda_n\\cdot \\vec a_n\\)\u00a7</p> <p>Die Vektoren \\(\\vec a_1, \\vec a_2, ...\\vec a_n\\) spannen den linearen Spann auf und formen eine geometrische Form.</p> <p></p>"},{"location":"22FS/LA/05_Vektorr%C3%A4ume.html#geometrische-objekte","title":"Geometrische Objekte","text":"<p>Jenachdem, wie viele Vektoren gegeben sind, wird ein anderes geometrisches Objekt gebildet:</p> <ul> <li>Bei <code>1</code> Vektor, wird eine Ursprungs-Gerade gebildet</li> <li>Bei <code>2</code> Vektoren, wird eine Ursprungs-Ebene</li> <li>Bei <code>3</code> Vektoren, wird ein \"Ursprungs-K\u00f6rper\" gebildet</li> </ul>"},{"location":"22FS/LA/05_Vektorr%C3%A4ume.html#erzeugendensystem","title":"Erzeugendensystem","text":"<p>Eine Menge von Vektoren \\(\\{\\vec b_1, \\vec b_2, ..., \\vec b_N\\}\\) bildet ein Erzeugendensystem von \\(V\\), falls \\(V=span(\\vec b_1, \\vec b_2, ..., \\vec b_n)\\). Dies ist nur der Fall, wenn die Vektoren nicht kollinear, bzw. komplanar sind.</p> <p>Aus dem gehen die folgenden folgende Bedingungen: $$ \\begin{align} &amp; V=span(\\vec b_1, \\vec b_2, ..., \\vec b_n)\\ \\Leftrightarrow \\text{ } &amp; B\\cdot \\vec x = \\vec a \\text { f\u00fcr jedes } \\vec a \\in \\R^m\\ \\Leftrightarrow \\text{ } &amp; rg(B)=m \\end{align} $$</p> <p>Mit den Vektoren \\(\\vec b_i\\) in einem Erzeugendensystem k\u00f6nnen alle anderen Vektor \\(V\\) (also z.B. \\(\\R^2\\)) bilden.</p>"},{"location":"22FS/LA/05_Vektorr%C3%A4ume.html#basis-und-dimensionen","title":"Basis und Dimensionen","text":"<p>Ein Vektor \\(\\vec a = \\pmatrix{a_1 \\\\ a_2}\\) kann auch als \\(\\vec a = a_1\\cdot \\vec e_1 + a_2 \\cdot \\vec e_2\\) geschrieben werden. Anstatt der Vektormenge \\(\\mathcal S=\\{\\vec e_1; \\vec e_2\\}\\) kann auch eine andere Menge \\(\\mathcal B=\\{\\vec b_1; \\vec b_2\\}\\) ben\u00fctzt werden. Der Vektor \\(\\vec a = \\pmatrix{\\alpha_1\\\\ \\alpha_2}_\\mathcal{B}\\) ist nun equivalent zu \\(\\vec a=\\alpha_1 \\cdot \\vec b_1 + \\alpha_2 \\cdot \\vec b_2\\).</p> <p>In diesem Beispiel sind die Vektoren \\(\\vec a\\), \\(\\vec c\\) und \\(\\vec d\\) die selben, nur die Vektormenge, durch welche das Koordinatensystem definiert wird, \u00e4ndert sich.</p> <p></p> <p>Damit dies m\u00f6glich ist, muss die Vektormenge folgende Eigenschaften erf\u00fcllen:</p> <ul> <li>\\(\\mathcal B=\\{\\vec b_1, \\vec b_2, ...,\\vec b_n\\}\\) muss ein Erzeugendensystem sein</li> <li>\\(\\vec b_1\\), \\(\\vec b_2\\), ..., \\(\\vec b\\) m\u00fcssen linear unabh\u00e4ngig sein</li> </ul> <p>Oder in Deutsch: Es darf nur genau eine m\u00f6gliche Linearkombination f\u00fcr jeden Vektor  geben</p> <p>Aus diesen zwei Regeln gehen folgende S\u00e4tze hervor:</p> <ul> <li>Eine Basis \\(\\R^n\\) besteht genau aus \\(n\\) Vektoren</li> <li>\\(\\rm rg(B)=n\\) (wobei \\(B\\) alle Vektoren in eine Matrix gesteckt werden)</li> <li>\\(\\det(B)\\neq 0\\)</li> <li>\\(B\\) ist invertierbar</li> <li>Das lineare Gleichungssystem \\(B\\cdot \\vec x=\\vec c\\) hat genau eine eindeutige L\u00f6sung</li> </ul>"},{"location":"22FS/LA/05_Vektorr%C3%A4ume.html#dimensionen","title":"Dimensionen","text":"<p>Die Dimension \\(\\dim(V)\\) gibt an, wie viel Dimensionen ein Vektorraum oder Basis hat. </p> <p>Bei einer Basis \\(\\mathcal B\\) ist die Basis die Anzahl Vektoren, welche die Basis definiert. Das heisst \\(\\dim(\\R^n)=n\\) und \\(\\mathrm{dim}(\\mathbb P_n[x])=n+1\\) </p> <p>Bei einem Vektorraum ist die Anzahl Dimensionen gleich der Anzahl Vektoren, welche den Spann des Vektorraumes definieren. Bei Vektorr\u00e4ume gilt auch, dass ein Unterraum \\(R\\) von \\(V\\) : \\(\\dim(R) \\le \\dim(V)\\). Die Dimension des Vektorraums \\(\\{\\vec 0\\}\\) ist gleich \\(\\dim(\\{\\vec 0\\})=0\\)</p> <p>TODO: Matrixen</p>"},{"location":"22FS/LA/05_Vektorr%C3%A4ume.html#umwandeln-zwischen-komponentendarstellungen","title":"Umwandeln zwischen Komponentendarstellungen","text":"<p>Um einen Vektor \\(\\vec v_{\\mathcal B}\\) in den Vektor \\(\\vec v_{\\mathcal{S}}\\) zu umwandeln, kann folgendes getan werden: \\(\\vec v_{\\mathcal B}=v_1\\cdot \\vec b_1+v_2\\cdot \\vec b_2+...+v_n\\cdot \\vec b_n\\)</p> <p>In die umgekehrte Richtung gibt es ein Lineares Gleichungssystem: \\(\\vec v_\\mathcal{S}\\cdot B=\\vec v_\\mathcal{B}\\)</p> <p></p>"},{"location":"22FS/LA/06_Lineare%20Abbildung.html","title":"Lineare Abbildung","text":"<p>$$ \\DeclareMathOperator{\\im}{im} \\DeclareMathOperator{\\span}{span} \\DeclareMathOperator{\\rg}{rg} $$ Eine Lineare Abbildung wird mit Hilfe einer Funktion \\(f: V \\to W\\) , welche ein Parameter vom Typ \\(V\\) nimt und als R\u00fcckgabetyp \\(W\\) zur\u00fcck gibt. Wichtig ist, dass die Funktion folgende zwei Rechungsregeln einh\u00e4lt:</p> <ul> <li>\\(f(x+y)=f(x)+f(y)\\)</li> <li>\\(f(\\lambda\\cdot x)=\\lambda\\cdot f(x)\\)</li> </ul> <p>Wenn bewiesen werden soll, dass eine Funktion eine Abbildungsfunktion ist, dann m\u00fcssen diese zwei Gesetze allgemein gezeigt werden. Um es zu widerlegen, reicht ein Gegenbeispiel.</p> <p></p>"},{"location":"22FS/LA/06_Lineare%20Abbildung.html#lineare-abbildung-eines-vektorraumes","title":"Lineare Abbildung eines Vektorraumes","text":"<p>Wenn die Abbildungsfunktion \\(f\\) komplett definiert ist, f\u00fcr die Einheitsvektoren \\(\\vec e_1\\), \\(\\vec e_2\\), ..., \\(\\vec e_n\\), dann gilt follgendes: $$ \\vec x=x_1 \\cdot \\vec e_1 + x_2 \\cdot \\vec e_2\\ f(\\vec x)=f(x_1 \\cdot \\vec e_1 + x_2 \\cdot \\vec e_2)=f(x_1\\cdot \\vec e_1)+ f(x_2\\cdot \\vec e_2)=x_1\\cdot f(\\vec e_1)+x_2\\cdot f(\\vec e_2)\\ $$ Da das letzte Resultat eine Linearkombination ist, kann diese auch als Matrix geschrieben werden.</p> <p></p> <p>Um diese Matrix zu finden, gibt es zwei M\u00f6glichkeiten:</p> <ol> <li>Die Einheitsvektoren in \\(f(x)\\) ein setzten und aus den Resultaten eine Matrix bauen</li> <li>Zeile f\u00fcr Zeile durchgehen und die Matrixzeilen davon ableiten</li> </ol> <p></p> <p>Zus\u00e4tzlich k\u00f6nnen Matrixen (und auch Abbildngsfunktionen) auch zwischen Basen konvertieren:</p> <p></p> <p>Bei der Matrix \\(_CA_B\\) und der linearen Abbildung \\(f: V \\to W\\) bezieht sich \\(_B\\) auf \\(V\\) und \\(_C\\) auf \\(W\\).</p>"},{"location":"22FS/LA/06_Lineare%20Abbildung.html#abbildungen-im-raum","title":"Abbildungen im Raum","text":"<p>In den folgenden Kapiteln werden Beispiele gezeigt, wie eine Abbildung aussehen kann</p> <p></p>"},{"location":"22FS/LA/06_Lineare%20Abbildung.html#in-2-dimensionalen-vektorraumen","title":"In 2-Dimensionalen Vektorr\u00e4umen","text":"<p>Die folgenden Beispielen beziehen sich alle auf einen zweidimensionalen Vektorraum</p> <p></p> <p></p>"},{"location":"22FS/LA/06_Lineare%20Abbildung.html#zweidimensionale-spezialfalle","title":"Zweidimensionale Spezialf\u00e4lle","text":""},{"location":"22FS/LA/06_Lineare%20Abbildung.html#orthogonale-projektion-auf-eine-allgemeine-gerade-durch-den-ursprung","title":"Orthogonale Projektion auf eine allgemeine Gerade durch den Ursprung","text":"<p> Wenn auf eine Gerade projektiert werden soll, welche nicht die x-, y- oder z-Achse ist, muss folgende Formel verwendet werden. Dabei wird erwartet, dass die Gerade in der Kordinatendarstelung (\\(ax + by = 0\\)) normiert ist (\\(a^2 + b^2 = 1\\)). $$ P= \\begin{pmatrix} 1 - a^2 &amp; -ab\\ -ab &amp; 1-b^2 \\end{pmatrix}\\ \\text{Wobei gilt: }\\ ax + by = 0\\ a^2+ b^2 = 1 $$</p>"},{"location":"22FS/LA/06_Lineare%20Abbildung.html#spiegelung-an-einer-allgemeinen-gerade-durch-den-ursprung","title":"Spiegelung an einer allgemeinen Gerade durch den Ursprung","text":"<p>Wenn alle Vektoren bei einer Gerade, welche durch den Ursprung geht, gespiegelt werden soll, kann folgende Formel ben\u00fctzt werden. Dabei muss aber die Gerade in der Koordinatendarstellung (\\(ax + by=0\\)) normiert ist (\\(a^2+b^2 = 1\\)). $$ S= \\begin{pmatrix} 1 - 2a^2 &amp; -2ab\\ -2ab &amp; 1 - 2b^2 \\end{pmatrix}\\ \\text{Wobei gilt: }\\ ax + by = 0\\ a^2+ b^2 = 1 $$</p>"},{"location":"22FS/LA/06_Lineare%20Abbildung.html#in-dreidimensionalen-vektorraumen","title":"In dreidimensionalen Vektorr\u00e4umen","text":""},{"location":"22FS/LA/06_Lineare%20Abbildung.html#dreidimensionale-spezialfalle","title":"Dreidimensionale Spezialf\u00e4lle","text":""},{"location":"22FS/LA/06_Lineare%20Abbildung.html#orthogonale-projektion-auf-eine-allgemeine-ebene-durch-den-ursprung","title":"Orthogonale Projektion auf eine allgemeine Ebene durch den Ursprung","text":"<p>Wenn alle Vektoren auf eine Ebene, welche durch den Ursprung geht, projektiert werden sollen, kann folgende Formel ben\u00fctzt werden. Dabei muss aber die Koordinatendarstellung der Ebene (\\(ax + by + cz = 0\\)) normiert sein (\\(a^2 + b^2 + c^2=1\\)). $$ P=\\begin{pmatrix} 1 - a^2 &amp; -ab &amp; -ac\\ -ab &amp; 1 - b^2 &amp; -bc\\ -ac &amp; -bc &amp; 1 - c^2 \\end{pmatrix}=E-\\vec n \\cdot \\vec n^T\\ \\text{Wobei gilt:}\\ ax + by + cz = 0\\ a^2 + b^2 + c^2 = 1 $$ Im folgenden Bild wird noch eine andere Schreibweise gezeigt:</p> <p></p>"},{"location":"22FS/LA/06_Lineare%20Abbildung.html#spiegelung-an-einer-allgemeinen-ebene-durch-den-ursprung","title":"Spiegelung an einer allgemeinen Ebene durch den Ursprung","text":"<p>Wenn alle Vektoren bei einer Ebene, welche durch den Ursprung geht, gespiegelt werden sollen, kann folgende Formel ben\u00fctzt werden. Dabei m\u00fcssen die Ebene in der Koordinatendarstellung normiert sein: $$ S=\\begin{pmatrix} 1 - 2a^2 &amp; -2ab &amp; -2ac\\ -2ab &amp; 1 - 2b^2 &amp; -2bc\\ -2ac &amp; -2bc &amp; 1 - 2c^2 \\end{pmatrix}=E-\\vec n \\cdot \\vec n^T\\ \\text{Wobei gilt:}\\ ax + by + cz = 0\\ a^2 + b^2 + c^2 = 1 $$</p>"},{"location":"22FS/LA/06_Lineare%20Abbildung.html#rotation-um-eine-allgemeine-achse-durch-den-ursprung","title":"Rotation um eine allgemeine Achse durch den Ursprung","text":"<p>Wenn alle Vektoren um eine allgemeine Achse, welche durch den Ursprung geht, gedreht werden soll, kann folgende Formel ben\u00fctzt werden. Dabei muss die Koordinatendarstellung der Achse/Gerade normiert sein.</p> <p></p>"},{"location":"22FS/LA/06_Lineare%20Abbildung.html#kern-und-bild-einer-abbildung","title":"Kern und Bild einer Abbildung","text":"<p>Wenn wir eine Abbildung \\(f: V \\to W, \\vec x \\mapsto f(\\vec x)=A \\cdot \\vec x\\) haben, dann ist der Kern alle Vektoren \\(\\vec x\\), welche die Gleichung \\(A \\cdot \\vec x=\\vec 0\\)   erf\u00fcllen. Der Nullvektor \\(\\vec 0\\) ist dabei immer in \\(\\ker(A)\\) enthalten. $$ \\ker(A)={\\vec x \\in V \\vert A\\cdot \\vec x = \\vec 0} $$ Das Bild der Abbildung ist der Spalten der Vektoren von \\(A\\) $$ \\im(A)=\\span(\\vec a_1, \\vec a_2, ..., \\vec a_n)={\\lambda_1 \\vec a_1 + \\lambda_2 \\vec a_2 + ... + \\lambda_n\\vec a_n \\vert \\lambda_k \\in \\R} $$ Eine Wichtige Beobachtung ist, dass die Dimension von \\(\\ker(A)\\) und \\(\\im(A)\\) zusammen \\(\\dim(A)\\) ergeben: $$ \\dim(\\ker(A)) + \\dim(\\im(A)) = \\dim(A)\\ \\dim(\\im(A)) = \\rg(A) $$</p> <p>Um die Dimensionen zu bestimmen gibt es mehrere M\u00f6glichkeiten:</p> <ol> <li>Mit der Zeilenstuffenform von \\(A\\) den Rang ablesen. Von diesem kann die Dimension von \\(\\im(A)\\) abgelesen werden und dank des Satzes von oben auch \\(\\dim(\\ker(A))\\) bestimmen</li> <li>Da die Menge, welche von \\(\\ker(A)\\) zur\u00fcck gegeben werden, auch ein Unterraum ist, kann eine Basis mit \\(A\\) erstellt werden. Es m\u00fcssen alle Vektoren \\(a_i\\) gefunden werden, welche linear Unabh\u00e4ngig sind</li> </ol>"},{"location":"22FS/LA/summary.html","title":"LA Summary","text":"\\[ \\newcommand{\\len}[1]{\\vert #1 \\vert} \\DeclareMathOperator{\\rg}{rg} \\DeclareMathOperator{\\span}{span} \\DeclareMathOperator{\\dim}{dim} \\DeclareMathOperator{\\im}{im} \\] <ul> <li>LA Summary<ul> <li>Linearen Gleichungssysteme (LGS)<ul> <li>L\u00f6sung aus Zeilenstufenform</li> <li>L\u00f6sung aus reduzierter Zeilenstufenform</li> <li>L\u00f6sbarkeit von LGS</li> </ul> </li> <li>Vektoren<ul> <li>Linear Unabh\u00e4ngig</li> <li>S\u00e4tze</li> <li>3D-Koordinatensystem</li> <li>Skalarprodukt</li> <li>Orthogonale Projektion</li> <li>Vektorprodukt</li> </ul> </li> <li>Gerade<ul> <li>Wie stehen zwei Gerade zueinander</li> <li>Abstand eines Punktes</li> </ul> </li> <li>Ebene<ul> <li>Wie stehen zwei Ebene zueinander</li> <li>Abstand von einem Punkt zu einer Ebene</li> </ul> </li> <li>Matrix<ul> <li>Transponierte Matrix</li> <li>Inverse Matrix</li> <li>Determinante</li> </ul> </li> <li>Vektorr\u00e4ume<ul> <li>Unterr\u00e4ume</li> <li>Linearer Spann</li> <li>Erzeugendensystem</li> <li>Basis</li> <li>Dimension</li> </ul> </li> <li>Lineare Abbildung<ul> <li>Basis-wechselnde Abbildung</li> <li>Abbildung in der Ebene<ul> <li>Orthogonale Projektion auf eine allgemeine Gerade durch den Ursprung</li> <li>Spiegelung an einer allgemeinen Gerade durch den Ursprung</li> </ul> </li> <li>Abbildung im Raum</li> <li>Kern und Bild</li> <li>Verkn\u00fcpfung von Abbildungen</li> </ul> </li> </ul> </li> <li>Rest Klassen<ul> <li>Prime Restklassen</li> <li>Modulare Arithmethik</li> </ul> </li> </ul>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#linearen-gleichungssysteme-lgs","title":"Linearen Gleichungssysteme (LGS)","text":"<ul> <li>Zeilenstufenform: Alle nicht-<code>0</code> Zeilen, haben eine f\u00fchrende <code>1</code>; Alle <code>0</code>-Zeilen stehen zu unterst; Je weiter unten, desto weiter rechts steht eine f\u00fchrende <code>1</code></li> <li>reduzierte Zeilenstufenform: Zus\u00e4tzlich gilt: Eine Spalte mit einer f\u00fchrenden <code>1</code>, darf nur noch <code>0</code> enthalten</li> </ul>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#losung-aus-zeilenstufenform","title":"L\u00f6sung aus Zeilenstufenform","text":"<ol> <li>Unterscheiden zwischen Spalten mit f\u00fchrenden <code>1</code> und mit freien Unbekannten.</li> <li>F\u00fcr alle freie Unbekannte kann ein Unbekannte gleichgesetzt werden (z.B. \\(\\lambda\\))</li> <li>Alle Zeilen mit einer f\u00fchrenden-<code>1</code> werden in eine Gleichung umgewandelt werden</li> </ol>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#losung-aus-reduzierter-zeilenstufenform","title":"L\u00f6sung aus reduzierter Zeilenstufenform","text":"<p>Das Resultat kann abgeschaut werden.</p>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#losbarkeit-von-lgs","title":"L\u00f6sbarkeit von LGS","text":"<p>\\(\\rg(A)=\\text{Anzahl Zeilen}-\\text{Anzahl Nullzeilen}\\) (in der Zeilenstuffen form)</p> <p>\\(n\\) ist die Anzahl Spalten von \\(A\\)</p> <p></p> <p></p> <p>Eigenschaften, wenn \\(rg(A)=n\\) gilt:</p> <ul> <li>\\(\\det(A)\\neq 0\\)</li> <li>\\(\\Leftrightarrow\\) Spalten sind linear unabh\u00e4ngig</li> <li>\\(\\Leftrightarrow\\) Zeilen sind linear unabh\u00e4ngig</li> <li>\\(\\Leftrightarrow rg(A)=n\\)</li> <li>\\(\\Leftrightarrow\\) A ist regul\u00e4r, bzw. invertierbar</li> <li>\\(\\Leftrightarrow A\\cdot \\vec x=\\vec 0\\) ist eindeutig l\u00f6sbar   </li> </ul>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#vektoren","title":"Vektoren","text":"<ul> <li>Ortsvektor   Ein Vektor \\(\\vec r(P)\\), welcher am Ursprung festgehaftet ist</li> <li>Nullvektor \\(\\vec 0\\)   Ein Vektor mit dem Betrag 0 und keiner Richtung</li> <li>Gegenvektor: \\(\\vec a\\rightarrow -\\vec a\\)</li> <li>Kollinear:   Wenn zwei Vektoren parallel sind oder \\(\\vec a = \\lambda \\cdot \\vec b\\)</li> <li>Komplanar   Drei Vektoren heissen komplanar, wenn es eine Ebene gibt, zu der alle drei parallel sind.</li> <li>Vektor zwischen zwei Punkten \\(\\vec{PQ}=\\begin{pmatrix}x_Q-x_P\\\\y_Q-y_P\\end{pmatrix}=\\vec r(Q)-\\vec r(P)\\)</li> </ul>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#linear-unabhangig","title":"Linear Unabh\u00e4ngig","text":"<p>Vektoren sind linear Unabh\u00e4ngig, wenn es nur eine M\u00f6glichkeit gibt mit einer Linearkombination \\(\\vec 0\\) zu erreichen: \\(\\lambda_1\\cdot \\vec a_1 + \\lambda_2 \\cdot \\vec a_2 + ... + \\lambda_n \\cdot \\vec a_n=\\vec 0\\)</p> <p>Eigenschaften die daraus folgen:</p> <ul> <li>\\(\\det(A)\\neq 0\\)</li> <li>\\(\\Leftrightarrow\\) die Inversematrix kann gebildet werden</li> <li>\\(\\Leftrightarrow\\) Spalten sind linear unabh\u00e4ngig</li> <li>\\(\\Leftrightarrow\\) Zeilen sind linear unabh\u00e4ngig</li> <li>\\(\\Leftrightarrow rg(A)=n=\\text{Anzahl Spalten}\\)</li> <li>\\(\\Leftrightarrow\\) A ist regul\u00e4r, bzw. invertierbar</li> <li>\\(\\Leftrightarrow A\\cdot \\vec x=\\vec 0\\) ist eindeutig l\u00f6sbar   </li> </ul>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#satze","title":"S\u00e4tze","text":"<ol> <li>Satz 1: Es l\u00e4sst sich der Vektor \\(\\vec c\\) als Linearkombination der Vektorn \\(\\vec a\\) und \\(\\vec b\\) im 2D-Raum darstellen, wenn</li> <li>\\(\\vec a\\), \\(\\vec b\\) und \\(\\vec c\\) komplanar sind</li> <li>\\(\\vec a\\) und \\(\\vec b\\) nicht kollinear sind</li> <li>Satz 2: Es l\u00e4sst sich den Vektor \\(\\vec d\\) als Linearkombinatino der Vektoren \\(\\vec a\\), \\(\\vec b\\) und \\(\\vec c\\) im 3D-Raum darstellen, wenn \\(\\vec a\\), \\(\\vec b\\) und \\(\\vec c\\) nicht komplanar sind</li> </ol>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#3d-koordinatensystem","title":"3D-Koordinatensystem","text":"","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#skalarprodukt","title":"Skalarprodukt","text":"<p>  $$ \\vec a \\cdot \\vec b = \\vert \\vec a \\vert \\cdot \\vert \\vec b\\vert \\cdot \\cos(\\varphi)\\ \\vec a \\cdot \\vec b=a_1b_1+a_2b_2+a_3b_3\\ \\varphi =cos^{-1}\\left(\\frac{\\vec a \\cdot \\vec b}{|\\vec a|\\cdot |\\vec b|}\\right)\\ \\vec a \\cdot \\vec b = 0\\Rightarrow \\varphi=90\u00b0=\\frac 2 \\pi $$ Folgende Gesetzte gelten:</p> <ul> <li>Kommuntativ-Gesetzt: \\(\\vec a \\cdot \\vec b=\\vec b \\cdot \\vec a\\)</li> <li>Distributive-Gesetzt: \\(\\vec a \\cdot (\\vec b + \\vec c)=\\vec a \\cdot \\vec b + \\vec a \\cdot \\vec c\\)</li> <li>Gemischtes Assoziativ-Gesetzt: \\(\\lambda\\cdot (\\vec a \\cdot \\vec b)=(\\lambda \\cdot \\vec a)\\cdot \\vec b=\\vec a \\cdot (\\lambda \\cdot \\vec b)\\)</li> <li>\\(\\vec a \\cdot \\vec a=\\vert \\vec a \\vert ^2\\)</li> </ul>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#orthogonale-projektion","title":"Orthogonale Projektion","text":"<p> $$ \\vec b_a =\\frac{\\vec a \\cdot \\vec b}{|\\vec a|^2}\\cdot \\vec a\\ |\\vec b_a|=\\frac{|\\vec a \\cdot \\vec b|}{|\\vec a|} $$</p>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#vektorprodukt","title":"Vektorprodukt","text":"<p>Folgende Gesetze gelten: </p> <ul> <li>\\(\\len {\\vec a \\times \\vec b}=\\len {\\vec a}\\cdot \\len {\\vec b}\\cdot \\sin(\\varphi)\\)</li> <li>\\(\\vec a \\times \\vec b\\) ist orthogonal zu \\(\\vec a\\) und \\(\\vec b\\)</li> <li>\\(\\vec a\\) und \\(\\vec b\\) sind kollinear, wenn \\(\\vec a \\times \\vec b=\\vec 0\\) gilt</li> <li>\\(\\vec a \\times \\vec a = \\vec 0\\)</li> <li>Antikommutativ-Gesetz: \\(\\vec a \\times \\vec b = -(\\vec b \\times \\vec a)\\)</li> <li>Distributiv-Gesetzt: \\(\\vec a \\times (\\vec b + \\vec c)=\\vec a \\times \\vec b + \\vec a \\times \\vec c\\) und \\((\\vec a + \\vec c)\\times \\vec c = \\vec a \\times \\vec c + \\vec b \\times \\vec c\\)</li> <li>Gemischtes Assoziativ-Gesetz: \\(\\lambda \\cdot (\\vec a \\times \\vec b)=(\\lambda \\cdot \\vec a)\\times \\vec b=\\vec a \\times (\\lambda \\cdot \\vec b)\\)</li> <li>Das Assoziative-Gesetzt gilt nicht: \\(\\vec a \\times (\\vec b \\times \\vec c)\\neq (\\vec a \\times \\vec b)\\times\\vec c\\)</li> <li>\\(\\vec a \\times \\vec b\\) ist die Fl\u00e4che eines Parallelogrammes aufgespannt durch \\(\\vec a\\) und \\(\\vec b\\) </li> </ul>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#gerade","title":"Gerade","text":"<ul> <li> <p>Parameterdarstellung \\(g: \\vec r(P)+ \\lambda \\cdot \\vec{PQ}\\)</p> </li> <li> <p>Zu Kordinatendarstellung umrechnen</p> <p>Als LGS schreiben und \\(\\lambda\\) eliminieren</p> </li> <li> <p>Kordinatendarstellung (nur in 2D)   \\(g: ax+by+c=0\\)</p> </li> <li> <p>Normalvektor \\(n=\\pmatrix{a \\\\ b}\\)     Normalvektor steht senkrecht auf der gerade</p> </li> <li> <p>Zu Paramterdarstellung umrechnen:     Zwei Punkte auf \\(g\\) finden und damit \\(\\vec{PQ}\\) berechnen</p> </li> <li> <p>Normierte Kordinatendarstellung (Nur in 2D)   Die L\u00e4nge des Normalvektors is \\(0\\). Um dies zu berechnen, den Normalvektor normieren (also durch die L\u00e4nge des Normalvektors teilen)</p> </li> </ul>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#wie-stehen-zwei-gerade-zueinander","title":"Wie stehen zwei Gerade zueinander","text":"","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#abstand-eines-punktes","title":"Abstand eines Punktes","text":"<p>TODO</p>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#ebene","title":"Ebene","text":"<ul> <li>Parameterdarstellung   \\(E: \\vec r(P)+\\lambda \\cdot \\vec{PR}+\\mu\\cdot \\vec{PQ}\\) </li> <li>Normalvektor \\(\\vec n = \\vec{PR}\\times \\vec{PQ}\\)</li> <li> <p>Zu Koordinatendarstelung umwandeln</p> <ul> <li>Variante 1   Normalvektor \\(\\vec n\\) ausrechnen und in Koordinatenform einsetzen.    Daraus ergibt sich eine Gleichung mit einer Unbekannte \\(d\\). Diese L\u00f6sen</li> <li>Variante 2   Die drei Gleichungen in einem LGS schreiben und \\(\\lambda\\) und \\(\\mu\\) eliminieren</li> </ul> </li> <li> <p>Koordinatendarstellung   \\(E: ax+by+cz+d=0\\)</p> </li> <li>Normalvektor: \\(\\vec n=\\pmatrix{a\\\\b\\\\ c}\\)     Normalvektor steht orthogonal auf der Ebene</li> <li> <p>Zu Parameterdarstellung umwandeln     Drei Punkte auf der Ebene finden und daraus die Parameterdarstellung bilden</p> </li> <li> <p>Normierte Koordinatendarstellung   Der Normalvektor \\(\\vec n\\) ist normiert (durch \\(\\vert \\vec n \\vert\\) geteilt) (\\(d\\) muss auch durch \\(|\\vec n |\\) geteilt werden)</p> </li> </ul>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#wie-stehen-zwei-ebene-zueinander","title":"Wie stehen zwei Ebene zueinander","text":"<ul> <li>Parallel: </li> <li> <p>Parameterdarstellung     \u00dcberpr\u00fcfen, ob die Richtungsvektoren komplanar zu einander sind</p> </li> <li> <p>Koordinatendarstellung     Es muss ein Faktor \\(p\\) in folgendem System geben $$     a_1=a_2\\cdot p\\     b_1=b_2\\cdot p\\     c_1=c_2\\cdot p\\     d_1\\neq d_2\\cdot p $$     Alternativ: Die Normalvektoren beider Ebenen  m\u00fcssen koolinear sein</p> </li> <li> <p>Identisch</p> </li> <li> <p>Parameterdarstellung     Wenn die zwei Ebenen gleichgesetzt werden, m\u00fcssen unendlich viele L\u00f6sungen, mit zwei nicht gefixte Grade, heraus kommen</p> </li> <li>Koordinatendarstellung:     F\u00fcr die Koordinatendarstellung muss folgendes g\u00fcltig sein (die letzte Gleichung ist anderst)</li> </ul> <p>$$   a_1=a_2\\cdot p\\   b_1=b_2\\cdot p\\   c_1=c_2\\cdot p\\   d_1=d_2\\cdot p   $$</p> <ul> <li> <p>Schneident</p> </li> <li> <p>Parameterdarstellung     Wenn die zwei Ebenen gleichgesetzt werden, m\u00fcssen unendlich viele L\u00f6sungen, mit einer nicht gefixte Grade, heraus kommen. Das Resultat ist eine Gerade in der Parameterdarstellung</p> </li> <li>Koordinatendarstellung     Die beiden Ebenen in dasselbe Gleichungssystem tun und zu einem Gauss umwandeln (\\(d\\) auf die andere Seite nehmen). Wenn dies aufgel\u00f6st wird, m\u00fcsste eine Geradegleichung dabei herauskommen</li> </ul>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#abstand-von-einem-punkt-zu-einer-ebene","title":"Abstand von einem Punkt zu einer Ebene","text":"\\[ \\text{Wenn die Ebene nicht normiert sind: } l=\\frac{|ax_A+by_A+cz_A+d|}{|\\vec n|}\\\\ \\text{Wenn die Ebene normiert ist: } l=|ax_A+by_A+cz_A+d| \\]","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#matrix","title":"Matrix","text":"<ul> <li>Null-Matrix: Eine Matrix mit nur Nullen</li> <li>Spalten-Matrix: Eine Matrix mit nur einer Spalte. Verh\u00e4lt sich gleich, wie ein Vektor</li> </ul> <p>Die folgenden Rechenregeln funktioniert f\u00fcr gleichgrosse Matrizen.</p> <ul> <li>Kommutativ-Gesetz: \\(A+B=B+A\\) (Geht NICHT bei Multiplikation)</li> <li>Assoziativ-Gesetzt: \\(A+(B+C)=(A+B)+C\\)</li> <li>Distributiv-Gesetzt: \\(\\lambda\\cdot(A+B)=\\lambda\\cdot A + \\lambda \\cdot B\\) </li> <li> <p>Aber Achtung: \\(\\lambda\\cdot A + B\\cdot \\lambda\\) kann nicht ausgeklammert werden (In k\u00f6nnte einfach \\(\\lambda \\cdot A\\) und \\(B\\cdot \\lambda\\) ausgerechnet werden)</p> </li> <li> <p>Distributiv-Gesetzt mit Transportierten Matrizen: </p> </li> <li>\\((A\\cdot B)^T=B^T \\cdot A^T\\) (Beachte die Reihenfolge von A und B)</li> <li>\\((A+B)^T=A^T+B^T=B^T+A^T\\)</li> <li>\\((A-B)^T=A^T-B^T=B^T-A^T\\)</li> </ul>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#transponierte-matrix","title":"Transponierte Matrix","text":"\\[ B= \\begin{bmatrix} 1 &amp; 2 &amp; 3\\\\ 3 &amp; 4 &amp; 5 \\end{bmatrix}\\\\ B^T= \\begin{bmatrix} 1 &amp; 3 \\\\ 2 &amp; 4\\\\ 3 &amp; 5 \\end{bmatrix} \\] <p>Es gilt folgendes Gesetzt: \\((A\\cdot B)^T=B^T\\cdot A^T\\) (Bemerke, dass sich die Reihenfolge von \\(A\\) und \\(B\\) sich \u00e4ndert)</p>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#inverse-matrix","title":"Inverse Matrix","text":"<p>Die inverse Matrix kann von einer Quadratischen-Matrix gebildet werden, bei welcher \\(\\det(A)\\neq 0\\) gilt $$ \\pmatrix{a &amp; b\\ c &amp; d}^{-1}=\\frac 1 {ad-bc}\\cdot \\pmatrix{d &amp; -b \\ -c &amp; a} $$</p> <p>F\u00fcr gr\u00f6ssere Matrizen folgendes Gleichungssystem muss aufgel\u00f6st werden: $$ \\pmatrix{     a_{11} &amp; a_{12} &amp; a_{13} \\      a_{21} &amp; a_{22} &amp; a_{23} \\      a_{31} &amp; a_{32} &amp; a_{33} }^{-1} \\Rightarrow  \\left(\\begin{array}{ccc|cr}     a_{11} &amp; a_{12} &amp; a_{13} &amp; 1 &amp; 0 &amp; 0\\      a_{21} &amp; a_{22} &amp; a_{23} &amp; 0 &amp; 1 &amp; 0\\      a_{31} &amp; a_{32} &amp; a_{33} &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right ) $$</p>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#determinante","title":"Determinante","text":"<p>Wenn die Determinanten einer gr\u00f6sseren Matrix als 3x3 Berechnet werden soll, kann ein Verfahren nach Laplace eingesetzt werden:</p> <ol> <li> <p>Es wird eine feste Spalte oder Zeile gew\u00e4hlt</p> </li> <li> <p>Nun wird nach der folgenden Formel entwickelt:    $$    \\text{Entwicklung nach i-ten Zeilen: }\\det(A)=\\sum^n_{j=1} (-1)^{i+j}\\cdot a_{ij}\\cdot\\det(A_{ij})\\    \\text{Entwicklung nach j-ten Spalte: }\\det(A)=\\sum^n_{i=1} (-1)^{i+j}\\cdot a_{ij}\\cdot\\det(A_{ij})\\    $$    Dabei  ist \\(a_{ij}\\), das Element an \\(i\\)-ter Zeile und \\(j\\)-ter Spalte und \\(A_{ij}\\) die Matrix, bei welcher die \\(i\\)-te Zeile und \\(j\\)-Spalte weggelassen wurden</p> </li> </ol> <p> </p> <p>Der Determinante einer 2x2-Matrix, ist der Fl\u00e4cheninhalt des Parallelogrammes, wenn die Spalten als Vektoren aufgefasst werden. Der Determinante einer 3x3-Matrix ist der Volumeninhalt des Spates, von den Spalten der Matrix aufgespannt wird.</p> <p>Eigenschaften:</p> <ul> <li>Einheitsmatrix haben den Determinanten \\(1\\)</li> <li>F\u00fcr nxn Matrix gilt: \\(\\det(A\\cdot B)=\\det(A)\\cdot \\det(B)\\)</li> <li>F\u00fcr invertierbare Matrix gilt: \\(\\det(A^{-1})=\\frac 1 {\\det(A)}\\)</li> <li>F\u00fcr \\(A^T\\) gilt: \\(\\det(A^T)=\\det(A)\\)</li> </ul> <p>Wenn:</p> <ul> <li>\\(\\det(A)\\neq 0\\)</li> <li>\\(\\Leftrightarrow\\) Die Spalten und Zeilen sind linear unabh\u00e4ngig</li> <li>\\(\\Leftrightarrow \\rg(A)=n=m\\)</li> <li>\\(\\Leftrightarrow A\\) ist invertierbar</li> <li>\\(\\Leftrightarrow\\) Das LGS \\(A\\cdot \\vec x = \\vec c\\) hat eine eindeutige L\u00f6sung </li> <li>$\\Leftrightarrow $ Die Vektoren in \\(A\\) sind eine Basis</li> </ul>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#vektorraume","title":"Vektorr\u00e4ume","text":"\\[ +:V \\times V \\rightarrow V\\\\ \\cdot : \\R \\times V \\rightarrow V \\] <p>Dabei m\u00fcssen folgende Gesetze existieren:</p> <ul> <li>Kommutativgesetz: \\(a + b = b + a\\)</li> <li>Assoziativgesetzt: \\(a + (b + c)=(a + b) + c\\)</li> <li>Es gibt ein neutrales Element \\(\\vec 0\\), f\u00fcr welches gilt \\(a + 0v = \\vec a\\) und \\(0v \\in V\\)</li> <li>F\u00fcr jedes Element \\(a \\in V\\) muss es ein inverses Element \\(-a \\in V\\) geben, so dass \\(a + (-a) = 0v\\) ergibt.</li> <li>Assoziativgesetzt: \\(\\lambda \\cdot (\\mu \\cdot a) = (\\lambda \\cdot \\mu) \\cdot a\\)</li> <li>Distributivgesetzt: \\(\\lambda \\cdot(a + b) = \\lambda \\cdot a + \\lambda \\cdot b\\)</li> <li>Distirbutgesetzt: \\((\\lambda + \\mu)\\cdot a = \\lambda \\cdot a + \\mu \\cdot a\\)</li> <li>F\u00fcr jedes Element \\(a \\in V\\) gibt es ein neutrales Element \\(1\\cdot a = a\\),</li> </ul> <p>Allgemein bekannte Vektorr\u00e4ume:</p> <ul> <li>\\(\\R^n\\) - Vektorraum von allen Vekotren mit \\(n\\) reellen Komponente</li> <li>$ \\R^{m\\times n}$ - Vektorraum von allen reelen \\(m\\times n\\)-Matrizen</li> <li>\\(\\mathbb P_n[x]\\) - Vektorraum der Polynome von Grad \\(\\le n\\)</li> </ul>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#unterraume","title":"Unterr\u00e4ume","text":"<ul> <li>F\u00fcr beliebige Element \\(a, b \\in U\\) ist auch \\(a+b\\in U\\)</li> <li>F\u00fcr jeden Skalar \\(\\lambda \\in \\R\\) und jedes Element \\(a\\in U\\) ist auch \\(\\lambda \\cdot a\\in U\\)</li> <li>(Die neutralen Elemente der Addition und Skalarmultiplikation m\u00fcssen ebenfalls in \\(U\\) sein.)</li> </ul>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#linearer-spann","title":"Linearer Spann","text":"\\[ \\span(\\vec a_1, \\vec a_2 , ..., \\vec a_n)=\\lambda_1\\cdot \\vec a_n1 + \\lambda_2\\cdot \\vec a_2 + ... + \\lambda_n \\cdot \\vec a_n \\] <p>Jenachdem, wie viele linear unabh\u00e4ngige Vektoren gegeben sind, wird ein anderes geometrisches Objekt gebildet:</p> <ul> <li>Bei <code>1</code> Vektor, wird eine Ursprungs-Gerade gebildet</li> <li>Bei <code>2</code> Vektoren, wird eine Ursprungs-Ebene</li> <li>Bei <code>3</code> Vektoren, wird ein \"Ursprungs-K\u00f6rper\" gebildet</li> </ul>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#erzeugendensystem","title":"Erzeugendensystem","text":"<p>Eine Menge von Vektoren \\(\\{\\vec b_1, \\vec b_2, ..., \\vec b_N\\}\\), falls die Vektoren nicht komplanar und kolinear zueinander sind, bilden ein Erzeugendensystem von \\(V\\): \\(V=\\span(\\vec b_1, \\vec b_2, ..., \\vec b_n)\\)</p> <p>Ein Erzeugendensystem hat folgende eigenschaften: $$ \\begin{align} &amp; V=span(\\vec b_1, \\vec b_2, ..., \\vec b_n)\\ \\Leftrightarrow \\text{ } &amp; B\\cdot \\vec x = \\vec a \\text { f\u00fcr jedes } \\vec a \\in \\R^m\\ \\Leftrightarrow \\text{ } &amp; rg(B)=m = \\text{Anzahl Zeilen} \\end{align} $$</p>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#basis","title":"Basis","text":"<p>Eine Basis ist eine Menge von Vektoren, welche</p> <ul> <li>ein Erzeugendensystem sind </li> <li>linear unabh\u00e4ngig sind </li> </ul> <p>(Auf Deutsch: Es darf nur eine M\u00f6glichkeit geben, jeden Vektor zu Bilden)</p> <p>Es kann auch \u00fcberpr\u00fcft werden, ob \\(\\det(A)\\neq 0\\) ist (siehe Determinante)</p> <p></p> <p>Wichtige Basen:</p> <ul> <li>F\u00fcr \\(\\R^n\\) : \\(\\mathcal S=\\{\\vec e_1, \\vec e_2, ..., \\vec e_n\\}\\) - Standardbasis </li> <li>F\u00fcr \\(\\mathbb P_n[x]\\) \\(\\mathcal M=\\{1, x, x^2, ..., x^n\\}\\) - Monombasis</li> </ul> <p></p>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#dimension","title":"Dimension","text":"<p>Die Anzahl Vektoren in der Basis eines Vektorraumes: \\(\\dim(V)\\)</p> <p>Die Dimension von \\(\\{\\vec 0\\}\\) ist \\(0\\)</p>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#lineare-abbildung","title":"Lineare Abbildung","text":"<p>Eine Lineare Abbildung ist eine Funktion \\(f: V \\to W\\), welche folgende zwei Regeln einh\u00e4lt: $$ f(x+y)=f(x)+f(y)\\ f(\\lambda \\cdot x)=\\lambda \\cdot f(x) $$</p> <p>Eine lineare Abbildung kann auch als Matrix geschrieben werden. Um dies zu erreichen, gibt es zwei m\u00f6glichkeiten:</p> <ol> <li> <p>Die Einheitsvektoren in \\(f(x)\\) einsetzen und aus den Resultaten eine Matrix bauen </p> </li> <li> <p>Zeile f\u00fcr Zeile durchgehen und die Matrixzeilen davon ableiten    $$    A\\cdot\\pmatrix{x \\ y \\ z} = \\pmatrix{x\\ z - y \\ y - x \\ 2x - y} \\Rightarrow A = \\pmatrix{1 &amp; 0 &amp; 0 \\ 0 &amp; -1 &amp; 1 \\ -1 &amp; 1 &amp; 0 \\ 2 &amp; -1 &amp; 0}    $$</p> </li> </ol>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#basis-wechselnde-abbildung","title":"Basis-wechselnde Abbildung","text":"<p>\\(_CA_B\\) beschreibt die Lineare Abbildung \\(f: V_B \\to W_C\\) (Achtung Reihenfolge) und wird wie folgt gebraucht: \\(_CA_B\\cdot \\vec x_B=f(\\vec x)\\).</p> <p>Es kann wie folgt gebildet werden: </p> <p>Die Matrix \\((_CA_B)^{-1}={}_BA_C\\)</p>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#abbildung-in-der-ebene","title":"Abbildung in der Ebene","text":"","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#orthogonale-projektion-auf-eine-allgemeine-gerade-durch-den-ursprung","title":"Orthogonale Projektion auf eine allgemeine Gerade durch den Ursprung","text":"<p> Wenn auf eine Gerade projektiert werden soll, welche nicht die x-, y- oder z-Achse ist, muss folgende Formel verwendet werden. Dabei wird erwartet, dass die Gerade in der Kordinatendarstelung (\\(ax + by = 0\\)) normiert ist (\\(a^2 + b^2 = 1\\)). $$ P= \\begin{pmatrix} 1 - a^2 &amp; -ab\\ -ab &amp; 1-b^2 \\end{pmatrix}\\ \\text{Wobei gilt: }\\ ax + by = 0\\ a^2+ b^2 = 1 $$</p>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#spiegelung-an-einer-allgemeinen-gerade-durch-den-ursprung","title":"Spiegelung an einer allgemeinen Gerade durch den Ursprung","text":"<p>Wenn alle Vektoren bei einer Gerade, welche durch den Ursprung geht, gespiegelt werden soll, kann folgende Formel ben\u00fctzt werden. Dabei muss aber die Gerade in der Koordinatendarstellung (\\(ax + by=0\\)) normiert ist (\\(a^2+b^2 = 1\\)). $$ S= \\begin{pmatrix} 1 - 2a^2 &amp; -2ab\\ -2ab &amp; 1 - 2b^2 \\end{pmatrix}\\ \\text{Wobei gilt: }\\ ax + by = 0\\ a^2+ b^2 = 1 $$</p>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#abbildung-im-raum","title":"Abbildung im Raum","text":"","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#kern-und-bild","title":"Kern und Bild","text":"\\[ \\ker(A)=\\{\\vec x \\in V \\vert A\\cdot \\vec x = \\vec 0\\}\\\\ \\im(A)=\\span(\\vec a_1, \\vec a_2, ..., \\vec a_n)=\\{\\lambda_1 \\vec a_1 + \\lambda_2 \\vec a_2 + ... + \\lambda_n\\vec a_n \\vert \\lambda_k \\in \\R\\} \\] <p>Der Kern \\(\\ker(A)\\) besteht aus alle Vektoren \\(\\vec x\\), welche die Gleichung \\(A\\cdot \\vec x=\\vec 0\\) erf\u00fcllen</p> <p>Das Bild \\(\\im(A)\\) ist der Spalten der Vektoren von \\(A\\)</p> <p>Zus\u00e4tzlich gilt f\u00fcr \\(\\im(A)\\) und \\(\\ker(A)\\): $$ \\dim(\\ker(A)) + \\dim(\\im(A)) = \\dim(A)\\ \\dim(\\im(A)) = \\rg(A) $$ Um die Dimensionen zu bestimmen gibt es mehrere M\u00f6glichkeiten:</p> <ol> <li>Mit der Zeilenstuffenform von \\(A\\) den Rang ablesen. Von diesem kann die Dimension von \\(\\im(A)\\) abgelesen werden und dank des Satzes von oben auch \\(\\dim(\\ker(A))\\) bestimmen</li> <li>Da die Menge, welche von \\(\\ker(A)\\) zur\u00fcck gegeben werden, auch ein Unterraum ist, kann eine Basis mit \\(A\\) erstellt werden. Es m\u00fcssen alle Vektoren \\(a_i\\) gefunden werden, welche linear Unabh\u00e4ngig sind</li> </ol>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#verknupfung-von-abbildungen","title":"Verkn\u00fcpfung von Abbildungen","text":"\\[ g: V \\to W \\mapsto g(\\vec x)=A \\cdot \\vec x\\\\ f: U  \\to W \\mapsto f(\\vec x)=B \\cdot \\vec x \\\\ g(f(\\vec x)) = (g \\circ f)(\\vec x)=B \\cdot A \\cdot \\vec x \\]","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#rest-klassen","title":"Rest Klassen","text":"<p>In der Restklasse \\([x]_n\\) sind alle Zahlen \\(a\\), welche durch \\(n\\) geteilt den Rest \\(x\\) ergeben</p> Formel Erkl\u00e4rung \\(\\Z/n=\\{[z]_n\\|z\\in \\Z\\}\\) Die Menge aller Restklasse \\(\\Z^*_{/n}\\) Das Primes Restklassenssytem, welches nur die Restklassen enth\u00e4lt, welche zu n teilerfremd sind. Alle Restklassen in diesem System k\u00f6nnen multipliziert werden (Siehe Prime Restklassen) \\([z]_n=\\overline{z}\\) Die Restklasse, bzw. \u00c4quivalenzklasse mit dem Teiler n und dem Vertreter \\(z\\)","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#prime-restklassen","title":"Prime Restklassen","text":"<p>Prime Restklassen sind die Restklassen, welche ein Inverseselement f\u00fcr die Multiplikation besitzen. Dies wird mit einem Stern geschrieben, wie hier zu sehen: \\(\\Z_{/7}^{*}\\) .</p> <p>Beispiel:</p> <p>\\(\\Z^*_{/7}=\\{[1], [2], [3], [4], [5], [6]\\}\\)</p> <p>\\(\\Z^*_{/6}=\\{[1], [5]\\}\\)</p>","tags":["summary","LA"]},{"location":"22FS/LA/summary.html#modulare-arithmethik","title":"Modulare Arithmethik","text":"<p>f\u00fcr Multiplikation:</p> <ul> <li>neutrales Element: \\([1]_n\\)</li> <li>inverses Element:</li> <li>Nur Zahlen, welche teilefrmed sind (\\(ggT(Zahl, N)=1\\))</li> <li>Eine Zahl multipliziert mt ihrem inversen Element gibt \\(1\\)</li> <li>Kann mit dem Erweiterten Euklidischen Algorithmus berechnet werden:     \\(Zahlenbereich \\cdot x + Zahl \\cdot y=1\\) \\(\\Rightarrow y\\) ist das multiplikative Inverse. (Zahl muss kleiner sein als Zahlenbereich, sonst muss gewechselt werden)</li> </ul>","tags":["summary","LA"]},{"location":"22FS/PM2/Massnahmen.html","title":"Massnahmen","text":"<ul> <li>Zu begin haben Manuel und ich vermehrt unser Fachwissen eingebracht</li> <li>Dies hat sich \u00fcber PM1 ge\u00e4ndert. Tanija und Jonas konnten sich immer mehr einbringen</li> <li>Wir haten keinen Team-Leader</li> <li>Jemand, welcher den Progress des Projekts \u00fcberwacht, w\u00e4re sinvoll</li> <li>Wissensl\u00fccken haben versucht bei Design-Meetings zu stopfen</li> <li>Designs-Meetings beibehalten</li> <li>W\u00f6chtentliche Stand-Ups, um so den Fortschritt zu beobachten. Jemand soll \"T\u00e4tsch-Meister\" sein</li> <li> <p>Tickets mit Abh\u00e4ngikeites versehen; ev. sogar Gantt Diagram erstellen</p> </li> <li> <p>Projekt-Idee: Markdown-Editor mit Share-Features</p> </li> <li></li> </ul>"},{"location":"22FS/PM2/Pitch.html","title":"Pitch","text":"<p>Hallo,  Wir sind CodeBrewery. Ich darf vorstellen: Michael Ziegler, unser Wirtschaftsinformatiker. Er bringt Know-How \u00fcber die Budgetierung und das Finanzwesen. Ebenfalls Jonas Costa, welcher dank seiner Mediamatiker ausbildung Grafiken und Designs anfertigen kann. Manuel Thalman und Ich, Sebastian Zumbrunn haben beide einen Informatiker Hintergrund und bringen Technisches Know-How zu unserem Team. Zu viert hatten wir die Idee, ein virtuelles Haustier zu entwickeln. Dies wird Sie Tags \u00fcbers Bespassen und kann, dank einer App, Ihnen sogar auf einen Sparziergang Gesellschaft leisten. Daf\u00fcr brauchen wir aber Ihre Unterst\u00fctzung, um dies zu verwirklichen. Manuel Thalman wird Ihnen nun mehr \u00fcber unsere Idee erz\u00e4hlen. Bitte Manuel...</p> <p>Unser n\u00e4chstes Ziel ist ein ersten Prototyp zu entwickeln. ~~Dieser soll unsere Vision greifbarer machen.~~ Es wird bereits m\u00f6glich sein, ein Tomodachi auf seinen Desktop zu zaubern und damit zu interagieren. Ebenfalls wird es ab und zu von selbst Aktionen ausf\u00fchren, ~~wie z.B. ein Power-Nap einzulegen, um danach mit voller Energie Sie zu belustigen.~~ Um Ihnen dabei nicht in den Weg zu kommen, wird es m\u00f6glich sein, das Tomodachi mit dem Mauszeiger per Drag'n'drop zu verschieben. Auch werden wir ein Zuhause f\u00fcr das Tomodachi entwickeln, in welches es sich zur\u00fcck ziehen kann. </p> <p>Falls Sie Interesse an Ikitomo haben, w\u00e4ren wir froh, um Ihre Expertise, finanzielle Unterst\u00fcrzung und Ihr Netzwerk. </p> <p>Danke f\u00fcr Ihre Aufmerksamkeit...</p> <p>Unser n\u00e4chstes Ziel ist es ein ersten Prototyp zu entwickeln. In diesem soll Tomodachi auf dem Desktop herum laufen und es soll m\u00f6glich sein, damit zu interagieren. Per Drag'n'Drop muss es verschiebbar sein und von selbst, soll es ab und zu selbst Aktionen ausf\u00fchren. Auch soll es ein ein Zuhause f\u00fcr das Tomodachi geben, in welches es sich zur\u00fcck ziehen kann.</p>"},{"location":"22FS/PM2/Pitch.html#things-to-look-out-for","title":"Things to look out for","text":"<ul> <li>handover</li> <li> <p>sign posting (einerseit - anderseit. 1. 2. 3. ,...)</p> </li> <li> <p>handover expliziter gestalten (was das n\u00e4chste thema ist)</p> </li> <li>F\u00fcr mich, zu Beginn das Thema bereits sagen</li> <li>Wir sind, die, welche programmieren</li> <li>Konkurenz erw\u00e4hnen</li> </ul>"},{"location":"22FS/PM2/Projektskizze.html","title":"Projektskizze","text":""},{"location":"22FS/PM2/Projektskizze.html#ideen","title":"Ideen","text":"<ul> <li>UML Modelierungs app (zu gross)</li> <li>latex text editor (zu gross)</li> <li>markdown editor </li> <li>Care Taker App / Eat.ch f\u00fcr Lebensmittel?</li> <li> <p>Gantt</p> </li> <li> <p>Vorratsschrank Verwaltung</p> </li> <li>Buchhaltsungs App</li> <li>Hex-Editor (mit Pattern Matching)</li> <li>Sound Board</li> <li>Funny Voice Filter Program</li> <li>Desktop Pet</li> </ul>"},{"location":"22FS/PROG2/-1_Stuff.html","title":"Stuff","text":""},{"location":"22FS/PROG2/-1_Stuff.html#javadoc-l1","title":"Javadoc (L1)","text":"<p>Beschreiben Sie in Javadoc den Zweck der von Ihnen erstellten Klassen und Interfaces.</p> <p>Dokumentieren Sie ausserdem Methoden in Interfaces, abstrakte  Methoden sowie \u00f6ffentliche Methoden von Klassen, die die Rolle von  internen Schnittstellen einnehmen wie zum Beispiel Data Access Objects.  F\u00fcr Methoden ist es wichtig, dass der Javadoc-Kommentar den Vertrag  zwischen Methode und anwendendem Code beschreibt:</p> <ul> <li>Es ist erkl\u00e4rt, was die Methode macht.</li> <li>Es sind s\u00e4mtliche Vorbedingungen aufgelistet (z.B., dass Argument nicht <code>null</code> sein darf).</li> <li>Es sind s\u00e4mtliche Nachbedingungen aufgelistet (z.B., dass retournierte Collection nie <code>null</code> sein kann).</li> <li>Es ist jede Exception aufgelistet, die auftreten kann und in welcher Situation das passiert.</li> <li>Jeder Parameter ist beschrieben.</li> <li>Sofern sinnvoll ist der R\u00fcckgabewert beschrieben.</li> </ul> <p>F\u00fcr abstrakte Methoden ist ausserdem wichtig, dass Sie beschreiben, welche Erwartungen an eine Implementierung gestellt werden.</p>"},{"location":"22FS/PROG2/-1_Stuff.html#gute-commits-l2","title":"Gute Commits (L2)","text":"<p>Tim Pope hat 2008 auf seinem Blog beschrieben, was eine gute Commit-Nachricht f\u00fcr Git ausmacht. Und hat dazu diese Modell-Nachricht verfasst:</p> <pre><code>Capitalized, short (50 chars or less) summary\n\nMore detailed explanatory text, if necessary.  Wrap it to about 72\ncharacters or so.  In some contexts, the first line is treated as the\nsubject of an email and the rest of the text as the body.  The blank\nline separating the summary from the body is critical (unless you omit\nthe body entirely); tools like rebase can get confused if you run the\ntwo together.\n\nWrite your commit message in the imperative: \"Fix bug\" and not \"Fixed bug\"\nor \"Fixes bug.\"  This convention matches up with commit messages generated\nby commands like git merge and git revert.\n\nFurther paragraphs come after blank lines.\n\n- Bullet points are okay, too\n\n- Typically a hyphen or asterisk is used for the bullet, followed by a\n  single space, with blank lines in between, but conventions vary here\n\n- Use a hanging indent\n</code></pre> <p>\u2014 Tim Pope A Note About Git Commit Messages</p> <p>Folgen Sie seinem Rat, und Ihre History wird gleichzeitig informativ und einfach zu verfolgen sein:</p>"},{"location":"22FS/PROG2/00_Gradle.html","title":"Gradle","text":""},{"location":"22FS/PROG2/00_Gradle.html#dependencies","title":"Dependencies","text":"Command Explanation <code>implementation 'group:artifactId:version'</code> Dependenciy is needed to compile and run the project <code>testImplementation 'group:artifactId:version'</code> Dependency is only needed to compile and run tests <code>testRuntimeOnly 'group:artifactId:version'</code> Dependency is only needed durring the runtime of tests"},{"location":"22FS/PROG2/01_Concurrency.html","title":"Concurrency","text":""},{"location":"22FS/PROG2/01_Concurrency.html#types-of-concurrencies","title":"Types of Concurrencies","text":"<p>There are multiple types of concurrencies:</p> <ul> <li>True concurrency   On a computer with more multiple cores, each core can run a flow independently</li> <li>Interleaving concurrency   Each flow gets a slice of time. After that time the flow will be paused and the core will work on another flow.   The scheduler controls which core works on which flow</li> </ul>"},{"location":"22FS/PROG2/01_Concurrency.html#strategies-for-interlaving-concurrency","title":"Strategies for Interlaving Concurrency","text":"<ul> <li>Non-Preemptive (cooperative)</li> </ul> <p>The process releases the core voluntarily    Tyes: FCFS(First comes, first served), SNP(shortest process next). This was how it was in the olden days </p> <ul> <li>Preemtive    A scheduler can interrupt a process</li> </ul>"},{"location":"22FS/PROG2/01_Concurrency.html#program-vs-process-vs-thread","title":"Program vs Process vs Thread","text":"<p>A program is a sequence of instructions and can consists of multiple processes.</p> <p>A process executes a program or part of it and can consists of multiple threads. Each process has its own memory, uses IPC (Inter-Process-Communication) to communicate to other processes and switching between processes is expensive.</p> <p>A thread is part of a process and runs one flow. It shares its memory with the other threads in the same process and switching between thread is cheap.</p> <p></p>"},{"location":"22FS/PROG2/01_Concurrency.html#java-concurrency","title":"Java-Concurrency","text":""},{"location":"22FS/PROG2/01_Concurrency.html#thread","title":"Thread","text":"<ul> <li><code>Thread.sleep()</code> doesn't gurantee that sleep doesn't wake up early or late</li> <li><code>Object.yield()</code> will advice the scheduler to release the thread, but there is guarantee that the thread will be suspened</li> <li>With <code>Thread.currentThread</code> one can get the thread which runs the current thread</li> <li><code>Thread.stop()</code>, <code>Thread.suspend()</code> and <code>Thread.resume()</code> are depricated and potentialy unsafe</li> </ul>"},{"location":"22FS/PROG2/01_Concurrency.html#lifecycle-of-a-thread","title":"Lifecycle of a Thread","text":"<p>A Thread is considered \"alive\" and <code>Thread.isAlive()</code> will return true, when the Thread is either ready, running oder suspended (the blocks with the dotted outline). This means that <code>run</code> needs to start running before the Thread is alive.</p>"},{"location":"22FS/PROG2/01_Concurrency.html#executor-framework","title":"Executor Framework","text":""},{"location":"22FS/PROG2/01_Concurrency.html#verifybehaviormodel-neversetpositionanyexecutor-service","title":"verify(behaviorModel, never()).setPosition(any());Executor Service","text":"<p> An <code>Executor</code> just promises to execute a given task.</p> <p>An <code>ExecutorService</code> extends <code>Executor</code> to allow to shutdown the Executor and to track the progress and the state of a task. The <code>shutdownNow()</code> method uses <code>Thread.interrupt()</code> under the hood and is thus not deprecated.</p> <p>The <code>ScheduledExecutorService</code> extends the <code>ExecutorService</code> to allow a task to be scheduled. The method signitures of the new methods are: </p> <ul> <li><code>schedule(Runnable task, long delay, TimeUnit unit)</code>,</li> <li><code>scheduleAtFixedRate(Runnable task, long initialDelay, long period, TimeUnit unit)</code></li> <li><code>scheduleWithFixedDelay(Runnable task, long initialDelay, long delay, TimeUnit unit)</code></li> </ul>"},{"location":"22FS/PROG2/01_Concurrency.html#thread-pools","title":"Thread Pools","text":"<p>A thread pool uses multiple threads which are reused for multiple tasks. Thread pools usually use a queue to hold the tasks to be executed.</p> <p>A special kind of thread pool is a Blocking Queue, which when it's full, will reject newly submitted tasks.</p> <p>Most <code>Executor Services</code> use thread pools underneath.</p>"},{"location":"22FS/PROG2/01_Concurrency.html#different-executors","title":"Different Executors","text":"Executor Name Description <code>Executors.newSingleThreadExecutor()</code> Creates an Executor which only uses one thread <code>Executors.newFixedThreadPool(int numOfThreads)</code> Creates an Executor which has the given number of threads. Those thread will be reused <code>Executors.newCachedThreadPool()</code> Creates new threads as needed. It will retain Threads for an amount of time (approx. up to 60s) and will stop it after. <code>Executors.newScheduledThreadPoool(int numOfThreads)</code> Creates a new scheduled thread pool with the given number of threads. <code>Executors.newSingleThreadExecutor()</code> Creates a new scheduled executor with a single thread"},{"location":"22FS/PROG2/summary.html","title":"PROG2 Summary","text":"","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#gradle","title":"Gradle","text":"","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#concurrency","title":"Concurrency","text":"","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#types-of-concurrencies","title":"Types of Concurrencies","text":"<p>There are multiple types of concurrencies:</p> <ul> <li>True concurrency   On a computer with more multiple cores, each core can run a flow independently</li> <li>Interleaving concurrency   Each flow gets a slice of time. After that time the flow will be paused and the core will work on another flow.   The scheduler controls which core works on which flow</li> </ul>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#strategies-for-interlaving-concurrency","title":"Strategies for Interlaving Concurrency","text":"<ul> <li>Non-Preemptive (cooperative)</li> </ul> <p>The process releases the core voluntarily    Tyes: FCFS(First comes, first served), SNP(shortest process next). This was how it was in the olden days </p> <ul> <li>Preemtive    A scheduler can interrupt a process</li> </ul>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#program-vs-process-vs-thread","title":"Program vs Process vs Thread","text":"<p>A program is a sequence of instructions and can consists of multiple processes.</p> <p>A process executes a program or part of it and can consists of multiple threads. Each process has its own memory, uses IPC (Inter-Process-Communication) to communicate to other processes and switching between processes is expensive.</p> <p>A thread is part of a process and runs one flow. It shares its memory with the other threads in the same process and switching between thread is cheap.</p> <p></p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#java-concurrency","title":"Java-Concurrency","text":"","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#thread","title":"Thread","text":"<ul> <li><code>Thread.sleep()</code> doesn't gurantee that sleep doesn't wake up early or late</li> <li><code>Object.yield()</code> will advice the scheduler to release the thread, but there is guarantee that the thread will be suspened</li> <li>With <code>Thread.currentThread()</code> one can get the thread which runs the current thread</li> <li><code>Thread.stop()</code>, <code>Thread.suspend()</code> and <code>Thread.resume()</code> are depricated and potentialy unsafe</li> </ul> <pre><code>public static void main (String[] args) {\nSystem.out.println(\"START: main\");\nThread java = new JoinThread(\"Java\");\nThread fiji = new JoinThread(\"Fiji\");\njava.start();\nfiji.start();\nSystem.out.println(\"Wait for theads..\");\ntry {\njava.join(); // blocks until java ends\nfiji.join(); // blocks until fiji ends\n} catch (InterruptedException e) {\nSystem.out.println(\"Interrupted\");\n}\nSystem.out.println(\"DONE main\");\n}\n</code></pre>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#lifecycle-of-a-thread","title":"Lifecycle of a Thread","text":"<p>A Thread is considered \"alive\" and <code>Thread.isAlive()</code> will return true, when the Thread is either ready, running oder suspended (the blocks with the dotted outline). This means that <code>run</code> needs to start running before the Thread is alive.</p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#executor-framework","title":"Executor Framework","text":"<pre><code>// Example of a Sheduled Executor\npublic static void main(String[] args) {\nScheduledExecutorService scheduledExecutor = Executors.newScheduledThreadPool(2);\nscheduledExecutor.execute(new ScheduledTask(0, System.currentTimeMillis()));\nFuture&lt;?&gt; future = scheduledExecutor.submit(new ScheduledTask(0, System.currentTimeMillis()));\nscheduledExecutor.schedule(new ScheduledTask(1, System.currentTimeMillis()), 4, TimeUnit.SECONDS);\nscheduledExecutor.scheduleAtFixedRate(new ScheduledTask(2, System.currentTimeMillis()),4,3,TimeUnit.SECONDS);\nscheduledExecutor.scheduleWithFixedDelay(new ScheduledTask(3, System.currentTimeMillis()),2,3,TimeUnit.SECONDS);\ntry {\nTimeUnit.SECONDS.sleep(20); // waiting for 20s\n} catch (InterruptedException e) { }\nscheduledExecutor.shutdown();\n}\nprivate static record ScheduledTask(int id, long starttime) implements Runnable {\n@Override\npublic void run() {\nSystem.out.println(\"Executing Task \" + id +\n\" at \" + (System.currentTimeMillis()-starttime) + \" ms after start \" +\n\" in Thread : \" + Thread.currentThread().getName());\n}\n}\n</code></pre>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#executor-service","title":"Executor Service","text":"<p> An <code>Executor</code> just promises to execute a given task.</p> <p>An <code>ExecutorService</code> extends <code>Executor</code> to allow to shutdown the Executor and to track the progress and the state of a task. The <code>shutdownNow()</code> method uses <code>Thread.interrupt()</code> under the hood and is thus not deprecated.</p> <p>The <code>ScheduledExecutorService</code> extends the <code>ExecutorService</code> to allow a task to be scheduled. The method signitures of the new methods are: </p> <ul> <li><code>schedule(Runnable task, long delay, TimeUnit unit)</code>,</li> <li><code>scheduleAtFixedRate(Runnable task, long initialDelay, long period, TimeUnit unit)</code></li> <li><code>scheduleWithFixedDelay(Runnable task, long initialDelay, long delay, TimeUnit unit)</code></li> </ul>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#thread-pools","title":"Thread Pools","text":"<p>A thread pool uses multiple threads which are reused for multiple tasks. Thread pools usually use a queue to hold the tasks to be executed.</p> <p>A special kind of thread pool is a Blocking Queue, which when it's full, will reject newly submitted tasks.</p> <p>Most <code>Executor Services</code> use thread pools underneath.</p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#different-executors","title":"Different Executors","text":"Executor Name Description <code>Executors.newSingleThreadExecutor()</code> Creates an Executor which only uses one thread <code>Executors.newFixedThreadPool(int numOfThreads)</code> Creates an Executor which has the given number of threads. Those thread will be reused <code>Executors.newCachedThreadPool()</code> Creates new threads as needed. It will retain Threads for an amount of time (approx. up to 60s) and will stop it after. <code>Executors.newScheduledThreadPoool(int numOfThreads)</code> Creates a new scheduled thread pool with the given number of threads. <code>Executors.newSingleThreadExecutor()</code> Creates a new scheduled executor with a single thread","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#callable-and-futures","title":"Callable and Futures","text":"<pre><code>public interface Callable&lt;V&gt; {\nV call() throws Exception;\n}\n</code></pre> <p>A <code>Callable</code> will return a result or an exception and can also be submitted to an <code>ExecutorService</code> and a <code>Future&lt;V&gt;</code> will be returned.</p> <pre><code>public static void main(String[] args) throws InterruptedException, ExecutionException, TimeoutException {\nExecutorService service = Executors.newSingleThreadExecutor();\nFuture&lt;String&gt; future = service.submit(() -&gt; \"Hello world\");\nString result = future.get(); // waits until the future completes\nresult = future.get(1, TimeUnit.SECONDS); // will throw TimeoutException after 1 second\nfuture.cancel(&lt;mayInterruptIfRunning&gt;); // will cancel the future\nfuture.isDone(); // returs if the future is done\nfuture.isCancelled(); // returns if the future was cancelled\n}\n</code></pre>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#patterns","title":"Patterns","text":"","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#wait-for-all-tasks-to-finish","title":"Wait for all Tasks to finish","text":"<pre><code>List&lt;Future&lt;?&gt;&gt; futureList = executorService.invokeAll(taskList);\nfor(Future&lt;?&gt; future : futureList) {\nfuture.get(); // wait for each future\n}\n</code></pre>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#wait-for-the-fastest-task-to-finish","title":"Wait for the fastest task to finish","text":"<pre><code>String result = executorService.invokeAny(taskList);\n/*\nThe result of the task which completed first, is returned\n*/\n</code></pre>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#share-data-between-multiple-threads","title":"Share Data between Multiple Threads","text":"","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#atomic","title":"Atomic","text":"<p>Use the atomic data types, like <code>AtomicBoolean</code>, <code>AtomicInteger</code>, <code>AtomicLong</code>, <code>AtomicReference</code>, <code>AtomicIntegerArray</code>, <code>AtomicLongArray</code> or <code>AtomicReferenceArray</code>.</p> <pre><code>private static class Account {\nprivate final int id;\nprivate AtomicInteger balance;\npublic Account(int id, int initialAmount) {\nthis.id = id;\nthis.balance = new AtomicInteger(initialAmount);\n}\npublic int getId() { return id; }\npublic int getBalance () {\nreturn balance.get();\n}\npublic void setBalance(int amount) {\nthis.balance.set(amount);\n}\npublic void transferAmount (int amount) {\nthis.balance.addAndGet(amount);\n}\n}\n</code></pre>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#synchronized","title":"Synchronized","text":"<pre><code>class Account {\nprivate int balance;\npublic synchronized void transferAmount1(int amount) {\nthis.balance += amaount;\n}\npublic void transferAmount2(int amount) {\nsynchronized(this) {\nthis.balance += amaount;\n}\n}\npublic synchronized static staticLock1() {\n//do stuff\n}\npublic static staticLock1() {\nsynchronized(Amount.class) {\n// do stuff\n}\n} }\n</code></pre> <p>Never call an other synchronized method which uses a different object. This can cause a dead lock.</p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#monitor","title":"Monitor","text":"<p>A Java object can be used as a locked. </p> <pre><code>class FooBar {\nprivate Object monitor;\npublic void test() {\nsynchronized(monitor) {\n// waits for the monitor to be called with monitor.notify() or monitor.notifyAll()\nmonitor.wait();\n}\n}\n}\n</code></pre> <p><code>Object.wait()</code> blocks until <code>Object.notify()</code> or <code>Object.notifyAll()</code> is invoked on the same monitor object. <code>notify()</code> only wakes up one waiting Thread while <code>notifyAll()</code> will wake up all waiting threads.</p> <p><code>wait()</code> releases the monitor object. </p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#types-of-synchronization","title":"Types of Synchronization","text":"","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#mutual-exclusion","title":"Mutual Exclusion","text":"<p>Mutual Exclusion means that only only thread can access a shared resource at a time. This usually means, that a section of code needs to be locked (eg. with synchronize) until the thread is done with that code.</p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#conditional-synchronization","title":"Conditional Synchronization","text":"<p>Conditional synchronization is needed when one thread waits for an event to happen in another thread. This is basicly the Producer-Consumer \"Pattern\". The order of events or operations is critical.</p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#producer-consumer","title":"Producer-Consumer","text":"<p>The producer produces some data which can be consumed by the consumer. The consumer tries to access the resource. If it is already ready, then it can just continue. If not it will <code>wait()</code> for the producer to <code>notify()</code> its monitor after which it can access the resource.</p> <p>The producer thread might needs to throttle itself to avoid loosing results when no consumer can consume them.</p> <p></p> <p>Here is an example for a consumer-producer example: The <code>while</code> loop is necessary because when the thread calls <code>wait()</code> it releases the monitor the synchronize block and an other thread can enter the synchronize block and call <code>wait()</code>.</p> <p></p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#synchronized-queue","title":"Synchronized Queue","text":"<p>With a queue the problem of the consumer and producer can be abstracted into a separate class to make it less brittle. Implementing the following becomes trivial:</p> <ul> <li>The producer fills the queue with data</li> <li>The consumer retrieves the data from the queue if available</li> <li>The consumer waits only if the queue is empty</li> <li>The producer waits when the queue is full</li> </ul> <p></p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#locks-and-conditions","title":"Locks and Conditions","text":"<p>A <code>Lock</code> is like a monitor object but instead of using <code>synchronize</code> the methods <code>lock()</code> and <code>unlock()</code> are used (in a try-finally-block). </p> <p>Additionally <code>Conditions</code> can be created with <code>Lock.newCondition()</code>. A condition is connected to its lock and can only be interacted with when its lock is locked. A Condition has <code>await()</code>, <code>signal()</code> and <code>signallAll()</code>, which behaviour like <code>Object.wait()</code>, <code>Object.notify()</code> and <code>Object.notifyAll()</code>. The advantage of Conditions is, that each lock can have multiple conditions. </p> <p>With <code>ReentrantLock.hasWaiters(Condition)</code> can be checked, if a thread currently waits for a condition.</p> <p></p> <pre><code>public class ConditionalSyncQueue&lt;E&gt; {\nprivate Lock mutex = new ReentrantLock();\nprivate Condition notEmpty = mutex.newCondition();\nprivate Condition notFull = mutex.newCondition();\nprivate LinkedList&lt;E&gt; queue = new LinkedList&lt;E&gt;();\nprivate int capacity = 5;\npublic void add (E item) throws InterruptedException {\nmutex.lock(); // enter critical section\ntry { // condition 1: queue not full\nwhile(queue.size() &gt;= capacity) {\nnotFull.await();\n}\nqueue.addLast(item);\nnotEmpty.signal();\n} finally {\nmutex.unlock(); // exit critical section\n}\n}\npublic E remove() throws InterruptedException {\nE item = null;\nmutex.lock(); // enter critical section\ntry { // condition 2: queue not empty\nwhile (queue.empty()) {\nnotEmpty.await();\n}\nitem = queue.removeFirst();\nnotFull.signal();\n} finally {\nmutex.unlock(); // exit critical section\n}\nreturn item;\n}\n}\n</code></pre>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#readwritelocks","title":"ReadWriteLocks","text":"<p>A <code>ReadWriteLock</code> is like a <code>Lock</code> but it provides 2 <code>Lock</code> instances:</p> <ul> <li>A write lock: When locked, neither locks are lockable anymore</li> <li>A read lock: When locked, the write lock won't be lockable</li> </ul> <p></p> <p>The <code>ReentrantReadWriteLock</code> has the methods <code>readLock()</code> and <code>writeLock()</code> which return the respective lock instance.</p> <p>This helps reduce the performance impact of synchronizing.</p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#problems-of-lack-of-synchronization","title":"Problems of lack of Synchronization","text":"","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#lost-update","title":"Lost Update","text":"<p>A lost update happens when an write/update was overridden by another thread.</p> <p></p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#deadlocks","title":"Deadlocks","text":"<p>A deadlock occurs when two threads wait for a resource, which is locked by the other thread. It can only occur when all of the following conditions are meth:</p> <ol> <li>Mutual Exclusion: Each resource is available only once</li> <li>Hold and Wait Condition: A thread which already blocks a resource, claims additional resources</li> <li>No Preemption: A blocked resource cannot be taken away by the OS</li> <li>Cyclic waiting Conditions: A chain of processes exists which are waiting for a resource, which is blocked by a successor in the chain</li> </ol>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#how-to-avoid-dead-locks","title":"How to avoid Dead Locks","text":"<p>Generally avoiding shared resources will avoid dead locks as well. This however isn't always possible.  In those cases, insure that a resource is always locked in the same order,</p> <pre><code>public static void transfer(Account from, Account to, int amount) {\nboolean isLower = from.getId() &lt; to.getId();\nAccount lowerAccount = isLower ? from : to;\nAccount higherAccount = !isLower ? from : to;\nsynchronized( lowerAccount ) {\nsynchronized( higherAccount ) {\nfrom.transferAmount(-amount);\nto.transferAmount(amount);\n}\n}\n}\n</code></pre> <p>Another solution is to program a special case for one of the resource which will access the resources in the reverse direction (see Dining Philosophers)</p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#dining-philosophers","title":"Dining Philosophers","text":"<p>There are 5 Philosophers. Each philosophers can either eat or think. For eating a philosopher needs two forks, but there are only 5 forks in total, so not everybody can eat at the same time.</p> <p></p> <p>A naive solution would first let the philosophers take the right and then the left fork. This would result in everybody holding a fork in the right hand and waiting for a fork to be available resulting in a dead lock.</p> <p></p> <p>To prevent this cyclic waiting condition the abstract can be change to always take and release two forks as one atomic action. The situation above should never happen.</p> <p>A second solution is to change the behavior of one philosopher to first take the left and then the right fork.</p> <p></p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#gui","title":"GUI","text":"","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#scene-graph","title":"Scene Graph","text":"<p>A scene Graph is a cycle free graph of nodes. It contains one root node.</p> <p></p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#panes","title":"Panes","text":"<ul> <li> <p>Group   All children keep their size and it is just large enough to contain all children</p> </li> <li> <p>Region   Is the base class of all panes and controlls and defines minimum, maximum and desired size</p> </li> <li> <p>Pane   The size of the pane and the layout of its children can be manually set; clipping is possible</p> </li> <li> <p>HBox/VBox   Aligns the children horizontally or vertically   </p> </li> <li> <p>BorderPane   Defines 5 regions. Nodes are added by <code>setCenter(Node)</code>, <code>setLeft(Node)</code>, ...</p> </li> <li> <p>GridPane   The children are aranged in a table. Nodes are added with <code>add(Node, column, row)</code></p> </li> <li> <p>FlowPane   Automaticly aranges nodes in a new row/column, when the size of the pane is filled.</p> </li> <li> <p>AnchorPane</p> </li> </ul> <p>Nodes can be anchored to multiple edges. This allows for a flexible layout. A node is added with <code>getChildren().add(Node)</code> and can be attached to an edge with <code>setTopAnchor(Node, distance)</code>, <code>setLeftAnchor(Node, distance)</code>, <code>setBottomAnchor(Node, distance)</code> and <code>setRightAnchor(Node, distance)</code>.</p> <ul> <li>TilePane    Every Node gets the same amount of space in a grid. Like in a <code>FlowPane</code>, nodes are wrapped to the next line if the size of the pane is filled. Either a max tile size is set or the biggest child is used as a reference. Nodes are added with <code>getChildren().add(Node)</code>.</li> </ul>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#menus","title":"Menus","text":"<p>The root is <code>MenuBar</code> which contains <code>Menu</code>s  (contain other Menus oder MenuItems) or <code>MenuItem</code>s (contains text and/or graphics), like <code>CheckMenuItem</code> or <code>RadioMenuItem</code></p> <pre><code>MenuBar menuBar = new MenuBar();\nMenu fileMenu = new Menu(\"File\");\nmenuBar.getMenus().add(fileMenu);\nMenuItem quitMenuItem = new MenuItem(\"Quit\");\nfileMenu.getItems().add(quitMenuItem);\nImage quitImage = new Image(getClass().getClassLoader().getResourceAsStream(\"quit-icon.png\"));\nquitMenuItem.setGraphic(new ImageView(quitImage));\nquitMenuItem.setAccelerator(KeyCombination.keyCombination(\"ESC\"));\nquitItem.setOnAction(new EventHandler&lt;ActionEvent&gt;() {\npublic void handle(ActionEvent e) { Platform.exit(); }\n});\n// or as lambda expression\nquitMenuItem.setOnAction(e -&gt; Platform.exit());\nCheckMenuItem bookMenu = new CheckMenuItem(\"Book\");\nbookMenu.setSelected(true);\nfileMenu.getItems().add(bookMenu);\n</code></pre>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#events","title":"Events","text":"<p>An event has two phases:</p> <ol> <li>Event Capturing Phase:    The event is passed up from the origin node to the stage. On each node, its <code>EventFilter</code> is invoked</li> <li>Event Bubbling Phase    The event is passed back up from the stage to the origin node. On each node, its <code>EventHandler</code> is called.</li> </ol> <p>An event handler can be added to a node via their respective methods:</p> <pre><code>Button button = new Button(\"test\");\nbutton.setOnAction((ActionEvent event) -&gt; {});\nbutton.setOnAction(new EventHandler&lt;ActionEvent&gt; {\n@Override\npublic void handle(ActionEvent event) {}\n});\nbutton.setOnMouseClicked((MouseEvent event) -&gt; {});\n</code></pre> <p>All event handlers are <code>EventHandler&lt;? extends Event&gt;</code></p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#demo-app","title":"Demo App","text":"<pre><code>public class App extends Application {\n@Override\npublic void start(Stage primaryStage) throws Exception {\nFXMLLoader loader = new FXMLLoader(getClass().getResource(\"test.fxml\"));\nParent parent = loader.load();\nScene scene = new Scene(parent);\nstage.setTitle(\"Test\");\nstage.setScene(scene);\nstage.setMinWidth(400);\nstage.setMinHeight(600);\n// if this is  a new stage\nstage.initOwner(parentStage);\n// disables events for owner windows only\nstage.initModality(Modality.WINDOW_MODAL);\n// disables events for all app windows\nstage.initModality(Modality.WINDOW_MODAL);\nstage.show();\n// or stage.showAndWait(); to block until modal window is closed\n// create new Stage (primaryStage= new Stage()) to open a new window\n}\n}\npublic class Controller {\n@FXML\nprivate BorderPane rootPane;\n@FXML\npublic void initialize() {\nrootPane.setStyle(\"-fx-bakground-color: red;\");\nrootPane.setLayoutX(0);\nrootPane.setLayoutY(0);\n}\n}\n</code></pre>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#mvc","title":"MVC","text":"<p>Model: Contains the data with the domain logic, but it has to be independent from the View-Classes.</p> <p>View: The UI components which render the data. The view doesn't call the model directly (usually), but it knows about the types of the model (for example via generics).</p> <p>Controller: The glue between the model and the UI. It listens to events from the UI and calls the model accordingly</p> <p></p> <p>The benefits of this pattern are:</p> <ul> <li>Independent development and testing of model and UI</li> <li>Its possible to have multiple views and controllers for one model</li> <li>Changes to the UI or model are far easier</li> </ul>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#fxml","title":"FXML","text":"","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#properties-and-bindings","title":"Properties and Bindings","text":"<pre><code>IntegerProperty prop = new SimpleIntegerProperty(3);\nprop.addListener(new ChangeListener&lt;Number&gt;() {\npublic void changed(ObservableValue&lt;? extends Integer&gt; o, Number oldVal, Number newVal) {}\n});\nprop.getValue(); // returns the value\nprop.setValue(4); // sets the value\nprop.bind(otherProp); // binds the prop to the otherProp\nprop.bindBidirectional(otherProp); // binds the two properties bidirectionally\n</code></pre>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#initialize","title":"Initialize","text":"<p>The method <code>initialize()</code> can be annotated with <code>@FXML</code> and will be called when the controller is initialized.</p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#testing","title":"Testing","text":"<p>Testing is the process of executing a programm with the intent of finding errors.</p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#principles-of-testing","title":"Principles of Testing","text":"<ol> <li>Specification of Input and Output    For each test case the input and the expected output should be specified.</li> <li>Separation of Creation and Testing    The developer of the code shouldn't write the test for their code.</li> <li>Completeness of Tests    Code should always be tested for valid inputs and invalid tests. The natural tendency is to test only the valid inputs.</li> <li>Testing is an investement    Test cases are reused</li> <li>Error Cluster    If an error is found in a section of code,  the probability of more errors increases. Error-prone Sections should be well tested.</li> </ol>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#mock-testing","title":"Mock Testing","text":"<p>Mock testing is used when a class with dependencies should be tested. The dependencies can be mocked that it implements the minimal of behaviour to function. This allows to only test the class under testing and not its dependencies.</p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#different-mocking-types","title":"Different Mocking Types","text":"<p>There are different type of mock classes.</p> <p></p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#dummy","title":"Dummy","text":"<p>Dummies are objects which are never used. They fill parameter lists of methods, if those methods would throw NullPointerExceptions otherwise.</p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#stubs","title":"Stubs","text":"<p>A stub is the minimal implementation of an interface. Void method usually don't do anything and methods with a return value will usually return a hard coded value.</p> <p>Here is an example.</p> <pre><code>public class EmailStub implements EmailServer {\npublic void sendMail(String mailTextt) {\n// do nothing\n}\npublic String receiveMail() {\nreturn \"Mail received\"; // a hard coded value\n}\n}\n</code></pre> <p>An <code>EmailDummy</code> would return <code>null</code> in <code>receiveMail()</code> because it is just a dummy.</p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#spies","title":"Spies","text":"<p>Spies are similar to stubs, but record which members were invoked. This information can be checked in unit tests.</p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#fakes","title":"Fakes","text":"<p>A fake will implement a class similar to the production class but with shortcuts (e.g. an in-memory database)</p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#mock","title":"Mock","text":"<p>A test double which implements the functions in away which we expect for the test. Depending on how they are implemented, they can function as a dummy, stub, spy or a fake.</p> <p>Mock testing is usually split in multiple phases: </p> <ol> <li>Create: The mock object is created</li> <li>Specify: The expected behaviour is specified</li> <li>Use: The mock object is used in a normal unit test</li> <li>Verify behaviour: The mock object is verified</li> </ol> <pre><code>public class OrderInteractionTester extends MockObjectTestCase {\nprivate static String TALISKER = \"Talisker\";\npublic void testFillingRemovesInventoryIfInStock() {\n// configuration\nOrder order = new Order(TALISKER, 50);\nMock warehouseMock = new Mock(Warehouse.class);\n// expectations\nwarehouseMock\n.expects(once())\n.method(\"hasInventory\")\n.with(eq(TALISKER),eq(50))\n.will(returnValue(true));\nwarehouseMock\n.expects(once())\n.method(\"remove\")\n.with(eq(TALISKER), eq(50))\n.after(\"hasInventory\");\n//exercise\norder.fill((Warehouse)warehouseMock.proxy());\n//verify\nwarehouseMock.verify();\n//verify expected behavior\nassertTrue(order.isFilled()); //verify state\n}\n}\n</code></pre>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#blacking-box-vs-white-box-testing","title":"Blacking-Box vs White-Box Testing","text":"<p>In black-box testing (or state testing), only the public interface is known. No assumptions is done about the internal implementaiton. Usually stubbing can be used.</p> <p>In white-box testing (or behaviour testing) the inner working of the class is known and tested. Here, usually mocking can be used.</p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#mockito","title":"Mockito","text":"","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#create-a-mock","title":"Create a Mock","text":"<p>Either the method <code>mock(Class&lt;?&gt; clazz)</code> is used or the annotation <code>@Mock</code> for which <code>MockitoAnnotations.openMocks()</code> needs to be called in the setup method.</p> <pre><code>void testHalf(@Mock Half mockedHalf2) {\nHalf mockedHalf = mock(Half.class);\n}\n</code></pre>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#mock-behaviour","title":"Mock Behaviour","text":"<p>To mock the return value of methods, the <code>when(&lt;method&gt;).thenReturn(&lt;value1&gt;).thenReturn(&lt;value2&gt;)</code> pattern can be used. When the returned value should have a bit more logic than a constant value, the <code>thenAnswer(Answer&lt;T&gt;)</code> method can be used (see example below).</p> <p>To mock an exception throwing method, the <code>doThrow(&lt;exception&gt;).when(&lt;mockObj&gt;).&lt;method&gt;(&lt;args&gt;)</code> pattern needs to be used. The method must support throwing the exception in case of an checked-exception.</p> <p>There are multiple matchers available, which can match an argument of a mocked method:</p> <ul> <li>Any-matchers: <code>anyInt()</code>, <code>anyString()</code>, <code>any(Class&lt;?&gt; clazz)</code>, ...</li> <li>String-matchers: <code>startsWith(String)</code>,  <code>endsWith(String)</code>, <code>contains(String)</code>, ...</li> <li>Object-matchers: <code>isNull()</code>, <code>isNotNull()</code>, ...</li> <li>Compare-matchvers: <code>eq(T obj)</code>, ...</li> <li>Custom-matchers: <code>argThat()...</code>, <code>intThat(...)</code>, ...</li> </ul> <pre><code>Person mock = mock(Person.class);\n// mock return values\nwhen(mock.getName()).thenReturn(\"Hans\").thenReturn(\"Max\");\ndoReturn(10).doReturn(20).when(mock).getAge();\nwhen(mock.getMessage(anyString())).thenAnswer((InvocationOnMock invocation) -&gt; \"hello world\");\n// mock exception throwing\ndoThrow(new IllegalArgumentException()).when(mock).setAge(-1);\n</code></pre> <p>When an method isn't mocked, then a value is still returned based on the return value:</p> <ul> <li>The return value is an primitive: The \"zero\"-primitive is returned</li> <li>The return value is a primitive wrapper class: Then the \"zero\"-primitive of the wrapper class is returned</li> <li>The return value is a collection: The return value is an empty collection</li> <li>For the toString() method an description of the mock is returned</li> <li>For <code>Comparable#compareTo(T other)</code> returns zero if the references are equal, else a non-zero value</li> <li>Else: <code>null</code> is returned.</li> </ul>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#verify-behaviour","title":"Verify Behaviour","text":"<p>Mockito can verify that a method was invoked. For this, the pattern <code>verify(&lt;mock&gt;).&lt;method&gt;(&lt;args&gt;)</code> can be used. With an additional argument of verify, further conditions can be specified. With <code>verify(&lt;mock&gt;, never()).&lt;method&gt;(&lt;args&gt;)</code> can be checked that the method was never invoked. Other condition includes <code>never()</code>, <code>times(int)</code>, <code>atLeastOnce()</code>, <code>atLeast(int)</code>, <code>atMost(int)</code>, <code>timeout(int milliseconds)</code> (that the method is invoked in the given timeout). These conditions can be combined like <code>timeout(10).times(2)</code></p> <p>Mockito can also verify the order in which methods were called. For this a <code>InOrder</code> object can be created with <code>inOrder(&lt;mockObj&gt;)</code>. On the <code>InOrder</code> object, the <code>verify(...)</code> method can be used.</p> <pre><code>verify(mockedHalf).contractAtrium();\nverify(mockedHalf, times(2)).isAtrioventricularValveOpen();\nverify(mockedList, never()).add(\"ZHAW\");\nInOrder inOrder = inOrder(singleMock);\n// Verify the order\ninOrder.verify(singleMock).add(\"second\"); inOrder.verify(singleMock).add(\"first\");\n</code></pre>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#spies_1","title":"Spies","text":"<p>A spy object is created based on a \"real\" object. All methods are delegated to this object, but the behaviour of methods can be selectively changed (similar with mocks) and it can verify than methods were called. It can be created with <code>spy(Object obj)</code> and can be used like a mock. Similar to <code>@Mock</code> the <code>@Spy</code> annotation can be used instead of <code>spy(...)</code> (<code>MockitoAnnotations.openMocks()</code> needs to be called in the setup method).</p> <pre><code>List list = new LinkedList();\n// create a spy on the real object instance\nList spy = spy(list);\n// stub the size() method\nwhen(spy.size()).thenReturn(100);\n// add() is not stubbed. So it will use the real method\nspy.add(\"one\"); spy.add(\"two\");\nassertEquals(\"one\", spy.get(0));\nassertEquals(100, spy.size());\n</code></pre>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#io","title":"IO","text":"","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#serializing","title":"Serializing","text":"<p>In order for an object to be serializable in needs to implement the marker interface <code>Serializable</code>.</p> <p></p> <p>Fields can be marked with transient (<code>private transient Date someDate;</code>) if they shouldn't be serialized. This can be usefull for serializing classes which contain unserializable classes (like dates, file descriptor, network sockets or db connections).</p> <pre><code>Employee harry = new Employee(\"Dirty Harry\", 50000, LocalDate.of(1967, 3, 11));\nManager boss = new Manager(\"Walter Smith\", 80000, LocalDate.of(1950, 12, 4)); // Manager is extending Employee\nboss.setAssistant(harry); // Save (serialize) two objects to the file empolyee.dat\ntry (ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(\"employee.dat\"))) {\n// objects are written in the given order to the file\nout.writeObject(harry); // write object Dirty Harry\nout.writeObject(boss); // write object Walter Smith\nout.writeInt(12); // write value of primitive type int\n}\n// Load (deserialize) two objects from the file employee.dat\ntry (ObjectInputStream in = new ObjectInputStream(new FileInputStream(\"employee.dat\"))) {\n// number and order of reading the objects must match, also the type must be compatible (match or super class)\nEmployee e1 = (Employee) in.readObject(); // object for Dirty Harry\nEmployee e2 = (Employee) in.readObject(); // object for Walter Smith\n// e2.getClass().getName() would return type Manager\nint count = in.readInt(); // read primitive type int\n}\n</code></pre>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#io-streams","title":"IO Streams","text":"<p>A byte stream can be converted to a char stream with <code>InputStreamReader</code> and <code>OutputStreamWriter</code> respectively.</p> <p></p> <p><code>InputStream</code>  and <code>Readers</code> usually allow to skip a number of bytes/chars with <code>skip(long n)</code>. However, <code>OutputStream</code>s  and <code>Writer</code>s don't allow removing or inserting into a file, only appending (<code>FileOutputStream(File file, boolean append)</code>) or replacing is supported.</p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#randomaccessfile","title":"RandomAccessFile","text":"<p>Allows reading from anywhere in the file, not just skipping bytes like an <code>InputStream</code>. This can be done with the <code>seek(long pos)</code> or the <code>skipBytes(long n)</code> methods.</p> <pre><code>// create file and write some data into it\nFile f = new File(\"randomaccessfile.txt\");\ntry (BufferedWriter bw = new BufferedWriter(new FileWriter(f,true))) {\nfor(int i=2; i&lt;=10; i++) { if( i%2 == 0) { bw.write(Integer.toString(i)); bw.newLine(); } }\n}\ntry (RandomAccessFile randomFile = new RandomAccessFile(f,\"rw\")) { // read-write mode\nfor(int i=1; i&lt;=5; i++){\nrandomFile.seek(randomFile.length()); // set file pointer to end of file (EOF)\nrandomFile.writeBytes(Integer.toString(i)); // append \"1\",\"2\",\"3\",\"4\",\"5\" at EOF\n}\n}\ntry (RandomAccessFile randomFile = new RandomAccessFile(f, \"r\")) { // read-only mode\nint i = (int) randomFile.length(); // get length of file in bytes\nSystem.out.println(\"Length: \" + i);\nrandomFile.seek(i-3); // set file pointer to EOF-3 bytes\nfor(int ct = 0; ct &lt; 3; ct++){\nbyte b = randomFile.readByte(); // read byte(s)\nSystem.out.println((char)b);\n}\n}\n</code></pre>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#charset","title":"Charset","text":"<p>An instance of <code>Charset</code> can be either obtained by <code>Charset.forName(&lt;name&gt;)</code>, <code>Charset.getDefaultCharset()</code> or <code>Charset.getAvailableCharsets()</code>. Alternatively <code>StandardCharsets.UTF_8</code> can be used.</p>","tags":["summary","PROG2"]},{"location":"22FS/PROG2/summary.html#logger","title":"Logger","text":"<p>Each <code>Logger</code> instance has a list of <code>Handlers</code>. A <code>Handler</code> can be used by multiple <code>Loggers</code> and handles the storing of the logging messages (like writing it to a file, or displaying in the console). Both the <code>Logger</code> and the <code>Handler</code> have a Level. And each will only forward messages which have a level higher than their configured level. </p> <p>The possible levels are: <code>SEVERE(1000)</code>, <code>WARNING(900)</code>, <code>INFO(800)</code>, <code>CONFIG(700)</code>, <code>FINE(500)</code>, <code>FINER(400)</code>, <code>FINEST(300)</code>.</p> <p></p> <p>The following properties file is an example logging configuration.</p> <pre><code>## configure handlers\njava.util.logging.ConsoleHandler.level = ALL\n## File handler configuration\n## see https://docs.oracle.com/en/java/javase/11/docs/api/java.logging/java/util/logging/FileHandler.html\njava.util.logging.FileHandler.level = ALL\n# %g = generation number, %u = unique number to resolve conflicts\njava.util.logging.FileHandler.pattern = log-%g-%u.log\n# use SimpleFormatter instead of default XMLFormatter\njava.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter\njava.util.logging.FileHandler.encoding = UTF-8\n# max log file size in byte before switching to next generation (=1kB); 0 = unlimited\njava.util.logging.FileHandler.limit = 1024\n# max number of generations (%g) before overwriting (5 -&gt; 0..4)\njava.util.logging.FileHandler.count = 5\njava.util.logging.FileHandler.append = true\n## configure Formatter (see SimpleFormatter documentation)\njava.util.logging.SimpleFormatter.format = [%1$tc] %4$s: %5$s {%2$s}%6$s%n\n## configure default log level (for all loggers, if not overwritten below)\n.level = INFO\n## configure root logger \"\"\nhandlers = java.util.logging.ConsoleHandler\nlevel = INFO\n## Application specific logger configuration\n# loggers starting with \"ch.zhaw.prog2.io\" -&gt; write to console and file and do not forward to parent handlers\nch.zhaw.prog2.io.level = FINE\nch.zhaw.prog2.io.handlers = java.util.logging.FileHandler, java.util.logging.ConsoleHandler\nch.zhaw.prog2.io.useParentHandlers = false\n# logger for class ch.zhaw.prog2.io.LogConfiguration\nch.zhaw.prog2.io.LogConfiguration.level = FINEST\n</code></pre> <p>A log configuration can be loaded anytime and all already existing loggers will be updated.</p> <pre><code>InputStream logConfig = this.getClass().getClassLoader().getResourceAsStream(\"log.properties\");\nLogManager.getLogManager().readConfiguration(logConfig);\n</code></pre>","tags":["summary","PROG2"]},{"location":"22FS/SNP/01_C.html","title":"C-Sprache","text":""},{"location":"22FS/SNP/01_C.html#typen","title":"Typen","text":"Typ Bytes char 1 Byte int 4 Bytes float 4 Bytes double 8 Bytes Typ Std-Typ Bytes Wertebereich char int8_t 1-Byte/8-Bits -128 bis 127 unsigned char uint8_t 1-Byte/8-Bits 0 bis 255 short int16_t 2-Bytes/16-Bits -32'768 bis 32'767 unsigned short uint16_t 2-Bytes/16-Bits 0 bis 65'535 int int32_t 4-Bytes/32-Bits \\(-2^{31}\\) bis \\(2^{31}-1\\) unsigned int uint32_t 4-Bytes/32-Bits \\(0\\) bis \\(2^{32}-1\\) long int64_t 8-Bytes/64-Bits \\(-2^{63}\\) bis \\(2^{63}-1\\) unsigned long uint64_t 8-Bytes/64-Bits \\(0\\) bis \\(2^{64}-1\\) long double 10-Bytes/80-Bits \\(-1.2\\cdot 10^{4932}\\) bis \\(1.2\\cdot 10^{4932}\\) <ul> <li>Eine Dezimalzahl im Code wird als <code>signed int</code> interpretiert</li> <li>eine oktal und hexadezimal Zahl werden als <code>unsigned int</code> interpretiert</li> <li>Wenn eine Zahl zu gross f\u00fcr einen <code>int</code> ist, wird sie als <code>long</code> abgespeichert</li> <li>mit <code>L</code>  oder <code>l</code> nach einer Zahl als <code>long</code> interpretiert</li> <li>mit <code>LL</code> oder <code>ll</code> wird eine Zahl als <code>long long</code> interpretiert</li> <li>wird <code>U</code> oder <code>u</code> wird eine Zahl als <code>unsigned int</code> interpretiert</li> </ul>"},{"location":"22FS/SNP/01_C.html#preprocessor","title":"Preprocessor","text":""},{"location":"22FS/SNP/01_C.html#define","title":"<code>#define</code>","text":"<p>Mit <code>#define</code> wird eine Variable definiert, welche w\u00e4hrend der Kompilierzeit ersetzt werden.</p> <p>Der Syntax ist der folgende: <code>#define NAME &lt;value&gt;</code></p> <p>Ein Macro darf zus\u00e4tzlich auch Parameter enthalten. Diese Parameter haben keinen Typ, wie z.B. <code>#define circleArea(R) (3.1415*(R)*(R))</code></p>"},{"location":"22FS/SNP/01_C.html#main","title":"Main","text":"<p>Die Main-Methode in C hat eine der folgenden formen:</p> <pre><code>void main(void);\nint main(void);\nvoid main(int argc, char** argv);\nint main(int argc, char** argv)\n</code></pre>"},{"location":"22FS/SNP/01_C.html#definitionen","title":"Definitionen","text":""},{"location":"22FS/SNP/01_C.html#static-variable","title":"static-Variable","text":"<p>Eine static variable ist nur Sichtbar im definierten C File. Zus\u00e4tzlich dazu wird die Variable im Daten-Header in der Memory gespeichert. </p> <p>Wenn eine statische Variable in einer Methode definiert wird, behaltet sie \u00fcber mehrere Aufrufe ihren Wert.</p> <pre><code>int max(int a) {\nstatic int maxValue = 0;\nif(a &gt; maxValue) {\nmaxValue = a\n}\nreturn maxValue;\n}\n</code></pre> <p>In diesem Beispiel behaltet <code>maxValue</code> den Wert, auch wenn max mehrmals aufgerufen wird. Der Initialwert wird nur einmal gesetzt.</p>"},{"location":"22FS/SNP/01_C.html#register-variabeln","title":"Register-Variabeln","text":"<p>Der Compiler versucht die Variable in einem Register zu speichert. Dies wird heute nicht mehr verwendet, da der Compiler dies selbst sehr gut optimieren kann.</p>"},{"location":"22FS/SNP/01_C.html#extern-variabeln","title":"Extern-Variabeln","text":"<p>Der Compiler geht davon aus, dass die Variable in einem anderen File definiert ist.</p>"},{"location":"22FS/SNP/01_C.html#auto-variabeln","title":"Auto-Variabeln","text":"<p>Die Variable wird auf dem Stack gespeichert. Dies wird heute nicht mehr verwendet, da der Compiler dies selbst optimieren kann.</p>"},{"location":"22FS/SNP/01_C.html#konstante","title":"Konstante","text":"<pre><code>// ein konstanter Pointer zu einer int-Variable\nint * const i1; // ein Pointer zu einer konstanter int-Variable\nconst int * i2;\n// ein konstanter Pointer zu einer konstanter int-Variable\nconst int * const i3;\n// Ausnahme bei typedef Pointers\ntypdef int * int_pntr;\n// ein konstanter Pointer zu einer variablen int-Variable\nconst int_pntr i4;\n// das selbe, wie oben\nint_pntr const i5;\n</code></pre>"},{"location":"22FS/SNP/01_C.html#typ-alias","title":"Typ-Alias","text":""},{"location":"22FS/SNP/01_C.html#enum","title":"Enum","text":"<p>Mit <code>enum week {Monday, Tuesday, Wendsday};</code> kann ein neues Enum erstellt werden. Wenn das Enum ohne Typedef erstellt wurde, kann es mit <code>enum week</code> verwendet werden (<code>enum week weekday_name;</code>). Wenn man daf\u00fcr zu schreibfaul ist, kann mit <code>typeder enum week {Monday, Tuesday, Wendsday} week_t;</code> ein Typalias <code>week_t</code> erstellt werden, welcher anstatt <code>enum week</code> verwendet werden kann.</p>"},{"location":"22FS/SNP/01_C.html#funktionen-als-variable","title":"Funktionen als Variable","text":"<p>Die Funktion <code>void logger(char * msg)</code> kann in der Variable mit der Definition <code>void (*out)(char *)</code>. Sobald zwei Klammern in der Definition einer Variablen stehen, geht es meistens um eine Funktion.</p> <p>Die Zuweissung kann mit <code>out = &amp;logger</code> oder auch <code>out = logger</code> zu gewiessen weden. Dabei machen die beiden Zuweissungen dasselbe. Der Compiler ist beim zweiten schlau genug, die Adresse der Funktion zu speichern.</p> <p><code>(*out)(\"Hello\")</code> oder <code>out(\"Hello\")</code> machen beide dasselbe: Sie rufen die Funktion in <code>out</code> aus. Der Compiler automatisch dereferenziert das zweite Beispiel.`</p> <p>Mit <code>typedef void (*logger_fp_t)(char*)</code> kann ein Typalias f\u00fcr eine Funktion erstellt werden. Danach kann <code>logger_fp_t</code> als Typ verwendet werden (<code>logger_fp_t  logger_fun = logger</code>).</p>"},{"location":"22FS/SNP/01_C.html#arrays","title":"Arrays","text":"<p>Ein Array ist ein Datenblock im Speicher, welcher kontinuierlich ist. Der Variabelnnamen eines Arrays (ohne Klammern), ist ein Pointer und kann zu einem Pointer zu gewissen werden: <code>int arr[4]; int* arrPointer = arr;</code></p> <p>Ein Array kann folgendermassen erstellt werden;</p> <ul> <li><code>int data[100]</code> - das Array wird alloziert, aber nicht initialisiert</li> <li><code>int data[100] = {1}</code> - das Array wird alloziert, das erste Element wird <code>1</code> und der Rest auf <code>0</code> (nur <code>int data[] = {}</code> ist ein Compilerfehler)</li> <li><code>int data[] = {1, 2}</code> - Ein neues Array mit der L\u00e4nge 2 und den Elementen <code>1</code> und <code>2</code></li> </ul> <p>Mit <code>data[7]</code> kann auf den 7. Wert zu gegriffen werden. Es gibt C typischerweisse kein Check, ob das Array gen\u00fcgend gross ist.</p> <p>Ein Konstantes Array (<code>const int data[100]</code>) kann nicht modifiziert wird. Dies wird vom Compiler \u00fcberpr\u00fcft.</p> <p>Wenn ein Array als Parameter \u00fcbergeben wird, wird der Pointer zum Startwert \u00fcbergeben. Auf der Funktionsseite w\u00fcrde man es folgendermassen schreiben:</p> <pre><code>void arrayParamter(int[] data) {\n// do stuff with data\n}\n</code></pre> <p>In der Funktion weiss man nicht, wie lange das Array ist (<code>sizeof(data)</code> gibt die Gr\u00f6sse des Pointers des Arrays, wenn es als Parameter \u00fcbergeben wird).</p>"},{"location":"22FS/SNP/01_C.html#lange-tricks-bei-arrays","title":"L\u00e4nge Tricks bei Arrays","text":"<ul> <li> <p>Wenn das Array im selben Block alloziert wurde, kann <code>sizeof(data)/sizeof(data[0])</code> die Gr\u00f6sse errechnet werden</p> </li> <li> <p>Die L\u00e4nge wird als Parameter ebenfalls mitgegeben    <pre><code>void arrayParameter(int[] data, size_t size);\nint a[100];\nsize_t n = sizeof(a)/sizeof(a[0]);\narrayParameter(a, n);\n</code></pre></p> </li> <li> <p>Es gibt ein Sentry Wert (wie <code>\\0</code> bei Strings/char Arrays)</p> </li> </ul>"},{"location":"22FS/SNP/01_C.html#arrays-vergleichen","title":"Arrays vergleichen","text":"<p>Mit <code>a == b</code> , wenn <code>a</code> und <code>b</code> ein Arrays ist, vergleicht die Start-Adressen des Arrays, nicht die Elemente selbst. F\u00fcr \"normale\" Arrays gibt es keine standardt Methode, welche der Inhalt von Arrays vergleicht. F\u00fcr String gibt es <code>int strcomp(char *s1, char *s2)</code>, welche <code>0</code> zur\u00fcck gibt, wenn die Strings gleich sind, <code>-1</code>, wenn s1 kleiner ist als s2 und <code>1</code>, wenn s1 gr\u00f6sser als s2 ist.</p>"},{"location":"22FS/SNP/01_C.html#mehrdimensionale-arrays","title":"Mehrdimensionale Arrays","text":"<pre><code>int data[2][3] = {{1,2,3}, {4,5,6}};\ndata[1][2] // gibt 5 zur\u00fcck\n</code></pre> <p>In C k\u00f6nnen Mehrdimensionale Arrays erstellt. Diese k\u00f6nnen \"normal\" darauf zugegrifen werden.</p>"},{"location":"22FS/SNP/01_C.html#strings","title":"Strings","text":"<p>Strings in C sind Char-Arrays, welche am Ende ein <code>\\0</code> haben. Dabei k\u00f6nnen ASCI-Zeichen (nicht UTF-8) in einem String stehen.</p> <pre><code>char hello1[] = \"hello, world\"; // Array mit 13 Zeichen\nchar hello2[13] = \"hello, world\"; // Array mit 13 Zeichen\nchar hello3[14] = \"hello, world\"; // Array mit 14 Zeichen. Am ende hat es zwei \\0\nchar hello4[12] = \"hello, world\"; // Array mit 12 Zeichen, aber das \\0 fehlt am ende\nchar hello5[13]; // Array mit 13 Zeichen. Wird nicht initialisiert\n</code></pre> <p>Wenn das <code>\\0</code> am ende eines Strings fehlt, werden die String-Funktionen einfach weiter lesen, bis ein <code>\\0</code> im Speicher gefunden wird. Meistens f\u00fchrt dies zu einem Crash.</p> <ul> <li>mit <code>strncpy()</code> und <code>strncat()</code> k\u00f6nnen mit String</li> </ul> <p>String-Literale wird in Read-Only Teil des Programmes gespeichert und kann daher nicht modifiziert werden. Ein String-Literal kann dazu ben\u00fctzt werden, ein char-Array zu erstellen, welches ge\u00e4ndert werden kann.</p> <pre><code>char* str_literal = \"test\";\nstr_literal[0] = 'H'; // undefined behaviour. str_literal points to read-only memory\nchar[] str_arr = \"test\"; // copies the string_literal to the array\nstr_arr[0] = 'H'; // works\n</code></pre> <p></p>"},{"location":"22FS/SNP/01_C.html#gross-kleinbuchstaben","title":"Gross-/Kleinbuchstaben","text":"<pre><code>'a' &amp; '_' == 'A'; // 0b0110 0001 &amp; 0b0101 1111 = 0b0100 0001\n'A' &amp; '_' == 'A';\n'A' | ' ' == 'a'; // 0b0100 0001 | 0b0010 0000 = 0b0110 0001\n'a' | ' ' == 'a';\n</code></pre>"},{"location":"22FS/SNP/01_C.html#pointers","title":"Pointers","text":"<pre><code>int data[4];\nint* pointer = data; // da data[] bereits ein Pointer ist, kann er direkt zugewissen werden\npointer++; // geht zur n\u00e4chsten Addresse 4 Bytes weiter, da ein int 4 bytes lang ist\nint value = *pointer; // mit *&lt;pointerVar&gt; wird der Pointer dereferenziert\nint intVar = 1;\npointer = &amp;intVar; // setzt die Adresse von intVar zu dem Pointer\n*pointer = intVar; // setzt die Adresse von intVar zu dem Pointer\ndouble **pointerZuPointer; // ein Meehrdimensionalen Pointer\ndouble *pointer, notPointer; // erstellt ein Double-Pointer und ein Double-Variable\nint i2 = dataPointer-&gt;nr; // dereferenziert den Pointer zu einem Struct und gibt nr zur\u00fcck\n</code></pre> <p>Ein Pointer kann mit <code>int* data</code> erstellt werden.</p> <p>Ein Pointer ist eine Adresse, mit welcher gerechnet werden kann. Um den Wert eines Pointers zu bekommen, muss er dereferenziert werden. Dies kann mit <code>*data</code>  bewerkstelligt werden.</p> <p>Wenn man die Adresse einer Variable bekommen m\u00f6chte, kann man diese mit <code>&amp;variable</code> bekommen und z.B. einem Pointer zu weisen. </p> <p>Ein Pointer kann man eine Adresse zu weissen (<code>pointer = &amp;variable</code>), ebenfalls kann ein dereferenzierten Pointer zu gewissen werden (<code>*pointer = variable</code>). Beides funktioniert und bewerkstelligt dasselbe.</p> <p><code>double *d1[20]</code> ist ein Array von 20 Double-Pointers, hingegen <code>double (*d2)[20]</code> ist ein Pointer auf ein Array von Double-Elementen.</p>"},{"location":"22FS/SNP/01_C.html#presedenz-von","title":"Presedenz von *","text":"<pre><code>double *d1[20]; // ein Array von 20 Pointern auf Doubles\ndouble (*d2)[20]; // ein Pointer auf ein Array von 20 Double Elemente\nstruct data {int nr;}\nstruct data *dataPointer, dataObj;\n*dataPointer = dataObj;\nint i1 = (*dataPointer).nr; // *dataPointer.nr w\u00fcrde dataPointer.nr dereferenzieren\nint i2 = dataPointer-&gt;nr; // macht dasselbe, wie oben\n</code></pre>"},{"location":"22FS/SNP/01_C.html#void-pointers","title":"Void-Pointers","text":"<p>Pointers haben immer einen Daten-Typ. Die einzige Ausnahme ist der void-pointer</p>"},{"location":"22FS/SNP/01_C.html#null-pointer","title":"NULL-Pointer","text":"<p>Der Pointer <code>NULL</code> (von <code>stdio.h</code>) ist ein Alias f\u00fcr die Adresse f\u00fcr <code>0</code> und heisst, dass der Pointer auf nichts zeigt. Er soll zur Dokumentation </p>"},{"location":"22FS/SNP/01_C.html#speicher-allozieren","title":"Speicher allozieren","text":"<p>Wenn ein neues Objekt erzeugt wird (z.B. ein <code>int</code>, aber auch ein <code>struct</code> oder ein <code>array</code>), dann wird dies auf dem Stack gespeichert. Mit Methoden, wie <code>malloc(size_t)</code> k\u00f6nnen aber auch Daten auf dem Heap gespeichert werden.</p> <p></p> Methode Erkl\u00e4rung <code>void* malloc(size_t size)</code> Alloziert speicher auf dem Heap <code>void* calloc(size_t nsize, size_t size)</code> <code>void* realloc(void *ptr, size_t size)</code> Setzt die Gr\u00f6sse des gegebenen Pointers auf die gegebene Gr\u00f6sse <code>void free(void *ptr)</code> Gibt allozierten Speicher an der gegebenen Adresse wieder frei"},{"location":"22FS/SNP/01_C.html#methoden","title":"Methoden","text":""},{"location":"22FS/SNP/01_C.html#funktions-parameter","title":"Funktions-Parameter","text":"<p>Standardm\u00e4ssig werden alle Parameter by value \u00fcbergeben. Falls dies nicht gewollt ist, m\u00fcssen Pointers verwendet werden.</p>"},{"location":"22FS/SNP/01_C.html#const-parameter","title":"const-Parameter","text":"<p><code>void write_int(const int a)</code> bewirkt, dass <code>a</code> nicht in der Methode ver\u00e4ndert werden kann.</p> <p>Es ist nat\u00fcrlich erlaubt einen konstanten Pointer zu definieren (<code>void write_char(const char *s)</code>). Dabei kann der Pointer selbst (<code>a = NULL</code>), wie auch der Wert des Pointers (<code>*a=5</code>) nicht mehr ge\u00e4ndert werden. Die konstante Variable darf nicht im linken Teil einer Zuweisung stehen.</p>"},{"location":"22FS/SNP/01_C.html#array-parameter","title":"Array Parameter","text":"<p><code>void write_array(int* a)</code> ist dasselbe, wie <code>void write_array(int a[])</code>. In beiden F\u00e4llen weiss die aufgerufene Methode nicht,  wie gross das Array <code>a</code> ist. </p> <p>Auch bei Arrays k\u00f6nnen mit const ausgestatet werden (<code>void array_method(const int a[])</code>)</p> <p>Bei Mehrdimensionalen Arrays m\u00fcssen alle Dimensionen, ausser die erste, angegeben werden: <code>void print_matrx(double matrix[][3])</code> oder <code>print_matrix(double (*matrix)[3])</code>.</p>"},{"location":"22FS/SNP/01_C.html#variable-anzahl-parameter","title":"Variable Anzahl Parameter","text":"<pre><code>#include &lt;stdarg.h&gt;\nint average(unsigned int anzahl, ...) {\nva_list args;\nint summe = 0;\nva_start(args, anzahl);\n// beginnt bei 1, da das 0. Argument `anzahl` ist\nfor(int i = 1; i &lt;= anzahl; i++) {\nsumme += va_arg(args, int);\n}\nva_end(args);\nreturn summe / anzahl;\n}\n</code></pre> <p>Damit eine Funktion eine Variable Anzahl von Parameter ben\u00fctzten kann, muss <code>stdarg.h</code> inkludiert sein. Auf die Argumente kann mit der Struktur <code>va_list</code> zugegriffen werden. Diese Struktur muss mit <code>va_start(va_list args, int numberOfArgs)</code> initialisiert werden und mit <code>va_end(va_list args)</code> gel\u00f6scht werden. Der eigentliche Wert kann mit <code>va_arg(va_list args, type)</code> zugegriffen werden.</p>"},{"location":"22FS/SNP/01_C.html#ruckgabe","title":"R\u00fcckgabe","text":"<p>Wenn ein Pointer zur\u00fcck gegeben wird, muss die Variable auf dem Heap gespeichert sein. </p> <p>Folgendes Beispiel w\u00fcrde nicht funktionieren</p> <pre><code>int* create_array() {\nint arr[10];\nreturn arr;\n}\n</code></pre>"},{"location":"22FS/SNP/01_C.html#fehler","title":"Fehler","text":"<ul> <li>Stack-Overflow: Auf dem Stack hat es nicht mehr gen\u00fcgend platz</li> <li>Buffer-Overflow: Wenn ein Buffer (z.B. ein Array) \u00fcber die Grenze \u00fcberschrieben werden</li> </ul>"},{"location":"22FS/SNP/01_C.html#sichererers-programmieren","title":"Sichererers Programmieren","text":"<ul> <li><code>fgets()</code> anstatt <code>gets()</code></li> <li><code>strncpy()</code> und <code>strncat()</code> anstatt <code>strcpy()</code> und <code>strcat()</code></li> <li>Bei <code>malloc()</code> immer \u00fcberpr\u00fcfen, ob der Speicher wirklich alloziert wurde</li> </ul>"},{"location":"22FS/SNP/01_C.html#header-files","title":"Header Files","text":"<p>In einem Header File stehen Funktions-Deklarationen (ohne Code), Structs, Enums, <code>#define</code> und weitere Definitionen. Diese k\u00f6nnen in einem <code>*.c</code> File includiert werden und der Compiler weiss, dass es diese Funktionen und Daten-Typen gibt.</p> <p>Ein Headerfile sollte noch folgendes Boiler-Template haben:</p> <pre><code>#ifndef DEF_H\n#define DEF_H\nint add(int, int);\nint sub(int, int);\n#endif\n</code></pre> <p>Dies verhindert, dass das Headerfile zwei mal etwas definiert.</p>"},{"location":"22FS/SNP/01_C.html#binar-operatoren","title":"Bin\u00e4r Operatoren","text":"Op Erkl\u00e4rung Beispiel &amp; und <code>0101 &amp; 0100 = 0100</code> | oder <code>0101 &amp; 0010 = 0111</code> ^ xor <code>0101 ^ 0100 = 0001</code> ~ invert <code>~0101 = 1010</code> &gt;&gt; right shift <code>0100 &gt;&gt; 2 = 0001</code> &lt;&lt; left shift <code>0001 &lt;&lt; 2 = 0100</code>"},{"location":"22FS/SNP/01_C.html#tipps","title":"Tipps","text":""},{"location":"22FS/SNP/01_C.html#variablen-tauschen","title":"Variablen tauschen","text":"<p>Um zwei Variablen zu tauschen, kann drei mal geXORed werden:</p> <pre><code>int a = 2; //0010\nint b = 4; //0100\na = a ^ b; //0110\nb = a ^ b; //0010\na = a ^ b; //0100\n</code></pre>"},{"location":"22FS/SNP/02_Preprocessor%20und%20Compiler.html","title":"Preprocessor und Compiler","text":""},{"location":"22FS/SNP/02_Preprocessor%20und%20Compiler.html#preprocessor","title":"Preprocessor","text":"<p>Der Preprocessor ist eine Textmaschine, welche Text ersetzten, einf\u00fcgen und l\u00f6schen kann.</p> <p>Wenn man den Output nach den Preprocesser sehen m\u00f6chte, kann man dies mit: <code>gcc -E &lt;path&gt;</code></p>"},{"location":"22FS/SNP/02_Preprocessor%20und%20Compiler.html#define-und-undef","title":"<code>#define</code> und <code>#undef</code>","text":"<p>Mit <code>#define VARNAME &lt;value&gt;</code> kann eine Konstante definiert werden, welche vom Preprocessor ersetzt wird. </p> <p>Mit <code>#undef VARNAME</code> kann eine Konstante wieder gel\u00f6scht werden</p> <p>Mit <code>gcc -DVARNAME</code> kann eine Konstante definiert werden. Dies kann hilfreich f\u00fcr die <code>#ifdef</code> Anweisungen sein.</p>"},{"location":"22FS/SNP/02_Preprocessor%20und%20Compiler.html#include","title":"<code>#include</code>","text":"<ul> <li><code>#include &lt;header.h&gt;</code> importiert ein Headerfile, welches mit dem Compiler mit kommt, bzw. beim OS installiert sind</li> <li><code>#include \"header.h\"</code> importiert ein Headerfile, welches im selbe Verzeichnis, wie das File, in welchem die Anweisung steht.</li> </ul>"},{"location":"22FS/SNP/02_Preprocessor%20und%20Compiler.html#if-elif-else-endif-ifdef-und-ifndef","title":"<code>#if</code>, <code>#elif</code>, <code>#else</code>, <code>endif</code>, <code>#ifdef</code> und <code>#ifndef</code>","text":"<p>Mit diesen Anweissungen kann gewissen Code beim Kompilieren ignoriert werden.</p> <p>Beim folgenden Beispiel wird der Debugging Output nur ausgegeben, wenn DEBUG definiert ist. Die selbe Anweissung k\u00f6nne man auch mit <code>#ifdef DEBUG</code> schreiben.</p> <pre><code>#if defined DEBUG\nprintf(\"Program Version 1 (Debugging)\\n\");\n#else\nprintf(\"Programm Version 1 (Production)\\n\");\n#endif\n</code></pre> <p>Mit <code>gcc -DVARNAME</code> kann eine Konstante definiert werden.</p>"},{"location":"22FS/SNP/02_Preprocessor%20und%20Compiler.html#compiler","title":"Compiler","text":"<p>Es kann nur den Compiler (und Preprocessor) mit <code>gcc -c &lt;path_to_file&gt;</code> aufgerufen werden. Dies produziert ein <code>*.o</code> File. In diesem gibt es noch Referenzen zu anderen Modulen und Files. </p>"},{"location":"22FS/SNP/02_Preprocessor%20und%20Compiler.html#linker","title":"Linker","text":"<p>Der Linker kombiniert alle <code>*.o</code> Files in eine ausf\u00fchrbare Datei und l\u00f6st die Referenzen im <code>*.o</code> File aufzul\u00f6sen. Wenn gcc mit <code>*.o</code> Files aufgerufen wird, wird der Linker ben\u00fctzt (Befehl <code>gcc *.o</code>).</p>"},{"location":"22FS/SNP/03_Make.html","title":"Make","text":""},{"location":"22FS/SNP/03_Make.html#makefile","title":"Makefile","text":"<p>Grunds\u00e4tzlichen Syntax:</p> <pre><code>.PHONE: &lt;targets, welche keine File sind&gt;\ntarget: dependency1 dependency2\n    cmd\n</code></pre> <p><code>target</code> ist ein Befehl und den Output des Befehles. Dieser kann mit <code>make target</code> aufgerufen wird.</p> <p><code>dependencies</code> ist eine Liste von Abh\u00e4ngikeiten. Diese m\u00fcssen vorhanden sein f\u00fcr das <code>target</code>. </p> <p><code>cmd</code> wird ausgef\u00fchrt, um das <code>target</code> zu erstellen, nach dem die <code>dependencies</code> erstellt und ausgef\u00fchrt wurden.</p>"},{"location":"22FS/SNP/03_Make.html#variablen","title":"Variablen","text":"Name Erkl\u00e4rung <code>$@</code> Dem Target der aktuellen Regel <code>$^</code> Alle Abh\u00e4ngigkeiten <code>$&lt;</code> Die erste Abh\u00e4ngigkeit"},{"location":"22FS/SNP/03_Make.html#beispiel","title":"Beispiel","text":"<pre><code>TARGET_EXEC := producer\nBUILD_DIR := ./build\nSRC_DIR := ./\n\nSRCS := producer_consumer.c list.c\nOBJS := $(SRCS:%.c=$(BUILD_DIR)/%.o) #producer.c will be turned into producer.o\n.DEFAULT_GOAL := $(BUILD_DIR)/$(TARGET_EXEC)\n$(BUILD_DIR)/$(TARGET_EXEC): $(OBJS)\n$(CC) $(OBJS) -o $(BUILD_DIR)/$(TARGET_EXEC)\n$(BUILD_DIR)/%.o: %.c #builds .o files from .c files\nmkdir -p $(dir $@)\n# $&lt; is the first dependency, $@ is the target\n$(CC) $(CFLAGS) -c $&lt; -o $@ .PHONY: clean all\nclean: rm -r $(BUILD_DIR)\nall:\n@make clean\n    @make\n</code></pre>"},{"location":"22FS/SNP/04_Unit%20Tests.html","title":"Unit Tests","text":"<ul> <li><code>CU_ASSERT_EQUAL(actual, expected)</code></li> <li><code>CU_ASSERT_NOT_EQUAL(actual, expected)</code></li> <li><code>CU_ASSERT_STRING_EQUAL(actual, expected)</code></li> <li><code>CU_ASSERT_TRUE(value)</code></li> </ul> <p>Siehe <code>man CUnit</code> f\u00fcr mehr Details.</p>"},{"location":"22FS/SNP/05_OS.html","title":"OS","text":""},{"location":"22FS/SNP/05_OS.html#hardware","title":"Hardware","text":""},{"location":"22FS/SNP/05_OS.html#cpu","title":"CPU","text":"<p>Die CPU f\u00fchrt die Befehle aus und ist Chef des System-Bus. \u00dcber den Bus kann die CPU auf den Speicher oder IO zugreifen.</p> <p>Im <code>PC</code> Register (Program Counter) steht, wo in Memory die n\u00e4chste Maschineninstruktion steht. In <code>IR</code>-Register ( Instruction Register) steht die aktuell ausgef\u00fchrte Instruktion.</p> <p><code>ALU</code> steht f\u00fcr Arithmentic-Logic-Unit, welches mit Integers rechnet. </p>"},{"location":"22FS/SNP/05_OS.html#memory","title":"Memory","text":"<p>Die Memory wird \u00fcber den System-Bus angesprochen.</p>"},{"location":"22FS/SNP/05_OS.html#cpu-entlastung","title":"CPU-Entlastung","text":"<ul> <li>Ablaufbeschleunigung in der CPU</li> <li>Cache:beschleunigter Zugriff auf zwischengespeicherte Daten</li> <li> <p>Pipeline:beschleunigte Ausf\u00fchrung durch gestaffelte Verarbeitung</p> </li> <li> <p>Arbeitsentlastung der CPU</p> </li> <li>IC: Interrupt Controller vermitteln von Interrupts</li> <li>DMA: Direct Memory AccessDaten kopieren ohne CPU Interaktion</li> <li>FPU: Floating-Point UnitRecheneinheit f\u00fcr Gleitkommazahlen</li> <li>DSP: Digital Signal Processorspezielle Daten-Recheneinheit</li> <li>GPU: Graphics Processing Unit spezielle Graphik-Recheneinheit</li> <li>MPU: Memory Protection Unit     \u00dcberwachung von Adresszugriffen</li> </ul>"},{"location":"22FS/SNP/05_OS.html#modi","title":"Modi","text":"<p>Im Supervisor/Kernel-Mode l\u00e4uft der Kernel. So bald ein Program auf Funktionalit\u00e4t des Kernels zu greifen m\u00f6chte, muss ein Sys-Call aufgerufen werden, welcher der Modi wechselt.</p>"},{"location":"22FS/SNP/05_OS.html#schichten","title":"Schichten","text":""},{"location":"22FS/SNP/05_OS.html#linux-startup","title":"Linux Startup","text":""},{"location":"22FS/SNP/05_OS.html#prozess","title":"Prozess","text":"<p>Der Header <code>unistd.h</code> muss inkludiert werden.</p>"},{"location":"22FS/SNP/05_OS.html#prozess-erstellen-fork","title":"Prozess erstellen (<code>fork()</code>)","text":"<p>Mit <code>pid_t fork()</code> kann ein neuen Prozess erstellt werden, welche eine Kopie des aktuellen Prozess ist. Von diesem Punkt ab laufen zwei Threads den gleichen Code. Im aktuellen Prozess gibt <code>fork()</code> die PID des neuen Prozess zur\u00fcck, im neuen Prozess wird <code>0</code> zur\u00fcck gegeben.</p> <p>Falls der Return Value kleiner als <code>0</code> ist, trat ein Fehler auf.</p> <p>Es werden alle File Deskriptoren, Semaphoren, Signal Actions vererbt.</p>"},{"location":"22FS/SNP/05_OS.html#exec-in-neuen-prozessen","title":"<code>exec()</code> in neuen Prozessen","text":"<p><code>execX()</code> Funktionen ersetzt den Code in einem Thread. Dies kann zusammen mit <code>fork()</code> ben\u00fctzt werden, um ein Programm in einem neuen Thread zu starten.</p> <ul> <li><code>int execv(char *pathname, char *argv[])</code>   F\u00fchrt das Programm bei <code>pathname</code> mit den angegebenen Argumenten aus. Der aktuelle Code wird ersetzt</li> <li><code>int system( char *command)</code>   Ist eine Helper-Method, welche mit <code>fork()</code> und <code>execv()</code> ein neues Programm ausf\u00fchrt und wartet bis das Programm fertig ist. Der Return Value des Programmes wird zur\u00fcckgegeben. Der angegebene Befehl wird mit <code>/bin/sh</code> ausgef\u00fchrt.</li> <li><code>FILE *popen(char *command, char *type)</code> und <code>int pclose(FILE *stream )</code>   Funktioniert wie <code>system()</code>. Es wird der Befehl <code>command</code> in <code>/bin/sh</code> ausgef\u00fchrt und ein File-Stream zur\u00fcck gegeben, von welchem mit <code>fgets(char *s, int size, FILE *stream)</code> zugegriffen werden kann.   Der <code>type</code> muss <code>r</code> f\u00fcr zum Lesen und <code>w</code> f\u00fcr zum Schreiben enthalten</li> </ul> <pre><code>#include &lt;stdlib.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/wait.h&gt;\nint main(void) {\npid_t pid = fork();\nif (pid &gt; 0) {\nwait(NULL);\n} else {\n// using system(...)\nint exit_code = system(\"ls -la\");\nprintf(\"child exited with %d\\n\\n\", WEXITSTATUS(exit_code));\n// using popen(...)\nFILE *stream = popen(\"ls -la\", \"r\");\nchar buffer[256];\nwhile (fgets(buffer, 256, stream) != NULL)\nprintf(buffer);\nexit_code = pclose(stream);\nprintf(\"child exited with %d\\n\\n\", WEXITSTATUS(exit_code));\n// using execv(...)\nchar *argv[] = {\"ls\", \"-la\", NULL};\nif (execv(\"/usr/bin/ls\", argv) == -1) ERROR(\"execv\");\nprintf(\"This will never be executed\\n\");\n}\n}\n</code></pre>"},{"location":"22FS/SNP/05_OS.html#wait-waitpid-syswaith","title":"<code>wait()</code> /<code>waitpid()</code> (sys/wait.h)","text":"<p>Nach dem ein Prozess beendet wurde, gibt es ihn noch als Zombie-Prozess bis der Parent-Prozess <code>pid_t wait(int *wstatus)</code> oder <code>pid_t waitpid(pid_t pid, int *wstatus, int options)</code> aufgerufen hat und den Status so abgeholt hat.</p> <pre><code>pid_t pid = fork();\nif(pid == 0) {\nint wstatus;\npid_t wpid = waitpid(pid, &amp;wstatus, 0);\nif(wpid != null) {\nperror(\"waitpid\");\nexit(1);\n}\nprintf(\"process %d exited with status %d (%d)\\n\", pid, WEXITSTATUS(wstatus), wstatus);\nwait(&amp;wstatus); // will do the same as waitpid() but with a random child-process\n}\n</code></pre>"},{"location":"22FS/SNP/05_OS.html#threading","title":"Threading","text":""},{"location":"22FS/SNP/05_OS.html#begriffe","title":"Begriffe","text":"<ul> <li>Race Condition: </li> <li>Dead Lock: Zwei Threads warten auf eine Resource, welche vom anderen Thread \"gelockt\" wurde   </li> <li>Live Lock: Zwei Threads haben eine Resource frei gegeben und warten darauf, dass sie der andere Thread lockt</li> <li>Critical Section: Ein St\u00fcck code, in welchem nur ein Thread gleichzeitig l\u00e4uft</li> <li>Starvation: ein blockierter Task kommt nie an die Reihe, da andere Tasks sich vordr\u00e4ngen. Dies sollte vom OS behoben werden.</li> </ul>"},{"location":"22FS/SNP/05_OS.html#volatile","title":"<code>volatile</code>","text":"<p>Das Volatile-Keyword zwingt dem Compiler nicht zu optimieren. Somit wird wirklich ausgef\u00fchrt, was in C geschrieben wurde. Ansonsten kann der Compiler Schreib-Aufrufe verschieben oder Resultate cachen. Dies ist n\u00fctzlich bei Multi-Threading, da eine Variable von mehreren Threads ge\u00e4ndert werden kann und das Cachen problematisch sein k\u00f6nnte.</p> <pre><code>volatile int value = 0; // erstellt ein neuen volatile int\n</code></pre>"},{"location":"22FS/SNP/05_OS.html#pthread_create","title":"<code>pthread_create(...)</code>","text":"<p>Mit <code>int pthread_create(pthread_t *thread, pthread_attr_t *attr, void *(*start_routine)(void *), void *arg)</code> kann einen neuen Thread gestartet werden.</p> <p>Wenn ein neuen Thread erstellt wird, muss entweder <code>pthread_detach()</code> oder <code>pthread_join()</code></p> <pre><code>void *worker(void *arg) {\nprintf(\"worker: hi\\n\");\nreturn \"Hello\";\n}\nvoid main() {\npthread_t thread;\npthread_create(&amp;thread, NULL, worker, NULL);\nvoid *msg;\npthread_join(&amp;thread, &amp;msg); // pthread_join(...) wants void** as the msg\nprintf(\"Thread sent %s\\n\", (char*) status)\n}\n</code></pre>"},{"location":"22FS/SNP/05_OS.html#pthread_detach","title":"<code>pthread_detach(...)</code>","text":"<p><code>int pthread_detach(pthread_t thread)</code> markiert ein Thread als detached und wenn ein solchen Thread sich beendet, werden die System-Resourcen automatisch freigegeben.</p>"},{"location":"22FS/SNP/05_OS.html#pthread_exit","title":"<code>pthread_exit(...)</code>","text":"<p><code>void pthread_exit(void *retval)</code> beendet den akutellen Thread mit dem mit gegebenen Wert. Dieser kann mit <code>int pthread_join(...)</code> abgerufen werden. Processor-Shared-Resources, wie File-Deskriptoren, werden nicht freigegeben.</p>"},{"location":"22FS/SNP/05_OS.html#pthread_join","title":"<code>pthread_join(...)</code>","text":"<p><code>int pthread_join(pthread_t thread, void** retval)</code> wartet bis der angegebene Thread sich beendet. Der \"Exit-Status\" wird in den <code>retval</code> Pointer gespeichert. Die System-Resourcen des Threads werden nach dem <code>int</code></p> <p><code>pthread_join(...)</code> zur\u00fcckkehrt, frei gegeben.</p>"},{"location":"22FS/SNP/05_OS.html#io","title":"IO","text":""},{"location":"22FS/SNP/05_OS.html#inode","title":"INode","text":"<p>Die Repr\u00e4sentation von einem File. Es werden Daten, wie der letzte Zugriffzeitpunkt, Besitzer, L\u00e4nge, physikalischer Ort auf dem Datentr\u00e4ger gespeichert. Aber nicht der Name der Datei.</p>"},{"location":"22FS/SNP/05_OS.html#folder","title":"Folder","text":"<p>Ein einem Ordner hats Name-INode Paare. Diese geben den INodes einen Name.</p>"},{"location":"22FS/SNP/05_OS.html#hardlinks-vs-softlink","title":"Hardlinks vs Softlink","text":"<p>Ein Softlink funktioniert auf dem Filesystem und sagt dem Kernel, das dieses File bei diesem Pfad gefunden wird.</p> <p>Ein Hardlink ist ein \"Link\" auf ein INode. Es kann mehrere Namen f\u00fcr ein INode geben. Der INode ist erst gel\u00f6scht, wenn es keinen Namen daf\u00fcr mehr gibt.</p>"},{"location":"22FS/SNP/05_OS.html#spezielle-files","title":"Spezielle Files","text":"<ul> <li>Character Devices</li> <li>Block Devices</li> <li>Named Pipes</li> <li>Sockets</li> </ul>"},{"location":"22FS/SNP/05_OS.html#file","title":"<code>FILE*</code>","text":"<p>Ein File Deskriptor, welcher auf ein File zeigt.</p> <p>Folgende Funktionen sind relevant zu <code>FILE*</code>. F\u00fcr viele Funktionen muss der Header <code>unistd.h</code> inkludiert werden.</p> <p></p> <p>Die folgenden Operationen sind die wichtigsten:</p> <ul> <li><code>FILE* fopen(char *pathname, char* mode)</code>   \u00d6ffnet ein File zum schrieben. Falls das File nicht ge\u00f6ffnet werden konnte, wird <code>NULL</code> zur\u00fcck gegeben. Wenn f\u00fcr <code>mode</code> folgendes angegeben wird:</li> <li><code>`r</code> : File nur zum lesen ge\u00f6ffnet</li> <li><code>r+</code> :  File wird zum lesen und schreiben ge\u00f6ffnet</li> <li><code>w</code> :  File wird zum lesen ge\u00f6ffnet. Das File wird erstellt oder \u00fcberschrieben</li> <li><code>w+</code>: Wie <code>r+</code>, aber das File wird erstellt oder \u00fcberschrieben</li> <li><code>a</code>: File wird zum schreiben am Ende der Datei ge\u00f6ffnet. Das File wird erstellt, falls es nicht existiert</li> <li><code>a+</code>:  File wird zum lesen und schreiben vom Ende der Datei ge\u00f6ffnet. Falls das Datei nicht existiert, wird es erstellt</li> <li><code>int fclose(FILE *stream)</code>   Flushed und schliesst den angegeben File-Handler. Wenn erfolgreich, <code>0</code> wird zur\u00fcck geben</li> <li><code>int fprintf(FILE *stream, char* format, ...)</code>   Wie <code>fprint(...)</code> aber schreibt auf den angegeben File-Handler. Die Funktion gibt die Anzahl gedruckte Zeichen aus oder einen negative Zahl, wenn ein Fehler aufgetreten ist</li> <li><code>int fgetc(FILE *stream)</code>   Liest von <code>stream</code> ein char und gibt in zur\u00fcck. <code>EOF</code> wird  beim File-Ende zur\u00fcck gebenen. Bei einem Fehler wird einen negativen Wert zur\u00fcck gegeben</li> <li><code>char* fgets(char *s, int size, FILE *stream)</code>   Liest eine Zeile oder bis zum Ende des Streams und schreibt diesen in <code>s</code>. Es wird maximal <code>size-1</code>-Anzahl chars gelesen (<code>-1</code> wegen <code>\\0</code>)</li> <li><code>int sscanf(FILE *stream, char *format, ...)</code>   Wie <code>scanf(...)</code>, aber liest von einem angegeben <code>stream</code></li> <li><code>int fputc(int c, FILE *stream)</code>   Cast <code>c</code> zu einem unsigned char und schreibt diesen in den Stream. Als R\u00fcckgabe-Wert wird <code>c</code> zur\u00fcck gegeben, oder <code>EOF</code> im Fehlerfall.</li> <li><code>int fputs(char *s, FILE *stream)</code>   Schreibt ein String (ohne <code>\\0</code>) in den Stream. Wenn ein Error aufgetreten ist, wird <code>EOF</code> zur\u00fcck geben, sonst eine positive Zahl.</li> </ul> <p>Nach jedem IO Aufruf sollte \u00fcberpr\u00fcft werden, ob die Operation erfolgreich war: </p> <p></p>"},{"location":"22FS/SNP/05_OS.html#buffereing-in-streams","title":"Buffereing in Streams","text":"<ul> <li>unbuffered: Die daten werden sofort weiter geleitet.</li> <li>fully-buffered: Wenn der Buffer voll ist, wird der Buffer geleert</li> <li>line-buffered:   Wenn das Ende der Zeile erreicht wird oder der Buffer voll ist, wird der Buffer geleert</li> </ul> <p><code>stdin</code> und <code>stdout</code> sind normallerweisse fully-buffered, wenn sie nicht mit einem interaktiven Device verbunden sind. <code>stderr</code> ist unbuffere</p>"},{"location":"22FS/SNP/05_OS.html#file-io-beispiel","title":"File IO Beispiel","text":"<pre><code>#include &lt;stdio.h&gt;\nint main(void)\n{\nFILE *test_file = fopen(\"./test\", \"w\");\nchar buffer[200];\nint buffer_size = sizeof(buffer) / sizeof(char);\nchar *buffer_pntr = buffer;\nfor (int input = getchar(); input &gt;= 0 &amp;&amp; input != 'q' &amp;&amp; buffer_pntr &lt; buffer + buffer_size; input = getchar())\n{\n*(buffer_pntr++) = (char)input;\n}\nbuffer[buffer_size - 1] = '\\0';\nfprintf(test_file, \"%s\", buffer);\nfclose(test_file);\ntest_file = fopen(\"./test\", \"r\");\nwhile (fgets(buffer, buffer_size, test_file) != NULL)\n{\nprintf(\"buffer: %s\", buffer);\n}\nfclose(test_file);\nreturn 0;\n}\n</code></pre>"},{"location":"22FS/SNP/05_OS.html#mutex-pthreadh","title":"Mutex (pthread.h)","text":"<p>In einer Critical Section ist nur ein Thread gleichzeitig am laufen</p> <p></p> <p>Mit <code>int pthread_mutex_init(pthread_mutex *mutex, NULL)</code> kann ein <code>p_thread_mutex</code> Objekt initialisiert werden. Mit <code>int pthread_mutex_lock(pthread_mutex *mutex)</code> kann der Mutex gelockt werden und mit  <code>int pthread_mutex_unlock(pthread_mutex *mutex)</code> </p> <p>Um Attribute f\u00fcr einen Mutex zu \u00e4ndern, wird der Typ <code>pthread_mutexattr_t</code> genuzt, welcher mit <code>int pthread_mutexattr_init(pthread_mutexattr_t *mutexattr)</code> initialisiert und mit <code>int pthread_mutexattr_settype(pthread_mutex *mutex, int flag)</code>. Ein m\u00f6gliches Flag ist <code>PTHREAD_MUTEX_RECURSIVE</code>, welches bewirkt, dass wenn ein Mutex bereits im Thread a gelockt wurde und Thread a nochmals versucht zu locken, wird nichts getan (sonst g\u00e4be es ein Deadlock).</p>"},{"location":"22FS/SNP/05_OS.html#beispiel-mutex","title":"Beispiel Mutex","text":"<pre><code>#include &lt;pthread.h&gt;\n#include &lt;stdbool.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#define ERROR(M)  ...\nstatic pthread_mutex_t mutex;\nstatic volatile bool running = true;\nstatic volatile int value = 0;\nvoid *worker(void *arg) {\nwhile (running) {\nif (pthread_mutex_lock(&amp;mutex) == -1) ERROR(\"lock worker\");\nprintf(\"current value: %d\\n\", value);\nif (pthread_mutex_unlock(&amp;mutex) == -1) ERROR(\"unlock worker\");\n}\n}\nvoid *printer(void *arg) {\nFILE *random = fopen(\"/dev/urandom\", \"rb\");\nif (random == NULL) ERROR(\"fopen\");\nwhile (running) {\nint input = -1;\nif (fread(&amp;input, sizeof(input), 1, random) != 1) ERROR(\"read\");\nif (pthread_mutex_lock(&amp;mutex) == -1) ERROR(\"lock\");\nvalue = input;\nif (pthread_mutex_unlock(&amp;mutex) == -1) ERROR(\"unlock\");\n}\nfclose(random);\n}\nint main(void) {\npthread_mutex_init(&amp;mutex, NULL);\npthread_t worker_thread, printer_thread;\nif (pthread_create(&amp;worker_thread, NULL, worker, NULL) == -1) ERROR(\"worker thread\");\nif (pthread_create(&amp;printer_thread, NULL, printer, NULL) == -1) ERROR(\"printer thread\");\nwhile (getchar() != 'q') {}\nrunning = false;\nif (pthread_join(worker_thread, NULL) == -1) ERROR(\"join\");\nif (pthread_join(printer_thread, NULL) == -1)ERROR(\"join\");\n}\n</code></pre>"},{"location":"22FS/SNP/05_OS.html#beispiel-rekursiver-mutex","title":"Beispiel Rekursiver Mutex","text":"<pre><code>#include &lt;stdlib.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;pthread.h&gt;\n#define ERROR(M) ..\n#define N 1000\npthread_mutex_t mutex;\nint value = 0;\nvoid calc(int step) {\nif (pthread_mutex_lock(&amp;mutex) == -1) ERROR(\"lock\");\nvalue += step;\nif (pthread_mutex_unlock(&amp;mutex) == -1) ERROR(\"unlock\");\n}\nvoid *count(void *p) {\nfor (int i = 0; i &lt; N; i++)     {\nif (pthread_mutex_lock(&amp;mutex) == -1) ERROR(\"lock\");\ncalc(*(int *)p);\nif (pthread_mutex_unlock(&amp;mutex) == -1) ERROR(\"unlock\");\n}\n}\nint main(void) {\npthread_mutexattr_t mutex_attr;\nif (pthread_mutexattr_init(&amp;mutex_attr) != 0) ERROR(\"init mutexattr\");\nif (pthread_mutexattr_settype(&amp;mutex_attr, PTHREAD_MUTEX_RECURSIVE) != 0) ERROR(\"set recursive type\");\nif (pthread_mutex_init(&amp;mutex, &amp;mutex_attr) != 0) ERROR(\"init mutex\");\npthread_t th_inc, th_dec;\nint inc = 1;\nint dec = -1;\nif (pthread_create(&amp;th_inc, NULL, count, &amp;inc) != 0) ERROR(\"create inc thread\");\nif (pthread_create(&amp;th_dec, NULL, count, &amp;dec) != 0) ERROR(\"create dec thread\");\nif (pthread_join(th_inc, NULL) != 0) ERROR(\"inc thread join\");\nif (pthread_join(th_dec, NULL) != 0) ERROR(\"dec thread join\");\nprintf(\"value: %d\\n\", value);\n}\n</code></pre>"},{"location":"22FS/SNP/05_OS.html#sempaphors","title":"Sempaphors","text":"<p>Es wird den Include <code>#include &lt;semaphor.h&gt;</code>  (und <code>#include &lt;fcntl.h&gt;</code> f\u00fcr O_CREAT) ben\u00f6tigt. Semaphors k\u00f6nnen f\u00fcr Prozesse, wie auch f\u00fcr Threads verwendet werden.</p> <p>Eine Semaphor ben\u00fctzt ein Counter. Wenn der Counter 0 ist, warten Prozesse, welche <code>int sem_wait(...)</code> aufrufen. Wenn der Counter h\u00f6her ist, wird der Counter um <code>1</code> dekrementiert und den Prozess durchgelassen. <code>int sem_post(...)</code> erh\u00f6ht den Counter um <code>1</code>, was bedeutet, dass ein Prozess mehr durch kann.</p> <p>Semaphors ben\u00fctzen die Struktur <code>sem_t</code>. F\u00fcr eine In-Memory Sempahor kann <code>int sem_init(sem_t *sem, int pshared, unsigned int value)</code>  ben\u00fctzt weden. Bei einer Named-Semaphor muss <code>sem_t *sem_open(char *name, int oflags, mode_t mode, unsigned int value)</code> aufgerufen werden, welches eine neue Semaphor zur\u00fcck gibt. Als <code>oflag</code> kann <code>O_CREAT</code> (ohne E am ende) (in fcntl.h definiert) ben\u00fctzt werden und bewirkt, dass die Sempahore erstellt wird, wenn sie noch nicht existiert. <code>mode_t</code> ist ein Otal-File Mode (wie <code>0700</code>).</p> <p><code>int sem_wait(sem_t *sem)</code> wartet darauf, dass der Counter h\u00f6her ist als <code>0</code>. Wenn ja, wird er um eins dekrementiert und durchgelassen, sonst wird blockiert.</p> <p><code>int sem_post(sem_t *sem)</code> erh\u00f6ht den Counter um eins. Falls ein Prozess bereits <code>int sem_wait(...)</code> aufgerufen hat, wird dieser druchgelassen, bzw. der n\u00e4chste Prozess wird direkt durchgelassen.</p> <p>In-Memory Semaphors werden mit <code>int sem_destroy(sem_t *sem)</code> geschlossen. Named Semaphors werden mit <code>int sem_close(sem_t *sem)</code> geschlossen. Mit <code>int sem_unlink(sem_t *sem)</code> wird die Semaphor gel\u00f6scht, sobald alle Prozesse <code>sem_close(...)</code> darauf aufgerufen haben.</p>"},{"location":"22FS/SNP/05_OS.html#beispiel","title":"Beispiel","text":"<pre><code>#include &lt;semaphore.h&gt;\n#include &lt;sys/stat.h&gt;\n#include &lt;fcntl.h&gt;\n#include &lt;stdbool.h&gt;\n#include &lt;stdlib.h&gt;\nint main(void) {\n// creates a unnamed in memory semaphore\nsem_t unamed_sem;\n//false means that the semaphore should be used for thread-communication\n// 0 is the initial value\nif(sem_init(&amp;unamed_sem, false, 0) != 0) perror(\"Couldn't init unnamed semaphore\");\n// creates a named semaphore which can be opend by multiple processes\nsem_unlink(\"/name\");\n// 0 is the initial value\nsem_t *named_sem = sem_open(\"/name\", O_CREAT, 0700, 0);\nif (named_sem == NULL)\nperror(\"Couldn't init named semaphore\");\nsem_unlink(\"/name\");\n}\n</code></pre> <p>Im folgenden Beispiel wurde Sudo-Code geschrieben.</p> <p></p>"},{"location":"22FS/SNP/05_OS.html#barriere","title":"Barriere","text":"<p>Eine Barriere blockiert mehrere Tasks. Eine Barriere l\u00e4sst bloss alle Tasks durch, wenn gen\u00fcgend Tasks da sind. Im Vergleich zu dem Sempaphors: </p> <ul> <li>Semaphoren: der Busfahrer l\u00e4sst solange Passagiere in den Bus, bis er voll ist</li> <li>Barriere: der Busfahrer wartet bis die gesamte Klasse da ist und l\u00e4sst sie erst dann   in den Bus einsteigen</li> </ul>"},{"location":"22FS/SNP/05_OS.html#signale","title":"Signale","text":"<p>Ein Prozess kann einem anderen Prozess Signale mithilfe von <code>kill(pid, signal_code)</code>. Der empfangende Prozess kann entweder sich beenden, das Signal ignorieren oder ein Handler ausf\u00fchren, wenn dieser Code empfangen wird. Das Verhalten von <code>SIGKILL</code> und <code>SIGSTOP</code> kann nicht ver\u00e4ndert werden und beendet immer den Prozess.</p> <p>Ein Prozess kann mit <code>pause()</code> warten, bis ein Signal empfangen wurde.</p> <p>Mit <code>sigaction(int sig, struct sigaction *act, struct sigaction *oact)</code> kann das Verhalten beim Empfangen eines Signal ge\u00e4ndert werden. Der int <code>sig</code> ist die Nummer des Signales,  <code>act</code> ist die neue Action und in <code>oact</code> kann ein <code>sigaction</code> Variable angegeben werden, in welche die alte Action geschrieben wird. Die <code>sigaction</code> kann folgendermassen ben\u00fctzt werden: </p> <p>Der Typ von <code>sigaction.sa_handler</code> hat den Typ <code>void(*) (int)</code>, was ein Pointer auf eine Funktion, wie <code>void test(int a)</code>  ist. Diese kann entweder eine eigene Funktion sein, oder <code>SIG_DFL</code> f\u00fcr den Default und <code>SIG_IGN</code> zum ignorieren, angegeben werden.</p> <p><code>raise(int sig)</code> sendet das Signal zum eigenen Prozess.</p> Signal Erkl\u00e4rung Default Aktion <code>SININT</code> Interrupt-Signal von der Tastatur (CTRL-C) Term <code>SIGQUIT</code> Quit-Signal von der Tastatur (CTRL-) Core <code>SIGABRT</code> Abort-Signal via abort() oder assert() Core <code>SIGKILL</code> Kill-Signal (unver\u00e4nderbar) Term <code>SIGSEGV</code> Unzul\u00e4ssiger Speicherzugriff Core <code>SIGALRM</code> Timer-Signal durch alarm() ausgel\u00f6st Term <code>SIGTERM</code> Terminierungs-Signal Term <code>SIGSTOP</code> Stoppt den Prozess (oder ignoriert falls gestoppt) (unver\u00e4nderbar) Stop <code>SIGCONT</code> Reaktiviert den Prozess (oder ignoriert falls am Laufen) Cont <p>Dabei steht:</p> <ul> <li><code>Ter</code> f\u00fcr das terminieren der Prozesse</li> <li><code>Core</code> f\u00fcr das terminieren der Prozesse und ein Code-Dump zu produzieren</li> <li><code>Ignored</code> f\u00fcr das ignorieren des Signales</li> <li><code>Stop/Cont</code> f\u00fcr das stoppen und reaktivieren des Prozesses (oder ignorieren, falls nicht anwendbar)</li> </ul>"},{"location":"22FS/SNP/05_OS.html#beispiel-sa_siginfo","title":"Beispiel <code>SA_SIGINFO</code>","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;signal.h&gt;\n#include &lt;sys/wait.h&gt;\n#include &lt;fcntl.h&gt;\nvoid handler(int sig, siginfo_t *info, void *context) {\nprintf(\"caught (%d): source=%d, this=%d\\n\", sig, info-&gt;si_pid, getpid());\nraise(SIGTERM); // = kill(getpid(), SIGTERM)\n}\nint main(void) {\npid_t pid = fork();\nif (pid == 0) {\nstruct sigaction sa = {0};\nsa.sa_flags = SA_SIGINFO; // use extended handler\nsa.sa_sigaction = handler; // set handler\n// sigfillset specifies that all signals should be ignored while the handler(...) is running\nif (sigfillset(&amp;sa.sa_mask) == -1) ERROR(\"sigfillset\");\nif (sigaction(SIGUSR1, &amp;sa, NULL) == -1) ERROR(\"sigaction\");\nif (pause() == -1) ERROR(\"pause()\"); // pause process\n} else {\nsleep(1);\nif (kill(pid, SIGUSR1) == -1) ERROR(\"kill\");\n}\n}\n</code></pre>"},{"location":"22FS/SNP/05_OS.html#pipes","title":"Pipes","text":"<p><code>int pipe(int filedes[2])</code> erstellt eine unbenannte Pipe mit zwei Filedeskriptoren, welche in das angegebene Array geschrieben wird. Auf diese k\u00f6nnen mit <code>write()</code> und <code>read()</code> geschrieben und gelesen weden. <code>pipe(...)</code> gibt <code>0</code> zur\u00fcck, wenn kein Fehler aufgetreten ist.</p> <p>Eine Pipe geht nur in eine Richtung und daher muss  eine der beiden Deskriptoren von je einem Prozess kreuzweise mit <code>close(int filedesriptor)</code> geschlossen werden, dass die Pipe nutzbar ist. Mit <code>write(int filedes, void *buffer, size_t size)</code></p> <p></p> <p>Eine Pipe kann auch  Non-Blocking genutzt werden. Dies kann folgendermassen gesetzt werden: </p> <p>Nun kann folgendermassen davon gelesen werden: </p> <p>Mit <code>int mkfifo(char* pathname, mode_t mode)</code> wird eine Named-Pipe erstellt. Die Funktion gibt <code>0</code> zur\u00fcck, wenn kein Fehler aufgetreten ist. Die beiden Prozesse k\u00f6nnen vom File bei <code>pathname</code> lesen oder schrieben. </p>"},{"location":"22FS/SNP/05_OS.html#message-queue","title":"Message Queue","text":"<p>Ist eine Queue, welche Strings zwischen Prozessen austauschen kann. Das Programm muss mit dem <code>-lrt</code> Flag kompiliert werden. </p> <p>Mit <code>mqd_t mq_open(char* qname, int flag, int mode, struct mq_attribute *attr)</code>  kann eine neue Queue ge\u00f6ffnet werden. Der QName muss mit einem Slash beginnen und existieren in einem Virtuellen Filesystem <code>/dev/mqueue</code>. Queues k\u00f6nnen auch Non-Blocking ge\u00f6ffnet werden.</p> <p>Mit <code>int mq_close(mqd_t queue)</code> teilt dem Kernel mit, dass der Zugriff auf die Queue abgeschlossen ist. </p> <p>Mit <code>int mq_unlink(char* name)</code> kann die Queue gel\u00f6scht werden. Sie kann danach nicht mehr ge\u00f6ffnet werden und wird gel\u00f6scht, wenn jeder Prozess, welcher ein File-Deskriptor offen hat, diesen mit <code>mq_close(...)</code> geschlossen hat.</p> <p></p>"},{"location":"22FS/SNP/05_OS.html#sockets","title":"Sockets","text":""},{"location":"22FS/SNP/06_Standard%20Library.html","title":"Standard Library","text":""},{"location":"22FS/SNP/06_Standard%20Library.html#stdioh","title":"stdio.h","text":""},{"location":"22FS/SNP/06_Standard%20Library.html#perror","title":"<code>perror</code>","text":"<p><code>void perror(char *s)</code> druckt den letzten Fehler mit der angegebenen Nachricht aus.</p>"},{"location":"22FS/SNP/06_Standard%20Library.html#printfsprintf-man-3-printf","title":"<code>printf</code>/<code>sprintf</code> (man 3 printf)","text":"<p><code>printf(char *format, args...)</code> formatiert die <code>args</code> anhand von dem <code>format</code>. Es gibt 3 relevante Methoden:</p> <ul> <li><code>printf(char *format, args...)</code> druckt den formatierten String in die Konsole</li> <li><code>sprintf(charr *str, char *format, args...)</code> schreibt den formatierten String in die Variable <code>str</code>.</li> <li><code>fprintf(FILE *stream, char *format, args...)</code> schreibt den formatierten String in das File <code>stream</code></li> </ul> <p>Jeder Platzhalter folgt dem Muster <code>%[flags][width][.precision]conversion</code> </p> <p>Die <code>width</code> gibt an, wie viel Platz vor der Variable soll sein. Wenn die Zahl mit einem <code>0</code> prefixt ist (z.B. <code>022</code>), wird die Zahl 0-padded. Dies wird allerdings nur von Zahlen, wie Integers oder Doubles unterst\u00fctzt.</p> <p>Die <code>.precision</code> gibt an, wie viele Stellen nach dem Komma gedruckt werden sollen und wird nur f\u00fcr Kommazahlen unterst\u00fctzt.</p> <p>Anstatt eine Zahl f\u00fcr <code>width</code> und <code>.precision</code> kann auch ein <code>*</code> verwendet werden. Dabei wird der Wert als Input genommen. Beispiel: <code>printf(\"%0*.*f\", 7, 2, 2.456666)</code> w\u00fcrde <code>0002.46</code> ausgeben.</p> <p>Das <code>flag</code> kann <code>-</code> sein, was bewirkt, dass das Feld left-adjusted wird.</p> <p>Folgende Conversions sind g\u00e4ngig:</p> Typ C Erkl\u00e4rung Beispiel int d, i gibt ein int aus. Precission ist nicht unterst\u00fctzt <code>%02i</code> (druckt <code>03</code>) unsinged int u, x/X u gibt die Zahl in dezimal aus, x in Hex als kleine Buchstaben (ff) und X mit grossen Buchstaben (FF) <code>%04u</code> (druckt <code>0022</code>), <code>%X</code> (druckt <code>AF2</code>) double f gibt double aus <code>%.3f</code> = \"2.340\" char c gibt ein char aus. Precission und 0-padding sind nicht unterst\u00fctzt <code>%2c</code>= \"  d\" char* s gibt ein string aus <code>%s</code> = \"Hello world\""},{"location":"22FS/SNP/06_Standard%20Library.html#scanf","title":"<code>scanf</code>","text":"<p><code>scanf(char *format, ...)</code> liest ein Format vom stdin. Es gibt auch <code>fscanf(FILE *stream, char *format, ...)</code>, was von einem File scannt und <code>sscanf(char *str, char *format, ...)</code>, was von einem String scannet.</p> <p>Als R\u00fcckgabe Wert wird die Anzahl von gefunden Inputs zur\u00fcck gegeben.</p> <p>Das Format ist wie bei <code>printf</code> mit einigen \u00c4nderungen.</p> <ul> <li><code>f</code> ist nur f\u00fcr floats</li> <li><code>lf</code> muss f\u00fcr doubles genutzt werden</li> </ul> <p><code>scanf(\"hello %d\", i)</code> w\u00e4re nicht valide, da keine fixe Strings im <code>scanf</code>-Format stehen darf</p>"},{"location":"22FS/SNP/06_Standard%20Library.html#int-getchar","title":"<code>int getchar()</code>","text":"<p>Blockiert, bis der Nutzer eine Zeile in die Konsole eingegeben hat. Danach wird jeweils ein Zeichen von diesem Buffer gelesen und zur\u00fcck gegeben. Wenn stdin geschlossen wird, wird <code>EOF</code> zur\u00fcck gegeben.</p>"},{"location":"22FS/SNP/06_Standard%20Library.html#string-library","title":"String-Library","text":"<ul> <li> <p><code>int strlen(char *str)</code>   Die L\u00e4nge des Strings (ohne <code>\\0</code>)</p> </li> <li> <p><code>int strcmp(char *s1, char *s2)</code></p> </li> <li> <p><code>char* strcpy(char *dest, char *src)</code>   Achtung: dest muss genug gross f\u00fcr src sein</p> </li> <li> <p><code>car *strcat(char *s1, char *s2)</code>   Achtung: s1 muss genug gross, f\u00fcr s1 + s2 sein</p> </li> <li> <p><code>char *strdup(char *s)</code>   Dupliziert <code>s</code> in einer neuen <code>char*</code>, welcher mit <code>free(...)</code> freigegeben werden muss</p> </li> <li> <p><code>char* strsep(char **stringp, char* dellim)</code>   Findet den ersten Token und gibt ein Pointer auf diesem Zur\u00fcck. In <code>*stringp</code> wird der delim mit <code>\\0</code> \u00fcberschrieben und <code>**stringp</code> wird geupdated, dass es auf den delim zeigt.</p> </li> </ul> <pre><code>#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main(void) {\nchar *s1 = strdup(\"1, 2, 3, hi\");\nchar *token;\nwhile ((token = strsep(&amp;src, \",\")) != NULL) {\nprintf(\"token: %s\\n\", token);\n}\nfree(s1);\n}\n</code></pre> <ul> <li><code>char *strtok(char *s, char *delim)</code>   Es wird nach <code>delim</code> in <code>s</code> gesucht. Wenn gefunden, wird <code>delim</code> durch <code>\\0</code> ersetzt und es wird ein Pointer auf den gefundenen Token zur\u00fcck gegeben. Es wird ein interner statischer Buffer verwendet. Daher wird bei folge Aufrufe <code>NULL</code> als <code>s</code> verwendet.</li> </ul> <pre><code>#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint main(void) {\nchar *s1 = strdup(\"1, 2, 3, hi\");\nfor (char *token = strtok(s1, \",\"); token != NULL; token = strtok(NULL, \",\")) {\nprintf(\"token: %s\\n\", token);\n}\nfree(s1);\n}\n</code></pre>"},{"location":"22FS/SNP/summary_jonas.html","title":"SNP Summary","text":"<ul> <li>SNP Summary</li> <li>History of C</li> <li>Overview and Basics<ul> <li>Files</li> <li>Data Types</li> <li>Literals</li> <li>ASCII Table</li> <li>String Basics</li> </ul> </li> <li>Syntax<ul> <li>Macro Definition</li> <li>Declaration &amp; Definition</li> <li>Operators</li> <li>Arithmetic</li> <li>Comparison</li> <li>Logical</li> <li>Bitwise</li> <li>Assignment</li> <li>Pointer</li> <li>Other (reduced)</li> <li>Precedence and associativity</li> <li>Booleans</li> <li>Enums</li> <li>Structs</li> </ul> </li> <li>Variables &amp; References<ul> <li>Call by value</li> <li>Call by reference</li> <li>Arrays as parameters</li> <li>Structs as parameters</li> <li>Pointer to function</li> <li>Variable amount of args</li> </ul> </li> <li>Global Variables</li> <li>Modularization<ul> <li>Compilation</li> <li>Header Guards</li> <li>Useful Libraries</li> </ul> </li> <li>Make<ul> <li>Syntax</li> </ul> </li> <li>Arrays<ul> <li>Array Sizes</li> <li>Working with Strings</li> <li>Most important functions</li> </ul> </li> <li>Pointers<ul> <li>Reading Pointers</li> </ul> </li> <li>Memory Management<ul> <li>Heap Memory</li> </ul> </li> <li>Operating Systems<ul> <li>System Calls</li> <li>Shells</li> <li>Linux Startup Sequence</li> <li>System Memory</li> <li>Filesystem</li> <li>Filesystem Hierarchy Standard</li> <li>Inodes</li> <li>Links</li> <li>File Types</li> <li>Working with Files</li> <li>Buffering</li> </ul> </li> <li>Processes and Threads<ul> <li>Lifecycle of a Process</li> <li>Functions</li> <li>Working with pipelines</li> <li>Lifecycles of Threads</li> </ul> </li> <li>Inter Process Communication<ul> <li>POSIX Signals</li> <li>POSIX Pipes</li> <li>Anonymous Pipes</li> <li>Named Pipes</li> <li>POSIX Message Queues</li> <li>POSIX Sockets</li> </ul> </li> <li>Synchronization<ul> <li>Mutual exclusion</li> <li>Semaphores</li> <li>Examples</li> <li>Producer-Consumer Problem</li> <li>Reader-Writer Problem</li> </ul> </li> </ul>"},{"location":"22FS/SNP/summary_jonas.html#history-of-c","title":"History of C","text":"<p>A quick timeline of C's development:</p> Year Name Event 1970 C Dennis Ritchie at Bell Labs developed the language for use in UNIX 1978 K&amp;R C Ritchie and Kerningham release C 1983 C++ Stroustrup develops C++ as a C extension 1989 ANSI C C is standardized 1990 C90 ISO copies the ANSI standard 1995 Java Java is released by Sun 1999 C99 C is update with newer extenbsions 2000 C# Microsoft develops a Java competitor 2011 C11 ISO standardizes C with better c++ compat 2018 C18 Minor changes to the C11 standard"},{"location":"22FS/SNP/summary_jonas.html#overview-and-basics","title":"Overview and Basics","text":"<p>C is a procedural language. It is not object-oriented whatsoever. There is no concept of classes or methods. Only functions exists. There is a single entry-point for every application, <code>main</code>. Once <code>main</code> ends, the application terminates.</p>"},{"location":"22FS/SNP/summary_jonas.html#files","title":"Files","text":"<p>In general, there are 4 different file types that are associated with C:</p> File extensions Usage .c A pure text file that usually contains code .h A header files that provides definitions for functions and variables that other files can import and use .d A file containing all dependecies of a program. Usually generated by Make and can be ignored .mk/Makefile A Make definition used to make compiling easier .o/no extension The output file(s) of the compiler"},{"location":"22FS/SNP/summary_jonas.html#data-types","title":"Data Types","text":"<p>By default, C has 4 distinct data types that can also be extended with some keywords. Keywords in brackets signify that the compiler infers it when it isn't replaced with another keyword.</p> Keywords Bytes Numeric range <code>[signed] char</code> 1 \\(-128\\) to \\(127\\) <code>[signed] int</code> 4 \\(-2^{31}\\) to \\(2^{31}-1\\) <code>float</code> 4 \\(-3.4*10^{38}\\) to \\(3.4*10^{38}\\) <code>double</code> 8 \\(-1.79*10^{308}\\) to \\(1.79*10^{308}\\) <code>unsigned char</code> 1 \\(0\\) to \\(255\\) <code>[signed] short [int]</code> 2 \\(-32768\\) to \\(32767\\) <code>unsigned short [int]</code> 2 \\(0\\) to \\(65535\\) <code>unsigned [int]</code> 4 \\(0\\) to \\(2^{32}-1\\) <code>[signed] long [int]</code> 8 \\(-2^{63}\\) to \\(2^{31}-1\\) <code>[signed] long long [int]</code> 8 \\(-2^{63}\\) to \\(2^{31}-1\\) <code>unsigned long [int]</code> 8 \\(0\\) to \\(2^{64}-1\\) <code>unsigned long long [int]</code> 8 \\(0\\) to \\(2^{64}-1\\) <code>long double</code> 10 \\(-1.2*10^{4932}\\) to \\(1.2*10^{4932}\\)"},{"location":"22FS/SNP/summary_jonas.html#literals","title":"Literals","text":"<p>C supports implicit typing for literals.</p> Type Example Decimal number 1234 Octal number 0123 Hexadecimal number 0x123 ASCII code <code>'A'</code> <p>Decimals and ASCII codes are always signed ints. If the int is too large, it's a long instead.</p> <p>A combination of <code>U</code> and <code>L</code> can be used to explicitly declare a unsigned or long value.</p> <p>Numbers with decimal points are always doubles unless appended with <code>F</code> where they are read as floats instead.</p> <p>Special characters are escaped using a backslash <code>\\</code>. ASCII characters may also be expressed using their hexadecimal, octal or decimal notation when escaped.</p>"},{"location":"22FS/SNP/summary_jonas.html#ascii-table","title":"ASCII Table","text":""},{"location":"22FS/SNP/summary_jonas.html#string-basics","title":"String Basics","text":"<p>In C, strings are zero-terminated arrays of <code>char</code>s. As an example, the phrase 'amogus' requires an array with space for 7 elements rather than 6. This is because the zero-terminator <code>NUL</code> or <code>\\0</code> is required.</p> <p>Strings may also be formatted:</p> Specifier Conversion %c A single char %s An array of chars %d or %i Signed integer to decimal representation %u Unsigned integer to decimal representation %x Unsigned integer to hexadecimal representation %o Unsigned integer to octal representation %f Float to decimal notation %e Float to exponential notation %g Float to decimal or exponential notation <p>Example:</p> <pre><code>a = scanf(\"%d%d%d\", &amp;day, &amp;month, &amp;year);\n</code></pre>"},{"location":"22FS/SNP/summary_jonas.html#syntax","title":"Syntax","text":""},{"location":"22FS/SNP/summary_jonas.html#macro-definition","title":"Macro Definition","text":"<p>C supports the definition of so called macros. These tell the C pre-processor to replace certain strings with a defined constant. This is most often used to define constants, as it's cheaper to directly store those values inside the program without having to allocate a variable for each constant. Example:</p> <p>This definition...</p> <pre><code>#define MAX_LENGTH 5\n</code></pre> <p>...is applied to this piece of code...</p> <pre><code>int length = MAX_LENGTH;\n</code></pre> <p>...and results in this</p> <pre><code>int length = 5;\n</code></pre>"},{"location":"22FS/SNP/summary_jonas.html#declaration-definition","title":"Declaration &amp; Definition","text":"<p>The terms declaration and definition may sound similar but are positively distinct. A declaration merely specifies how a name is used throughout the program whereas a definition allocates memory or specifies a function. As a result, a definition can only happen after a declaration. For brevity, the term 'declaration' will be used throughout the document to address both of the terms unless.</p> <ul> <li>Base types are implicitly known to the compiler. (e.g. int, char, etc.) </li> <li>Custom structs and enums define a type. </li> <li> <p>Defined types without a body are merely declared.</p> </li> <li> <p>The <code>typedef</code> keyword can be used to create an alias to any base or custom type.</p> </li> <li>The <code>const</code> keyword can be used to create an unmodifiable variable.</li> </ul>"},{"location":"22FS/SNP/summary_jonas.html#operators","title":"Operators","text":""},{"location":"22FS/SNP/summary_jonas.html#arithmetic","title":"Arithmetic","text":"Operator Purpose a + b Guess what a - b Really now? +a Unary plus, generally useless but can widen lesser base types to the size of <code>int</code> -a Unary minus, results in the additive inverse of a1 a * b Multiplication a / b Division, segfault if b is 0 a % b Remainder of a / b or modulo ++a Increments variable, then returns it a++ Returns variable, then increments it --a Decrements variable, then returns it a-- Returns variable, then decrements it"},{"location":"22FS/SNP/summary_jonas.html#comparison","title":"Comparison","text":"Operator Purpose &gt; Greater than &lt; Less than &gt;= Greater than or equal to &lt;= Less than or equal to == Equal to != Not equal to"},{"location":"22FS/SNP/summary_jonas.html#logical","title":"Logical","text":"Operator Purpose !a Logical negation, equivalent to <code>a == 0</code> a &amp;&amp; b Logical AND, returns 0 if a and b are zero, returns 1 otherwise a || b Logical OR, returns 0 if at least a or b are zero, returns 1 otherwise"},{"location":"22FS/SNP/summary_jonas.html#bitwise","title":"Bitwise","text":"Operator Purpose ~a NOT, inverts all bits a &amp; b AND, keeps all 1 bits that are the same a | b OR, keeps all 1 bits a ^ b XOR, turns all 1 and 0 pairs into 1 &lt;&lt; Left shift, multiplication by 2 in some cases &gt;&gt; Right shift"},{"location":"22FS/SNP/summary_jonas.html#assignment","title":"Assignment","text":"<p>All arithmetic and bitwise operators can be combined with the assignment operator. These lines are equivalent:</p> <pre><code>a += b;\na = a + b;\n</code></pre>"},{"location":"22FS/SNP/summary_jonas.html#pointer","title":"Pointer","text":"Operator Purpose a[b] A pointer to the element of index b in the array a *a Indirection, object pointed to by a if a &amp;a Memory address of a a-&gt;b Structure dereference, member b of object pointed to by a a.b Structure reference, member b of object a"},{"location":"22FS/SNP/summary_jonas.html#other-reduced","title":"Other (reduced)","text":"Operator Purpose a ? b : c If a then b else c typeof(a) The size of a in bytes (type)a Cast a to type"},{"location":"22FS/SNP/summary_jonas.html#precedence-and-associativity","title":"Precedence and associativity","text":"<p>Precedence is the order of evaluation of operators within operations. When all operators posess the same precedence, associativity takes over. In general, all operators default to left-associativity with the exception of prefixed unary operators, conditional operators and assignment operators.</p>"},{"location":"22FS/SNP/summary_jonas.html#booleans","title":"Booleans","text":"<p>Default C does not support Booleans. However, most libraries treat 0 as false and every other number as true.</p> <p>Booleans can also be imported with <code>stdbool.h</code></p>"},{"location":"22FS/SNP/summary_jonas.html#enums","title":"Enums","text":"<p>Enums work similar to other languages. They have a name and each value can be assigned any integer value. Example</p> <pre><code>typedef enum {TRUE = 1, FALSE = 0} fakeBool;\n</code></pre> <p>When declared with typedef, enums can be used as types.</p>"},{"location":"22FS/SNP/summary_jonas.html#structs","title":"Structs","text":"<p>Structs are a useful tool to create custom data types in C. They can contain any number primitive types or other custom types. The <code>sizeof</code> keyword accurately summarizes the needed data to store the struct. Example:</p> <pre><code>typedef struct {\nusigned int inhabitants;\nfloat longitude;\nfloat latitude;\nbool available;\nfloat surface;\n} House;\n</code></pre>"},{"location":"22FS/SNP/summary_jonas.html#variables-references","title":"Variables &amp; References","text":"<p>This chapter shows examples on how data could be passed to other functions. Note that parameters and return values always occur by value. To pass a pointer into a function, it has to be dereferenced first with <code>&amp;</code>.</p>"},{"location":"22FS/SNP/summary_jonas.html#call-by-value","title":"Call by value","text":"<p><code>void func(int a, int b)</code> Passes the actual value. Effectively creates a copy</p>"},{"location":"22FS/SNP/summary_jonas.html#call-by-reference","title":"Call by reference","text":"<p><code>void func(int *a, int *b)</code> Passes a pointer to a value. Changes to that value propagate up.  </p> <p>example:  </p> <pre><code>// Increment first parameter by second parameter.\n// Pass first parameter by reference and second by value.\nvoid increment(int *p, int step);\nint main(void) {\nint a = 3, b = 5;\nincrement(&amp;a, b); // after the call, the following condition\n} // must be fulfilled: a = a + b (= 8)\nvoid increment(int *p, int step) {\n*p += b;\n}\n</code></pre>"},{"location":"22FS/SNP/summary_jonas.html#arrays-as-parameters","title":"Arrays as parameters","text":"<pre><code>void func(int a[])\n</code></pre> <p>is equivalent to </p> <pre><code>void func(int *a)\n</code></pre>"},{"location":"22FS/SNP/summary_jonas.html#structs-as-parameters","title":"Structs as parameters","text":"<pre><code>struct t { int v; };\nvoid func(struct t arg);\n</code></pre> <p>or</p> <pre><code>struct t { int v; };\nvoid func(struct t *p);\n</code></pre>"},{"location":"22FS/SNP/summary_jonas.html#pointer-to-function","title":"Pointer to function","text":"<pre><code>void logger(char *msg); // Function declaration\nvoid (*out)(char *); // Error\nout = &amp;logger; // Memory address of the function is stored\nout = logger; // Error\n...\n(*out)(\"Hello\"); // Equivalent to writing logger(\"Hello\");\nout (\"Hello\"); // Error\n</code></pre>"},{"location":"22FS/SNP/summary_jonas.html#variable-amount-of-args","title":"Variable amount of args","text":"<p><code>stdarg.h</code> adds support for multiple variables:  </p> <pre><code>int func(unsigned amount, ...)\n{\nva_list args;\nunsigned i;\nint value;\nint sum = 0;\nva_start(args, amount);\nfor (i = 1; i &lt;= amount; i++)\n{\nvalue = va_arg(args, int);\nsum += value;\n}\nva_end(args);\nreturn (amount ? sum/amount : 0);\n}\nint main(void)\n{\n(void) printf(\"Mittelwert 0: %d\\n\", mittelwert(0));\n(void) printf(\"Mittelwert 1: %d\\n\", mittelwert(1, 2));\n(void) printf(\"Mittelwert 3: %d\\n\", mittelwert(3, 4, 5, 6));\n}\n</code></pre>"},{"location":"22FS/SNP/summary_jonas.html#global-variables","title":"Global Variables","text":"<p>Global variables are a dangerous but useful tool</p> <ul> <li>Variables declared outside of function scope are considered global</li> <li>Every part of that program can access any global variable</li> <li>The default value is 0</li> <li>Local variables are undefined by default</li> <li>The <code>static</code> keyword can limit access to the current source file</li> <li>Using <code>static</code> inside a function body keeps its value alive throughout multiple calls of said function</li> </ul>"},{"location":"22FS/SNP/summary_jonas.html#modularization","title":"Modularization","text":""},{"location":"22FS/SNP/summary_jonas.html#compilation","title":"Compilation","text":"<p>The compilation process consists of 3 steps:</p> <ol> <li>The pre-processor executes all pre-processor directives (e.g. <code>#include</code>, <code>#define</code>, etc.)</li> <li>The compiler transforms all code to a machine-readable byte stream</li> <li>The linker links all calls to different libraries and components together</li> </ol> <p></p> <p>A common command to compile a program:</p> <pre><code>gcc -Wall -g -o program file1.c file2.c\n</code></pre> <p>System libraries that are not part of gcc can be specified with -llibrary. This translates to -L \"liblibrary.a\" but searches in multiple system directories.</p>"},{"location":"22FS/SNP/summary_jonas.html#header-guards","title":"Header Guards","text":"<p>When including header files, it may occur that a header file is included more than once which leads to compiler errors. To prevent this, header guards can be implemented. Simply wrap the whole header file like this:</p> <pre><code>// header.h\n#ifndef HEADER_H\n#define HEADER_H\n... // Definitions here\n#endif\n</code></pre>"},{"location":"22FS/SNP/summary_jonas.html#useful-libraries","title":"Useful Libraries","text":"Library Use stdio.h IO functions string.h Working with strings stdlib.h RNG, memory control, process control stdarg.h Vararg support stddef.h Additional constants like <code>NULL</code> math.h Math functions errno.h Adds <code>errno</code>, a global variable that stores an error code signal.h Signal-handling functions (e.g. exceptions) assert.h Testing library ctype.h Tests for chars float.h Macro constants relevant to floats and doubles limits.h Limit constants of integral types locale.h Get locale information setjmp.h Convenience functions for jumping time.h Time and date functions"},{"location":"22FS/SNP/summary_jonas.html#make","title":"Make","text":"<p>Make is a tool to compile modularized code into programs. Additionally, it only recompiles parts of the code that were unchanged.</p>"},{"location":"22FS/SNP/summary_jonas.html#syntax_1","title":"Syntax","text":"<p>Makefiles consist of rules, commands and comments. </p> <ul> <li>Comments are marked with <code>#</code>.</li> <li><code>target:</code> is used to define a sub-command</li> <li><code>dependencies:</code> are used to define dependencies</li> <li><code>command:</code> is defines a command to be executed when a <code>dependencies</code> is newer than a <code>target</code></li> <li><code>&lt;TAB&gt; [command]</code> is used to denote commands</li> <li>Variables can be declared as <code>VAR = VAL.c</code> and read via <code>$(VAR)</code></li> <li>The pseudo-target <code>.PHONY</code> lists files to be ignored</li> <li>Variables can be substring-ed with <code>%</code>: <code>$(VAR:%.c=%.o)</code> results in <code>VAL.o</code></li> </ul> <p>Example makefile: https://github.zhaw.ch/thalmma5/snp-lab-code/blob/my-code/shared.mk</p>"},{"location":"22FS/SNP/summary_jonas.html#arrays","title":"Arrays","text":"<p>Arrays in C are always contiguous in memory. An array declaration does nothing more than reserve the necessary space in memory, place elements if applicable and return a pointer to the first value of the array. To access any other element of the array, the pointer to the first element is added to the index of the desired element times the <code>sizeof</code> result of the type. This also makes it impossible to implicitly know the size of the array.</p>"},{"location":"22FS/SNP/summary_jonas.html#array-sizes","title":"Array Sizes","text":"<p>There are a few ways to access the size/last element of an array. The obvious solution would be to store the last index during array creation, as arrays are immutable:</p> <pre><code>#define N_ENTRIES 100\nint array[N_ENTRIES] = { 0 };\n...\nfor (int i = 0; i &lt; N_ENTRIES; i++) {\nint a = array[i];\n}\n</code></pre> <p>The other method would be to use a data sentry/terminator value:</p> <pre><code>#define DATA_SENTRY (-1)\nint array[] = { 1, 2, 3, DATA_SENTRY };\n...\nfor (int i = 0; array[i] != DATA_SENTRY; i++) {\na = array[i];\n}\n</code></pre>"},{"location":"22FS/SNP/summary_jonas.html#working-with-strings","title":"Working with Strings","text":"<p>As mentioned already, strings are merely zero-terminated char arrays. As such, specia tools can be employed to make working with them easier. <code>string.h</code> is the most common tool for this.</p>"},{"location":"22FS/SNP/summary_jonas.html#most-important-functions","title":"Most important functions","text":"Signature Description Returns <code>int strlen(const char s[]);</code> Gets the length of the given string without the terminator(s) Length <code>int strcmp(const char s1[], const char s2[]);</code> Compares to strings The first <code>s1[i] - s2[i]</code> that is !=0, 0 otherwise <code>char* strcpy(char dest[], const char source[]);</code> Copies a string from source to dest C99: Copy of dest; C11: errno_t <code>char* strcat(char s1[], const char s2[]);</code> Concatenates two strings, s1 must have enough space Pointer to s1"},{"location":"22FS/SNP/summary_jonas.html#pointers","title":"Pointers","text":"<p>The dreaded topic: Pointers. Infamous for being stupidly hard to understand. However, pointers really aren't that hard to understand. Let's set the stage first. Every variable has to be stored somewhere in memory. We don't care where in memory since our random-access memory is stupidly fast nowadays. We still need know how to access that data, however. Memory addresses are used for that purpose. Whenever a variable is allocated in C, a pointer that points to a memory address is created. Memory addresses and by extension pointers are nothing more than integers. Usually 32-bits or 64-bits long. As such, you can also store a pointer in memory. Then, you get a pointer that points to a pointer that points to a piece of data! Pointers also have a data type so that C knows how far to read into memory to get all the data. Here are a few examples:</p> <p>A simple variable <pre><code>int a = 1;\n</code></pre></p> <p>A pointer that points to num <pre><code>int num = 1;\nint *a = &amp;num;\n</code></pre></p> <p>An array of pointers <pre><code>int *a[5];\n</code></pre></p> <p>A pointer to an array of ints <pre><code>int (*a)[5];\n</code></pre></p> <p>Pointer to pointer to int <pre><code>int **a;\n</code></pre></p> <p>Pointer to a function <pre><code>void (*out)(char *);\n</code></pre></p>"},{"location":"22FS/SNP/summary_jonas.html#reading-pointers","title":"Reading Pointers","text":"<p>When reading pointers, the <code>*</code> receives a different meaning. Where <code>p</code> is a pointer to an integer, the statement <code>int a = *p;</code> tells C to assign <code>a</code> the object that <code>p</code> is pointing to.</p> <p>Then there is a new operator, the <code>&amp;</code>. Where <code>a</code> is an int, the statement <code>int *p = &amp;a;</code> tells C to get the address where <code>a</code> is located and to store it in <code>p</code>.</p> <p>When reading arrays, the statement <code>array[3]</code> is equal to <code>*(array + 3)</code>. Note, however, that the <code>+ 3</code> in question is multiplied by the <code>sizeof</code> result of <code>array</code>'s type.</p>"},{"location":"22FS/SNP/summary_jonas.html#memory-management","title":"Memory Management","text":"<p>Most programs posess four memory sections: The code ith all the functions, global and static variables, the heap for dynamically allocated variables and the stack where local variables and parameters are stored.</p> <p></p>"},{"location":"22FS/SNP/summary_jonas.html#heap-memory","title":"Heap Memory","text":"<p>The heap is an immensly powerful tool that can be accessed with <code>stdlib.h</code>. Using <code>*malloc(size_t size)</code> a memory region of any size can be reserved for whatever purpose. <code>malloc</code> simply returns a pointer to it. However, it is very important that <code>free(void *ptr)</code> is called after that region of memory is not needed anymore, as otherwise memory leaks will occur.</p> <p>Basic example <pre><code>int *p = malloc(3 * sizeof(int)); // Returns NULL when no memory available\nif (p == NULL) { /* error handling */ }\np[1] = 5;\nfree(p); // Memory is released\n</code></pre></p> <p>Heap memory is most useful for dynamically allocated arrays or dynamic collections like linked lists.</p> <p>Follow these guidelines to prevent most issues:</p> bad gud <code>gets</code> Use <code>fgets</code> as the maximum chars can be constrained <code>strcpy</code>, <code>strcat</code> Use <code>strncpy</code> and <code>strncat</code> as copied chars can be limited <code>sprintf</code>, <code>scanf</code> Always add precision specifiers like <code>%.100s</code> <code>malloc</code>, <code>calloc</code>, <code>realloc</code> Check for NULL pointers <code>free</code> Only use it once <p>Always sanitize user input.</p>"},{"location":"22FS/SNP/summary_jonas.html#operating-systems","title":"Operating Systems","text":"<p>In essence, an operating system is an abstraction of direct access to CPU Time and other system resources. On the innermost layer there is the Kernel that has direct access to all components. On the outermost layer there are the system and user libraries and programs. To connect these two, system calls are used.</p>"},{"location":"22FS/SNP/summary_jonas.html#system-calls","title":"System Calls","text":"<p>A syscall submits a task to kernel that requests a certain resource or action to be executed for the calling user-mode program. System libraries provide implementations of this function to make development more portable. Around 300 different syscalls exist on linux.</p> <p>Under the hood, <code>syscall()</code> returns -1 when an error occurs and also sets the global <code>errno</code> variable to a relevant error code. When sucessful, returns 0. <code>syscall()</code> is rarely used as is since abstractions exist in glibc and other system libraries.</p>"},{"location":"22FS/SNP/summary_jonas.html#shells","title":"Shells","text":"<p>Shells provide a textual interface to the operating system. They can usually also execute shell-scripts for automation. Most shells consist of the 3 streams <code>stdin</code> for user input, <code>stdout</code> for program output and <code>stderr</code> for program error output.</p>"},{"location":"22FS/SNP/summary_jonas.html#linux-startup-sequence","title":"Linux Startup Sequence","text":"<ol> <li>BIOS initializes all components</li> <li>Bootloader loads minimal partition (MBR or GPT)</li> <li>Bootloader loads full mass storage partitions (ext4, NTFS, etc.)</li> <li>Linux Kernel starts up</li> <li>Init process starts (usually systemd)</li> <li>GUI loads, could be a DE or just a shell</li> </ol>"},{"location":"22FS/SNP/summary_jonas.html#system-memory","title":"System Memory","text":"<p>In order to prevent programs from tampering with unrelated memory, virtual memory is employed to limit access to system memory. For that to work, however, a memory management unit (MMU) is required. The MMU is tasked with translating logical memory addresses to physical addresses that the CPU can work with. Additionally, it contains a memory protection unit (MPU) that observes and prevents illegitimate resource access.</p>"},{"location":"22FS/SNP/summary_jonas.html#filesystem","title":"Filesystem","text":"<p>On Linux, everything is a file as it serves as very logical abstraction of most devices. Linux OSes mostly adhere to the FHS as described below.</p>"},{"location":"22FS/SNP/summary_jonas.html#filesystem-hierarchy-standard","title":"Filesystem Hierarchy Standard","text":"Directory Description / Root directory /bin Binaries that all users need /sbin System binaries /boot Bootloader files /dev Device files /etc System-wide config files /home User home directories /lib Essential libraries /media Removable media /mnt Mounted filesystems /opt Additional software packages /proc Process and kernel info /root Home of root /srv Server files /sys Device and driver infos /usr Read-only multi-user directory /var Logs and temporary files <p>Files are measured in bytes and can be read by multiple programs simultaneously. This is achieved using file descriptors. One gets created every time a program opens a file and is stored by the kernel until the program closes that file.</p>"},{"location":"22FS/SNP/summary_jonas.html#inodes","title":"Inodes","text":"<p>Files themselves are represented as Inodes, a management unit that associates each file with UUID called an ino. Thes Inodes contain necessary info about the file in questions. (except the file name) It's important to note that Inodes are strictly for accessing files programmatically as they are quite ugly to look at.</p>"},{"location":"22FS/SNP/summary_jonas.html#links","title":"Links","text":"<p>Links link a filename to an inode in some way.</p> <ul> <li>Hard link: A strict name-to-inode pair</li> <li>Symbolic Link: A unidirectional file-to-file link</li> </ul>"},{"location":"22FS/SNP/summary_jonas.html#file-types","title":"File Types","text":"<p>There are 7 different file types in Linux.</p> Type Identifier Use File <code>-</code> A regular file Directory <code>d</code> A file that contains files Symbolic link <code>l</code> A file that points to another file Named pipe <code>p</code> Unidirectional program-to-program exchange Socket <code>s</code> Inter process communication Block device <code>b</code> Random-acces storage device Character device <code>c</code> Serial input and output of storage <p>Different file types may be seekable or non-seekable. Seekable files allow arbitrary changing of the read and write position whereas non-seekable files do not.</p>"},{"location":"22FS/SNP/summary_jonas.html#working-with-files","title":"Working with Files","text":"<p>The <code>stdio.h</code> library provides most necessary functions to properly interact with files. Due to the volatile nature of filesystems, it is very important to always check for errors after each IO operation.</p> <p>Here is an example: <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nvoid perror_and_exit(const char *context)\n{\nperror(context); exit(EXIT_FAILURE); }\nint main(int argc, char *argv[])\n{\nif (argc &gt; 1) {\nFILE *f = fopen(argv[1], \"rb\");\nif (!f) perror_and_exit(argv[1]); // f is null if something went wrong\nint line_no = 1;\nint print_line_no = 1;\nint c;\nwhile((c = fgetc(f)) &gt;= 0) {\nif (print_line_no &amp;&amp; printf(\"%6d \", line_no++) &lt; 0) perror_and_exit(\"printf\"); // Something could happen while reading\nprint_line_no = c == '\\n';\nif (putchar(c) &lt; 0) perror_and_exit(\"putchar\"); // Writing is also dangerous\n}\nif (!feof(f)) PERROR_AND_EXIT(\"fgetc\"); // File may not end\nif (fclose(f) != 0) perror_and_exit(\"fclose\"); // File might not be closable\nreturn EXIT_SUCCESS;\n}\nreturn EXIT_FAILURE;\n}\n</code></pre></p>"},{"location":"22FS/SNP/summary_jonas.html#buffering","title":"Buffering","text":"<p>IO streams can be buffered differently depending on their application.</p> <ul> <li>Unbuffered: Data gets send ASAP (e.g. stderr)</li> <li>Fully buffered: Data gets only sent when the designated buffer is full (e.g. stdin, stdout)</li> <li>Line buffered: Data gets only sent when an end-of-line is read</li> </ul>"},{"location":"22FS/SNP/summary_jonas.html#processes-and-threads","title":"Processes and Threads","text":"<p>A process is an isolated program with its own part of memory. A process can have an arbitrary number of threads. The process contains the code and data of the program. It also has access to resources as if it were the only process running. However, the process can be interrupted at any point without it noticing.</p> <p>Context switches are used to swap active processes. As such, processes have different states:</p> <ul> <li>Running/active: Currently running</li> <li>Ready: Ready to run</li> <li>Blocked: Waiting for an event</li> <li>Terminated: Work ended but OS has not finished cleaning up</li> </ul> <p>As a rule of thumb, processes are expensive to create and maintain whearas threads are cheap to create but need to share memory.</p>"},{"location":"22FS/SNP/summary_jonas.html#lifecycle-of-a-process","title":"Lifecycle of a Process","text":"<p>At some point in any multi-threaded process, the process will split into another process. As such, the program must wait for the completion of the new process to ensure consistent behavior.</p> <p></p>"},{"location":"22FS/SNP/summary_jonas.html#functions","title":"Functions","text":"<p><code>fork()</code> duplicates the parent process and continues at the position. Retuns -1 on error, 0 if the process is the resulting child process and the pid &gt; 0 if it's the parent process.</p> <p><code>exit()</code> terminates the process and notifies the parent's <code>wait()</code> call.</p> <p><code>waitpid()</code> waits for a given pid to terminate.</p> <p><code>WEXITSTATUS()</code> gets the exit code from <code>wait()</code>.</p> <p>An example <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/wait.h&gt;\n#define PERROR_AND_EXIT(M) do { perror(M); exit(EXIT_FAILURE); } while(0)\nint main()\n{\npid_t cpid = fork();\nif (cpid == -1) PERROR_AND_EXIT(\"fork\");\nif (cpid &gt; 0) {\n// still in parent process\nprintf(\"Parent: %d forked child %d\\n\", getpid(), cpid);\nint wstatus;\npid_t wpid = waitpid(cpid, &amp;wstatus, 0); // wait blocking for child to terminate\nif (wpid == -1) PERROR_AND_EXIT(\"waitpid\");\nprintf(\"Parent: child %d exited with %d (status=0x%x)\\n\", cpid, WEXITSTATUS(wstatus), wstatus);\nexit(EXIT_SUCCESS);\n} else {\n// in child process\nprintf(\"Child: %d forked by parent %d\\n\", getpid(), getppid());\nsleep(3);\nexit(123);\n}\n}\n</code></pre></p> <p><code>ecec()</code> and <code>execv()</code> can be used to execute external programs from new processes. They require a path to the executable and the argv arguments array.</p> <p>Example <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/wait.h&gt;\n#define PERROR_AND_EXIT(M) do { perror(M); exit(EXIT_FAILURE); } while(0)\nint main()\n{\npid_t cpid = fork();\nif (cpid == -1) PERROR_AND_EXIT(\"fork\");\nif (cpid &gt; 0) {\n// still in parent process\nprintf(\"Parent: %d forked child %d\\n\", getpid(), cpid);\nint wstatus;\npid_t wpid = waitpid(cpid, &amp;wstatus, 0); // wait blocking for child to terminate\nif (wpid == -1) PERROR_AND_EXIT(\"waitpid\");\nprintf(\"Parent: child %d exited with %d (status=0x%x)\\n\", cpid, WEXITSTATUS(wstatus), wstatus);\nexit(EXIT_SUCCESS);\n} else {\n// in child process: replace current image by new image\nstatic char *eargv[] = { \"ls\", \"-l\", NULL }; // argv of the execv image below\nif (execv(\"/bin/ls\", eargv) == -1) PERROR_AND_EXIT(\"execv: /bin/ls\"); // Equivalent to ls -l\n// this line is never reached\n}\n}\n</code></pre></p> <p>The shorthand form <code>system()</code> exists. No forking or waiting required. <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;sys/wait.h&gt;\n#define PERROR_AND_EXIT(M) do { perror(M); exit(EXIT_FAILURE); } while(0)\nint main()\n{\nint ret = system(\"/bin/ls -l\");\nprintf(\"system() exited with %d (status=0x%x)\\n\", WEXITSTATUS(ret), ret); // WEXITSTATUS is set by system()\nreturn EXIT_SUCCESS;\n}\n</code></pre></p>"},{"location":"22FS/SNP/summary_jonas.html#working-with-pipelines","title":"Working with pipelines","text":"<p><code>popen()</code> allows a program to connect to another programs stdin or stdout. Returns a <code>FILE*</code>. <code>pclose()</code> closes the pipe.</p> <p>Example</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;errno.h&gt;\n#define PERROR_AND_EXIT(M) do { perror(M); exit(EXIT_FAILURE); } while(0)\nint main()\n{\nFILE *df = popen(\"df -k --output=pcent . 2&gt;/dev/null\", \"r\");\nif (!df) PERROR_AND_EXIT(\"popen: df -k .\");\nchar line[BUFSIZ], *end = NULL;\nlong int used = -1;\nwhile(fgets(line, BUFSIZ, df)) {\nused = strtol(line, &amp;end, 10);\nif (end &amp;&amp; end != line &amp;&amp; *end == '%') break; // line is spaces-number%-newline\nused = -1;\n}\nif (pclose(df)) PERROR_AND_EXIT(\"pclose()\");\nif (used &lt; 0 || used &gt; 100) {\nerrno = ERANGE;\nPERROR_AND_EXIT(\"df -k .\");\n}\nchar *msg\n= used &lt; 60 ? \"Plenty of disk space (%d%% available)\\n\"\n: used &lt; 80 ? \"Maybe some future disk space problems (%d%% available)\\n\"\n: used &lt; 90 ? \"Need to clear out files (%d%% available)\\n\"\n: \"You may face soon some severe disk space problems (%d%% available)\\n\";\nprintf(msg, 100-used);\nreturn EXIT_SUCCESS;\n}\n</code></pre>"},{"location":"22FS/SNP/summary_jonas.html#lifecycles-of-threads","title":"Lifecycles of Threads","text":"<p>glibc contains functions for thread creation. <code>pthread_create()</code> is used to create a new thread that takes a function pointer to work on.</p> <p><code>pthread_join()</code> waits for a given thread and then frees system resources.</p> <p><code>pthread_detach()</code> changes termination behavior so that resources are freed as soon as the new thread terminates. Joining is then undefined.</p> <p>Example  <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;errno.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;pthread.h&gt;\n#define PERROR_AND_EXIT(M) do { perror(M); exit(EXIT_FAILURE); } while(0)\n#define CHECKED_PTHREAD(C) do { int ret = (C); if (ret) { errno = ret; PERROR_AND_EXIT(#C); } } while(0)\nvoid *worker(void *arg)\n{\nprintf(\"worker\\n\");\nsleep(3);\nstatic int ret_value = 123;\nreturn &amp;ret_value;\n}\nint main()\n{\npthread_t thread;\nCHECKED_PTHREAD(pthread_create(&amp;thread, NULL, worker, NULL));\nprintf(\"main\\n\");\nstatic void *retval;\nCHECKED_PTHREAD(pthread_join(thread, &amp;retval));\nprintf(\"worker retval = %d\\n\", *((int*)retval));\nexit(EXIT_SUCCESS);\n}\n</code></pre></p>"},{"location":"22FS/SNP/summary_jonas.html#inter-process-communication","title":"Inter Process Communication","text":"<p>In order to facilitate communication between processes, glibc provides many POSIX functions that allow such communication.</p>"},{"location":"22FS/SNP/summary_jonas.html#posix-signals","title":"POSIX Signals","text":"<p>Any proccess can send any signal to another process. A process can decide whether to respond with a default action, with an event handler or just ignore the signal entirely.</p> Signal Default action Description SIGINT Terminate Ctrl-C interrupt SIGQUIT Core dump Ctrl-\\ quit SIGABRT Core dump Abort signal from <code>abort()</code> or <code>assert()</code> SIGKILL Terminate Kill SIGSEGV Core dump Illegal memory access SIGALRM Terminate Timer ran out from <code>alarm()</code> SIGTERM Terminate Terminate SIGSTOP Stop process Stop process SIGCONT Reactivate process Reactivate process <ul> <li><code>kill()</code> sends a signal to a process</li> <li><code>pause()</code> blocks until the process is killed or any signal is received</li> <li><code>sigaction()</code> registers a signal handler</li> <li><code>sigfillset()</code> returns a <code>sigset_t</code> to specify which signals to block while the handler is being run</li> <li><code>raise()</code> sends a signal to the own process</li> </ul> <p>sigaction example <pre><code>// set action handler\nstruct sigaction a = { 0 };\na.sa_flags = SA_SIGINFO;\na.sa_sigaction = handler;\nsigfillset(&amp;a.sa_mask);\nsigaction(sig, &amp;a, NULL);\n</code></pre></p>"},{"location":"22FS/SNP/summary_jonas.html#posix-pipes","title":"POSIX Pipes","text":"<p>Pipes are first in, first out data buffers with a maximum size. File descriptors are used to communicate current access to the OS. Pipes are also always synchronous.</p> <p><code>pipe(int[2])</code> followed by <code>fork()</code> creates an anonymouse pipe and <code>mkfifo()</code> creates a named pipe which acts like a file.</p> <p>Anonymous pipe example <pre><code>#include &lt;sys/types.h&gt;\n#include &lt;unistd.h&gt;\n...\nint fd[2];\npipe(fd);\npid_t cpid = fork();\n...\nif (cpid &gt; 0) { // still in parent process: read from pipe\nclose(fd[1]); // close write-file-descriptor\nread(fd[0], ...); // use read-file-descriptor\n...\n} else { // in child process: write to pipe\nclose(fd[0]); // close read-file-descriptor\nwrite(fd[1], ...); // use write-file-descriptor\n}\n...\n</code></pre></p>"},{"location":"22FS/SNP/summary_jonas.html#anonymous-pipes","title":"Anonymous Pipes","text":"<p>Anonymous pipes are also unidirectional. For bidirection communication, two pipes are needed.</p> <ul> <li><code>pipe()</code> opens two file descriptors. A process can only use one of these descriptors</li> <li><code>close()</code> closes a descriptor</li> <li><code>read()</code> reads from pipe (blocking)</li> <li><code>write()</code> writes to pipe (blocking)</li> </ul> <p>Using <code>fcntl()</code> makes a pipe non-blocking <pre><code>void set_nonblocking(int fd) {\nint flags = fcntl(fd, F_GETFL, 0);\nif (flags == -1) PERROR_AND_EXIT(\"fcntl\");\nif (fcntl(fd, F_SETFL, flags | O_NONBLOCK) == -1) PERROR_AND_EXIT(\"fcntl\");\n}\n...\nint pfd[2];\nif (pipe(pfd) == -1) PERROR_AND_EXIT(\"pipe\");\nset_nonblocking(pfd[0]); // set reading file descriptor to non-blocking\n...\n</code></pre></p> <p>This results in some extra conditions having to be checked <pre><code>int n = read(pfd[0], buf, MSGSIZE);\nif (n &gt; 0) { ... } // use received data\nelse if (n == 0) { ... } // close and stop polling\nelse if (errno == EAGAIN) { ... } // has to wait for poll interval - avoid spin-lock\nelse { ... } // real error\n</code></pre></p>"},{"location":"22FS/SNP/summary_jonas.html#named-pipes","title":"Named Pipes","text":"<p>Can be created within the shell: <code>mkfifo [path] -m [access mode]</code>. Blocks until both sides are open.</p> <p>In C, <code>mkfifo()</code> is used and functions like a file.</p>"},{"location":"22FS/SNP/summary_jonas.html#posix-message-queues","title":"POSIX Message Queues","text":"<p>Queues have a maximum number of messages and a maximum size in bytes, reperesented by the struct <code>mq_attr</code>. Multiple processes can read from and write to a message queue. Reading consumes a message. Names must also always start with a <code>/</code>. By default, queues exist in <code>/dev/mqueue</code>.</p> <p>Important: Message Queues functions are part of <code>librt.a</code> so the needs the fla -lrt.</p> <p>Example <pre><code>#include &lt;mqueue.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;errno.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/wait.h&gt;\n#define PERROR_AND_EXIT(M) do { perror(M); exit(EXIT_FAILURE); } while(0)\n#define QNAME \"/demo\" // the name must start with a slash\n#define MSIZE 10\nint main() {\nint q = 0, cpid = 0, n = 0, wpid = 0;\nstruct mq_attr a = { .mq_maxmsg = 10, .mq_msgsize = MSIZE };\nif ((q = mq_open(QNAME, O_CREAT|O_RDWR|O_NONBLOCK|O_EXCL, 0666, &amp;a)) == -1) PERROR_AND_EXIT(\"mq_open\");\nif ((cpid = fork()) == -1) PERROR_AND_EXIT(\"fork\");\nif (cpid &gt; 0) { // parent: shares queue descriptor with child\nif (mq_unlink(QNAME) == -1) PERROR_AND_EXIT(\"mq_unlink\"); // remove it from the filesystem again\nchar msg[MSIZE+1]; // buffer allows for final '\\0' to allow interpretation as string\nwhile(wpid == 0) { // read messages while the child process has not yet terminated\nsleep(1); // poll interval for non-blocking mq_receive() and non-blocking waitpid()\nwhile ((n = mq_receive(q, msg, MSIZE, NULL)) &gt; 0) { // read while there are messages\nmsg[n] = '\\0'; // prepare for printf\nprintf(\"Message: '%s'\\n\", msg);\n}\nif (n == -1 &amp;&amp; errno != EAGAIN) PERROR_AND_EXIT(\"mq_receive\"); // non-blocking read handling\nif ((wpid = waitpid(cpid, NULL, WNOHANG)) == -1) PERROR_AND_EXIT(\"waitpid\"); // non-blocking\n}\nif (mq_close(q) == -1) PERROR_AND_EXIT(\"mq_close\"); // close when completed\n} else { // child: shares queue descriptor with parent\nif (mq_send(q, \"Hello\", sizeof(\"Hello\"), 1) == -1) PERROR_AND_EXIT(\"mq_send\");\nsleep(2);\nif (mq_send(q, \"Queue\", sizeof(\"Queue\"), 1) == -1) PERROR_AND_EXIT(\"mq_send\");\n}\n}\n</code></pre></p>"},{"location":"22FS/SNP/summary_jonas.html#posix-sockets","title":"POSIX Sockets","text":"<p>Logically connect to processes with a socket. Abstracts all necessary system needed to actually make such a connection.</p> <p>Usual client process:</p> <ul> <li>Define socket</li> <li>Request connection to server</li> <li>Exchange data</li> <li>Close socket</li> </ul> <p>Usual server process:</p> <ul> <li>Define socket</li> <li>Wait for connection</li> <li>Accept or reject connection</li> <li>Exchange data</li> <li>Close socket</li> </ul> <p>For non-connection-oriented connections the same happens except no connection requests are exchanged.</p>"},{"location":"22FS/SNP/summary_jonas.html#synchronization","title":"Synchronization","text":"<p>This part highlights the most common synchronization methods used in C.</p>"},{"location":"22FS/SNP/summary_jonas.html#mutual-exclusion","title":"Mutual exclusion","text":"<p>Mutexes in C are very simple. Trying to lock a mutex that is already locked results in blocking behavior until that mutex is released. A recursive option can also be given that allows a function to lock and unlock a mutex multiple times.</p> <p>Recursive example <pre><code>#include &lt;sys/types.h&gt;\n#include &lt;pthread.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;errno.h&gt;\n#define FATAL(M) do { perror(M); exit(EXIT_FAILURE); } while(0)\n#define N 10000000\n#define MUTEXATTR PTHREAD_MUTEX_RECURSIVE\npthread_mutexattr_t mutex_attr;\npthread_mutex_t mutex;\nint value = 0;\nvoid calc(int step)\n{\nif (pthread_mutex_lock(&amp;mutex) != 0) FATAL(\"inner lock\");\nvalue += step;\nif (pthread_mutex_unlock(&amp;mutex) != 0) FATAL(\"inner unlock\");\n}\nvoid *count(void *p)\n{\nfor(int i = 0; i &lt; N; i++) {\nif (pthread_mutex_lock(&amp;mutex) != 0) FATAL(\"lock\");\ncalc(*(int*)p);\nif (pthread_mutex_unlock(&amp;mutex) != 0) FATAL(\"unlock\");\n}\n}\nint main(void)\n{\nif (pthread_mutexattr_init(&amp;mutex_attr) != 0) FATAL(\"mutexattr_init\");\nif (pthread_mutexattr_settype(&amp;mutex_attr, MUTEXATTR) != 0) FATAL(\"mutexattr_set\");\nif (pthread_mutex_init(&amp;mutex, &amp;mutex_attr) != 0) FATAL(\"mutex_init\");\npthread_t th_inc;\npthread_t th_dec;\nint inc = +1;\nint dec = -1;\nif (pthread_create(&amp;th_inc, NULL, count, &amp;inc) != 0) FATAL(\"create\");\nif (pthread_create(&amp;th_dec, NULL, count, &amp;dec) != 0) FATAL(\"create\");\nif (pthread_join(th_inc, NULL) != 0) FATAL(\"join\");\nif (pthread_join(th_dec, NULL) != 0) FATAL(\"join\");\nif (value != 0) fprintf(stderr, \"ERROR: exp=%d, act=%d\\n\", 0, value);\n}\n</code></pre></p>"},{"location":"22FS/SNP/summary_jonas.html#semaphores","title":"Semaphores","text":"<p>A semaphore is essentially a street light for threads. <code>sem_init</code> sets the initial value. <code>sem_post</code> decrement said value or block if that value is 0. <code>sem_wait</code> increases that value if sem_post was called earlier.</p> <p>Semaphore example <pre><code>#include &lt;sys/types.h&gt;\n#include &lt;pthread.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;limits.h&gt;\n#include &lt;semaphore.h&gt;\n#define FATAL(M) do { perror(M); exit(EXIT_FAILURE); } while(0)\n#define CHECK(E,A,M) if((E)==(A));else fprintf(stderr,\"ERROR: \"M\": exp=%d, act=%d\\n\",E,A)\n#define N 10000\nvolatile int array[N] = { 0 }; // shared variable: init in one thread, then use in both\nsem_t sem;\nvoid *min(void *arg) // initialize the data and calculate min value of all\n{\nfor(int i = 0; i &lt; N; i++) array[i] = i - N/2; // init the shared data -N/2...N-1-N/2\nif (sem_post(&amp;sem) == -1) FATAL(\"post\");\nint value = INT_MAX;\nfor(int i = 0; i &lt; N; i++) if (value &gt; array[i]) value = array[i];\nCHECK(-N/2, value, \"wrong min value\");\nreturn NULL;\n}\nvoid *max(void *arg) // calculate max value of already initialized data\n{\nif (sem_wait(&amp;sem) == -1) FATAL(\"wait\");\nint value = INT_MIN;\nfor(int i = 0; i &lt; N; i++) if (value &lt; array[i]) value = array[i];\nCHECK(N-1-N/2, value, \"wrong max value\");\nreturn NULL;\n}\nint main(void)\n{\nif (sem_init(&amp;sem, 0, 0) == -1) FATAL(\"sem\");\npthread_t th_max;\npthread_t th_min;\nif (pthread_create(&amp;th_max, NULL, max, NULL) != 0) FATAL(\"create\");\nif (pthread_create(&amp;th_min, NULL, min, NULL) != 0) FATAL(\"create\");\nif (pthread_join(th_max, NULL) != 0) FATAL(\"join\");\nif (pthread_join(th_min, NULL) != 0) FATAL(\"join\");\n}\n</code></pre></p> <p>Semaphores can exist in memory or as files.</p>"},{"location":"22FS/SNP/summary_jonas.html#examples","title":"Examples","text":""},{"location":"22FS/SNP/summary_jonas.html#producer-consumer-problem","title":"Producer-Consumer Problem","text":""},{"location":"22FS/SNP/summary_jonas.html#reader-writer-problem","title":"Reader-Writer Problem","text":"<p>Allow multiple readers but only one writer.</p> <p></p>"},{"location":"22FS/THIN/00_Fragen.html","title":"Fragen","text":"<ul> <li>Satz von Rice</li> <li>Das heisst doch, dass eine Menge von entscheidbaren Funktionen unentscheidbar ist?</li> <li>F\u00fcr was werden Loop/While/... Programme ben\u00f6tigt? Und wieso sind sie so restriktiv (z.B. \\(x_0=x_1+x_2\\) ist nicht erlaubt, obwohl es mit einem Loop-Programm selbst machbar ist)? </li> <li>Eine Frage wegen der Entscheidbarkeit vom Halteproblem: Wie passen die folgende zwei Folien zusammen:</li> </ul> <p>und</p> <p></p> <p>und</p> <p></p> <p>Laut den Folien ist das Spezielle Halteproblem, das Halteproblem und das leere Halteproblem semi-entscheidbar, weill H0 semi entscheidbar ist und nicht entscheidbar weil Hs nicht entscheidbar ist. </p> <ul> <li>Nicht-Entscheidbar = Es ist nicht entscheidbar, k\u00f6nnte aber semi-entscheidbar sein</li> <li>Unentscheidbar = Es h\u00e4lt nie an</li> <li> <p>In der Folien werden die Begriffe als Synonyme verwendet</p> </li> <li> <p>\"So kann auch komplement von M nicht nach (1) semi-entscheidbar sein\"? </p> </li> </ul> <p>Wenn NP=P ist, dann k\u00f6nnten alle NP-Probeleme deterministisch in Polynomzeit gel\u00f6st werden.</p>"},{"location":"22FS/THIN/01_Definitionen.html","title":"Definitionen","text":""},{"location":"22FS/THIN/01_Definitionen.html#alphabet","title":"Alphabet","text":"<p>Ein Alphabet ist ein endliche, nichtleere Menge von Symbolen.</p> <p>Als Beispiel: \\(\\Sigma=\\{a, b, c\\}\\) \\(\\N\\) w\u00e4re kein Alphabet, das es nicht endlich ist!</p>"},{"location":"22FS/THIN/01_Definitionen.html#worter","title":"W\u00f6rter","text":"<p>Ein Wort ist eine endliche Folge von Symbolen eines bestimmten Alphabets.</p> <p>Das leere Wort \\(\\varepsilon\\) ist ein Wort, welches keine Symbole enthaltet. Dieses Wort gibt es \u00fcber jedem Alphabet.</p> <p>Als Beispiel: \\(abc\\) ist ein Wort \u00fcber dem Alphabet \\(\\Sigma_{lat}\\). W\u00f6rter k\u00f6nnen auch als Mengenschreibweisse dargestellt werden.</p>"},{"location":"22FS/THIN/01_Definitionen.html#lange-eines-wortes","title":"L\u00e4nge eines Wortes","text":"<p>Der Betrag eines Wortes ist die L\u00e4nge des Wortes.</p> <p>Beispiel: </p> <ul> <li>\\(|abc|=3\\)</li> <li>\\(|\\varepsilon|=0\\)</li> </ul>"},{"location":"22FS/THIN/01_Definitionen.html#absolute-haufigkeit","title":"Absolute H\u00e4ufigkeit","text":"<p>\\(|w|_x bezeichnet die absolute H\\)uffigkeit eines Symboles \\(x\\) in einem Wort \\(w\\)</p> <p>Beispiel: </p> <ul> <li>\\(|abc|_a=1\\)</li> <li>\\(|100111|_1=4\\)</li> <li>\\(|\\varepsilon|_{\\varepsilon}=1\\)</li> </ul>"},{"location":"22FS/THIN/01_Definitionen.html#spiegelwort","title":"Spiegelwort","text":"<p>Mit \\(w^R\\) wird das Spiegelwort zu \\(w\\) bezeichnet. $$ W^R=(x_1, x_2...x_n)^R=(x_n...x_2,x_1) $$ Dabei gilt, dass \\(|w|=|w^R|\\) und \\(|w|_x=|w^R|_x\\)</p> <p>Wenn \\(w=w^R\\) gilt, dann wird \\(w\\) als Palindrom bezeichnet</p> <p>Beispiel:</p> <ul> <li>\\((abc)^R=cba\\)</li> </ul>"},{"location":"22FS/THIN/01_Definitionen.html#teile-von-worter","title":"Teile von W\u00f6rter","text":"<p>Der start eines Wortes \\(w\\) wird Pr\u00e4fix genannt.  Symbole in der Mitte werden Infixe oder auch Teilw\u00f6rter.  Das Ende eines Wortes \\(w\\) wird Suffix genannt.</p> <p>Ein Pr\u00e4fix, Infix oder Suffix ist echt, wenn sie nicht gleich das Wort \\(w\\) ist</p>"},{"location":"22FS/THIN/01_Definitionen.html#menge-aller-worter-mit-einer-lange","title":"Menge aller W\u00f6rter mit einer L\u00e4nge","text":"<p>Die Menge aller W\u00f6rter der L\u00e4nge \\(k\\) \u00fcber einem Alphabet \\(\\Sigma\\) wird mit \\(\\Sigma^k\\) bezeichnet.</p> <p>\\(\\Sigma^0=\\{\\varepsilon\\}\\) Dies ist per Definition f\u00fcr alle Alphabete gegeben.</p> <p>Beispiel: \\(\\{0, 1\\}^2=\\{00, 01, 10, 11\\}\\)</p>"},{"location":"22FS/THIN/01_Definitionen.html#kleenesche-hulle","title":"Kleenesche H\u00fclle","text":"<p>Die Menge aller W\u00f6rter \\(\\Sigma^*\\) in einem Alphabet wird Kleenesche H\u00fclle genannt und ist abz\u00e4hlbar Unendlich</p> <p>\\(\\Sigma^+=\\Sigma^*\\setminus\\{\\varepsilon\\}\\)  und ist die Menge aller W\u00f6rter \u00fcber \\(\\Sigma\\) ohne das leere Wort</p>"},{"location":"22FS/THIN/01_Definitionen.html#konkatination","title":"Konkatination","text":"<p>\\(x\\circ y=xy\\) heisst, dass die W\u00f6rter \\(x\\) und \\(y\\) zusammen verkettet werden. Die W\u00f6rter m\u00fcssen nicht aus demselben Alphabet kommen.</p> <p>Es gilt zudem: \\(|x|+|y|=|xy|=|x\\circ y|\\)</p> <p>Beispiel: \\(x=22\\) und \\(y=100\\), dann gilt: \\(xy=x\\circ y=22100\\)</p>"},{"location":"22FS/THIN/01_Definitionen.html#wortpotenzen","title":"Wortpotenzen","text":"<p>Die Wortpotenz ist definiert mit der folgenden Defintion $$ x^0=\\varepsilon\\ x^{n+1}=x^n\\circ x $$</p> <p>Beispiel: </p> <ul> <li>\\(a^3=a^2a=a^1aa=a^0aaa=aaa\\)</li> <li>\\(bbababababaaa=b^2(ab)^4a^3\\) (Dies ist nicht die einzige L\u00f6sung)</li> </ul>"},{"location":"22FS/THIN/01_Definitionen.html#sprachen","title":"Sprachen","text":"<p>Eine Teilmenge von W\u00f6rtern nennt man eine Sprache (Dies kann auch als \\(L\\subseteq \\Sigma^*\\) geschrieben werden)</p> <p>\\(\\Sigma*\\) ist auch eine Sprache \u00fcber dem Alphabet \\(\\Sigma\\)</p> <p>Wenn \\(\\Sigma_1 \\subseteq \\Sigma_2\\) und \\(L\\) eine Sprache \u00fcber \\(\\Sigma_1\\) ist, dann ist \\(L\\) auch eine Sprache  \u00fcber \\(\\Sigma_2\\)</p> <p>\\(\\emptyset\\) ist eine leere Sprache; Also eine Sprache ohne W\u00f6rter und gilt f\u00fcr jedes Alphabet (\\(\\empty\\neq \\{\\varepsilon\\}\\)) </p> <p>Sprache k\u00f6nnen aus unendlich vielen W\u00f6rtern bestehen. Die W\u00f6rter m\u00fcssen aus einem endlichen Alphabet gebildet werden und m\u00fcssen endlich lang sein.</p> <p>Darstellungsm\u00f6glichkeiten:</p> <ul> <li>\\(L=\\{\\varepsilon, 10, 1100, 111000, ...\\}\\)</li> <li>in Prosa</li> <li>\\(L=\\{1^n0^n|n\\in \\N\\}\\)</li> </ul>"},{"location":"22FS/THIN/01_Definitionen.html#sprachen-konkatenation","title":"Sprachen-Konkatenation","text":"<p>\\(A\\subset \\Sigma^*\\) und \\(B\\subset \\Gamma^*\\) sind zwei Sprachen, dann ist \\(AB=\\{uv|u\\in A \\text{ und } v \\in B\\}\\)</p> <p>Zudem gilt: Ist \\(A\\) eine Sprache \u00fcber \\(\\Sigma\\) und \\(B\\) eine Sprache \u00fcber \\(\\Gamma\\), dann ist \\(AB\\) eine Sprache \u00fcber dem Alphabet \\(\\Sigma \\cup\\Gamma\\)</p>"},{"location":"22FS/THIN/01_Definitionen.html#kleenesche-hulle-einer-sprache","title":"Kleenesche H\u00fclle einer Sprache","text":"<p>Die Kleenesche H\u00fclle \\(A*\\) einer Sprache \\(A\\)  ist durch \\({\\varepsilon}\\cup A \\cup AA \\cup AAA \\cup ...\\)</p> <p>Die Kleenische H\u00e8lle einer Sprache ist selbst eine Liste von W\u00f6rter, da die Liste aber unendlich ist, ist sie selbst keine Sprache (stimmt das?)</p>"},{"location":"22FS/THIN/01_Definitionen.html#komplement-einer-sprache","title":"Komplement einer Sprache","text":"<p>Das Komplement einer Sprache sind alle W\u00f6rter, welche nicht in der Sprache sind</p> <p>\\(\\overline L=\\Sigma^*-L=\\Sigma^*\\setminus L\\)</p>"},{"location":"22FS/THIN/01_Definitionen.html#entscheidungsproblem","title":"Entscheidungsproblem","text":"<p>Sei eine Sprache \\(L\\) \u00fcber einem Alphabet \\(\\Sigma\\) gegeben. Das Entscheidungsproblem \\((\\Sigma, L)\\) ist die folgende:</p> <p>Input: Eine Sprache \\(L\\) und ein Wort \\(x\\in\\Sigma^*\\) Output: JA, falls \\(x\\in L\\) ist und NEIN, falls \\(x\\not \\in L\\) ist</p> <p>In Deutsch: \"Geh\u00f6rt ein Wort eines Alphabetes zu einer Sprache?\"</p>"},{"location":"22FS/THIN/01_Definitionen.html#chomsky-hirarchie","title":"Chomsky-Hirarchie","text":""},{"location":"22FS/THIN/01_Definitionen.html#fragen","title":"Fragen","text":"<ul> <li>Ist die Kleenische H\u00fclle einer Sprache wieder eine Sprache? - Ja</li> </ul>"},{"location":"22FS/THIN/02_RegEx.html","title":"RegEx","text":""},{"location":"22FS/THIN/02_RegEx.html#syntax-vs-semantik","title":"Syntax vs Semantik","text":"<p>Der Syntax sagt aus, wie die Symbole des Alphabetes zu W\u00f6rter angeordnet werden.</p> <p>Die Semantik sagt aus, was die Symbole bedeuten (z.B. dass die Zahl 101 im Zehnersystem die Zahl 5 ist.)</p>"},{"location":"22FS/THIN/02_RegEx.html#syntax","title":"Syntax","text":"<ul> <li>\\((0|1)\\) - entweder 0 oder 1 (Manchmal wird dies auch als \\((0+1)\\) geschrieben)</li> <li>\\(x^*\\) - beliebig oft \\(x\\), auch null mal</li> <li>\\(x^+=xx^*\\) - mindestens 1-mal \\(x\\)</li> <li>\\(x?=(x|\\epsilon)\\) - \\(x\\) ist optional</li> <li>\\(\\epsilon\\) - eine leere Regular-Expression. Diese matcht nichts</li> <li>\\([x_1, x_2, ...,x_k]=x_1|x_2|...|x_k\\) </li> <li>\\(\\oslash\\) - eine leere Menge von Regular-Expressions</li> <li>\\(\\O\\) - eine leere Sprache</li> </ul>"},{"location":"22FS/THIN/02_RegEx.html#regular-expression-sprache","title":"Regular-Expression-Sprache","text":"<p>Die Sprache \\(RA_\\Sigma\\) i</p> <p>Eine Menge von Regexe f\u00fcr das Alphabet \\(\\Sigma\\) ist eine Sprache \u00fcber dem Alphabet \\(\\{\\O, \\epsilon, ^*, (, ), \\vert\\} \\cup \\Sigma\\)</p> <p>\"Punkt vor Strich\"-Regeln f\u00fcr Regex:</p> <ul> <li>\\(^*\\) vor Konkatenation</li> <li>Konkatenanation vor \\(\\vert\\)</li> </ul>"},{"location":"22FS/THIN/02_RegEx.html#definitionen","title":"Definitionen","text":"<ul> <li>\\(L(\\emptyset)=\\emptyset\\)</li> <li>\\(L(\\epsilon)=\\{\\varepsilon\\}\\)</li> <li>\\(L(a)=\\{a\\}\\)</li> <li>\\(L(R^*)=L(R)^*\\)</li> <li>\\(L(R|S)=L(R) \\cup L(S)\\)</li> <li>\\(L(RS)=L(R)L(S)\\)</li> </ul>"},{"location":"22FS/THIN/02_RegEx.html#wann-ist-sprachen-regular","title":"Wann ist Sprachen regul\u00e4r","text":"<p>Eine Sprache nennt sich regul\u00e4r, wenn sie mit einem Regul\u00e4ren Ausdruck gebildet werden kann. Daf\u00fcr gibt es eine Regeln:</p> <p>Die Sprache \\(L_1\\) und \\(L_2\\) sind jeweils regul\u00e4r:</p> <ol> <li>\\(L_1L_2\\) ist regul\u00e4r</li> <li>\\(L_1\\cup L_2\\) (Vereinigung) ist regul\u00e4r</li> <li>\\(L_1\\cap L_1\\) (Schnittmenge) ist regul\u00e4r</li> <li>\\(L_1\\setminus L_2\\) (Differenz) ist regul\u00e4r</li> <li>\\(L_1^*\\) ist regul\u00e4r</li> <li>\\(\\overline {L_1}\\) ist regul\u00e4r</li> </ol> <p>Kurz gesagt: Wenn zwei Sprachen regul\u00e4r sind, ist das Resultat von einem Operator mit diesen Sprachen regul\u00e4r</p>"},{"location":"22FS/THIN/02_RegEx.html#fragen","title":"Fragen","text":"<ol> <li>Kommt es nicht auf den Regex darauf an, ob das Alphabet eine Teilmenge der Sprache ist?</li> <li>Wenn \\(R\\) ein Wort ist, w\u00e4re die Kleenische H\u00fclle nicht eine Sprache? Wenn ja, wieso ist eine Sprache ein Element einer anderen Sprache?</li> <li>Was bedeutet \\(\\O\\)?</li> <li>Was ist die Kleenische H\u00fclle eines Regex? (Folie 7)</li> </ol>"},{"location":"22FS/THIN/03_Endliche%20%20Automaten.html","title":"Endliche Automaten","text":"<ul> <li>Endliche Automaten haben keine Variabeln oder Speicher; Das einzige gespeicherte, ist der aktuelle Zustand</li> <li>Endliche Automaten arbeiten in Echtzeit</li> <li>Das \"Resultat\" ist der Endzustand und ob der Endzustand akkzeptiert/valid ist</li> </ul>"},{"location":"22FS/THIN/03_Endliche%20%20Automaten.html#definition-eines-endlichen-autommaten","title":"Definition eines Endlichen Autommaten","text":"<p>Endlichen Automat: \\(M=(Q, \\Sigma, \\delta, q_0, F)\\)</p> <ul> <li>\\(Q\\) : Alle Zust\u00e4nde des Automaten \\(Q=\\{q_0, q_1, ...,q_n\\}\\)</li> <li>\\(\\Sigma\\): Eingabealpabet</li> <li>\\(\\delta: Q\\times \\Sigma \\rightarrow Q\\): \u00dcbergangsfunktionen, welche von einem Zustand und einem Eingabe Symbol zum n\u00e4chsten Zustand f\u00fchrt</li> <li>\\(q_0\\): Startzustand</li> <li>\\(F\\subseteq Q\\): Menge der akzeptierten Zust\u00e4nden. Mindestens ein Zustand muss akzeptiert sein</li> </ul>"},{"location":"22FS/THIN/03_Endliche%20%20Automaten.html#konfiguration","title":"Konfiguration","text":"<p>Eine Konfiguration ist: \\((q, w) \\in Q\\times\\Sigma^*\\) oder in Worten ist eine Konfiguration ein Zustand mit zus\u00e4tzlich das noch zu verarbeitende Wort</p> <p>Eine Startkonfiguration ist ein Element aus \\(\\{q_0\\}\\times \\Sigma^*\\) . Als Beispiel: \\((q_0, w_1)\\)</p> <p>Eine Endkonfiguration ist: \\((q, w)\\in Q\\times\\{\\epsilon\\}\\). Als Beispiel: \\((q2, \\epsilon)\\)</p> <p>Das Wort \\(w\\) in einer Konfiguration \\((q, w)\\) ist der noch zu verarbeitende Teil des Inputwortes. Es ist daher ein Sufix des Inputwortes.</p>"},{"location":"22FS/THIN/03_Endliche%20%20Automaten.html#berechnungsschritte","title":"Berechnungsschritte","text":"<p>Der Berechnungsschritt \\(\\vdash_M\\) der Endlichen Maschine \\(M\\) ist definiert als \\((q, w)\\vdash_M(p,x)\\), wenn \\(w=ax, a\\in\\Sigma\\) und \\(\\delta(q, a)=p\\) ergibt. </p> <p>Oder in Deutsch \\(\\vdash_M\\) der Endlichen Maschine M ist der Berechnungschritt zwischen einem und dem n\u00e4chsten Zustand.</p>"},{"location":"22FS/THIN/03_Endliche%20%20Automaten.html#beispiel","title":"Beispiel","text":"<p>Bei dieser Maschine w\u00fcrde folgendes Beispiel g\u00fcltig sein: \\((q0, a_1a_2a_3)\\vdash_A(q_1, a_2a_3)\\vdash_A(q_2, a_3)\\vdash_A(q4, \\epsilon)\\)</p>"},{"location":"22FS/THIN/03_Endliche%20%20Automaten.html#berechnungen","title":"Berechnungen","text":"<p>Eine endliche Folge von Berechnungsschritten, nennt man Berechnung. Es wird die folgende Notation ben\u00fctzt: \\((q_a, w_1,w_2...w_n)\\vdash_M(q_b, w_2...w_n)\\vdash_M...\\vdash_M(q_e,w_j...w_n)\\vdash_M=(q_a, w_1,w_2...w_n)\\vdash^*_M(q_e, w_j...w_n)\\)</p> <p>Der \\(\\vdash^*\\) Operator stellt alle Berechnungschritten zwischen den zwei angegebenen Schritten dar.</p>"},{"location":"22FS/THIN/03_Endliche%20%20Automaten.html#ausfuhrung-von-automaten-akzeptieren-verwerfen-stranden-abfallzustand","title":"Ausf\u00fchrung von Automaten (akzeptieren, verwerfen, stranden, Abfallzustand)","text":"<p>Eine Berechnung wird akzeptiert, wenn der Endzustand \\(q_e\\in F\\) ist, also ein Endzustand ist. Falls dies nicht der Fall ist, wird die Berechnung verworfen. Die Maschine wird dann auch gestrantet genannt.</p> <p>Wenn ein Eingabewort nicht verarbeitet werden kann, weil es f\u00fcr ein Input-Symbol keinen \u00dcbergang gibt, geht die Maschine zum Abfallzustand. Das Eingabewort wird verworfen.</p>"},{"location":"22FS/THIN/03_Endliche%20%20Automaten.html#sprache-eins-endlichen-automaten","title":"Sprache eins endlichen Automaten","text":"<p>Die Sprache eines endlichen Automaten \\(M\\) besteht aus allen W\u00f6rtern, welche bei \\(M\\) auf einem akzeptierenden Zustand fallen.</p> <p>\\(L(M)=\\{w\\in\\Sigma^*|\\text{Berechnung von } M \\text{ auf } w \\text{ ist akzeptiert}\\}\\)</p> <p>Jeder endlichen Automat kann als Regex geschrieben werden und umgekehrt.</p>"},{"location":"22FS/THIN/03_Endliche%20%20Automaten.html#elemente","title":"Elemente","text":"Was Beschreibung Der Startzustand Normaler Zustand Akzeptierter Endzustand \u00dcbergangsfunktionen: Vom Zustand \"0.50\" kann zu \"1.50\" gelaufen werden <p>Zus\u00e4tzlich wird das Eingabealphabet definiert. Dies sind die Symbole, welche dem Automaten als Input gegeben weden kann.</p>"},{"location":"22FS/THIN/03_Endliche%20%20Automaten.html#moore-automaten-vs-mealy-automaten","title":"Moore Automaten vs Mealy Automaten","text":"<p>Bei einem Mealy Automaten h\u00e4ngt der n\u00e4chste Zustand vom aktuellen Zustand und dem Input ab. Beim Moore Automaten hingegen h\u00e4ngt der n\u00e4chste Zustand nur vom aktuellen Zustand ab.</p> <p>F\u00fcr jeder Mealy Automat gibt es einen Moore Automat und umgekehrt.</p>"},{"location":"22FS/THIN/03_Endliche%20%20Automaten.html#berechnungsmodell","title":"Berechnungsmodell","text":"<p>Das Berechnungsmodel beschriebt, wie ein Automat berechnet wird.</p> <ol> <li>Definiere die Struktur des Automaten. F\u00fcr einen endlichen Automaten ist es: \\(M=(Q, \\Sigma, \\delta, q_0, F)\\). </li> <li>Beschreibung der Bedeutung (Semantik) der Struktur</li> <li>Konfiguration: Die vollst\u00e4ndige Beschreibung eines Zustandes des Automats</li> <li> <p>Berechnungsschritt: Der \u00dcbergang von einer Konfiguration zur n\u00e4chsten</p> </li> <li> <p>Berechnung: Die Berechnungsschritte werden gefolgt</p> </li> <li>Jedem Zustand des Automaten k\u00f6nnen eine Bedeutung zu gewissen werden.</li> </ol>"},{"location":"22FS/THIN/03_Endliche%20%20Automaten.html#nicht-deterministische-endlichen-automaten","title":"(Nicht-)Deterministische endlichen Automaten","text":"<p>Bei einem determinisctischen endlichen Automaten ist jede Konfiguration einzigartig. Also bei einem Zustand gibt es f\u00fcr jedes Inputwort ein m\u00f6glichen n\u00e4chsten Zustand.</p> <p>Bei einem nicht-deterministischen endlichen Automaten (NEA) ist dies nicht gegeben. Bei der folgenden NEA kann man von \\(q_0\\) mit \\(0\\) zu \\(q_1\\) oder bei \\(q_0\\) bleiben. Daher ist die Berechnungsfunktion \\(\\delta\\) anderst definiert: \\(\\delta: Q\\times \\Sigma\\rightarrow \\mathcal P(Q)\\). Als \\(\\delta\\) gibt eine Menge von Zust\u00e4nde zur\u00fcck (\\(\\mathcal P(Q)\\) ist die Potenzmenge von \\(Q\\), also alle M\u00f6glichen Teilmengen von \\(Q\\))</p> <p></p> <p>Bei solchen Automaten wird jede M\u00f6glichkeit ausprobiert. Gewisse M\u00f6glichkeiten werden in Sackgassen geraten und gewisse auf einem nicht akzeptierten Feld.</p> <p>Damit eine NEA ein Wort akzeptiert reicht wenn eine M\u00f6glichkeit gefunden wird, bei welchem den Endzustand akzeptiert wird.</p> <p>DEA und NEA sind gleichwertig. Eine Sprache kann in beiden Automaten abgebildet werden.</p>"},{"location":"22FS/THIN/03_Endliche%20%20Automaten.html#nea-mit-epsilon-ubergange","title":"NEA mit \\(\\epsilon\\)-\u00dcberg\u00e4nge","text":"<p>Eine Zus\u00e4tzliche Eigenheit von NEAs sind die die \\(\\epsilon\\)-\u00dcberg\u00e4nge. Mit diesen kann die NEA den Zustand wechseln, ohne ein Inputwort zu konsumieren.</p> <p>Die \u00dcbergangsfunktion muss mit \\(\\epsilon\\)-\u00dcberg\u00e4nge noch mals modifiziert werden, da nun das leere Symbol noch hinzugef\u00fcgt werden muss: \\(\\delta: Q\\times \\Sigma \\cup \\{\\epsilon\\}\\rightarrow \\mathcal P(Q)\\)</p> <p>Unten folgt noch ein Beispiel mit \\(\\epsilon\\)-\u00dcberg\u00e4nge: </p> <p>DEAs sind ebenfalls equivalent zu \\(\\epsilon\\)-NEAs und umgekehrt. Also jede DEA kann in eine \\(\\epsilon\\)-NEA umgewandelt werden und umgekehrt. </p> <p>Um von einer \\(\\epsilon\\)-NEA zu einer DEA umwandeln, m\u00fcssen zuerst die \\(\\epsilon\\)-\u00dcberg\u00e4nge aufgel\u00f6st werden. Daf\u00fcr kann man sich \u00fcberlegen, was f\u00fcr Zeichen konsumiert werden k\u00f6nnten, wenn man den \\(\\epsilon\\)-\u00dcbergang nimmt. Diese \u00dcbergange in den urspr\u00fcnglichen Zustand aufnehmen. Es kann helfen, dies grafisch zu erledigen. Nach dem aufl\u00f6sen der \\(\\epsilon\\)-\u00dcberg\u00e4nge wird eine Teilmengenkonstruktion durchgef\u00fchrt.</p>"},{"location":"22FS/THIN/03_Endliche%20%20Automaten.html#teilmengenkonstruktion","title":"Teilmengenkonstruktion","text":"<p>Mit einer Teilmengenkonstruktion kann aus einer NEA eine DEA erstellt werden.</p> <p>Die DEA \\(D=(Q_D, \\Sigma, \\delta_D, q_0, F_D)\\) wird aus der NEA \\(N=(Q_N, \\Sigma, \\delta_N, q_0, F_N)\\)</p> <ul> <li>\\(Q_d=\\mathcal P(Q_N)\\) : Alle Teilmengen von \\(Q_N\\) sind Zust\u00e4nde im DEA</li> <li>\\(F_D=\\{S\\in Q_D \\vert S \\cap F_N\\neq \\O\\}\\): Alle Zust\u00e4nd-Teilmengen, welche ein Element mit den akzeptierten Zust\u00e4nden \\(F_N\\)  teilen</li> <li>\\(\\delta_D(S, a)=\\cup_{p \\in S}\\delta_N(p, a)\\):  Alle Zust\u00e4nde, welche von einem Zustand in der Menge \\(S \\in Q_D\\), erreichbar sind</li> </ul> <p>Oder in Worten ausgedr\u00fcckt:</p> <ol> <li>Die Zust\u00e4nde sind die Potenzmenge von \\(Q_N\\)</li> <li>Die potentielle Startzustand Kandidaten sind alle diese Teilmengen von \\(Q_N\\), welche \\(q_0\\) enthalten</li> <li>Akzeptierte Zust\u00e4nde sind alle Teilmengen, welche ein Element aus \\(F_N\\) besitzen</li> <li>Aus den Zust\u00e4nden und eingaben soll nun eine Tabelle gezeichnet werden. Bei dieser k\u00f6nnen alle Zust\u00e4nde gestrichen werden, welche nicht erreichbar sind. Also nie bei einer Eingabe-Spalte auftauchen. Dies muss solange wiederholt werden, bis nichts gestrichen werden kann.     Wenn \\(\\{q_1\\}\\) in einer Eingabe-Spalte steht, heisst das nur, dass \\(\\{q_1\\}\\) vorhanden ist. \\(\\{q_1, q_2\\}\\) muss immer noch gestrichen werden, wenn es nicht selbst vorkommt    Wenn eine Verbindung das leeres Wort nimmt, werden die Zust\u00e4nde, welche man vom leeren Wort Zustand erreichen kann, auch vom urspr\u00fcnglichen Wort als erreichbar angesehen.</li> <li>Die noch nicht gestrichenen Resultaten k\u00f6nnen nun Namen verteilt werden (z.B A-Z)</li> </ol> <p></p> <p>Das resultiertende DEA aus dem NEA oben ist:</p>"},{"location":"22FS/THIN/03_Endliche%20%20Automaten.html#aquivalenz-von-automaten","title":"\u00c4quivalenz von Automaten","text":"<ul> <li>eine DEA ist \u00e4quivalent zu einem Regularen Ausdruck und umgekehrt</li> </ul> <p>Dabei ist eine Regularen Ausdruck ein beschreibenden Mechanismus und die DEAs, NEAs und \\(\\epsilon\\)-EAS akzeptierende Mechanismen.</p> <p></p>"},{"location":"22FS/THIN/03_Endliche%20%20Automaten.html#automaten-in-einen-regex-umwandeln","title":"Automaten in einen RegEx umwandeln","text":"<ol> <li>F\u00fcr jeden Zustand eine separate Sprache definieren. Diese darf sich selbst referenzieren oder auch andere Sprachen</li> <li>K\u00fcrzen und einsetzen. Meistens ist es am einfachsten von den Endzust\u00e4nden zu k\u00fcrzen zu beginnen</li> </ol>"},{"location":"22FS/THIN/03_Endliche%20%20Automaten.html#beispiel_1","title":"Beispiel","text":"<ol> <li>F\u00fcr jeden Zustand einen Ausdruck aufschreiben:    $$    \\begin{align}    L_{q_0}&amp;=(0|1)L_{q_0}|0L_{q_1}\\Rightarrow(0|1)^0L_{q_1}\\Rightarrow(0|1)01\\    L_{q_1}&amp;=1L_{q_2} \\Rightarrow1\\varepsilon=1\\     L_{q_2}&amp;=\\varepsilon\\    \\end{align}    $$</li> </ol>"},{"location":"22FS/THIN/03_Endliche%20%20Automaten.html#ardensches-lemma","title":"Arden'sches Lemma","text":"<p>\\(L=UL|V\\Rightarrow L=U^*V\\), dabei ist \\(L\\) eine Spraceh und \\(U\\) einen andren Ausdruch</p>"},{"location":"22FS/THIN/03_Endliche%20%20Automaten.html#zustandsklassen","title":"Zustandsklassen","text":"<p>\\([p]=\\{w \\in \\Sigma^*\\vert M \\text{ endet nach Lesen des Input-Worts } w \\text{ im Zustand } p\\}\\), dabei ist \\(M\\) einen Automaten, \\(w\\) ein eingabe Wort und \\(p\\) ein Zustand (nicht unbedingt der Endzustand)</p> <p>Folgende Regeln gelten f\u00fcr die Zustandsklassen:</p> <ul> <li>Jedes Wort landet in einem Zustand (wenn ein Automat strandet oder ein Input nicht verwendet werden kann, wird der zuletzt erreichten Zustand genommen)</li> <li>Kein Wort landet in einer DEA in zwei Zust\u00e4nde (gilt nicht f\u00fcr NEAs)</li> </ul>"},{"location":"22FS/THIN/03_Endliche%20%20Automaten.html#untere-schranke-fur-endliche-automaten","title":"Untere Schranke f\u00fcr endliche Automaten","text":"<p>Die grunds\u00e4tzliche Idee  ist, dass wenn die Worte \\(x\\) und \\(y\\) in derselben Zustandsklasse ist, dann ist \\(zx=zy\\), wobei \\(z\\) irgend ein Wort ist.</p> <p>Es m\u00fcssen nun die folgende Schritte gefolgt werden:</p> <ol> <li>Es wird eine Annahme getroffen, wie viele Zust\u00e4nde eine Maschine ben\u00f6tigt</li> <li>Es m\u00fcssen f\u00fcr jeden Zustand ein Wort gefunden werden, welches in diesem Zustand endet</li> <li>Es wird nun f\u00fcr jede Kombination von W\u00f6rter von Schritt 2. ein Prefix oder Postfix \\(z\\) gefunden werden, welcher kombiniert mit dem einen Wort, ein Wort ergibt, welches in der Sprache ist und mit dem anderen Wort ein, ein Wort welches nicht in der Sprache ist</li> <li>Wenn dies f\u00fcr jedes Wort von Schritt 2. getan werden kann, dann werden mindestens so viel Zust\u00e4nde ben\u00f6tigt.  Da wenn zwei W\u00f6rter mit demselben Wort verbunden wird und diese in unterschiedlichen Sprache sind, die zwei W\u00f6rter in unterschiedlichen Zust\u00e4nde endet.</li> </ol> <p>Beispiel:</p> <p></p>"},{"location":"22FS/THIN/04_Kontextfreie%20Gramatik.html","title":"Kontextfreie Grammatik","text":"<p>Die Kontextfreie Grammatik \\(G\\) ist durch das Tupel \\((N, \\Sigma, P, A)\\) definiert, wobei</p> <ul> <li>\\(N\\) das Alphabet der Nichtterminale (Variabeln)ist , welche mit Produktionen in \\(P\\) aufgel\u00f6st werden k\u00f6nnen</li> <li>\\(\\Sigma\\) das Alphabet der Terminale ist</li> <li>\\(P\\) eine endliche Menge von Produktionen in der Form \\(X \\rightarrow \\beta\\) ist. Dabei ist der Kopf \\(X\\in N\\) und der Rumpf \\(\\beta \\in (N\\cup\\Sigma)^*\\))  </li> <li>\\(A\\) das Startsymbol ist und gilt \\(A\\in N\\)</li> </ul> <p>Geschrieben kann es folgendermassen: $$ G_1=({A}, {0, 1}, P, A) \\\\text{wobei gilt: }\\ P={A\\rightarrow0A1,A\\rightarrow\\varepsilon} $$ Die Sprache \\(L(G)\\) aus der Grammatik \\(G\\) beinhaltet alle W\u00f6rter, die in \\(G\\) aus dem Startsymbol \\(A\\) ableitbar sind. $$ L(G)={w\\in\\Sigma^ \\vert A\\overset{}{\\Rightarrow} w} $$ Eine Kontextfreie Grammatik wird mehrdeutig genannt, wenn es f\u00fcr ein Wort mehrere Ableitungsb\u00e4ume gibt.</p> <p>Eine Sprache ist kontextfrei, wenn ein Kellerautomaten dazu gebaut werden kann.</p> <p>Das folgende Beispiel ist eine kontextfreie Grammatik, welche nur balancierte Klammern als Wort erlaubt. Also <code>()</code>, <code>(())()</code>, aber nicht <code>((</code>. $$ A\\rightarrow (A)\\ A\\rightarrow AA\\ A\\rightarrow \\varepsilon $$</p>"},{"location":"22FS/THIN/04_Kontextfreie%20Gramatik.html#ableitungsschritt","title":"Ableitungsschritt","text":"<p>Ein Ableitungsschritt, ist wenn eine Variable mit einer Produktion aufgel\u00f6st wird. Dies wird notiert mit \\(\\Rightarrow\\)</p> <p>Mit der Grammatik von oben, w\u00e4re ein Beispiel: \\(A\\Rightarrow AA \\Rightarrow (A)A \\Rightarrow (A)(A)\\Rightarrow()()\\)</p> <p>Dabei kann man linksseitig Ableiten und rechtsseitig Ableiten. Beim linksseitigen Ableiten wird immer die Variable am meisten links aufgel\u00f6st bis es keine Nichtterminale mehr hat. Beim rechtsseitigen Ableiten wird immer die Variable am meisten rechts abgeleitet bis es keine Nichtterminale mehr hat.</p>"},{"location":"22FS/THIN/04_Kontextfreie%20Gramatik.html#ableitung","title":"Ableitung","text":"<p>Eine Ableitung ist eine Folge von Ableitungsschritten. Wenn vom Startsymbol \\(A\\) zum Endwort \\(w\\) abgeleitet wurde, kann dies als \\(A\\overset{*}{\\Rightarrow}w\\) schreiben. Dazu wird auch gesagt, dass \\(A\\) generiert oder erzeugt \\(w\\).</p> <p>Ein Wort ist ableitbar, wenn es eine Ableitung mit einer Grammatik gibt, welche das Wort ergeben.</p>"},{"location":"22FS/THIN/04_Kontextfreie%20Gramatik.html#ableitungsbaum","title":"Ableitungsbaum","text":"<p>Der Ableitungsbaum/Parseb\u00e4ume zeigt auf, in welcher Reihenfolge die Ableitungsschritte angewendet wurde.</p> <p></p>"},{"location":"22FS/THIN/04_Kontextfreie%20Gramatik.html#inharent-mehrdeutig","title":"Inh\u00e4rent mehrdeutig","text":"<p>Wenn man eine Sprache in mehrere Grammatiken unterteilen kann und es W\u00f6rter gibt, welche von beiden Grammatiken akzeptiert wird.</p>"},{"location":"22FS/THIN/04_Kontextfreie%20Gramatik.html#dea-zu-kontextfreien-sprache","title":"DEA zu kontextfreien Sprache","text":"<p>Es gibt eine DEA \\(M=(Q, \\Sigma, \\delta, q_0, F)\\). Aus dieser kann eine kontextfreie Sprache erstellt werden:</p> <ol> <li>F\u00fcr jeden Zustand \\(q_i\\) gibt es ein Nichtterminal \\(Q_i\\)</li> <li>F\u00fcr jede Transition \\(\\delta(q_i, a)=q_j\\) gibt es eine Produktion \\(Q_i\\rightarrow aQ_j\\)</li> <li>F\u00fcr jeden akzeptierten Zustand gibt es eine Produktion \\(Q_i\\rightarrow \\varepsilon\\)</li> <li>Das Nichtterminal \\(Q_0\\) wird das Startsymbol</li> </ol>"},{"location":"22FS/THIN/04_Kontextfreie%20Gramatik.html#trick-zum-entwurf","title":"Trick zum Entwurf","text":"<ol> <li>Komplexe KFG k\u00f6nnen oft in mehrere einfachere KFG aufgeteilt werden</li> <li>Wenn einen endlichen Automaten bereits existiert, kann dieser in eine DEA umgewandlet werden und danach zu einer kontextfreien Sprache umgewandelt werden.</li> <li>Oft erlauben KFG zu viele </li> </ol>"},{"location":"22FS/THIN/05_Keller%20Automaten.html","title":"Keller Automaten","text":""},{"location":"22FS/THIN/05_Keller%20Automaten.html#deterministischen-kellerautomaten","title":"Deterministischen Kellerautomaten","text":"<p>Ein deterministischer Keller Automaten (KA) wird als 7-Tupel dargestellt: \\((Q, \\Sigma, \\Gamma, \\delta, q_0, \\$, F)\\))</p> <ul> <li>\\(Q\\) ist die endliche Menge von Zust\u00e4nden</li> <li>\\(\\Sigma\\) ist das Alphabet der Eingabe</li> <li>\\(\\Gamma\\) ist das Alphabet des Kellers (bzw. des Stacks)</li> <li>\\(\\delta: Q\\times (\\Sigma \\cup \\varepsilon) \\times \\Gamma\\rightarrow Q\\times\\Gamma^*\\) ist die (partielle) \u00dcbergangsfunktion</li> <li>\\(q_0\\) ist der Startzustand</li> <li>\\(\\$\\in \\Gamma\\) ist ein ausgezeichnetes Symbol vom Alphabet des Stacks/Kellers</li> <li>\\(F\\subseteq Q\\) ist die Menge der akzeptierten Zust\u00e4nde </li> </ul> <p>Zu dem gilt f\u00fcr die \u00dcbergangsfunktion \\(\\delta\\), wenn \\(\\delta(q, b, x)\\) definiert ist, darf \\(\\delta(q, \\varepsilon, x)\\) nicht definiert sein. Das heisst, das leere Wort darf nur benutzt werden, wenn f\u00fcr eine Stackposition kein anderes Symbol definiert ist. Dies stellt sicher, dass der Automat deterministisch ist.</p> <p>Zu begin der Ausf\u00fchrung ist im Strack \\(\\$\\), was ein leerer Stack darstellt.</p> <p></p> <p>Als ein weiteres Beispiel, in welchem \\(*\\) als Platzhalter f\u00fcr ein beliebiges Zeichen steht:</p> <p></p>"},{"location":"22FS/THIN/05_Keller%20Automaten.html#nichtdeterministischen-kellerautomaten","title":"Nichtdeterministischen Kellerautomaten","text":"<p>Eine NKA ist gleich wie eine KA, nur das die \u00dcbergangsfuntkion den Typ \\(\\delta: Q\\times (\\Sigma \\cup \\varepsilon) \\times \\Gamma\\rightarrow \\mathcal P (Q\\times\\Gamma^*)\\) hat. Der R\u00fcckgabetyp ist die Potenzmenge. Somit kann in der NKA ein Eingang mehrere Ausg\u00e4nge haben.</p> <p>Wie auch bei einer NEA kann nun im \\(\\varepsilon\\) (das leere Wort) f\u00fcr \\(\\Sigma\\) in der \u00dcbergangsfunktion. </p>"},{"location":"22FS/THIN/05_Keller%20Automaten.html#moglichkeiten-eines-kellerautomaten","title":"M\u00f6glichkeiten eines Kellerautomaten","text":"<p>Anders als bei NDA und NEA, welche das gleiche k\u00f6nnen, gibt es Sprachen, welche nur von nicht deterministischen Kellerautomaten verarbeitet werden k\u00f6nnen.</p> <p>Ebenfalls gibt es kontextfreie Sprachen, welche nicht von einem deterministischen Kellerautomaten erkennt werden k\u00f6nnen. Falls dies aber m\u00f6glich ist, ist die Sprache eindeutig.</p>"},{"location":"22FS/THIN/05_Keller%20Automaten.html#berechnungsschritte","title":"Berechnungsschritte","text":"<p>Die Berechnungssfunktion dazu w\u00e4re: \\(\\delta(q, b, c)=(p, w)\\) Dabei befindet sich der Automaten im Zustand \\(q\\), list das Symbol \\(b\\) von der Eingabe und wird das Kellersymbol \\(c\\) vom Stack lesen und \\(w\\) zur\u00fcck schreiben. Der n\u00e4chste Zustand wird \\(p\\) sein.</p>"},{"location":"22FS/THIN/05_Keller%20Automaten.html#berechnung","title":"Berechnung","text":"<p>Eine Berechnung besteht aus mehreren Berechnungsschritte und eine Start- und Endkonfiguration.</p> <p>Beispiel: \\((q_0, 0011, \\$) \\vdash (q_0, 011, 0\\$)\\vdash (q_0, 11, 00\\$)\\vdash(q_1, 1, 0\\$)\\vdash(q_1, \\varepsilon, \\$)\\vdash(q2, \\varepsilon, \\$)\\)  Dies kann auch als \\((q_0, 0011, \\$)\\vdash^*(q2, \\varepsilon, \\$)\\) geschrieben werden.</p>"},{"location":"22FS/THIN/05_Keller%20Automaten.html#sprache-eines-kellerautomaten","title":"Sprache eines Kellerautomaten","text":"<p>In einer Sprache eines Kellerautomaten sind alle W\u00f6rter, welche von diesem Kellerautomaten akzeptiert werden.</p>"},{"location":"22FS/THIN/06_Turing%20Machine.html","title":"Turing Maschine","text":"<p>Eine (determinischtische) Turing-Maschine (DTM) ist ein 7-Tupel: \\(M=(Q,\\Sigma, \\Gamma, \\delta, \\textvisiblespace, F)\\)</p> <ul> <li>\\(Q\\): die endliche Menge von Zust\u00e4nde</li> <li>\\(\\Sigma\\): das Eingabe Alphabet</li> <li>\\(\\delta: Q\\times \\Gamma \\rightarrow Q\\times\\Gamma\\times D, D=\\{L, R\\}\\): Die \u00dcbergangsfunktion, welche den n\u00e4chsten Zustand, was geschrieben werden soll und ob das Band nach Links (L) oder nach rechts (R) geschoben werden soll</li> <li>\\(\\Gamma\\): Das Bandalphabet, dabei muss \\(\\Sigma \\subset \\Gamma\\)</li> <li>\\(\\textvisiblespace\\): Das Leerzeichen, dabei muss \\(\\textvisiblespace \\in \\Gamma\\) und \\(\\textvisiblespace \\not \\in \\Sigma\\)</li> </ul> <p>Das Band hat einzelne Zelle, in welchen ein Zeichen von \\(\\Gamma\\) enhaltet...</p> <p>Informell, ist eine Turing Maschine einen endlichen Automat, welche um ein unendliches Band und um einen Lesen-/Schreibkopf erg\u00e4nzt wurde.</p> <p></p> <p>Im folgenden Bild wird eine \u00dcbergangsfunktion einer Turing Maschine gezeigt: \\(\\delta(q_1, X)=(q_2, Y, D)\\), wobei \\(D\\in\\{L, R\\}\\)</p> <p></p>"},{"location":"22FS/THIN/06_Turing%20Machine.html#konfiguration","title":"Konfiguration","text":"<p>Eine Konfiguration einer Turing-Maschine ist:</p> <ul> <li>der aktuelle Zustand \\(q \\in Q\\)</li> <li>die Position des Lese-/Schreibkopf \\(i\\)</li> <li>der Bandinhalt \\(X_1,...,X_n \\in \\Gamma\\)</li> </ul> <p>Ein Beispiel einer Konfiguration: \\(X_1,...X_{i-1}qX_iX_{i+1},...,X_n\\)</p> <p>Die Startkonfiguration ist: \\(q_0X_1X_2...X_n\\)</p>"},{"location":"22FS/THIN/06_Turing%20Machine.html#berechnungsschritten","title":"Berechnungsschritten","text":"<p>Ein Berechnungsschritt ist der \u00dcbergang von einer Konfiguration zur n\u00e4chsten:</p> <p>\\(X_1,...X_{i-1}qX_iX_{i+1},...,X_n\\vdash X_1,...X_{i-1}pX_iX_{i+1},...,X_n\\)</p>"},{"location":"22FS/THIN/06_Turing%20Machine.html#berechnungen","title":"Berechnungen","text":"<p>Eine Berechnung ist eine endliche Menge von Berechnungsschritte: \\(K_1 \\vdash K_2 \\vdash ... \\vdash K_n\\).</p> <p>Dies kann auch abgek\u00fcrzt als \\(K_1\\vdash^* K_n\\) geschrieben werden.</p>"},{"location":"22FS/THIN/06_Turing%20Machine.html#sprache-einer-turing-maschine","title":"Sprache einer Turing Maschine","text":""},{"location":"22FS/THIN/06_Turing%20Machine.html#rekursiv-aufzahlbare-sprachen","title":"Rekursiv aufz\u00e4hlbare Sprachen","text":"<p>Eine Sprache nennt sich rekursive aufz\u00e4hlbar, wenn sie von einer Turing Maschine akzeptiert wird. Eine rekursive aufz\u00e4hlbar...TODO</p>"},{"location":"22FS/THIN/06_Turing%20Machine.html#turing-maschine-mit-speicher","title":"Turing Maschine mit Speicher","text":"<p>Die Turing Maschine wird mit einem Speicher erweitert.</p> <p></p>"},{"location":"22FS/THIN/06_Turing%20Machine.html#turing-maschine-mit-mehreren-spuren","title":"Turing Maschine mit mehreren Spuren","text":"<p>Die Turing Maschine wird erweitert mit mehrern Spuren, welche sich synchron bewegen. Das Spur-Alphabet ist nun ein Tupel. </p> <p>Wenn so eine Maschine von einer \"normalen\" Turing Maschine simuliert werden soll, ben\u00f6tigt man die Zust\u00e4nde \\(Q=Q_{orignal}\\times\\Gamma_{orginal}\\)</p> <p>Als Beispiel, eine Maschine mit 3 B\u00e4nder h\u00e4tte das Band-Alphabet: \\(\\Gamma_{\\Gamma_1}=\\{0, 1, \\textvisiblespace\\}\\times\\{0, 1, \\textvisiblespace\\}\\times\\{0, 1, \\textvisiblespace\\}\\). Ein konkreter Wert w\u00e4re: \\((0, 1, 1)\\).</p> <p></p>"},{"location":"22FS/THIN/06_Turing%20Machine.html#turing-maschine-mit-mehreren-bander-und-mehreren-lese-schreibkopfe","title":"Turing Maschine mit mehreren B\u00e4nder und mehreren Lese-/Schreibk\u00f6pfe","text":"<p>Ein Band hat mehrere Spuren. Pro Band gibt es ein Lesekopf. Das heisst eine Maschine mit mehreren Spuren hat nur ein Lese-/Schreibkopf. Eine Maschine mit mehreren B\u00e4nder hat mehrere Lese-/Schreibk\u00f6pfe.</p> <p>Die Turing Maschine kann auch erweitert werden, dass sie zus\u00e4tzlich zu den mehr Spuren auch noch mehr Lese-/Schreibk\u00f6pfe hat. Das heisst, jedes Band kann unabh\u00e4ngig von den anderen B\u00e4nder bewegt werden.</p> <p>Bei der Initialisierung:</p> <ul> <li>steht die Eingabe auf dem obersten Band</li> <li>Alle anderen B\u00e4nder sind leer</li> <li>Der Lese-/Schreibkopf des ersten Band ist \u00fcber dem ersten Element des Bandes</li> <li>Bei den anderen Lese-/Schreibk\u00f6pfe ist es irrelevant</li> </ul> <p>Damit dies funktioniert, muss die \u00dcbergangsfunktion erweitert werden um: \\(\\delta:Q\\times\\Gamma^k\\rightarrow Q\\times \\Gamma^k \\times \\{R, S, L\\}^k\\), dabei steht \\(k\\) f\u00fcr die Anzahl B\u00e4nder, \\(R\\) f\u00fcr Rechts, \\(S\\) f\u00fcr stehen bleiben und \\(L\\) f\u00fcr Links.</p> <p></p> <p>Beispiel von einer Maschine mit mehreren B\u00e4nder  und mehreren Lese-/Schreibk\u00f6pfe, welche Subtrahieren kann:</p>"},{"location":"22FS/THIN/06_Turing%20Machine.html#nichtdeterministische-turing-maschine-ntm","title":"Nichtdeterministische Turing Maschine (NTM)","text":"<p>Die nichtdeterministische Turing Maschine besteht aus dem selben 7-Tupel, wie eine deterministische Turing Maschine. Der einzige Unterschied ist, dass die \u00dcbergangsfunktion \\(\\delta: Q\\times \\Gamma \\rightarrow \\mathcal P(Q \\times \\Gamma \\times D)\\), wobei \\(D=\\{R, L\\}\\) ist. \\(R\\) steht f\u00fcr Rechts, \\(L\\) f\u00fcr Links.</p> <p>Die \u00dcbergangsfunktion gibt also eine Liste von Tupeln zur\u00fcck. Wie auch nichtdeterministische endlichen Automaten, werden alle M\u00f6glichkeiten  durch getestet bis ein Resultat gefunden wurde oder keine ungetestet Werte mehr \u00fcbrigbleiben.</p> <p>Jede Sprache, welcher von einer NTM akzeptiert wird, wird auch von einer deterministischer Turing Maschine (DTM)             akzeptiert. Es gibt allerdings kein praktisches Verfahren, wie die Teilmengen Konstruktion bei den Endlichen Maschine.</p> <p>Es folgt der Beweis, dass jede NTM auch als DTM dargestellt werden kann.</p> <p></p> <p>Ein Beispiel f\u00fcr eine NTM:</p> <p></p>"},{"location":"22FS/THIN/06_Turing%20Machine.html#turing-maschine-mit-semi-beschrankten-band","title":"Turing Maschine mit semi-beschr\u00e4nkten Band","text":"<p>Bei einer Turing Maschine mit einem semi-beschr\u00e4nkten Band, geht das Band nur in eine Richtung ins unendliche. Beim Start ist der Lese-/Schreibkopf am Anfang des Bandes. Der Kopf kann dann nur in eine Richtung sich bewegen.</p> <p>Dabei wird jede Sprache, welche von einer Turing Maschine akzeptiert werden kann, kann auch von einer Turing Maschine mit einem semi-beschr\u00e4nkten Band akzeptiert werden. Sie sind also gleichwertig.</p> <p></p> <p>Die Beweissidee, dass eine Turing Maschine mit semi-beschr\u00e4nkten Band zwei B\u00e4nder hat, das einte Band hat die positiven Slots, das andera Band die negativen Slots.</p> <p></p>"},{"location":"22FS/THIN/06_Turing%20Machine.html#k-stack-maschine","title":"\\(k\\)-Stack Maschine","text":"<p>Dies ist ein eine Deterministischen Keller Automaten, welcher aber mehre Stacks haben.</p> <p>Dabei sieht die \u00dcbergansfunktion folgendermassen aus: \\(\\delta: Q \\times \\Gamma_1\\times...\\times\\Gamma_n\\rightarrow Q\\times\\Gamma_1^*\\times...\\times \\Gamma^*_k\\) </p> <p></p> <p>Mit einer 2-Stack Maschine kann eine Turing Maschine simuliert werden, in dem die Slots des \"Bandes\" vom einten Stack in den anderen kopiert werden. Eine 2-Stack Maschine kann demnach, dasselbe, wie eine Turing Maschine.</p> <p></p>"},{"location":"22FS/THIN/06_Turing%20Machine.html#zahler-maschine","title":"Z\u00e4hler Maschine","text":"<p>Eine Z\u00e4hler Maschine, ist eine \\(k\\)-Stack Maschine, welche allerdings Z\u00e4hler haben, anstatt Stacks. Die Z\u00e4hler speichern eine nat\u00fcrliche Zahl (&lt;= 0).</p> <p></p> <p>Eine 2 Z\u00e4hler-Maschine ist gleichwertig, wie eine Turing Maschine. Wenn etwas auf den \"Stack\" gepushed wird, wird das letzte Resultat weiter verrechnet. Daf\u00fcr wird das letzte Resultat mit den Anzahl Zust\u00e4nden multipliziert. Darauf wird den Zahlwert des Symbols addiert.</p> <p></p> <p>Um nun vom \"Stack\" zu poppen, wird das letzte Resultat mit der Anzahl Zust\u00e4nde dividiert. Der Rest, welcher \u00fcbrig bleibt, ist der Zahlenwert des Symboles.</p> <p></p> <p>Um aber einen 2-Stack Maschine zu simulieren, ben\u00f6tigt man 3 Counters: 2 Counters f\u00fcr die Stack und der 3. Counter um zu rechnen. </p> <p>Diese 3-Z\u00e4hler Maschine kann nun von einer 2-Z\u00e4hler Maschinen simuliert werden. Daf\u00fcr werden die Werte \\(i\\) und \\(j\\) und \\(k\\) in der Zahl mit \\(2^i\\cdot3^j\\cdot5^k\\) (ev. auch eine addition?). Die Basis zu den Zahlen sind Primzahlen (2, 3, 5, 7, ...). Eine Zahl kann mit einer Primfaktorzerlegung wieder zur\u00fcck rechnen.  Im einten Stack werden nun diese Zahlen gespeichert, der andere Stack wird dazu ben\u00f6tigt, zu rechnen.</p>"},{"location":"22FS/THIN/06_Turing%20Machine.html#universelle-turing-maschine-utm","title":"Universelle Turing Maschine (UTM)","text":"<p>Eine universelle Turing Maschine kann Turing Maschine simulieren. Daf\u00fcr muss allerdings eine Turing Maschine codiert werden, so dass sie von einer UTM simuliert werden kann.</p> <p>Dies kann folgendermassen bewerkstelligt werden:</p> <ol> <li>Die Zust\u00e4nde Q einer TM werden codiert als    \\(q_1\\): der Startzustand    \\(q_2\\): der Endzustand    \\(q_3...q_i\\): f\u00fcr alle weiteren Zustande</li> <li>Die Bandsymbole \\(\\Gamma\\) einer TM wird:    \\(X_1\\): das Symbol 0    \\(X_2\\): Das Symbol 1    \\(X_3\\): Das Symbol \\(\\textvisiblespace\\) \\(X_4,...,X_i\\): f\u00fcr alle weitere Symbole</li> <li>Codierung der Richtung des Lese-Schreibkopfes D    \\(D_1\\): Die Richtung \\(L\\) (Links)    \\(D_2\\) Die Richtung \\(R\\) (Rechts)</li> <li>Die \u00dcbergangsfunktionen \\(\\delta(q_i, X_j)=(q_k, X_l, D_m)\\) kann codiert werden als \\(0^i10^j10^l10^m\\). Diese sind mit Nullen codiert und getrennt mit <code>1</code>.  Die Zahl im Subscript wird jeweil als Exponent gebraucht (\\(X_2\\Rightarrow0^2=00\\))</li> <li>Die \u00dcbergansfunktionen werden mit <code>11</code> getrennt: \\(C_111C_211...\\), wobei \\(C_i\\) eine \u00dcbergansfunktion ist. Vor der ersten \u00dcbergansfunktion steht noch ein <code>1</code>, dass es als eine Zahl dargestellt werden kann.</li> </ol> <p>Die Zahl, welche ein Turing Turing Maschine darstellt, wird auch als G\u00f6delnummer bezeichnet.</p> <p>Es folgt ein Beispiel, wie eine TM codiert werden k\u00f6nnte:</p> <p></p> <p>Damit die UTM weiss, welches Eingabewort \\(w\\) eingegben werden soll, wird dies nach der Turing Maschine \\(Cod_M\\) getrennt mit <code>111</code> dargestellt: \\(Code_m111w\\).</p>"},{"location":"22FS/THIN/07_Berechnungsmodelle.html","title":"Berechnungsmodelle","text":""},{"location":"22FS/THIN/07_Berechnungsmodelle.html#church-turning-these-gandys-these-m","title":"Church-Turning-These &amp; Gandys These M","text":"<p>Intuitive berechenbare Funktion: eine Funktion, welche algorithmisch (durch eine mechanisches Verfahren) berechnet werden kann</p> <p>Turing-berechenbare Funktionen: Funktionen, welche von einer Turing-Maschinen berechnet werden k\u00f6nnen</p> <p>Jede intuitive berechenbare Funktion l\u00e4sst sich mit einer Turingmaschine berechnen.</p> <p>Gandys These M: Alles, was jemals mit einer (endlichen) Maschine/physikalischen Apparatur berechnet werden kann, ist bereits von einer Turing-Maschine berechenbar.</p> <p>Bis jetzt wurde noch kein Gegenbeispiel zu beiden Thesen gefunden worden.</p>"},{"location":"22FS/THIN/07_Berechnungsmodelle.html#turing-berechenbare-funktion","title":"Turing-berechenbare Funktion","text":"<p>\\(u\\) ist ein Wort. Pfeil noch oben ist nicht teil von \\(\\Gamma\\).</p> <p></p> <p>Oder: Wenn es eine Funktion gibt, welche f\u00fcr alle Input Wort anh\u00e4lt.</p>"},{"location":"22FS/THIN/07_Berechnungsmodelle.html#beispiel","title":"Beispiel","text":"<p>wenn zu <code>1011</code> 1 addiert werden soll, wird so lange von rechts nach links ger\u00fcckt, bis eine 0 gefunden wird. Diese wird zu einem <code>1</code> gemacht. Die <code>1</code> davor werden zu <code>0</code></p>"},{"location":"22FS/THIN/07_Berechnungsmodelle.html#loop-programme","title":"Loop-Programme","text":"<p>Ein LOOP-Programm besteht aus folgendem:</p> <ul> <li>Variabeln: \\(x_0\\), \\(x_1\\), \\(x_2\\), ...,\\(x_k\\)</li> <li>Konstante: 0, 1, 2, 3, ...</li> <li>Zuweissungen: \\(x_k=x_j+c\\) oder \\(x_k = x_j - c\\)</li> </ul> <p></p> <p></p> <p></p> <p>Wenn die Loop-Variable (x3 in <code>LOOP x3 DO ... END</code>) im Loop ver\u00e4ndert wird, hat dies keinn Einfluss auf die Anzahl Durchl\u00e4ufe.</p>"},{"location":"22FS/THIN/07_Berechnungsmodelle.html#while-programme","title":"While-Programme","text":""},{"location":"22FS/THIN/07_Berechnungsmodelle.html#turing-vollstandigkeit","title":"Turing-Vollst\u00e4ndigkeit","text":"<p>Auch jede Turing-Maschine kann mit einem While-Programm implementiert werden.</p>"},{"location":"22FS/THIN/07_Berechnungsmodelle.html#goto-programme","title":"GOTO-Programme","text":""},{"location":"22FS/THIN/07_Berechnungsmodelle.html#primitiv-rekursive-funktionen","title":"Primitiv rekursive Funktionen","text":""},{"location":"22FS/THIN/07_Berechnungsmodelle.html#ackermannfunktion","title":"Ackermannfunktion","text":"<p>Eine Ackermannfunktion \\(a: \\N^2\\rightarrow N\\) ist durch die Gleichung: $$ \\begin{align} a(0, m)&amp;= m + 1\\ a(n + 1, 0) &amp;= a(n, 1)\\ a(n + 1, m + 1) &amp;= a(n, a(n + 1, m)) \\end{align} $$ </p>"},{"location":"22FS/THIN/07_Berechnungsmodelle.html#loop-interpreter","title":"Loop-Interpreter","text":"<p>Ein Loop-Interpreter ist eine Funktion \\(I:\\N\\times \\N \\rightarrow \\N\\), welche als Input den Code und Input eines Loop-Programmes nimmt und den Code mit dem Input ausf\u00fchrt und zur\u00fcck gibt.  F\u00fcr einen Loop-Interpreter gelten folgende Eigenschaften:</p> <ul> <li>Es gibt genau ein totaler Loop-Interperter</li> <li>Es kein Loop-berechenbare Loop-Interpreter. Es gibt also kein Loop-Programm, was Loop-Programme interpretieren kann</li> </ul>"},{"location":"22FS/THIN/08_Entscheidbarkeit.html","title":"Entschheidbarkeit","text":"<p>Eine Sprache \\(A \\subset \\Sigma^*\\) heisst entscheidbar,, wenn eine Turingmaschine \\(T\\) existiert, die das Entscheidungsproblem \\((\\Sigma, A)\\) l\u00f6st (Dabei ist \\(A\\) die Menge aller akzeptierter Zust\u00e4nde).</p> <p>Wenn der Bandinhalt \\(x \\in A\\) ist, h\u00e4lt \\(T\\) nach endlichen vielen Schritten mit dem Bandinhalt <code>1</code> and, wenn der Bandinhalt \\(x \\in \\overline A\\) ist, dann h\u00e4lt \\(T\\) nach endlichen vielen Schritten mit dem Bandinhalt <code>0</code> an. Wichtig: Egal was f\u00fcr ein Input auf dem Band steht, \\(T\\) muss immer anhalten.</p> <p>Oder anders ausgedr\u00fcckt, es m\u00fcssen alle akzeptierte Inputs \\(A\\), wie auch alle nicht akzeptiert Inputs \\(\\overline A\\) semi-entscheidbar sein.</p> <p>Eine Sprache wird Semi-Entsheidbarkeit genannt, wenn es eine Turingmachine \\(T\\) gibt, welche bei dem Bandinhalt \\(x \\in A\\) (\\(A\\) ist die Menge der akzeptierten Inputs) in endlichen vielen Schritten mit dem Bandinhalt <code>1</code> f\u00fcr Ja endet. Wenn der Bandihalt \\(x \\in \\Sigma^*\\setminus A\\) (als x nicht ein akzeptierter Zustand ist), h\u00e4lt die Turingmachine \\(T\\) nie an.</p> <p>F\u00fcr jede entscheidbare Sprache kann eine Turningmaschine geschrieben werden, welche semi-entscheidbar ist.</p>"},{"location":"22FS/THIN/08_Entscheidbarkeit.html#cup-und-cap-satz","title":"\\(\\cup\\) und \\(\\cap\\) Satz","text":"<p>Wenn \\(A\\) und \\(B\\) entscheidbar ist, dann ist auch \\(A\\cup B\\) und \\(A\\cap B\\) entscheidbar. Wenn \\(A\\) und \\(B\\) semi-entscheidbar ist, dann ist auch \\(A \\cup B\\) und \\(A\\cap B\\) semi-entscheidbar.</p>"},{"location":"22FS/THIN/08_Entscheidbarkeit.html#reduktion","title":"Reduktion","text":""},{"location":"22FS/THIN/08_Entscheidbarkeit.html#satze","title":"S\u00e4tze","text":"<ul> <li> <p>Transitivit\u00e4t: F\u00fcr beliebige Sprachen \\(A, B\\) und \\(C\\) und \\(A \\preceq B\\) und \\(B \\preceq C\\) gilt, dann gilt auch \\(A \\preceq C\\)</p> </li> <li> <p>F\u00fcr beliebige Sprachen \\(A\\) und \\(B\\), wenn \\(B\\) entscheidbar ist und \\(A \\preceq B\\) gilt, dann ist auch \\(A\\) entscheidbar.</p> </li> <li> <p>F\u00fcr beliebige Sprachen \\(A\\) und \\(B\\), wenn \\(B\\) semi-entscheidbar ist und \\(A \\preceq B\\) gilt, dann ist auch \\(A\\) semi-entscheidbar.</p> </li> </ul>"},{"location":"22FS/THIN/08_Entscheidbarkeit.html#allgemeine-halteproblem","title":"Allgemeine Halteproblem","text":""},{"location":"22FS/THIN/08_Entscheidbarkeit.html#leeres-band-halteproblem","title":"Leeres-Band Halteproblem","text":""},{"location":"22FS/THIN/08_Entscheidbarkeit.html#spezielle-halteproblem","title":"Spezielle Halteproblem","text":""},{"location":"22FS/THIN/08_Entscheidbarkeit.html#halteproblem-beweiss","title":"Halteproblem Beweiss","text":""},{"location":"22FS/THIN/08_Entscheidbarkeit.html#satz-von-rice","title":"Satz von Rice","text":"<p>Es gibt eine Menge \\(R\\), in welcher alle berechenbare Funktion sind. Die Menge \\(S\\subset R\\) ist eine echte, nicht leere Teilmenge von R. Die folgende Sprache ist nun unentscheidbar: $$ C(S)={w\\in{0,1}^*\\mid F_w\\in S} $$</p>"},{"location":"22FS/THIN/09_Komplexit%C3%A4tstheorie.html","title":"Komplexit\u00e4tstheorie","text":"<p>Es gibt mehrere Arten von Komplexit\u00e4t:</p> <ul> <li>Zeitkomplexit\u00e4t: Laufzeit des besten Programms, welche ein Problem l\u00f6st</li> <li>Platzkomplexit\u00e4t: Speicherbedarf des bestens Programmes</li> <li>Beschreibungskomplexit\u00e4t: L\u00e4nge des k\u00fcrzesten Programmes</li> </ul> <p></p> <p></p>"},{"location":"22FS/THIN/09_Komplexit%C3%A4tstheorie.html#big-o-notation-landau-symbol","title":"Big-O-Notation (Landau Symbol)","text":"<p>Im folgende Beispiel gilt: </p> <ul> <li>\\(7n+4\\in \\mathcal O(n)\\) f\u00fcr \\(n \\ge 6 = n_0\\)</li> <li>\\(0.5n^2+5n - 4 \\in \\mathcal O(n^2)\\)</li> </ul> <p></p>"},{"location":"22FS/THIN/09_Komplexit%C3%A4tstheorie.html#bespiel-an-turing-maschinen","title":"Bespiel an Turing Maschinen","text":""},{"location":"22FS/THIN/09_Komplexit%C3%A4tstheorie.html#_1","title":"Komplexit\u00e4tstheorie","text":""},{"location":"22FS/THIN/09_Komplexit%C3%A4tstheorie.html#klassifizierung-von-problemen-np-vs-p","title":"Klassifizierung von Problemen (NP vs P)","text":""},{"location":"22FS/THIN/09_Komplexit%C3%A4tstheorie.html#polynomzeit-verifizieren","title":"Polynomzeit Verifizieren","text":"<p>Ein Polynomzeit-Verifizierer ist eine Turing-Maschine, welche in polynomen Zeit (\\(\\mathcal O(n^k)\\), wobei gilt \\(k \\in \\N\\)) \u00fcberpr\u00fcft, ob das Resultat einer Berechnung stimmt.</p> <p>Frage:  Sind p-Verifizierer und Polynomzeit-Verifizierer das selbe? --&gt; Ja</p> <p>Alle Probleme, welche ein Polynomzeit-Verifizierer haben, sind in der Gruppe \\(NP\\) enthalten.</p> <p></p> <p></p>"},{"location":"22FS/THIN/09_Komplexit%C3%A4tstheorie.html#polynomielle-reduktion","title":"Polynomielle Reduktion","text":"<p>Eine Sprache \\(L_1\\) ist polynominell auf \\(L_2\\) reduzierbar (\\(L_1 \\preceq_p L_2\\)), wenn eine Turing Maschine gebaut werden kann, welche von \\(L_1\\) zu \\(L_2\\) umwandeln kann. Dies muss in \\(O(n^k)\\) m\u00f6glich sein.</p>"},{"location":"22FS/THIN/09_Komplexit%C3%A4tstheorie.html#np-schwer-und-np-vollstandig","title":"NP-Schwer und NP-Vollst\u00e4ndig","text":"<p>Ein Problem ist NP-schwer, wenn es auf alle NP-Probleme (Probleme, welche mit einer Nicht-Deterministiersch-Maschine l\u00f6sbar/verifizierbar sind) reduzieren l\u00e4sst. Aus dem geht hervor, dass ein Problem, welches NP-schwer ist, gleich schwer oder schwerer zum l\u00f6sen ist, wie alle NP-Problem einzeln.</p> <p>Ein Problem ist NP-vollst\u00e4ndig, wenn es ein NP-Problem und NP-schwer ist.</p> <p>Ein NP-vollst\u00e4ndiges Problem ist gleich schwer zum l\u00f6sen, wie das am schwierigsten l\u00f6sbaren NP-Problem.</p>"},{"location":"22FS/THIN/09_Komplexit%C3%A4tstheorie.html#pnp-problem","title":"\\(P=NP\\) Problem","text":"<p>Wenn es jemandem gelingt ein Problem zu finden, welches NP-vollst\u00e4ndig ist und gleichzeitig auch zu P geh\u00f6hrt, dann w\u00fcrde gelten \\(P=NP\\), da P zu jedem NP-Problem reduziert werden k\u00f6nnte.</p> <p>Bis jetzt wurde kein solches Beispiel gefunden</p>"},{"location":"22FS/THIN/09_Komplexit%C3%A4tstheorie.html#konjunktive-normalform-knf","title":"Konjunktive Normalform (KNF)","text":"<p>Ein Ausdruck, welcher in der konjuktiver Normalform steht, besteht nur aus \\(\\neg\\), \\(\\vee\\), \\(\\wedge\\), \\(()\\) und Literale. </p> <p>Beispiele:</p> <ul> <li>\\(x\\)</li> <li>\\(x_1 \\vee x_2\\)</li> <li>\\(x_1 \\wedge x_2\\)</li> <li>\\((x_1 \\vee x_2) \\wedge (x_3 \\vee x_4) \\wedge \\neg x_5\\) </li> </ul> <p>Hingegen \\((x_1 \\wedge x_2) \\vee x_3\\) w\u00e4re nicht in der konjunktive Normalform</p>"},{"location":"22FS/THIN/09_Komplexit%C3%A4tstheorie.html#sat","title":"SAT","text":"<p>SAT war das \"erste\" NP-vollst\u00e4ndige Problem. Anhand diesem wurden alle weiteren Beweise f\u00fcr NP-Vollst\u00e4ndigkeit aufgeh\u00e4ngt.</p> <p>Das SAT Problem ist zu einscheiden, ob eine Formel in der KNF erf\u00fcllbar ist. Also es sicherlich eine Belegung gibt, welche <code>1</code> zur\u00fcck gibt.</p> <p>Es muss gezeigt werden das:</p> <ul> <li>\\(SAT \\in NP\\): Es ist m\u00f6glich eine Nicht-Deterministische Maschine zu bauen, welche \u00fcberpr\u00fcfen kann, ob eine Formel erf\u00fcllbar ist</li> <li>SAT ist NP-schwer: Das Problem kann zu allen NP-Problemen reduziert werden</li> </ul>"},{"location":"22FS/THIN/09_Komplexit%C3%A4tstheorie.html#np-vollstandigkeits-nachweis-weiteren-problemen","title":"NP-Vollst\u00e4ndigkeits-Nachweis weiteren Problemen","text":"<p>Satz Wenn \\(P1\\) NP-schwer und \\(P2\\) in NP enthalten ist und eine polynomielle Reduktion \\(P1 \\preceq_p P2\\) existiert, dann ist \\(P2\\) NP-vollst\u00e4ndig.</p> <p>Dass heisst, wenn ein Problem in NP enthalten ist und es eine Reduktion zu dem SAT Problem gibt, dann ist es NP-vollst\u00e4ndig.</p>"},{"location":"22FS/THIN/summary%20%28copy%29.html","title":"Summary","text":"Begriff Beschreib Alphabet Endliche, nichtleere Menge von Symbolen (\\(\\Sigma=\\{a, b, c\\}\\)) Wort Endliche Folge von Symbolen \\(\\varepsilon\\) Das Leere Wort (\\(\\vert \\varepsilon\\vert=0\\)) Sprache Eine Menge von W\u00f6rtern (\\(L=\\{10, 1100, ...\\}\\), in Prosa oder \\(L=\\{1^n0^n\\mid n\\in \\N\\}\\)) \\(\\emptyset\\) Leere Sprache (\\(\\emptyset \\neq \\{\\varepsilon\\}\\)) \\(\\vert abca\\vert_a=2\\) H\u00e4ufigkeit von a \\((abc)^R\\) Spiegelwort von \\(abc\\) (echter) Pr\u00e4fix Der Start eines Wortes (echt = Pr\u00e4fix nicht gleich das Wort)  Kann auch \\(\\varepsilon\\) sein (echter) Infix Teilw\u00f6rter  (echt = Infix nicht gleich das Wort) Kann auch \\(\\varepsilon\\) sein (echter) Suffix Das Ende des Wortes (echt = Suffix nicht gleich das Wort)  Kann auch \\(\\varepsilon\\) sein \\(\\Sigma^2\\) Alle W\u00f6rter des Alphabets \\(\\Sigma\\) mit der L\u00e4nge 2 Kleenesche H\u00fclle \\(\\Sigma^*\\) Alle W\u00f6rter des Alphabets \\(\\Sigma\\) (\\(\\Sigma^+=\\Sigma^*\\setminus\\{\\varepsilon\\}\\)) Konkatination \\(x\\circ y=xy\\) Zwei W\u00f6rter werden zusammen verketet Wortpotenzen \\((ab)^3=ababab\\) Sprachen-Konkatenation \\(AB=\\{uv\\mid u \\in A \\text{ und } v \\in B\\}\\) Kleenesche H\u00fclle einer Sprache \\(A^*=\\varepsilon \\cup A \\cup AA \\cup AAA \\cup ...\\) Komplement einer Sprache \\(\\overline L=\\Sigma^*-L=\\Sigma^*\\setminus L\\)","tags":["summary","THIN"]},{"location":"22FS/THIN/summary%20%28copy%29.html#chomsky-hirarchie","title":"Chomsky-Hirarchie","text":"<ul> <li>Typ-0 - rekursive Aufz\u00e4hlbar und Turing-Maschinen</li> <li>Typ-2 - Nicht-deterministische Kellerautomaten / Kontextfreie Gramatik</li> <li>Typ-3 - RegEx / Endliche Automaten (DEA, NEA)</li> </ul>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary%20%28copy%29.html#regex","title":"Regex","text":"<ul> <li>\\(\\epsilon\\) - eine leere Regular-Expression. Diese matcht nichts. Beschreibt \\(\\{\\varepsilon\\}\\)</li> <li>\\([x_1, x_2, ...,x_k]=x_1|x_2|...|x_k\\) </li> <li>\\(\\oslash\\) - eine leere Menge von Regular-Expressions</li> <li>\\(\\O\\) - eine leere Sprache</li> <li><code>*</code> zuerst verarbeiten, danach Konkatenation, danach <code>|</code> verarbeiten (Stern vor Konkatenation vor Strich)</li> </ul> <p>Wenn zwei Sprachen regul\u00e4r sind, ist das Resultat von einem Operator mit diesen Sprachen regul\u00e4r</p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary%20%28copy%29.html#endliche-automaten","title":"Endliche Automaten","text":"<p>Deterministische Endlichen Automat: \\(M=(Q, \\Sigma, \\delta, q_0, F)\\)</p> <ul> <li>\\(Q\\) : Alle Zust\u00e4nde des Automaten \\(Q=\\{q_0, q_1, ...,q_n\\}\\)</li> <li>\\(\\Sigma\\): Eingabealpabet</li> <li>\\(\\delta: Q\\times \\Sigma \\rightarrow Q\\): \u00dcbergangsfunktionen, welche von einem Zustand und einem Eingabe Symbol zum n\u00e4chsten Zustand f\u00fchrt</li> <li>\\(q_0\\): Startzustand</li> <li>\\(F\\subseteq Q\\): Menge der akzeptierten Zust\u00e4nden. Mindestens ein Zustand muss akzeptiert sein</li> </ul> <p>Im folgenden Beispiel sind ist eine Berechnung, bestehended aus Berechnungsschritte (welche aus Konfigurationen bestehen). Die Startkonfiguration ist: \\(\\{q_0\\}\\times \\Sigma^*\\), die Endkonfiguration:  \\((q, w)\\in Q\\times\\{\\epsilon\\}\\) $$ (q0, a_1a_2a_3)\\vdash_A(q_1, a_2a_3)\\vdash_A(q_2, a_3)\\vdash_A(q4, \\epsilon)=(q0, a_1a_2a_3)\\vdash_A^(q4, \\epsilon) $$ Die Sprache* eines endlichen Automaten besteht aus allen W\u00f6rter, welche in einem Endzustand landen ohne verbleibenden Input.</p> Was Beschreibung Der Startzustand Akzeptierter Endzustand Normaler Zustand \u00dcbergangsfunktionen: Vom Zustand \"0.50\" kann zu \"1.50\" gelaufen werden","tags":["summary","THIN"]},{"location":"22FS/THIN/summary%20%28copy%29.html#nicht-deterministische-automaten-nea","title":"Nicht Deterministische Automaten (NEA)","text":"<p>Eine NEA kann es f\u00fcr einen Input und Zustand mehrere \u00dcberg\u00e4nge geben (\u00dcbergangsfunktion: \\(\\delta: Q\\times \\Sigma\\rightarrow \\mathcal P(Q)\\)). Es werden alle M\u00f6glichkeiten von der NEA durchprobiert. Eine NEA akzeptiert ein Wort, wenn eine M\u00f6glichkeit akzeptiert wird.</p> <p>Eine \\(\\varepsilon\\)-NEA ist eine NEA, welche den Zustand wechseln kann, ohne ein Input zu konsumieren (\u00dcbergangsfunktion: \\(\\delta: Q\\times \\Sigma \\cup \\{\\epsilon\\}\\rightarrow \\mathcal P(Q)\\))</p> <p>Um eine \\(\\varepsilon\\)-NEA in eine NEA umzuwandeln, muss \u00fcberlegt werden, was f\u00fcr ein Zeichen als n\u00e4chstes konsumiert  werden k\u00f6nnte und diese in den uspr\u00fcnglichen \u00dcbergang aufzunehmen.</p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary%20%28copy%29.html#teilmengenkonstruktion-nea-to-dea","title":"Teilmengenkonstruktion (\\(NEA \\to DEA\\))","text":"<ol> <li>Die Zust\u00e4nde sind die Potenzmenge von \\(Q_N\\) (Potenzmenge:  \\(\\mathcal P(\\{0, 1\\})=\\{\\emptyset, \\{0\\}, \\{1\\}, \\{0, 1\\}\\}\\))</li> <li>Die potentielle Startzustand Kandidaten sind alle diese Teilmengen von \\(Q_N\\), welche \\(q_0\\) enthalten</li> <li>Akzeptierte Zust\u00e4nde sind alle Teilmengen, welche ein Element aus \\(F_N\\) besitzen</li> <li>Aus den Zust\u00e4nden und eingaben soll nun eine Tabelle gezeichnet werden. Bei dieser k\u00f6nnen alle Zust\u00e4nde gestrichen werden, welche nicht erreichbar sind. Also nie bei einer Eingabe-Spalte auftauchen. Dies muss solange wiederholt werden, bis nichts gestrichen werden kann.     Wenn \\(\\{q_1\\}\\) in einer Eingabe-Spalte steht, heisst das nur, dass \\(\\{q_1\\}\\) vorhanden ist. \\(\\{q_1, q_2\\}\\) muss immer noch gestrichen werden, wenn es nicht selbst vorkommt    Wenn eine Verbindung das leeres Wort nimmt, werden die Zust\u00e4nde, welche man vom leeren Wort Zustand erreichen kann, auch vom urspr\u00fcnglichen Wort als erreichbar angesehen.</li> <li>Die noch nicht gestrichenen Resultaten k\u00f6nnen nun Namen verteilt werden (z.B A-Z)</li> </ol>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary%20%28copy%29.html#dea-to-regex","title":"DEA \\(\\to\\) RegEX","text":"<ol> <li>F\u00fcr jeden Zustand eine separate Sprache definieren. Diese darf sich selbst referenzieren oder auch andere Sprachen</li> <li>K\u00fcrzen und einsetzen. Meistens ist es am einfachsten von den Endzust\u00e4nden zu k\u00fcrzen zu beginnen</li> </ol> \\[ \\begin{align} L_{q_0}&amp;=(0|1)L_{q_0}|0L_{q_1}\\Rightarrow(0|1)^*0L_{q_1}\\Rightarrow(0|1)*01\\\\ L_{q_1}&amp;=1L_{q_2} \\Rightarrow1\\varepsilon=1\\\\  L_{q_2}&amp;=\\varepsilon\\\\ \\end{align} \\] <p>Arden'sches Lemma: \\(L=UL|V\\Rightarrow L=U^*V\\), dabei ist \\(L\\) eine Spraceh und \\(U\\) einen andren Ausdruch</p> <p>Zustandsklassen:  \\([p]=\\{w \\in \\Sigma^*\\vert M \\text{ endet nach Lesen des Input-Worts } w \\text{ im Zustand } p\\}\\), dabei ist \\(M\\) einen Automaten, \\(w\\) ein eingabe Wort und \\(p\\) ein Zustand (nicht unbedingt der Endzustand)</p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary%20%28copy%29.html#untere-schranke-fur-endliche-automaten","title":"Untere Schranke f\u00fcr endliche Automaten","text":"<p>Die grunds\u00e4tzliche Idee  ist, dass wenn die Worte \\(x\\) und \\(y\\) in derselben Zustandsklasse ist, dann ist \\(zx=zy\\), wobei \\(z\\) irgend ein Wort ist.</p> <p>Es m\u00fcssen nun die folgende Schritte gefolgt werden:</p> <ol> <li>Es wird eine Annahme getroffen, wie viele Zust\u00e4nde eine Maschine ben\u00f6tigt</li> <li>Es m\u00fcssen f\u00fcr jeden Zustand ein Wort gefunden werden, welches in diesem Zustand endet</li> <li>Es wird nun f\u00fcr jede Kombination von W\u00f6rter von Schritt 2. ein Prefix oder Postfix \\(z\\) gefunden werden, welcher kombiniert mit dem einen Wort, ein Wort ergibt, welches in der Sprache ist und mit dem anderen Wort ein, ein Wort welches nicht in der Sprache ist</li> <li>Wenn dies f\u00fcr jedes Wort von Schritt 2. getan werden kann, dann werden mindestens so viel Zust\u00e4nde ben\u00f6tigt.  Da wenn zwei W\u00f6rter mit demselben Wort verbunden wird und diese in unterschiedlichen Sprache sind, die zwei W\u00f6rter in unterschiedlichen Zust\u00e4nde endet.</li> </ol>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary%20%28copy%29.html#kontextfreie-gramatik","title":"Kontextfreie Gramatik","text":"<p>Die Kontextfreie Grammatik \\(G\\) ist durch das Tupel \\((N, \\Sigma, P, A)\\) definiert, wobei</p> <ul> <li>\\(N\\) das Alphabet der Nichtterminale (Variabeln)ist , welche mit Produktionen in \\(P\\) aufgel\u00f6st werden k\u00f6nnen</li> <li>\\(P\\) eine endliche Menge von Produktionen in der Form \\(X \\rightarrow \\beta\\) ist. Dabei ist der Kopf \\(X\\in N\\) und der Rumpf \\(\\beta \\in (N\\cup\\Sigma)^*\\))  </li> <li>\\(A\\) das Startsymbol ist und gilt \\(A\\in N\\)</li> </ul> <p>$$ G_1=({A}, {0, 1}, P, A) \\ P={A\\rightarrow0A1,A\\rightarrow\\varepsilon} $$ Eine Kontextfreie Grammatik wird mehrdeutig genannt, wenn es f\u00fcr ein Wort mehrere Ableitungsb\u00e4ume gibt. Eine Sprache ist kontextfrei, wenn ein Kellerautomaten dazu gebaut werden kann.</p> <ul> <li>Mehrere Ableitungsschritte: \\(A\\Rightarrow AA \\Rightarrow (A)A \\Rightarrow (A)(A)\\Rightarrow()()\\) </li> <li>Dies kann auch als: \\(A \\overset*\\Rightarrow w\\) geschrieben werden. Dabei wird das Wort \\(w\\) vom Symbol \\(A\\) erzeugt/generiert.</li> <li>Ein Wort wird ableitbar gennant, wenn es eine Ableitung f\u00fcr dieses Wort gibt.</li> <li>Auf der Rechten Seite sieht ist ein Abbleitungsbaum. </li> <li>Linksseitig Ableiten: Die am meisten linke Variable wird immer zuerst abgeleitet</li> <li>Rechtsseitig Ableiten: Die am meisten rechte Variable wird immer zuerst abgeleitet</li> <li>eindeutige Gramatik: Eine Gramatik, welche nur auf eine Art abgeleitet werden kann</li> </ul> <p></p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary%20%28copy%29.html#dea-zu-kontextfreien-sprache","title":"DEA zu kontextfreien Sprache","text":"<p>Es gibt eine DEA \\(M=(Q, \\Sigma, \\delta, q_0, F)\\). Aus dieser kann eine kontextfreie Sprache erstellt werden:</p> <ol> <li>F\u00fcr jeden Zustand \\(q_i\\) gibt es ein Nichtterminal \\(Q_i\\)</li> <li>F\u00fcr jede Transition \\(\\delta(q_i, a)=q_j\\) gibt es eine Produktion \\(Q_i\\rightarrow aQ_j\\)</li> <li>F\u00fcr jeden akzeptierten Zustand gibt es eine Produktion \\(Q_i\\rightarrow \\varepsilon\\)</li> <li>Das Nichtterminal \\(Q_0\\) wird das Startsymbol</li> </ol>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary%20%28copy%29.html#keller-automaten-ka","title":"Keller Automaten (KA)","text":"<p>Ein deterministischer Keller Automaten (KA) wird als 7-Tupel dargestellt: \\((Q, \\Sigma, \\Gamma, \\delta, q_0, \\$, F)\\))</p> <ul> <li>\\(\\Gamma\\) ist das Alphabet des Kellers (bzw. des Stacks)</li> <li>\\(\\delta: Q\\times (\\Sigma \\cup \\varepsilon) \\times \\Gamma\\rightarrow Q\\times\\Gamma^*\\) ist die (partielle) \u00dcbergangsfunktion</li> <li>\\(\\$\\in \\Gamma\\) ist ein ausgezeichnetes Symbol vom Alphabet des Stacks/Kellers</li> </ul> <p>Zu dem gilt f\u00fcr die \u00dcbergangsfunktion \\(\\delta\\), wenn \\(\\delta(q, b, x)\\) definiert ist, darf \\(\\delta(q, \\varepsilon, x)\\) nicht definiert sein.  Zu begin der Ausf\u00fchrung ist im Strack \\(\\$\\), was ein leerer Stack darstellt.</p> <p></p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary%20%28copy%29.html#nichtdeterministischen-kellerautomaten-nka","title":"Nichtdeterministischen Kellerautomaten (NKA)","text":"<p>Eine NKA ist gleich wie eine KA, nur das die \u00dcbergangsfuntkion den Typ \\(\\delta: Q\\times (\\Sigma \\cup \\varepsilon) \\times \\Gamma\\rightarrow \\mathcal P (Q\\times\\Gamma^*)\\) hat. Der R\u00fcckgabetyp ist die Potenzmenge. Somit kann in der NKA ein Eingang mehrere Ausg\u00e4nge haben.</p> <p>Wie auch bei einer NEA kann nun im \\(\\varepsilon\\) (das leere Wort) f\u00fcr \\(\\Sigma\\) in der \u00dcbergangsfunktion. </p> <p>Nicht alle NKA k\u00f6nnen in eine KA umgewandlet werden. Auch gibt es kontextfreie Sprachen, welche nicht in eine KA umgewandlet k\u00f6nnen werden.</p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary%20%28copy%29.html#berechnungen-und-berechnungsschritte","title":"Berechnungen und Berechnungsschritte","text":"<p>Die Berechnungssfunktion dazu w\u00e4re: \\(\\delta(q, b, c)=(p, w)\\) Dabei befindet sich der Automaten im Zustand \\(q\\), list das Symbol \\(b\\) von der Eingabe und wird das Kellersymbol \\(c\\) vom Stack lesen und \\(w\\) zur\u00fcck schreiben. </p> <p>Eine Berechnung besteht aus mehreren Berechnungsschritte und eine Start- und Endkonfiguration.</p> <p>Beispiel: \\((q_0, 0011, \\$) \\vdash (q_0, 011, 0\\$)\\vdash (q_0, 11, 00\\$)\\vdash(q_1, 1, 0\\$)\\vdash(q_1, \\varepsilon, \\$)\\vdash(q2, \\varepsilon, \\$)\\)  Dies kann auch als \\((q_0, 0011, \\$)\\vdash^*(q2, \\varepsilon, \\$)\\) geschrieben werden.</p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary%20%28copy%29.html#turing-machinen","title":"Turing Machinen","text":"<p>Eine (determinischtische) Turing-Maschine (DTM) ist ein 7-Tupel: \\(M=(Q,\\Sigma, \\Gamma, \\delta, \\textvisiblespace, F)\\)</p> <ul> <li>\\(\\delta: Q\\times \\Gamma \\rightarrow Q\\times\\Gamma\\times D, D=\\{L, R\\}\\): Die \u00dcbergangsfunktion, welche den n\u00e4chsten Zustand, was geschrieben werden soll und ob das Band nach Links (L) oder nach rechts (R) geschoben werden soll</li> <li>\\(\\Gamma\\): Das Bandalphabet, dabei muss \\(\\Sigma \\subset \\Gamma\\)</li> <li>\\(\\textvisiblespace\\): Das Leerzeichen, dabei muss \\(\\textvisiblespace \\in \\Gamma\\) und \\(\\textvisiblespace \\not \\in \\Sigma\\)</li> </ul> <p>Berechnungen werden folgendermassen dargestellt: \\(X_1,...X_{i-1}qX_iX_{i+1},...,X_n\\vdash X_1,...X_{i-1}pX_iX_{i+1},...,X_n\\) Der aktuelle Zustand ist in der Mitte (\\(q\\) bzw. \\(p\\)). Abgek\u00fcrzt wird es als \\(K_1\\vdash^* K_n\\) geschrieben</p> <p>Eine Sprache, welche von einer TM akzeptiert wird, nennt sich rekursiv aufz\u00e4hltbar</p> <p>Im folgenden Bild wird eine \u00dcbergangsfunktion einer Turing Maschine gezeigt: \\(\\delta(q_1, X)=(q_2, Y, D)\\), wobei \\(D\\in\\{L, R\\}\\)</p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary%20%28copy%29.html#modifikationen","title":"Modifikationen","text":"<ul> <li>Mit zus\u00e4tzlichem Speicher</li> <li>Mit mehreren Spuren, welche auf einem Band sind (ein Lese/Schreibkopf)</li> <li>Mit mehreren B\u00e4ndern (mehrere Lese/Schreibk\u00f6pfe) (\u00dcbergangsfunktion: \\(\\delta:Q\\times\\Gamma^k\\rightarrow Q\\times \\Gamma^k \\times \\{R, S, L\\}^k\\))</li> <li>Nicht deterministische Turning Machine   \u00dcberg\u00e4nge m\u00fcssen nicht einzigartig sein (wie bei NEAs) (\u00dcbergangsfunktion: \\(\\delta: Q\\times \\Gamma \\rightarrow \\mathcal P(Q \\times \\Gamma \\times \\{R, L\\})\\)   Nicht deterministische TMs sind gleich m\u00e4chtig, wie deterministische TMs.</li> <li>Mit semi-beschr\u00e4nktem Band   Das Band ist nur unendlich in eine Richtung. Eine Semi-beschr\u00e4nkte TM ist gleich m\u00e4chtig, wie eine TM. (Beweissidee: Eine semi-beschr\u00e4nkte TM mit zwei b\u00e4nder, eines f\u00fcr die positive und eines f\u00fcr die negative Seite)</li> <li>\\(k\\)-Stack Machine   Eine Deterministischer Kellear Automat mit mehreren Stacks (\u00dcbergangsfunktion: \\(\\delta: Q \\times \\Gamma_1\\times...\\times\\Gamma_n\\rightarrow Q\\times\\Gamma_1^*\\times...\\times \\Gamma^*_k\\))   Eine 2-Stack Machine kann ein Band simulieren (Ein Stack f\u00fcr die negative und ein Stack f\u00fcr die positive Seite) und ist demnach gleich m\u00e4chtig, wie eine TM</li> <li>Z\u00e4hler-Machine (Hat Z\u00e4hler einer nat\u00fcrlichen Zahl (\\(n \\ge 0\\)) anstatt Stacks)   Ein 2-Stack kann mit mit 3-Z\u00e4hler ersetzt werden und daher ist ein Z\u00e4hler-Machine gleich wertig, wie eine TM.    Daf\u00fcr wird jedem Symbol des Stacks eine Zahl zugeordnet (1, 2, 3, 4, ...). Der aktuelle Wert wird mit der Anzahl Symbolen multipliziert und mit dem n\u00e4chsten Symbol addiert (\\(c_{new}=c_{old}\\cdot length + s\\)). Beim dekodieren wird der Wert durch die Anzahl Symbole geteilt und der Rest ist das aktuelle Symbol.    Diese 3-Z\u00e4hler Machine kann mit einer 2-Z\u00e4hler Machine simuliert werden, in dem die 3-Z\u00e4hler mit der Encodierung \\(2^i\\cdot 3^j\\cdot 4^k\\) enkodiert werden und mit einer Primfaktorzerlegung dekodiert werden. Ein Z\u00e4hler wird noch zum Rechnen ben\u00f6tigt.</li> </ul>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary%20%28copy%29.html#universelle-turning-maschine-utm","title":"Universelle Turning Maschine (UTM)","text":"<p>Eine Turing Maschine, welche andere Turning Maschinen simulieren kann. Alle Zust\u00e4nde werden Un\u00e4r-Kodiert (0 = 1, 00 = 2, 000 = 3, ...) mit dem Trennzeichen <code>1</code> </p> <p>Dabei wird folgendes gespeichert: Die \u00dcbergangsfunktion \\(\\delta(q_i, X_j)=(q_k, X_l, D_m)\\to 0^i10^j10^l10^m\\). Einzelne \u00dcbergansfunktionen werden mit <code>11</code> getrennt. Die Machine wird mit <code>111</code> vom Input getrennt.</p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary%20%28copy%29.html#berechnungsmodelle","title":"Berechnungsmodelle","text":"<p>Intuitive berechenbare Funktion: eine Funktion, welche algorithmisch (durch eine mechanisches Verfahren) berechnet werden kann. Jede intuitive berechenbare Funktion l\u00e4sst sich mit einer TM berechnen.</p> <p>Turing-berechenbare Funktionen: Funktionen, welche von einer Turing-Maschinen berechnet werden k\u00f6nnen</p> <p>Gandys These M: Alles, was jemals mit einer (endlichen) Maschine/physikalischen Apparatur berechnet werden kann, ist bereits von einer Turing-Maschine berechenbar. Bis jetzt wurde noch kein Gegenbeispiel zu beiden Thesen gefunden worden.</p> <p>Turing-Vollst\u00e4ndigkeit: F\u00fcr jede Zahl \\(k \\in \\N\\) und jede Funktion \\(f: \\N^k \\to \\N\\) gibt es eine Turing-Machine und While-Programm</p> <ul> <li>Zuweisungen: <code>x = y + c</code> oder <code>x = y - c</code>  (wobei c eine Konstante ist!)</li> <li><code>x0</code> ist der Output; <code>x1</code>, <code>x2</code>, ... sind die Inputs/Variabeln</li> <li>Alle Variabeln k\u00f6nnen nat\u00fcrliche Zahlen (\\(n \\ge 0\\)) enthalten (\\(2-5=0\\))</li> <li>Loop-Programme</li> <li><code>LOOP x DO ... END</code> Der Loop wird <code>x</code>-mall durchgef\u00fchrt. \u00c4ndern von <code>x</code> hat kein Einfluss</li> <li>While-Programme (auch <code>LOOP</code> ist erlaubt)</li> <li><code>While xi &gt; 0 Do ... End</code> Die einzige erlaubte Bedingung ist <code>xi &gt; 0</code></li> <li>While-Programme terminieren nicht immer</li> <li>Jedes Loop-Pgramm ist auch ein WhileProgramm</li> <li>GOTO-Programme: </li> <li>Marker: (<code>M1:</code>, <code>M2:</code>, ...), <code>Goto Mk</code> , <code>If xi = c Then Goto Mr</code>, <code>Halt</code> (Haltet das Programm an)</li> <li>Primitiv rekursive Funktion (nach dem Muster \\(f: \\N^2 \\to \\N\\))</li> <li>Konstante Funktion: \\(c^n_k: \\N^n \\to \\N \\mapsto c^n_k(x_1, ..., x_n)=k\\)</li> <li>Nachfolge Funktion: \\(\\eta: \\N \\to \\N \\mapsto \\eta(x)=x+1\\)</li> <li>Projektion (\\(1 \\le k \\le n\\)): \\(\\pi^n_k: \\N^n \\to \\N \\mapsto \\pi^n_k(x_1, ...,x_k,...,x_n)=x_k\\)</li> <li>Wenn \\(f\\) und \\(g_i\\) primitive rekursive Funktionen sind, dann ist \\(h(\\vec x)=f(g_1(\\vec x), ..., g_k(\\vec x))\\) auch eine primitive rekursive Funktion</li> <li>Primitive rekursive Funktionen = LOOP-Programme</li> </ul> <p>Ackermann (ist Turing-berechenbar, nicht Loop berechen, bzw. nicht primitive rekursive, ist total):  $$ \\begin{align} a(0, m)&amp;= m + 1\\ a(n + 1, 0) &amp;= a(n, 1)\\ a(n + 1, m + 1) &amp;= a(n, a(n + 1, m)) \\end{align} $$</p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary%20%28copy%29.html#entscheidbarkeit","title":"Entscheidbarkeit","text":"<p>Entscheidbar: Es gibt eine Turing-Maschine, welche f\u00fcr alle akzeptierten (wenn ein <code>1</code> aufs Band geschrieben wird) und nicht akzeptierten Zust\u00e4nde (wenn ein <code>0</code> aufs Band geschrieben wird) endet</p> <p>Semi-Entscheidbar: Es gibt eine Turing-Maschine, welche f\u00fcr alle akzeptierten Zust\u00e4nde h\u00e4lt und f\u00fcr nicht akzeptierte Zust\u00e4nde nie h\u00e4lt.</p> <p>Reduktion Es gibt eine Funktion \\(F: \\Sigma^* \\to \\Gamma^*\\) f\u00fcr die Sprache \\(A \\subset \\Sigma^*\\) und \\(B  \\subset \\Gamma^*\\). Dies wird als \\(A \\preceq B\\) geschrieben</p> <ul> <li>Jede entscheidbare Sprache ist auch semi-entscheidbar</li> <li>Wenn eine Sprache \\(A\\) und ihr Komplement \\(\\overline A\\) semi-entscheidbar ist, sind \\(A\\), wie auch \\(\\overline A\\) entscheidbar</li> <li>Wenn \\(A\\) entscheidbar ist, ist auch \\(\\overline A\\) entscheidbar</li> <li>Wenn \\(A\\) und \\(B\\) (semi-)entscheidbar sind, ist auch \\(A \\cup B\\) und \\(A \\cap B\\) (semi-)entscheidbar</li> <li>\\(A\\) ist rekursive aufz\u00e4hlbar \\(\\Leftrightarrow\\) \\(A\\) ist semi-entscheidbar \\(\\Leftrightarrow\\) \\(A\\) ist der Werte und Definitionsbereich einer berechenbaren Funktion</li> <li>\\(A\\preceq B\\) und \\(B \\preceq C\\), dann gilt auch \\(A \\preceq C\\)</li> <li>Ist \\(B\\) (semi-)entscheidbar und \\(A \\preceq B\\), dann ist auch \\(A\\) (semi-)entscheidbar</li> </ul> <p>allgemeine Halteproblem: Gibt es eine TM \\(H\\), welche entscheiden kann, ob ein Program mit einem Input anh\u00e4lt oder nicht immer weiter l\u00e4uft.</p> <p>leere Halteproblem: Ob es eine TM \\(H_0\\) gibt, welche entscheiden kann, ob ein Programm mit einem leeren Band anh\u00e4lt</p> <p>spezielle Halteproblem: Es wird eine TM \\(H_S\\) erstellt, welche \\(H\\) fragt, ob ein Program endet. Wenn ja, loopt \\(H_S\\), wenn nein, beendet \\(H_S\\). Wenn \\(H_S\\) das als Input \\((H_S, H_S)\\) bekommt, ist unklar, ob \\(H_S\\) anh\u00e4lt oder weiterl\u00e4uft und daher kann es keine TM \\(H\\) geben.</p> <p>Alle Halteprobleme sind semi-entscheidbar und nicht-entscheidbar.</p> <p>Konsequenzen von Satz von Rice: Unm\u00f6glich im Allgemeinen zu \u00fcberpr\u00fcfen, ob ein Program</p> <ul> <li>eine bestimmte Spezifikation erf\u00fcllt</li> <li>frei von \u201cbugs\u201d ist</li> <li>bei jeder Eingabe terminiert</li> <li>und ein anderes Program dieselbe Funktionalit\u00e4t haben</li> </ul> <p>Colatz: \\(n \\text{ ist gerade} \\Rightarrow n=\\frac n 2 \\text{ sonst } n=3n + 1\\) Alle positiven Inputs enden in \\(4 \\to 2 \\to 1  \\to 4 \\to 2 \\to 1\\)</p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary%20%28copy%29.html#komplexitatstheorie","title":"Komplexit\u00e4tstheorie","text":"<ul> <li>Zeitkomplexit\u00e4t: Laufzeit des besten Programms, welche ein Problem l\u00f6st</li> <li>Platzkomplexit\u00e4t: Speicherbedarf des bestens Programmes</li> <li> <p>Beschreibungskomplexit\u00e4t: L\u00e4nge des k\u00fcrzesten Programmes</p> </li> <li> <p>Obereschranke: \\(f \\in \\mathcal O(g)\\Leftrightarrow f(n) \\le c \\cdot g(n)\\)  wenn \\(n\\) gr\u00f6sser als \\(n_0\\) ist (Wobei \\(g\\) und \\(f\\) eine Funktion \\(\\N \\to \\N\\) ist und \\(c\\in \\N\\) eine Konstante)</p> </li> <li>Untereschranke: \\(f \\in \\Omega(g)\\Leftrightarrow f(n) \\ge \\frac 1 d \\cdot g(n)\\) wenn \\(n\\) gr\u00f6sser als \\(n_0\\) ist (Wobei \\(d \\in \\N\\) eine Konstante ist)</li> <li>\\(f\\in \\Theta(g) \\Leftrightarrow f(n)\\in \\mathcal O(g(n))\\wedge f(n)\\in \\Omega(g(n))\\)</li> </ul> <p></p> Komplexit\u00e4t Beispiel \\(\\mathcal O(1)\\) Konstanter Aufwand unabh\u00e4ngig vom Input \\(\\mathcal O(n)\\) Linearer Aufwand: Ein For-Loop Abh\u00e4ngig von \\(n\\) \\(\\mathcal O(\\log n)\\) Logarithmischer Aufwand: Binary-Search/ Mit jeder Iteration wird der Aufwand halbiert \\(\\mathcal O(n^2)\\) Quadratischer Aufwand: Zwei verschachtelte For-Loops abh\u00e4ngig von \\(n\\) \\(\\mathcal O(2^n)\\) Exponentieller Aufwand: Mit jeder Iteration verdoppelt sich der Aufwand","tags":["summary","THIN"]},{"location":"22FS/THIN/summary%20%28copy%29.html#np-vs-p","title":"NP vs P","text":"<ul> <li>Polynomzeit l\u00f6sbar (P): Problem ist teil von \\(\\mathcal O(n^c)\\), wobei \\(c \\ge 1\\)</li> <li>Nicht deterministische Polynomiell (NP): Alle Probleme entscheidbar von einer Nicht-deterministische Maschine in polynomzeit</li> <li>Polynomzeit-Verifizierer: Eine TM, welche eine L\u00f6sung in polynomial zeit verifiziert</li> <li>\\(P\\neq NP\\): Nicht alle Probleme, welche in polynomzeit verifizierbar sind, k\u00f6nnen in polynomzeit gel\u00f6st werden</li> <li>Clique: Eine Menge von Knoten, bei welchen alle Knoten mit allen anderen Knoten (ausser sich selbst) verbunden sind</li> <li>NP-Schwer: Ein Problem, welches sich auf alle NP-Probleme reduzieren l\u00e4sst. Ein NP-Schweres Problem ist gleich schwer oder schwerer also das schwerste NP-Problem</li> <li>NP-Vollst\u00e4dnig: Ein NP-Vollst\u00e4ndiges Problem ist NP-Schwer und ein NP-Problem</li> <li>polynomiell reduzierbar (\\(\\preceq_p\\)): Eine Reduktion in polynomieller Zeit (\\(L_1 \\preceq_p L_2\\) heisst, dass \\(L_2\\) mindestens so schwer wie \\(L_1\\) ist )</li> <li>Wenn \\(P_1\\) NP-schwer, \\(P_2\\) in NP enthalten ist und \\(P_1 \\preceq_p P_2\\) gibt, dann ist \\(P_2\\) NP-vollst\u00e4ndig</li> <li>SAT: \"erstes\" NP-volst\u00e4ndige Problem   Ob eine Formel in der KNF (\\((x_1 \\vee x_2) \\wedge (x_3 \\vee x_4) \\wedge \\neg x_5\\))) erf\u00fcllbar ist</li> </ul> <p>TODO: L\u00f6sung von SAT Problem</p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary.html","title":"Summary","text":"Begriff Beschreib Alphabet Endliche, nichtleere Menge von Symbolen (\\(\\Sigma=\\{a, b, c\\}\\)) Wort Endliche Folge von Symbolen \\(\\varepsilon\\) Das Leere Wort (\\(\\vert \\varepsilon\\vert=0\\)) Sprache Eine Menge von W\u00f6rtern (\\(L=\\{10, 1100, ...\\}\\), in Prosa oder \\(L=\\{1^n0^n\\mid n\\in \\N\\}\\)) \\(\\emptyset\\) Leere Sprache (\\(\\emptyset \\neq \\{\\varepsilon\\}\\)) \\(\\vert abca\\vert_a=2\\) H\u00e4ufigkeit von a \\((abc)^R\\) Spiegelwort von \\(abc\\) \\(\\Sigma^2\\) Alle W\u00f6rter des Alphabets \\(\\Sigma\\) mit der L\u00e4nge 2 Kleenesche H\u00fclle \\(\\Sigma^*\\) Alle W\u00f6rter des Alphabets \\(\\Sigma\\) (\\(\\Sigma^+=\\Sigma^*\\setminus\\{\\varepsilon\\}\\)) Konkatination \\(x\\circ y=xy\\) Zwei W\u00f6rter werden zusammen verketet Wortpotenzen \\((ab)^3=ababab\\) Sprachen-Konkatenation \\(AB=\\{uv\\mid u \\in A \\text{ und } v \\in B\\}\\) Kleenesche H\u00fclle einer Sprache \\(A^*=\\varepsilon \\cup A \\cup AA \\cup AAA \\cup ...\\) Komplement einer Sprache \\(\\overline L=\\Sigma^*-L=\\Sigma^*\\setminus L\\)","tags":["summary","THIN"]},{"location":"22FS/THIN/summary.html#regex","title":"Regex","text":"<ul> <li>\\(\\epsilon\\) - eine leere Regular-Expression. Diese matcht nichts. Beschreibt \\(\\{\\varepsilon\\}\\)</li> <li>\\([x_1, x_2, ...,x_k]=x_1|x_2|...|x_k\\) </li> <li>\\(\\oslash\\) - eine leere Menge von Regular-Expressions</li> <li>\\(\\O\\) - eine leere Sprache</li> <li><code>*</code> zuerst verarbeiten, danach Konkatenation, danach <code>|</code> verarbeiten (Stern vor Konkatenation vor Strich)</li> </ul> <p>Wenn zwei Sprachen regul\u00e4r sind, ist das Resultat von einem Operator mit diesen Sprachen regul\u00e4r</p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary.html#endliche-automaten","title":"Endliche Automaten","text":"<p>Deterministische Endlichen Automat: \\(M=(Q, \\Sigma, \\delta, q_0, F)\\)</p> <ul> <li>\\(Q\\) : Alle Zust\u00e4nde des Automaten \\(Q=\\{q_0, q_1, ...,q_n\\}\\)</li> <li>\\(\\Sigma\\): Eingabealpabet</li> <li>\\(\\delta: Q\\times \\Sigma \\rightarrow Q\\): \u00dcbergangsfunktionen, welche von einem Zustand und einem Eingabe Symbol zum n\u00e4chsten Zustand f\u00fchrt</li> <li>\\(q_0\\): Startzustand</li> <li>\\(F\\subseteq Q\\): Menge der akzeptierten Zust\u00e4nden. Mindestens ein Zustand muss akzeptiert sein</li> </ul> <p>Die Startkonfiguration ist: \\(\\{q_0\\}\\times \\Sigma^*\\), die Endkonfiguration:  \\((q, w)\\in Q\\times\\{\\epsilon\\}\\) $(q0, a_1a_2a_3)\\vdash_A(q_1, a_2a_3)\\vdash_A(q_2, a_3)\\vdash_A(q4, \\epsilon)=(q0, a_1a_2a_3)\\vdash_A^*(q4, \\epsilon) $</p> Was Beschreibung Der Startzustand Akzeptierter Endzustand Normaler Zustand \u00dcbergangsfunktionen","tags":["summary","THIN"]},{"location":"22FS/THIN/summary.html#nicht-deterministische-automaten-nea","title":"Nicht Deterministische Automaten (NEA)","text":"<p>\u00dcbergangsfunktion einer NEA: \\(\\delta: Q\\times \\Sigma\\rightarrow \\mathcal P(Q)\\). </p> <p>\u00dcbergangsfunktion einer \\(\\varepsilon\\)-NEA  (\u00dcbergangsfunktion: \\(\\delta: Q\\times \\Sigma \\cup \\{\\epsilon\\}\\rightarrow \\mathcal P(Q)\\))</p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary.html#teilmengenkonstruktion-nea-to-dea","title":"Teilmengenkonstruktion (\\(NEA \\to DEA\\))","text":"<ol> <li>Die Zust\u00e4nde sind die Potenzmenge von \\(Q_N\\) (Potenzmenge:  \\(\\mathcal P(\\{0, 1\\})=\\{\\emptyset, \\{0\\}, \\{1\\}, \\{0, 1\\}\\}\\) und \\(|\\mathcal P(A)|=2^{|A|}\\))</li> <li>Akzeptierte Zust\u00e4nde sind alle Teilmengen, welche ein Element aus \\(F_N\\) besitzen</li> <li>Aus den Zust\u00e4nden und eingaben soll nun eine Tabelle gezeichnet werden. Bei dieser k\u00f6nnen alle Zust\u00e4nde gestrichen werden, welche nicht erreichbar sind. Dies muss solange wiederholt werden, bis nichts gestrichen werden kann. (\\(q0\\) ist Startzustand)</li> <li>Die noch nicht gestrichenen Resultaten k\u00f6nnen nun Namen verteilt werden (z.B A-Z) </li> </ol>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary.html#dea-to-regex","title":"DEA \\(\\to\\) RegEX","text":"<ol> <li>F\u00fcr jeden Zustand eine separate Sprache definieren. Diese darf sich selbst referenzieren oder auch andere Sprachen</li> <li>K\u00fcrzen und einsetzen. Meistens ist es am einfachsten von den Endzust\u00e4nden zu k\u00fcrzen zu beginnen</li> </ol> \\[ \\begin{align} L_{q_0}&amp;=(0|1)L_{q_0}|0 &amp; L_{q_1}\\Rightarrow(0|1)^*0 &amp; L_{q_1}\\Rightarrow(0|1)*01\\\\ L_{q_1}&amp;=1L_{q_2} \\Rightarrow1\\varepsilon=1\\\\  L_{q_2}&amp;=\\varepsilon\\\\ \\end{align} \\] <p>Arden'sches Lemma: \\(L=UL|V\\Rightarrow L=U^*V\\), dabei ist \\(L\\) eine Spraceh und \\(U\\) einen andren Ausdruck</p> <p>Zustandsklassen:  \\([p]=\\{w \\in \\Sigma^*\\vert M \\text{ endet nach Lesen des Input-Worts } w \\text{ im Zustand } p\\}\\), dabei ist \\(M\\) einen Automaten, \\(w\\) ein eingabe Wort und \\(p\\) ein Zustand (nicht unbedingt der Endzustand)</p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary.html#untere-schranke-fur-endliche-automaten","title":"Untere Schranke f\u00fcr endliche Automaten","text":"<p>Es m\u00fcssen nun die folgende Schritte gefolgt werden:</p> <ol> <li>Es wird eine Annahme getroffen, wie viele Zust\u00e4nde eine Maschine ben\u00f6tigt</li> <li>Es m\u00fcssen f\u00fcr jeden Zustand ein Wort gefunden werden, welches in diesem Zustand endet</li> <li>Es wird nun f\u00fcr jede Kombination von W\u00f6rter von Schritt 2. ein Prefix oder Postfix \\(z\\) gefunden werden, welcher kombiniert mit dem einen Wort akzeptiert wird und mit dem anderen Wort nicht akzeptiert wird.</li> </ol>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary.html#kontextfreie-gramatik","title":"Kontextfreie Gramatik","text":"<p>Die Kontextfreie Grammatik \\(G\\) ist durch das Tupel \\((N, \\Sigma, P, A)\\) definiert, wobei</p> <ul> <li>\\(N\\) das Alphabet der Nichtterminale</li> <li>\\(P\\) eine endliche Menge von Produktionen</li> <li>\\(A\\) das Startsymbol ist und gilt \\(A\\in N\\)</li> </ul> <p>$$ G_1=({A}, {0, 1}, P, A) \\ P={A\\rightarrow0A1,A\\rightarrow\\varepsilon} $$ Eine Kontextfreie Grammatik wird mehrdeutig genannt, wenn es f\u00fcr ein Wort mehrere Ableitungsb\u00e4ume gibt. Eine Sprache ist kontextfrei, wenn ein Kellerautomaten dazu gebaut werden kann.</p> <ul> <li>Mehrere Ableitungsschritte: \\(A\\Rightarrow AA \\Rightarrow (A)A \\Rightarrow (A)(A)\\Rightarrow()()\\) oder \\(A\\overset * \\Rightarrow ()()\\)</li> <li>Ein Wort wird ableitbar gennant, wenn es eine Ableitung f\u00fcr dieses Wort gibt.</li> <li>Link- &amp; rechtssseitig Ableiten: Die am meisten linke/rechte Variable wird immer zuerst abgeleitet</li> <li>eindeutige Gramatik: Eine Gramatik, welche nur auf eine Art abgeleitet werden kann</li> </ul>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary.html#dea-zu-kontextfreien-sprache","title":"DEA zu kontextfreien Sprache","text":"<p>Es gibt eine DEA \\(M=(Q, \\Sigma, \\delta, q_0, F)\\). Aus dieser kann eine kontextfreie Sprache erstellt werden:</p> <ol> <li>F\u00fcr jeden Zustand \\(q_i\\) gibt es ein Nichtterminal \\(Q_i\\)</li> <li>F\u00fcr jede Transition \\(\\delta(q_i, a)=q_j\\) gibt es eine Produktion \\(Q_i\\rightarrow aQ_j\\)</li> <li>F\u00fcr jeden akzeptierten Zustand gibt es eine Produktion \\(Q_i\\rightarrow \\varepsilon\\)</li> <li>Das Nichtterminal \\(Q_0\\) wird das Startsymbol</li> </ol>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary.html#keller-automaten-ka","title":"Keller Automaten (KA)","text":"<p>Ein deterministischer Keller Automaten (KA) wird als 7-Tupel dargestellt: \\((Q, \\Sigma, \\Gamma, \\delta, q_0, \\$, F)\\))</p> <ul> <li>\\(\\Gamma\\) = Alphabet des Stacks;  \\(\\delta: Q\\times (\\Sigma \\cup \\varepsilon) \\times \\Gamma\\rightarrow Q\\times\\Gamma^*\\);  \\(\\$\\in \\Gamma\\) = Leere Symbol</li> </ul> <p>Zu dem gilt f\u00fcr die \u00dcbergangsfunktion \\(\\delta\\), wenn \\(\\delta(q, b, x)\\) definiert ist, darf \\(\\delta(q, \\varepsilon, x)\\) nicht definiert sein.  Zu begin der Ausf\u00fchrung ist im Strack \\(\\$\\), was ein leerer Stack darstellt.</p> <p></p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary.html#nichtdeterministischen-kellerautomaten-nka","title":"Nichtdeterministischen Kellerautomaten (NKA)","text":"<p>\u00dcbergangsfuntkion Typ \\(\\delta: Q\\times (\\Sigma \\cup \\varepsilon) \\times \\Gamma\\rightarrow \\mathcal P (Q\\times\\Gamma^*)\\) </p> <p>Nicht alle NKA und kontextfreie Sprachen k\u00f6nnen in eine KA umgewandlet werden.</p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary.html#berechnungen-und-berechnungsschritte","title":"Berechnungen und Berechnungsschritte","text":"<p> \\(\\delta(q, b, c)=(p, w)\\) Vom Zustand \\(q\\) zu \\(p\\) mit dem Input-Symbol \\(b\\) und dem Kellersymbol \\(c\\). \\(w\\) wird geschrieben</p> <p>Beispiel Berechung: \\((q_0, 0011, \\$) \\vdash (q_0, 011, 0\\$)\\vdash (q_0, 11, 00\\$)\\vdash(q_1, 1, 0\\$)\\vdash(q_1, \\varepsilon, \\$)\\vdash(q2, \\varepsilon, \\$)=(q_0, 0011, \\$)\\vdash^* (q_2, \\varepsilon, \\$)\\) </p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary.html#turing-machinen","title":"Turing Machinen","text":"<p>Eine (determinischtische) Turing-Maschine (DTM) ist ein 7-Tupel: \\(M=(Q,\\Sigma, \\Gamma, \\delta, \\textvisiblespace, F)\\)</p> <ul> <li>\\(\\delta: Q\\times \\Gamma \\rightarrow Q\\times\\Gamma\\times D, D=\\{L, R\\}\\);  \\(\\Gamma\\) = Das Bandalphabet, dabei muss \\(\\Sigma \\subset \\Gamma\\); \\(\\textvisiblespace\\) = Das Leerzeichen, dabei muss \\(\\textvisiblespace \\in \\Gamma\\) und \\(\\textvisiblespace \\not \\in \\Sigma\\)</li> </ul> <p>\\(X_1,...X_{i-1}qX_iX_{i+1},...,X_n\\vdash X_1,...X_{i-1}pX_iX_{i+1},...,X_n=K_1\\vdash^*K_n\\)</p> <p>Eine Sprache, welche von einer TM akzeptiert wird, nennt sich rekursiv aufz\u00e4hlbar</p> <p>\\(\\delta(q_1, X)=(q_2, Y, D)\\), wobei \\(D\\in\\{L, R\\}\\)</p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary.html#modifikationen","title":"Modifikationen","text":"<ul> <li>Mit mehreren Spuren, welche auf einem Band sind (ein Lese/Schreibkopf)</li> <li>Mit mehreren B\u00e4ndern (mehrere Lese/Schreibk\u00f6pfe) (\u00dcbergangsfunktion: \\(\\delta:Q\\times\\Gamma^k\\rightarrow Q\\times \\Gamma^k \\times \\{R, S, L\\}^k\\))</li> <li>Nicht deterministische Turning Machine (\u00dcbergangsfunktion: \\(\\delta: Q\\times \\Gamma \\rightarrow \\mathcal P(Q \\times \\Gamma \\times \\{R, L\\})\\)</li> <li>Mit semi-beschr\u00e4nktem Band   Das Band ist nur unendlich in eine Richtung. Eine Semi-beschr\u00e4nkte TM ist gleich m\u00e4chtig, wie eine TM. (Beweissidee: Eine semi-beschr\u00e4nkte TM mit zwei b\u00e4nder, eines f\u00fcr die positive und eines f\u00fcr die negative Seite)</li> <li>\\(k\\)-Stack Machine Eine Deterministischer Kellear Automat mit mehreren Stacks    (\u00dcbergangsfunktion: \\(\\delta: Q \\times \\Gamma_1\\times...\\times\\Gamma_n\\rightarrow Q\\times\\Gamma_1^*\\times...\\times \\Gamma^*_k\\))   Eine 2-Stack Machine kann ein Band simulieren und ist demnach gleich m\u00e4chtig, wie eine TM</li> <li>Z\u00e4hler-Machine (Hat Z\u00e4hler einer nat\u00fcrlichen Zahl (\\(n \\ge 0\\)) anstatt Stacks)   Ein 2-Stack kann mit mit 3-Z\u00e4hler ersetzt werden und daher ist ein Z\u00e4hler-Machine gleich wertig, wie eine TM.    Daf\u00fcr wird jedem Symbol des Stacks eine Zahl zugeordnet (1, 2, 3, 4, ...). Der aktuelle Wert wird mit der Anzahl Symbolen multipliziert und mit dem n\u00e4chsten Symbol addiert (\\(c_{new}=c_{old}\\cdot length + s\\)). Beim dekodieren wird der Wert durch die Anzahl Symbole geteilt und der Rest ist das aktuelle Symbol.    Diese 3-Z\u00e4hler Machine kann mit einer 2-Z\u00e4hler Machine simuliert werden, in dem die 3-Z\u00e4hler mit der Encodierung \\(2^i\\cdot 3^j\\cdot 4^k\\) enkodiert werden und mit einer Primfaktorzerlegung dekodiert werden. Ein Z\u00e4hler wird noch zum Rechnen ben\u00f6tigt.</li> </ul>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary.html#universelle-turning-maschine-utm","title":"Universelle Turning Maschine (UTM)","text":"<p>Eine Turing Maschine, welche andere Turning Maschinen simulieren kann. Alle Zust\u00e4nde werden Un\u00e4r-Kodiert (0 = 1, 00 = 2, 000 = 3, ...) mit dem Trennzeichen <code>1</code>. Dabei wird folgendes gespeichert: Die \u00dcbergangsfunktion \\(\\delta(q_i, X_j)=(q_k, X_l, D_m)\\to 0^i10^j10^l10^m\\). Einzelne \u00dcbergangsfunktionen werden mit <code>11</code> getrennt. Die Maschine wird mit <code>111</code> vom Input getrennt.</p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary.html#berechnungsmodelle","title":"Berechnungsmodelle","text":"<p>Intuitive berechenbare Funktion: eine algorithmisch (durch eine mechanisches Verfahren) berechenbare Funktion </p> <p>Gandys These M: Alles, was jemals mit einer (endlichen) Maschine/physikalischen Apparatur berechnet werden kann, ist von einer Turing-Maschine berechenbar</p> <p>Turing-Vollst\u00e4ndigkeit: F\u00fcr jede Zahl \\(k \\in \\N\\) und jede Funktion \\(f: \\N^k \\to \\N\\) gibt es eine Turing-Machine und While-Programm</p> <ul> <li>Zuweisungen: <code>x = y + c</code> oder <code>x = y - c</code>  (wobei c eine Konstante ist!)</li> <li><code>x0</code> ist der Output; <code>x1</code>, <code>x2</code>, ... sind die Inputs/Variabeln</li> <li>Alle Variabeln k\u00f6nnen nat\u00fcrliche Zahlen (\\(n \\ge 0\\)) enthalten (\\(2-5=0\\))</li> <li>Loop-Programme: <code>LOOP x DO ... END</code> Der Loop wird <code>x</code>-mall durchgef\u00fchrt. \u00c4ndern von <code>x</code> hat kein Einfluss</li> <li>While-Programme (auch <code>LOOP</code> ist erlaubt)</li> <li><code>While xi &gt; 0 Do ... End</code> Die einzige erlaubte Bedingung ist <code>xi &gt; 0</code></li> <li>GOTO-Programme: Marker: (<code>M1:</code>, <code>M2:</code>, ...), <code>Goto Mk</code> , <code>If xi = c Then Goto Mr</code>, <code>Halt</code> (Haltet das Programm an)</li> <li>Primitiv rekursive Funktion (nach dem Muster \\(f: \\N^2 \\to \\N\\))</li> <li>Konstante Funktion: \\(c^n_k: \\N^n \\to \\N \\mapsto c^n_k(x_1, ..., x_n)=k\\)</li> <li>Nachfolge Funktion: \\(\\eta: \\N \\to \\N \\mapsto \\eta(x)=x+1\\)</li> <li>Projektion (\\(1 \\le k \\le n\\)): \\(\\pi^n_k: \\N^n \\to \\N \\mapsto \\pi^n_k(x_1, ...,x_k,...,x_n)=x_k\\)</li> <li>Wenn \\(f\\) und \\(g_i\\) primitive rekursive Funktionen sind, dann ist \\(h(\\vec x)=f(g_1(\\vec x), ..., g_k(\\vec x))\\) auch eine primitive rekursive Funktion</li> <li>Primitive rekursive Funktionen = LOOP-Programme</li> </ul> <p>Ackermann (ist Turing-berechenbar, nicht Loop berechen, bzw. nicht primitive rekursive, ist total):  $$ \\begin{align} a(0, m)&amp;= m + 1\\ a(n + 1, 0) &amp;= a(n, 1)\\ a(n + 1, m + 1) &amp;= a(n, a(n + 1, m)) \\end{align} $$</p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary.html#entscheidbarkeit","title":"Entscheidbarkeit","text":"<p>Entscheidbar: Die TM haltet immer</p> <p>Semi-Entscheidbar: Die TM haltet nur bei akzeptierten Zust\u00e4nden</p> <p>Reduktion Es gibt eine Funktion \\(F: \\Sigma^* \\to \\Gamma^*\\) f\u00fcr die Sprache \\(A \\subset \\Sigma^*\\) und \\(B  \\subset \\Gamma^*\\). Dies wird als \\(A \\preceq B\\) geschrieben</p> <ul> <li>Jede entscheidbare Sprache ist auch semi-entscheidbar</li> <li>Wenn eine Sprache \\(A\\) und ihr Komplement \\(\\overline A\\) semi-entscheidbar ist, sind \\(A\\), wie auch \\(\\overline A\\) entscheidbar</li> <li>Wenn \\(A\\) entscheidbar ist, ist auch \\(\\overline A\\) entscheidbar</li> <li>Wenn \\(A\\) und \\(B\\) (semi-)entscheidbar sind, ist auch \\(A \\cup B\\) und \\(A \\cap B\\) (semi-)entscheidbar</li> <li>\\(A\\) ist rekursive aufz\u00e4hlbar \\(\\Leftrightarrow\\) \\(A\\) ist semi-entscheidbar \\(\\Leftrightarrow\\) \\(A\\) ist der Werte und Definitionsbereich einer berechenbaren Funktion</li> <li>\\(A\\preceq B\\) und \\(B \\preceq C\\), dann gilt auch \\(A \\preceq C\\)</li> <li>Ist \\(B\\) (semi-)entscheidbar und \\(A \\preceq B\\), dann ist auch \\(A\\) (semi-)entscheidbar</li> <li>Wenn \\(A\\) unentscheidbar ist und \\(A \\preceq B\\) gilt, dann ist B unentscheidbar</li> </ul> <p>allgemeine Halteproblem: Gibt es eine TM \\(H\\), welche entscheiden kann, ob ein Program mit einem Input anh\u00e4lt oder nicht immer weiter l\u00e4uft.</p> <p>leere Halteproblem: Ob es eine TM \\(H_0\\) gibt, welche entscheiden kann, ob ein Programm mit einem leeren Band anh\u00e4lt</p> <p>spezielle Halteproblem: Es wird eine TM \\(H_S\\) erstellt, welche \\(H\\) fragt, ob ein Program endet. Wenn ja, loopt \\(H_S\\), wenn nein, beendet \\(H_S\\). Wenn \\(H_S\\) das als Input \\((H_S, H_S)\\) bekommt, ist unklar, ob \\(H_S\\) anh\u00e4lt oder weiterl\u00e4uft und daher kann es keine TM \\(H\\) geben.</p> <p>Alle Halteprobleme sind semi-entscheidbar und nicht-entscheidbar.</p> <p>Konsequenzen von Satz von Rice: Unm\u00f6glich im Allgemeinen zu \u00fcberpr\u00fcfen, ob ein Program eine Spezifikation erf\u00fcllt, frei von bugs ist, bei jeder Eingabe terminiert, eine anderes Program dieselbe Funktionalit\u00e4t hat</p> <p>Colatz: \\(n \\text{ ist gerade} \\Rightarrow n=\\frac n 2 \\text{ sonst } n=3n + 1\\) Alle positiven Inputs enden in \\(4 \\to 2 \\to 1  \\to 4 \\to 2 \\to 1\\)</p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary.html#komplexitatstheorie","title":"Komplexit\u00e4tstheorie","text":"<ul> <li>Zeitkomplexit\u00e4t: Laufzeit des besten Programms, welche ein Problem l\u00f6st</li> <li>Platzkomplexit\u00e4t: Speicherbedarf des bestens Programmes</li> <li> <p>Beschreibungskomplexit\u00e4t: L\u00e4nge des k\u00fcrzesten Programmes</p> </li> <li> <p>Obereschranke: \\(f \\in \\mathcal O(g)\\Leftrightarrow f(n) \\le c \\cdot g(n)\\)  wenn \\(n\\) gr\u00f6sser als \\(n_0\\) ist (Wobei \\(g\\) und \\(f\\) eine Funktion \\(\\N \\to \\N\\) ist und \\(c\\in \\N\\) eine Konstante)</p> </li> <li>Untereschranke: \\(f \\in \\Omega(g)\\Leftrightarrow f(n) \\ge \\frac 1 d \\cdot g(n)\\) wenn \\(n\\) gr\u00f6sser als \\(n_0\\) ist (Wobei \\(d \\in \\N\\) eine Konstante ist)</li> <li>\\(f\\in \\Theta(g) \\Leftrightarrow f(n)\\in \\mathcal O(g(n))\\wedge f(n)\\in \\Omega(g(n))\\)</li> </ul> <p></p>","tags":["summary","THIN"]},{"location":"22FS/THIN/summary.html#np-vs-p","title":"NP vs P","text":"<ul> <li>Polynomzeit l\u00f6sbar (P): Problem ist teil von \\(\\mathcal O(n^c)\\), wobei \\(c \\ge 1\\) mit einer DTM </li> <li>Nicht deterministische Polynomiell (NP): Alle Probleme entscheidbar von einer Nicht-deterministische Maschine in polynomzeit</li> <li>Polynomzeit-Verifizierer: Eine TM, welche eine L\u00f6sung in polynomial zeit verifiziert</li> <li>\\(P\\neq NP\\): Nicht alle Probleme, welche in polynomzeit verifizierbar sind, k\u00f6nnen in polynomzeit gel\u00f6st werden</li> <li>Clique: Eine Menge von Knoten, bei welchen alle Knoten mit allen anderen Knoten (ausser sich selbst) verbunden sind</li> <li>NP-Schwer: Ein Problem, welches sich auf alle NP-Probleme reduzieren l\u00e4sst. Ein NP-Schweres Problem ist gleich schwer oder schwerer also das schwerste NP-Problem</li> <li>NP-Vollst\u00e4dnig: Ein NP-Vollst\u00e4ndiges Problem ist NP-Schwer und ein NP-Problem</li> <li>polynomiell reduzierbar (\\(\\preceq_p\\)): Eine Reduktion in polynomieller Zeit (\\(L_1 \\preceq_p L_2\\) heisst, dass \\(L_2\\) mindestens so schwer wie \\(L_1\\) ist )</li> <li>Wenn \\(P_1\\) NP-schwer, \\(P_2\\) in NP enthalten ist und \\(P_1 \\preceq_p P_2\\) gibt, dann ist \\(P_2\\) NP-vollst\u00e4ndig</li> <li>SAT: \"erstes\" NP-volst\u00e4ndige Problem   Ob eine Formel in der KNF (\\((x_1 \\vee x_2) \\wedge (x_3 \\vee x_4) \\wedge \\neg x_5\\))) erf\u00fcllbar ist</li> </ul> <p>TODO: L\u00f6sung von SAT Problem</p>","tags":["summary","THIN"]},{"location":"22HS/ADS/ADS.html","title":"ADS","text":""},{"location":"22HS/ADS/ADS.html#abstrakter-datentyp","title":"Abstrakter Datentyp","text":"<p>Jede Klasse besteht aus einer sichtbarer Schnittstelle und eine von Aussen, unsichtbare Implementation.</p>"},{"location":"22HS/ADS/ADS.html#big-o-notation","title":"Big-O Notation","text":"<p>Es existiert ein \\(n_0\\in \\N\\) und ein \\(c\\in N\\), so dass f\u00fcr alle \\(n\\ge n_o\\) gilt: \\(f(n) \\le c\\cdot g(n)\\).</p> <p>Es gibt einige spezielle Rechenregel zu der Big-O Notation:</p> <ul> <li>Konstante Vorfaktoren k\u00f6nnen ignoriert werden (daf\u00fcr gibt es das \\(c\\)) </li> <li>Bei einem Polygon ist nur die h\u00f6chste Potenz entscheidend</li> </ul> <p>Rechenregeln:</p> <ul> <li>\\(O(f\\cdot g) = O(f)\\cdot O(g)\\) (wobei \\(f\\) und \\(g\\) Funktionen sind)</li> <li>\\(O(r\\cdot f)=O(f)\\) (wobei \\(r\\) eine Konstante ist)</li> <li>\\(O(f+g)=O(f)\\), wenn \\(f &gt;g\\) gilt</li> </ul> <p>Beispiele:</p> <ul> <li>\\(O(1)\\): konstanter Aufwand</li> <li>\\(O(\\log n)\\): logarithmischer Aufwand</li> <li>\\(O(n)\\): linearer Aufwand</li> <li>\\(O(n\\cdot \\log n)\\): linear-logarithmischer Aufwand</li> <li>\\(O(n^2)\\): quadratischer Aufwand</li> <li>\\(O(n^k), k&gt;1\\): polynomialer Aufwand</li> <li>\\(O(k^n)\\): exponentieller Aufwand</li> <li>\\(O(n!)\\): faktorieller Aufwand</li> </ul> <p></p>"},{"location":"22HS/ADS/ADS.html#invarianten","title":"Invarianten","text":"<p>TODO</p>"},{"location":"22HS/ADS/ADS.html#algorithmus","title":"Algorithmus","text":"<p>Ein Algorithmus ist eine Anleitung zur L\u00f6sung einer Aufgabenstellung, die so pr\u00e4zise formuliert ist, dass sie \u201cmechanisch\u201d ausgef\u00fchrt werden kann.</p> <p>Eigenschaft:</p> <ul> <li> <p>Determinierheit: Identische Eingaben f\u00fchren zur selben Ausgabe</p> </li> <li> <p>Determinismus: Ablauf des Verfahrens ist an jedem Punkt fest vorgeschrieben (keine Wahlfreiheit)</p> </li> <li> <p>Terminierung: F\u00fcr jede Eigenschaft liegt das Ergebnis nach endlich vielen Schritten vor</p> </li> <li> <p>Effizienz: Wie wirdschaftlich der Algorithmus ist</p> </li> </ul>"},{"location":"22HS/ADS/Backtracking.html","title":"Backtracking","text":""},{"location":"22HS/ADS/Backtracking.html#begriffe","title":"Begriffe","text":"<ul> <li>Eintscheidungsbaum: Ein virtueller Baum, in welcher jede Entscheidung einem Knoten entsricht</li> <li>Zeitkomplexit\u00e4t mit Entscheidungsb\u00e4ume: \\(O(z^n)\\), wobei \\(z\\) die Anzahl Verzweigungen sind und \\(n\\) die Tiefe</li> </ul>"},{"location":"22HS/ADS/Backtracking.html#generellen-rekursiven-backtrack-algorithmus","title":"Generellen rekursiven Backtrack Algorithmus","text":"<p>Zeitkomplexit\u00e4t: \\(O(z^n)\\), wobei \\(z\\) den Verzweigungsgrad ist und \\(n\\) die Tiefe</p> <pre><code>public static boolean versuchen(int k) {\nif (L\u00f6sungGefunden) return true;\nelse {\nfor all e in ErweiterungVonTeilloesungen { //Gibt es noch Erweiterungen?\nif (moeglicheErweiterung(e)) {\nhinzufuegenZuLoesung(e)\nif (versuchen(k + 1)) return true;\nnehmeVonLoesung(e);\n}\n}\nreturn false;\n}\n}\n</code></pre>"},{"location":"22HS/ADS/Backtracking.html#beispiel-labyirnth","title":"Beispiel: Labyirnth","text":"<p>Eine Maus, welche den K\u00e4se in einem Labyrinth sucht. Dabei entsteht ein Eintscheidungsbaum.</p> <p></p> <p>Das ist eine Implementation eines Such-Algorithmus:</p> <p></p>"},{"location":"22HS/ADS/Backtracking.html#springerproblem","title":"Springerproblem","text":"<p>Es soll ein Algorithmus geschrieben werden, bei welchen ein Pfad f\u00fcr ein Springer gefunden wird, in dem alle Zellen besucht werden.</p> <p>Die Zeit komplexit\u00e4t ist \\(O(8^{64})\\approx 6.3 \\cdot 10^{57}\\)</p> <p>Datenstruktur ist: <code>int[][] schachbrett = new int[8][8]</code>. In <code>springX</code> und <code>springerY</code> steht, wie sich der Springer bewegen kann.</p> <p></p>"},{"location":"22HS/ADS/Backtracking.html#dameproblem","title":"Dameproblem","text":"<p>Es soll eine Stellung f\u00fcr 8 Damen gefunden werden, so dass sich keine zwei Damen sich gegenseitig schlagen k\u00f6nnen.</p> <p>Die Zeitkomplexit\u00e4t ist \\(O(n!)\\), da f\u00fcr die 1. Dame gibt es 8 M\u00f6glichkeit, bei der zweiten 7, bei der dritten 6, ...</p> <p></p> <pre><code>int[] dameInDerSpalte = new int[n]; // in welcher Zeile steht die Dame\nboolean[] reihe = new boolean[n]; // ist die Reihe besetzt?\nint diagN = 2*n - 1; // Anzahl Diagonale\nboolean[] diagLinks = new boolean[diagN]; // ist die linke Diagonale besetzt\nlinks = (x + y) % diagN; // Anzahl linke Diagonale\nboolean[] diagRechts = new boolean[diagN]; // ist die rechte Diagonale besetzt\nrechts = (diagN + x - y) % diagN; // Anzahl rechten Diagonale\n// testet ob Position m\u00f6glich ist\n// Wert in einem der 3 Arrays true -&gt; Position besetzt\npublic static boolean gueltigeDamePosition(int x, int y) {\nreturn !(reihe[y] || diagLinks[(x + y) % diagN] ||diagRechts[(diagN + x - y) % diagN]);\n}\n// setzt/l\u00f6scht die Dame von der Position\n// @param val ob der Wert gesetzt oder gel\u00f6scht werden soll\npublic static void setzeDame(int x, int y, boolean val) {\nreihe[y] = val;\ndiagLinks[(x + y) % diagN] = val;\ndiagRechts[(diagN + x - y) % diagN] = val;\ndameInDerSpalte[x] = (val)?y:-1;\n}\n/**\n* Backtrack algorithmus\n* @param x die Spalte die ausprobiert wird\n*/\npublic static boolean versuchen(int x) {\nif (x == n) return true; // L\u00f6sung gefunden.\nelse {\n// Dame in Spalte x in allen Reihen ausprobieren.\nfor (int y = 0; y &lt; n; y++) {\nif (gueltigeDamePosition(x, y)) {\nsetzeDame(x, y, true);\nif (versuchen(x + 1)) return true;\nsetzeDame(x, y, false);\n}\n}\nreturn false;\n}\n}\n</code></pre>"},{"location":"22HS/ADS/Backtracking.html#rucksackproblem","title":"Rucksackproblem","text":"<p>Es geht darum, ein Algorithmus zu schreiben, der \\(k\\) Gegenst\u00e4nde mit underschiedliche Gr\u00f6sse und Wert in einen Rucksack packt, damit der Wert maximal wird.</p> <p>Die Zeitkomplexit\u00e4t ist \\(O(2^n)\\), da</p> <p></p> <p>In der Praxis gibt es Anwendungen daf\u00fcr. Folgende sind typisch:</p> <ul> <li>Transportunternehmen: Optimale Beladung eines Lastwagens bei gegebenen Maximalgewicht und   unterschiedlichen Speditionsgeb\u00fchren: Optimierung von Gewicht und Geb\u00fchren.</li> <li>Reederei: Optimale Beladung eines Schiffes mit underschiedlichen Coontainern: Optimierung von Volumen und Transportkosten.</li> <li>Kofferproblem: Optimale Beladung eines Reisekoffers f\u00fcr einen Flug.</li> <li>Bitcoin: Maximale Bef\u00fcllung eines Blocks bei unterschiedlichen Geb\u00fchren und unterschiedlicher Transaktionsgr\u00f6sse.</li> </ul> <p>Der folgende Pseudo-Code veranschaulicht ein Algorithmus f\u00fcr dieses Problem:</p> <pre><code>void teste (Gegenstand k) {\nteste (k + 1) // ohne Gegenstand k\nfalls Gegenstand k noch Platz {\nf\u00fcge Element k zu der Menge hinzu\nfalls neue max. L\u00f6sung speichere das\nteste (k + 1) // mit Gegenstand k\nnehme Element k aus der Menge weg\n}\n}\n</code></pre> <p>Nun mit Java Code:</p> <pre><code>double[] volume = {1, 2, 7, 8, 9};\ndouble[] wert = {2000, 3000, 10_000, 11_000, 17_000};\nSet&lt;Integer&gt; maxRucksack; // Das Set enth\u00e4lt die Gegenst\u00e4nde zur besten gefundenen L\u00f6sung.\nfinal double MAXV = 17;\ndouble maxW = 0;\nstatic public void test(Set&lt;Integer&gt; rucksack, int k, double aktW, double aktV) {\ndouble newV;\nif (k &lt; volumen.length) {\ntest(rucksack, k + 1, aktW, aktV); // Ohne Gegenstand k testen\nnewV = aktV + volumen[k];\nif (newV &lt;= MAXV) {\nrucksack.add(k);\ndouble newW = aktW + wert[k];\nif (newW &gt; maxW) {\nmaxRucksack = new HashSet&lt;Integer&gt;(rucksack);\nmaxW = newW;\n}\ntest(rucksack, k + 1, newW, newV);\nrucksack.remove(k);\n}\n}\n}\n</code></pre>"},{"location":"22HS/ADS/Backtracking.html#zielfunktion","title":"Zielfunktion","text":""},{"location":"22HS/ADS/Backtracking.html#a-star-funktion","title":"A-Star Funktion","text":""},{"location":"22HS/ADS/Backtracking.html#minmax-algorithmus","title":"Minmax-Algorithmus","text":"<pre><code>Tiefensuche durch den Spielbaum (erstellt den Baum)\nWende Bewertungsfunktion auf Endpositionen (Bl\u00e4tter) an F\u00fcr alle inneren Knoten von unten nach oben:\nFalls beim inneren Knoten Schwarz am Zug war:\nW\u00e4hle das kleinste b(v) f\u00fcr den inneren Knoten. //b(v) = Bewertungsfunktion\nFalls beim inneren Knoten Weiss am Zug war:\nW\u00e4hle das gr\u00f6sste b(v) f\u00fcr den inneren Knoten.\nW\u00e4hle an der Wurzel den Zug der den h\u00f6chsten b(v) verspricht.\n</code></pre> <p>Oder mit java </p> <pre><code>\n</code></pre>"},{"location":"22HS/ADS/Backtracking.html#horizont-problem","title":"Horizont Problem","text":""},{"location":"22HS/ADS/Dynamische%20Programmierung.html","title":"Dynamische Programmierung","text":"<p>Idee: Optimierungsproblem durch Aufteilung in Teilprobleme l\u00f6sen und Zwischenresultaten systematischen speichern.</p> <p></p>"},{"location":"22HS/ADS/Java.html","title":"Java","text":""},{"location":"22HS/ADS/Java.html#java-memory-model","title":"Java Memory Model","text":""},{"location":"22HS/ADS/Java.html#garbage-collector","title":"Garbage Collector","text":""},{"location":"22HS/ADS/Java.html#reference-counting","title":"Reference Counting","text":"<p>Beim Referencing Counting wird gez\u00e4hlt, wie viel Referenzen es auf ein Objekt gibt. Wenn es keine Referenzen mehr gibt, dann wird das Objekt gel\u00f6scht.</p> <pre><code>class ... {\nvoid addRef() {\nreferenceCount++\n}\nint release() {\nif (--referenceCount == 0) {\ndelete(this);\n}\n}\n}\n</code></pre> <ul> <li>Vorteile:<ul> <li>Einfach und geringer verwaltungs Aufwand</li> <li>Speicher wird so schnell wie m\u00f6glich freigegeben</li> </ul> </li> <li>Nachteile: </li> <li>Es muss manuel gef\u00fchrt werden was Bugs einf\u00fchren kann</li> <li>Zus\u00e4tzliche Operationen bei jedem Refernzen Zuweiss</li> <li>Zyklische Datenstrukturen sind problematisch</li> </ul>"},{"location":"22HS/ADS/Java.html#smart-pointers","title":"Smart Pointers","text":"<p>Smart Pointers sind Pointers welche das Reference Counting automatisieren. Aber viele Nachteile bleiben trotzdem bestehen:</p> <ul> <li>Vorteile:</li> <li>Einfach und geringer verwaltungs Aufwand</li> <li>Speicher wird so schnell wie m\u00f6glich freigegeben</li> <li>Ist automatisiert</li> <li>Nachteile: </li> <li>Zus\u00e4tzliche Operationen bei jedem Refernzen Zuweiss</li> <li>Zyklische Datenstrukturen sind problematisch</li> </ul>"},{"location":"22HS/ADS/Java.html#mark-sweep-gc-algorithmus","title":"Mark Sweep GC Algorithmus","text":"<p>Der Mark-Sweep Algorithmus l\u00e4uft in zwei Phasen:</p> <p>1) Mark:    Es werden alle Objekte traversiert und nicht erreichbare Objekte markiert 2) Sweep    Alle markierte Objekte l\u00f6schen und die Markierung entfernen</p> <ul> <li>Vorteile</li> <li>Keine zus\u00e4tzlichen Operationen bei Referenzen-Zuweisungen</li> <li>Zyklische Datenstrukturen k\u00f6nnen gel\u00f6scht werden</li> <li>Nachteile</li> <li>Aufwand</li> <li>Stop-the-World-Mechanismus bei beiden Phasen</li> <li>Es entstehen Memory-L\u00f6scher (Memory-Fragmentierung)</li> </ul> <p></p> <p></p>"},{"location":"22HS/ADS/Java.html#mark-copmact","title":"Mark-Copmact","text":"<p>Funktioniert gleich wie der Mark-Sweep-Algorithmus, aber es werden alle noch referenzierte Objekte zum Begin des Heap kopiert.</p> <ul> <li>Vorteile:</li> <li>Analog Mark-Sweep-Algorithmus.</li> <li>Keine Memory-Fragmentierung.</li> <li>Nachteil:</li> <li>Analog Mark-Sweep-Algorithmus.</li> <li>Aufwand ist noch gr\u00f6sser \u2192 schlechte Performance.</li> </ul>"},{"location":"22HS/ADS/Java.html#copy-gc","title":"Copy-GC","text":"<p>Der Speicher wird unterteilt in zwei Semi-Spaces. Wenn ein Space voll wird, werden alle noch referenzierte Objekte in den zweiten Space \u00fcberkopiert</p> <ul> <li>Vorteil:</li> <li>Es entstehen keine L\u00f6cher</li> <li>Die Suche nach freien Bl\u00f6cken entf\u00e4llt (belegter Bereich ist kompakt)</li> <li>Nachteil:</li> <li>Es wird doppelt so viel Speicher ben\u00f6tigt</li> <li>Aufw\u00e4ndiger Algorithmus</li> <li>Es muss immer der ganze Speicher durchlaufen werden</li> <li>Programm muss w\u00e4hrend dieser Zeit angehalten werden (Stop-The-World-Mechanismus)</li> </ul>"},{"location":"22HS/ADS/Java.html#generational-gc","title":"Generational GC","text":"<p>Die meisten Objekte werden nur kurz gebraucht. Daher wird der Heap in drei oder mehr Teile unterteilt. Wenn ein Teil \u00fcberfliesst, dann werden lang-lebende Objekte in den n\u00e4chsten Breich kopiert. Pro Teil kann nun ein anderen Algorithmus angewendet werden.</p> <p></p>"},{"location":"22HS/ADS/Rekursive.html","title":"Rekursive","text":"<p>Jede Rekursion kann in eine iterativen Algorithmus umgewandelt werden.</p> <p></p> <ul> <li>Verankerung: Die Stopp-Bedingungen</li> <li>Rekursiven-Aufruf: Die Operation, welche zum rekursiven Aufruft f\u00fchrt</li> </ul>"},{"location":"22HS/ADS/Rekursive.html#rekursionstiefe","title":"Rekursionstiefe","text":"<p>Die Rekursionstiefe ist, wie viele Stackframes es maximal gibt.</p>"},{"location":"22HS/ADS/Rekursive.html#zeitkomplexitat-und-speicherkapazitat","title":"Zeitkomplexit\u00e4t und Speicherkapazit\u00e4t","text":"<p>Um die Ordnung von einem rekursiven Algorithmen auszurechnen, kann \\(T_{n}\\) definiert werden und f\u00fcr jeden Aufruf \\(T_{n - 1}\\) einsetzen. Danach einige \\(T_n\\) aufl\u00f6sen und den Trend sehen.</p>"},{"location":"22HS/ADS/Rekursive.html#zeitkomplexitat-fur-turme-von-hanoi","title":"Zeitkomplexit\u00e4t f\u00fcr T\u00fcrme von Hanoi","text":"<pre><code>void hanoi (int n, char from, char to, char help) {\nif (n &gt; 0) {\nhanoi(n-1, from, help, to);\nSystem.out.println(\"bewege \" + from + \" nach \" + to); hanoi(n-1, help, to, from);\n}\n}\n</code></pre> \\[ T_n=T_{n-1}+T_{n-1}=(T_{n-2}+T_{n-2})+(T_{n-2}+T_{n-2})\\Rightarrow O(2^n) \\]"},{"location":"22HS/ADS/Rekursive.html#indirekte-rekursive","title":"Indirekte Rekursive","text":"<p>Eine indirekte Rekursive besteht aus zwei Methoden, welche sie sich gegenseitig aufrufen.</p> <pre><code>public int p(int a) {\nint x = q(a);\n}\npublic int q(int a) {\nint x = p(a - 1);\n}\n</code></pre>"},{"location":"22HS/ADS/Rekursive.html#tail-recursion","title":"Tail Recursion","text":"<p>Eine Tail Recursion ist eine Rekursion, bei welcher die letzte Expression den rekursive Aufruf ist. Diese k\u00f6nnen einfach in einen iterativen Algorithmus umgebaut werden.</p> <pre><code>int fak(int n) {\nif (n == 0) return 1;\nelse return n * fak(n - 1);\n}\nint fak(int n) {\nif (n == 0) return 1;\nelse {\nint res = n;\nwhile(n &gt; 1) {\nn--;\nres = n * res;\n}\nreturn res;\n}\n}\n</code></pre>"},{"location":"22HS/ADS/Rekursive.html#rekursives-beispiel-vor-und-zuruck","title":"Rekursives Beispiel: Vor und Zur\u00fcck","text":""},{"location":"22HS/ADS/Sortieren.html","title":"Sortieren","text":"<p>Es gibt das interne und externe Sortieren. Beim internen Sortieren werden alle Daten in den RAM geladen. Beim externen Sortieren hingegen werden die Dateien unterteilt, sortiert und danach wieder zusammengef\u00fcgt.</p> <p></p> <p>Ein Sortierschl\u00fcssel ist nach welchem Teilfeld(er) eines Datensatzes die Daten sortiert und gesucht wird. Ein eindeutiger Sortierschl\u00fcssel ist ein Schl\u00fcssel, welche eindeutig ist (z.B. ein Primary Key).</p>"},{"location":"22HS/ADS/Sortieren.html#sortieren-mit-teile-und-herrsche","title":"Sortieren mit Teile und Herrsche","text":"<p>Bei Teile und Herrsche wird das Problem in mehrere kleinere Probleme unterteilt, die Teilprobleme werden gel\u00f6st und die L\u00f6sungen danach zusammen gef\u00fcgt. </p> <p>Der folgende Pseudo-Code setzt das Teile und Herrsche f\u00fcr das Sortieren:</p> <pre><code>if (Menge der Datenobjekte klein genug)\nOrdne sie direkt;\nelse {\nTeilen: Zerlege die Menge in Teilmengen;\nAusf\u00fchren: Sortiere jede der Teilmengen;\nVereinigen: F\u00fcge die Teilmengen geordnet zusammen;\n}\n</code></pre> <p>Oft sind diese Teile und Herrsche Algorithmen rekursive:</p> <pre><code>Sort (Menge a) {\nif (Menge der Datenobjekte klein genug) {\nOrdne sie direkt;\n} else {\nZerlege in zwei Teilmengen;\nSort(Teilmenge1); Sort(Teilmenge2);\nF\u00fcge Teilmengen geordnet zusammen;\n}\n}\n</code></pre>"},{"location":"22HS/ADS/Sortieren.html#strings-sortieren","title":"Strings sortieren","text":"<p>Strings sortieren kann problematisch sein. Je nachdem in welcher Region werden Buchstaben verschieden sortiert. Mithilfe einer <code>Collation</code> kann dies festgelegt werden.</p> <pre><code>Locale chLoc = new Locale(\"de\",\"CH\");\nCollator chCol = Collator.getInstance(chLoc);\nCollator deCol = Collator.getInstance(Locale.GERMAN);\nCollections.sort(list, chCol)\n</code></pre> <p></p>"},{"location":"22HS/ADS/Sortieren.html#stabilitat","title":"Stabilit\u00e4t","text":"<p>Sei S = ((k0, e0), ... , (kn-1, en-1)) eine Sequenz von Elementen: Ein Sortieralgorithmus heisst stabil (stable), wenn f\u00fcr zwei beliebige Elemente (ki, ei) und (kj, ej) mit gleichem Schl\u00fcssel ki = kj und i &lt; j (d.h. Element i kommt vor Element j), i &lt; j auch noch nach dem Sortieren gilt (Element i kommt immer noch vor Element j).</p> <p>Oder: Wenn eine bereits sortierte Liste (z.B. eine Personenliste nach Departemen). Wenn diese nun nach Alter sortiert wird, werden die Sortierung in der einzelnen Klassen erhalten bleiben, wenn der Algorithmus stabil ist.</p> <p></p> <p></p>"},{"location":"22HS/ADS/Sortieren.html#bubble-sort","title":"Bubble Sort","text":"<pre><code>static void bubbleSort(char[] a) {\nfor (int k = a.length-1; k &gt; 0; k--) {\nboolean noSwap = true;\nfor (int i = 0; i &lt; k; i++) {\nif ( a[i] &gt; a[i + 1]) {\nswap (a, i, i + 1);\nnoSwap = false;\n}\n}\n// if nothing was swapped -&gt; array is sorted\nif (noSwap) break;\n}\n}\n</code></pre> <p>Jedes Element wird verglichen mit seinem Nachbar. Wenn der rechte Nachbar kleiner ist, werden sie vertauscht. Es soll noch gef\u00fchrt werden, ob w\u00e4hrend des Sortierens \u00fcberhaupt etwas vertauscht wurde. Wenn nicht, dann ist das Array sortiert.</p> Best-Case Average-Case Worst-Case \\(\\Omega(n)\\) \\(\\Theta(n^2)\\) \\(O(n^2)\\) <p></p> <p></p>"},{"location":"22HS/ADS/Sortieren.html#selection-sort","title":"Selection Sort","text":"<pre><code>static void selectionSort(char[] a) {\nfor (int k = 0; k &lt; a.length; k++) {\nint min = k;\nfor (int i = k + 1; i &lt; a.length; i ++) {\nif (a[i] &lt; a[min]) min = i;\n}\nif (min != k) swap (a, min, k);\n}\n}\n</code></pre> <p>Beim Selection-Sort wird immer die Frage gestellt, welches ist das kleinste Elemente aus dem unsortiertem Bereich, um den sortierten Bereich um eins zu erweitern. Um damit ein Array zu sortieren wird von rechts angefangen und somit kann es nie vorkommen, dass ein kleinerer Buchstaben im unsortiertem Bereich vorkommt als im Sortiertem.</p> <p></p> Best-Case Average-Case Worst-Case \\(\\Omega(n^2)\\) \\(\\Theta(n^2)\\) \\(O(n^2)\\) <p>Vorteil: Deutlich weniger Swap-Aufrufe als Bubble Sort Nachteil: \u00abVorsortiertheit\u00bb kann nicht ausgenutzt werden.</p>"},{"location":"22HS/ADS/Sortieren.html#insertion-sort","title":"Insertion Sort","text":"<pre><code>static void insertionSort(char[] a) {\nfor (int k = 1; k &lt; a.length; k++) {\nchar x = a[k];\nint i = k;\nfor (; i &gt; 0 &amp;&amp; a[i-1] &gt; x; i--)\na[i] = a[i-1]; // verschieben\na[i] = x; // einf\u00fcgen\n}\n}\n</code></pre> <p>Beim Insertion-Sort wird geschaut, wo das n\u00e4chste Element im unsortiertem Bereich im sortiertem Bereich kommt. Danach wird solange verschoben, bis das Element an der richtigen Stelle steht.</p> <p></p> Best-Case Average-Case Worst-Case \\(\\Omega(n)\\) \\(\\Theta(n^2)\\) \\(O(n^2)\\)"},{"location":"22HS/ADS/Sortieren.html#quick-sort","title":"Quick Sort","text":"<p>Die grunds\u00e4tzliche Premise des Quick-Sorts ist, dass das Array in zwei Teile unterteilt wird. Die Elemente im unterem Array sind kleiner als der mittlere Wert, \\(w\\), und die Elemente in oberen Array sind gr\u00f6sser als \\(w\\).</p> <p></p> <p>Um nun diesen Zustand zu erreichen, wird in \\(A_1\\) und in \\(A_2\\) jeweils ein Element gesucht, welches auf der falschen Seite ist. Diese zwei Elemente werden nun vertauscht.</p> <p>Um diesen Mittelpunkt/Pivotpunkt \\(W\\) zu finden gibt es mehrere Strategien:</p> <ol> <li>Median (schlecht, da der Laufzeitvorteil verloren geht)</li> <li>Nehme ein Element blind</li> <li>Das linkeste</li> <li>Das recheste</li> <li>Die mitte</li> <li>Nehme das wertm\u00e4ssige mittlere</li> <li>Nehme das arithmetische Mittel der drei Werte als Pivotpunkt</li> </ol> <p>Der folgende Code implementiert den Quick-Sort.</p> <pre><code>static int partition (int[] arr, int left, int right) {\nint pivot = arr[(left + right) / 2];\nwhile (left &lt;= right) {\nwhile (arr[left] &lt; pivot) { left++; }\nwhile (arr[right] &gt; pivot) { right--; }\nif (left &lt;= right) {\nswap(arr, left, right);\nleft++;\nright--;\n}\n}\nreturn left;\n}\nstatic void quickSort(int[] a){\nquickSort(a, 0, a.length-1);\n}\nstatic void quickSort(int[] arr, int left, int right) {\nif (left &lt; right) {\nint mid = partition (arr, left, right);\nquickSort(arr, left, mid - 1);\nquickSort(arr, mid, right);\n}\n}\n</code></pre>"},{"location":"22HS/ADS/Sortieren.html#big-o","title":"Big-O","text":"<p>Wenn immer die Mitte ben\u00fctzt wird, dann ist die \\(O(n\\cdot \\log_2(n))\\). Im schlechtesten Fall hat aber Quick-Sort \\(O(n^2)\\), dies ist aber extrem selten.</p> <p></p>"},{"location":"22HS/ADS/Sortieren.html#quick-sort-optimieren","title":"Quick-Sort optimieren","text":"<pre><code>static void quickerSort(int[] a, int left, int right) {\nif (right - left &lt; THRESHOLD) {\ninsertionSort(a, left, right);\n} else {\nint l = partition (a, left, right);\nquickerSort(arr, left, l - 1);\nquickerSort(arr, l , right);\n}\n}\n</code></pre>"},{"location":"22HS/ADS/Sortieren.html#distribution-sort","title":"Distribution Sort","text":"<p>Es wird mithilfe von einer Funktion \\(f(x)\\) den Index im sortierten Array zu finden. Da direkt aus dem Wert die Position bestimmt wird, ist die Komplexit\u00e4t \\(O(n)\\).</p>"},{"location":"22HS/ADS/Sortieren.html#merge-sort","title":"Merge Sort","text":"<p>Beim Merg Sort wird das Array in mehrere sub-Arrays unterteilt, diese werden unabh\u00e4ngig geordnet und danach zusammen gesetzt.</p> <p></p> <p>Der folgende Pseudo-Code zeigt eine Implementation eines Merge Sort:</p> <pre><code>Methode Mergesort (A) {\nif (A.size() &lt;= 1) {\nreturn A;\n} else {\nhalbiere A in A1 und A2;\nA1 = Mergesort(A1);\nA2 = Mergesort(A2);\nreturn Merge(A1, A2)\n}\n}\n// Die Merge methode fasst die sortierten Liste linke- und rechteListe in eine sortierte \n// Liste zusammen\nMethode Merge(linkeListe, rechteListe); {\nneueListe;\nwhile (!(linkeListe.isEmpty() OR rechteListe.isEmpty)) {\nif (linkeListe(0) &lt;= rechteList(0) {\nneueListe.add(linkeListe(0)); linkeListe.remove(0);\n}\nelse {\nneueListe.add(rechteListe(0)); rechteListe.remove(0);\n}\n}\nwhile (!linkeListe.isEmpty()) {\nneueListe.add(linkeListe(0)); linkeListe.remove(0);\n}\nwhile (!rechteListe.isEmpty()) {\nneueListe.add(rechteListe(0)); rechteListe.remove(0);\n}\nreturn neueListe;\n}\n</code></pre> <p>Die Komplexist\u00e4t: \\(O(n\\cdot \\log(n))\\)</p>"},{"location":"22HS/ADS/Sortieren.html#wahl-des-sortierungs-verfahren","title":"Wahl des Sortierungs Verfahren","text":""},{"location":"22HS/ADS/Sortieren.html#sortierungs-verfahren-vergleich","title":"Sortierungs Verfahren Vergleich","text":"<p>Wenn ein Sortierungs-Algorithmus Elemente untereinander verlgeicht, dann ist die min</p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"22HS/ADS/Sortieren.html#sortieren-in-java","title":"Sortieren in Java","text":"<ul> <li>F\u00fcr primitive Arrays (<code>Arrays.sort(int[] a)</code>) wird einen Dual-Pivot-Sort verwendet, welcher nicht stabil ist. Dies ist aber f\u00fcr primitive Typen nicht relevant. \\(O(n\\cdot \\log(n))\\)</li> <li>F\u00fcr Objekte () wird ein iterativen Merge-Sort. \\(O(n\\cdot \\log(n))\\)</li> <li>F\u00fcr Objekte <code>parallelSort()</code></li> </ul>"},{"location":"22HS/ADS/Sortieren.html#amdahls-law","title":"Amdahl's Law","text":"<p>Dieses \"Gesetzt\" beschreibt, wie viel schneller ein Program laufen wird, wenn es parallelisiert wird: $$ Speedup = \\frac 1 {(1 - p) + \\frac p s}\\ \\text{, wobei } p \\text{ der Anteil des Programmes ist, welcher parallelisiert werden kann}\\ \\text{ und } s \\text{ die Anzahl Prozessoren} $$</p>"},{"location":"22HS/ADS/Textsuche.html","title":"Textsuche","text":""},{"location":"22HS/ADS/Textsuche.html#bruteforce","title":"Bruteforce","text":"<p>Der Aufwand des folgenden Algorithmus ist \\(O(n\\cdot m)\\), wobei \\(n\\) die Anzahl Zeichen im String und \\(m\\) die Anzahl Zeichen im Pattern sind.</p> <pre><code>static int indexOf(String str, String pattern) {\nint k;\nfor (int i = 0; i &lt; str.len() - pattern.len() + 1; i++) {\n// Sucht den ersten \u00fcbereinstimmenden Buchstaben\nwhile (i &lt; str.len() &amp;&amp; str.charAt(i) != pattern.charAt(0)) {\ni++;\n}\nif (i + pattern.len() &lt;= str.len()) {\nfor (k = 0; k &lt; pattern.len() &amp;&amp; str.charAt(i+k) == pattern.charAt(k); k++) {}\nif (k == pattern.len()) {\nreturn i;\n}\n}\n}\nreturn -1;\n}\n</code></pre>"},{"location":"22HS/ADS/Textsuche.html#knuth-morris-pratt-algorithmus","title":"Knuth-Morris-Pratt Algorithmus","text":"<p>Dieser Algorithmus hat den Aufwand \\(O(n+m)\\). Der Algorithmus ist sinvoll, wenn das Pattern viele Wiederholungen hat oder wenn das R\u00fcckspringen aufw\u00e4ndig ist (z.B. bei externen Speichermedien)</p> <p>Der Knuth-Morris-Pratt Algorithmus wird in zwei Schritten ausgef\u00fchrt:</p>"},{"location":"22HS/ADS/Textsuche.html#phase-1-next-tabelle-bauen","title":"Phase 1: Next-Tabelle bauen","text":"<p>Der Aufwand dieser Phase ist \\(O(m)\\), wobei \\(m\\) die L\u00e4nge des Pattern ist</p> <ol> <li>Subpattern (m\u00f6gliche Pr\u00e4fixe)</li> <li></li> </ol> <p>Nun folgt einen effizienteren Algorithmus:</p> <p></p> <p>Es gibt drei Situationen:</p> <ol> <li><code>str[l] == str[p]</code>:</li> <li><code>str[l] != str[p] &amp;&amp; l == 0</code>:</li> <li><code>str[l] == str[p] &amp;&amp; l &gt; 0</code>:</li> </ol>"},{"location":"22HS/ADS/Textsuche.html#phase-2-suche","title":"Phase 2: Suche","text":"<p>Diese Phase hat den Aufwand von \\(O(n)\\), wobei \\(n\\) die L\u00e4nge des Text ist</p> <p></p>"},{"location":"22HS/ADS/Textsuche.html#invertierter-index","title":"Invertierter Index","text":"<p>Es wird einen Index gef\u00fchrt, welche W\u00f6rter wo vorkommen (z.B. <code>banana</code> kommt im dritten Text an vierter Stelle vor).</p> <p></p> <p>Es gibt m\u00f6gliche Verbesserungen:</p> <ul> <li>W\u00f6rter sortieren und einen bin\u00e4ren balancierten Baum ben\u00fctzten: \\(O(\\log(n))\\)</li> <li>Hashtabelle: \\(O(1)\\)</li> <li>Stopwords entfernen (z.B. <code>denn</code>, <code>die</code>, ...)</li> <li>W\u00f6rter normalisieren: Wortstamm bilden (wohn: wohnen, bewohnen, Wohnzimmer, ...)</li> </ul>"},{"location":"22HS/ADS/Textsuche.html#levenshtein-distanz","title":"Levenshtein-Distanz","text":"<p>Die Levenshtein-Distanz ist die minimale Anzahl Operationen um von Wort-A Wort-B zu erreichen und kann somit als Mass verwendet werden, wie \u00c4hnlich zwei W\u00f6rter sind.</p> <p>Die folgenden Operationen sind erlaubt:</p> <ul> <li><code>doNothing()</code>: Der Buchstabe wird \u00fcbernommen</li> <li><code>insert(c)</code>: Ein Buchstabe an einer Position einf\u00fcgen</li> <li><code>update(c -&gt; d)</code>: Ein Buchstaben an einer Position ersetzten</li> <li><code>delete(c)</code>: Ein Buchstaben l\u00f6schen</li> </ul> <p></p> <p></p> <pre><code>public static int computeLevenshteinDistance(String str1,String str2) {\nint[][] distance = new int[str1.len() + 1][str2.len() + 1];\n// initialisierung\nfor (int i = 0; i &lt;= str1.len(); i++)\ndistance[i][0] = i;\nfor (int j = 1; j &lt;= str2.len(); j++) distance[0][j] = j;\nfor (int i = 1; i &lt;= str1.len(); i++) {\nfor (int j = 1; j &lt;= str2.len(); j++) {\nint minEd = (str1.charAt(i - 1) == str2.charAt(j - 1)) ? 0 : 1;\ndistance[i][j] = minimum(distance[i - 1][j] + 1,\ndistance[i][j - 1] + 1, distance[i - 1][j - 1]+ minEd);\n}\n}\nreturn distance[str1.len()][str2.len()];\n}\n</code></pre>"},{"location":"22HS/ADS/Textsuche.html#trigramm-suche","title":"Trigramm-Suche","text":""},{"location":"22HS/ADS/Textsuche.html#phonetische-suche","title":"Phonetische Suche","text":""},{"location":"22HS/ADS/Textsuche.html#regex","title":"Regex","text":"<p>Mit <code>Pattern pattern = Pattern.compile(String patternStr)</code> kann ein Pattern vorbereitet werden.</p> <pre><code>// create Pattern object\nPattern pat = Pattern.compile(\"ZHAW\");\n// do the actual matching\nMatcher matcher = pat.matcher(\"Willkommen an der ZHAW\");\n// find() finds the next match\nwhile (matcher.find()) {\nString group = matcher.group(); // the found string\nint start = matcher.start(); // the start position\nint end = matcher.end(); // the end position\n}\n</code></pre> Platzhalter Bedeutung Beispiel <code>.</code> Ein beliebiges Zeichen <code>\\d</code> Digit [0-9] <code>\\D</code> Keine Digit <code>\\w</code> ein Buchstabe, eine Ziffer oder einen Unterstrich <code>\\W</code> Weder Buchstaben, Ziffer, noch Unterstrich <code>\\s</code> Leerzeichen (Blank, etc) <code>\\S</code> Kein Leerzeichen <code>[^s]</code> Alle Zeichen, ausser in <code>s</code> enthaltene Zeichen <code>s?</code> <code>s</code> kann 0 oder einmal auftreten <code>s*</code> <code>s</code> kann 0 oder mehrmals auftreten <code>s+</code> <code>s</code> muss 1 oder mehrmals auftreten <code>s{n}</code> <code>s</code> muss <code>n</code>-mal auftreten <code>s{m, n}</code> <code>s</code> muss mindestens <code>m</code>-mal und maximal <code>n</code>-mal auftreten"},{"location":"22HS/ADS/Zufall.html","title":"Zufall","text":"<p>Der folgende Algorithmus zeigt, wie Java Zufallszahlen generiert.</p> <pre><code>long seed;\ndouble random() {\nlong a = 25214903917; c = 11; p = Math.pow(2, 48);\nseed = (a*seed + c) % p;\nreturn z/p;\n}\n</code></pre>"},{"location":"22HS/ADS/Zufall.html#las-vegas-algorithmen","title":"Las-Vegas-Algorithmen","text":"<p>Ein Las-Vegas-Algorithmus liefert nie ein falschen Wert und der Zufall bestimmt nur die Richtung des Alogirthmus.</p> <ul> <li>Beim Quicksort wird das Pivot-Element zuf\u00e4llig bestimmt</li> <li>Beim K\u00f6nigign-Problem</li> </ul>"},{"location":"22HS/ADS/Zufall.html#monte-carlo-algorithmen","title":"Monte-Carlo-Algorithmen","text":"<p>Beim Monte-Carlo-Algorithmus steuert der Zufall das Resultat:</p> <ul> <li>Um ein Integral zu berechnen, werden Proben an zuf\u00e4lligen Orten genommen und es wird geschaut, welche Proben unterhalb des Integrals sind.</li> </ul>"},{"location":"22HS/ADS/Zufall.html#heuristische-approximationsverfahren","title":"Heuristische Approximationsverfahren","text":""},{"location":"22HS/ADS/Zufall.html#genetische-algorithmen","title":"Genetische Algorithmen","text":"<p>Ein genetischer Algorithmus wird \u00fcber mehrere Generationen ver\u00e4ndert um deren Effektivit\u00e4t zu verbessern.</p> <p></p>"},{"location":"22HS/ADS/Zufall.html#n-damen-problem","title":"n-Damen-Problem","text":"<p>Beim Damen-Problem k\u00f6nnen n Damen aufs Board gesetzt werden und keine darf sich bedrohen. In diesem Fall erf\u00fcllt eine Damen-Konfiguration das Problem oder nicht. Die Sektions-Funktion muss trotzdem ein Score bilden k\u00f6nnen, welcher nicht <code>0</code> oder <code>1</code> ist.</p> <p></p> <p>Der Fittness-Score kann z.B. sein, wie viele Damen nicht bedroht sind. </p> <p>Im folgenden Bild sind die weiteren Schritte visualisiert.</p> <p></p>"},{"location":"22HS/ADS/Zufall.html#simulated-annealing","title":"Simulated Annealing","text":"<p>(Annealing heisst Aush\u00e4rten und kommt davon, wie Glass hergestellt wird)</p> <ol> <li>Start mit einer (zuf\u00e4lligen) Initial-Konfiguration</li> <li>Wiederholtes Durchsuchen der Nachbarschaft und Auswahl eines Kandidaten</li> <li>Evaluiere die Kostenfunktion (oder Fitnessfunktion) und akzeptiere den     Kandidaten, wenn er \u00abbesser\u00bb ist; wenn nicht, w\u00e4hle einen anderen Nachbarn</li> <li>Stoppe, wenn die Qualit\u00e4t ausreichend hoch ist, wenn keine Verbesserung     gefunden werden kann oder nach einer festgelegten Zei</li> </ol> <p>F\u00fcr diesen Algorithmus wird folgendes ben\u00f6tigt:</p> <ul> <li>Eine Methode zur Erzeugung der Anfangskonfiguration</li> <li>Eine \u00dcbergangs- oder Generationenfunktion, um einen Nachbarn als n\u00e4chsten Kandidaten zu finden</li> <li>Eine Kostenfunktion</li> <li>Ein Auswahlkriterium</li> <li>Ein Stopp-Kriterium</li> </ul> <p>Ein Problem kann sein, dass es bei der Fittnessfunktion es lokale Maximume und Minimume haben kann. Um diese abzuwsch\u00e4chen, sollte ein Algorithmus das letzte Maximum merken und zu Beginn gr\u00f6ssere Schritte neben.</p> <p></p>"},{"location":"22HS/ADS/Zufall.html#beispiel-traveling-salesmen","title":"Beispiel: Traveling Salesmen","text":"<ol> <li>Eine zuf\u00e4llige Tour wird gestartet</li> <li>Nach dem Zufallsprinzip wird die Tour mutiert abh\u00e4ngig von der Gl\u00fchtemperatur (bzw. Fittnessfunktion). Eine M\u00f6glichkeit w\u00e4re, zwei zuf\u00e4llige St\u00e4dte auf der Tour umzudrehen</li> <li>Wenn die Kandidatentour besser ist, als die neue Tour akzeptieren</li> <li>Wenn die Kandidaten-Tour schlechter ist, Tour mit einer gewissen Wahrscheinlichkeit trotzdem akzeptieren. Die Wahrscheinlichkeit, eine minderwertige Tour zu akzeptieren, h\u00e4ngt davon ab, wie viel l\u00e4nger der Kandidat ist, und von der \u00abTemperatur des Gl\u00fchprozesses\u00bb. Eine h\u00f6here Temperatur macht es wahrscheinlicher, eine minderwertige Tour zu akzeptieren</li> <li>Zur\u00fcck zu Schritt 2 um die Gl\u00fchtemperatur bei jeder Iteration zu senken. Wenn die Temperatur tief genug wird und somit ein (lokales) Minimum gefunden wurde, wird der Loop gestoppt.</li> </ol>"},{"location":"22HS/ADS/Daten%20Typen/Graph.html","title":"Graph","text":"<p>Ein Knoten ist ein Objekt mit einem Namen, welches mit einer oder mehreren Kanten verbunden werden. Kanten sind dabei eine gerichtete Verbindung zwischen zwei Knoten.</p> <p>Begriffe:</p> <ul> <li>Einfacher Pfad: Eine Sequenz von Knoten ohne doppelte Knoten</li> <li>Geschlossener oder zyklischen Pfad: Ein Pfad, welcher die selben Anfangs- und Endknoten hat</li> <li>Pfadl\u00e4nge: Die Anzahl Kanten des Pfads (Achtung, nicht Knoten)</li> <li>Benachbarte Knoten: Zwei Knoten, welche mit einer Kante verbunden sind</li> <li>Vollst\u00e4ndiger (oder kompletter) Graph: Jeder Knoten ist mit jedem Knoten direkt verbunden</li> <li>Verbundener Graph: Jeder Knoten ist mit jedem anderen Knoten mit einem Pfad verbunden</li> <li>Dichte des Graphen: Das Verh\u00e4ltnis von Anzahl Kanten zu der Anzahl m\u00f6glichen Kanten</li> <li>Dichter Graph (dense graph): Nur wenige Kanten fehlen</li> <li>D\u00fcnner oder lichter Graph (sparse graph): Nur wenige Kanten im Graph sind vorhanden</li> <li>ungerichteten Graph: Normallerweise sind Kanten gerichtet. Bei einem ungerichteten Graph gibt es immer Kanten in beide Richtungen</li> <li>gewichteten Graphen (auch Netzwerk): Graphen, bei welchen die Kanten ein Gewicht oder Kosten haben</li> <li>gewichtete Pfadl\u00e4nge: Die Summe der Pfadgewichte</li> <li>zyklenfreier Graph: Ein Graph, ohne Loops</li> <li>Speziallfall des Baumes: Ein gerichteter zyklenfreier, verbundener Graph, bei welchem jeder Knoten genau eine eingehende Verbindung hat, ausser der Wurzelknoten, ist ein Baum</li> <li>Wald: Eine Gruppe von nicht zusammenh\u00e4ngender B\u00e4ume</li> </ul>"},{"location":"22HS/ADS/Daten%20Typen/Graph.html#implementation-1-adjazenz-liste","title":"Implementation 1: Adjazenz-Liste","text":"<p>Jede Implementation hat eine Liste von Kanten zu den benachbarten Knoten (die Adjazenz-Liste)</p> <pre><code>classDiagram\n    class Node {\n        + name: String\n    }\n\n    class Edge {\n        +double weight\n    }\n\n    Node \"1\" --&gt; \"*\" Edge\n    Edge \"1\" --&gt; \"1\" Node\n</code></pre>"},{"location":"22HS/ADS/Daten%20Typen/Graph.html#implementation-2-adjazenz-matrix","title":"Implementation 2: Adjazenz-Matrix","text":"<p>Es gibt eine \\(N\\times N\\) Boolean-Matrix, in welcher alle Kanten als <code>boolean</code> representiert sind. Falls die Kanten gewichtet sind, kann das <code>boolean</code> durch ein <code>double</code> ersetzt werden.</p> <p></p>"},{"location":"22HS/ADS/Daten%20Typen/Graph.html#suchstrategien","title":"Suchstrategien","text":""},{"location":"22HS/ADS/Daten%20Typen/Graph.html#tiefesuche","title":"Tiefesuche","text":"<p>Bei der Tiefesuche wird soweit zum n\u00e4chsten Node gegangen, bis dies nicht mehr m\u00f6glich ist. Dann wird den Pfad zur\u00fcck gegangen, bis ein anderen Pfad eingeschlagen werden kann.</p> <pre><code>void depthFirstSearch(startNode: Node) {\nStack&lt;Node&gt; stack = new Stack&lt;&gt;();\nstartNode.marked = true;\nstack.push(startNode);\nwhile(!stack.isEmpty()) {\nNode current = stack.pop();\ncurrent.marked = true\nfor(Edge edge : current.edges) {\nif(!edge.nextNode.marked) {\nstack.push(edge.nextNode)\n}\n}\n}\n}\n</code></pre>"},{"location":"22HS/ADS/Daten%20Typen/Graph.html#breitesuche","title":"Breitesuche","text":"<p>Bei der Breitensuche wird zuerst alle Nachbarn eines Nodes besucht, danach die Nachbarn der Nachbarn</p> <pre><code>void breadthFirstSeach(startNode: Node) {\nQueue&lt;Node&gt; queue = new Queue&lt;&gt;();\nstartNode.marked = true;\nqueue.enqueue(startNode);\nwhile(!queue.isEmpty()) {\nNode current = stack.dequeue();\ncurrent.marked = true\nfor(Edge edge : current.edges) {\nif(!edge.nextNode.marked) {\nstack.enqueue(edge.nextNode)\n}\n}\n}\n}\n</code></pre> <p>Der einzige Unterschied in der Implementation zwischen der Tiefen- und der Beritensuche, ist der Datentyp. Bei der Tiefensuche wird ein <code>Stack</code> und bei der Breitensuche eine <code>Queue</code> verwendet.</p>"},{"location":"22HS/ADS/Daten%20Typen/Graph.html#kurzester-ungewichteter-pfad","title":"K\u00fcrzester, ungewichteter Pfad","text":"<p>Der Graph wird mit der Breitesuche durchsucht. Bei jedem Knoten wird hingeschrieben, von welchem Knoten gekommen wurde.</p>"},{"location":"22HS/ADS/Daten%20Typen/Graph.html#kurzester-gewichteter-pfad","title":"K\u00fcrzester, gewichteter Pfad","text":""},{"location":"22HS/ADS/Daten%20Typen/Graph.html#dijkstra","title":"Dijkstra","text":""},{"location":"22HS/ADS/Daten%20Typen/Graph.html#greedy-algorithmen","title":"Greedy Algorithmen","text":""},{"location":"22HS/ADS/Daten%20Typen/Graph.html#topologisches-sortieren","title":"Topologisches Sortieren","text":""},{"location":"22HS/ADS/Daten%20Typen/Graph.html#maximaler-fluss","title":"Maximaler Fluss","text":""},{"location":"22HS/ADS/Daten%20Typen/Graph.html#traveling-salesman","title":"Traveling Salesman","text":""},{"location":"22HS/ADS/Daten%20Typen/List.html","title":"List","text":"<p>In ADS ist mit einer Liste immer eine linked list.</p> <p></p>"},{"location":"22HS/ADS/Daten%20Typen/List.html#methoden","title":"Methoden","text":"<ul> <li><code>void add (T obj)</code></li> <li><code>void add(int pos, T obj)</code></li> <li><code>T get(int pos)</code></li> <li><code>T remove(int pos)</code></li> <li><code>int size()</code></li> <li><code>boolean isEmpy()</code></li> </ul>"},{"location":"22HS/ADS/Daten%20Typen/List.html#zwei-listen-vergleichen","title":"Zwei Listen vergleichen","text":"<p>TODO</p>"},{"location":"22HS/ADS/Daten%20Typen/List.html#doppelt-verkettete-liste","title":"Doppelt verkettete Liste","text":"<p>Einfach verkettete Liste k\u00f6nnen nur in eine Richtung effizient iteriert werden. Mit einer doppelt verkettete Liste kann ein Iterator in beide Richtungen gehen. Daf\u00fcr wird beim hinzuf\u00fcgen und l\u00f6schen bezahlt, da zwei Pointers abge\u00e4ndert werden m\u00fcssen.</p>"},{"location":"22HS/ADS/Daten%20Typen/List.html#zirkulare-liste","title":"Zirkul\u00e4re Liste","text":"<p>Eine Liste kann zirkul\u00e4r verbunden werden. Dies hat den Vorteil, dass der Fall von einer leeren Liste kein spezial Fall ist.</p>"},{"location":"22HS/ADS/Daten%20Typen/List.html#sortierte-liste","title":"Sortierte Liste","text":"<p>Eine Liste kann kontinuierlich sortiert werden.</p> <p>Wenn eine Liste, welche nicht automatisch sortiert ist, sortiert werden soll, kann <code>Collections.sort(List&lt;?&gt; list)</code> ben\u00fctzt werden</p>"},{"location":"22HS/ADS/Daten%20Typen/List.html#arrays","title":"Arrays","text":"<p>Arrays sind sehr effizient bei Zugriffen, daf\u00fcr schrecklick f\u00fcr das hinzuf\u00fcgen und l\u00f6schen von Elemente.</p>"},{"location":"22HS/ADS/Daten%20Typen/List.html#listenimplementationen-im-vergleich","title":"Listenimplementationen im Vergleich","text":"Operation Arraylist LinkedList Vector Mutationen langsam schnell langsam Zugriff schnell langsam langsam Synchronisiert nein nein ja Bemerkung - - Deprecated"},{"location":"22HS/ADS/Daten%20Typen/Queue.html","title":"Queue","text":"<p>Queues sind eine FIFO-Collection und werden oft f\u00fcr Warteschlangen verwendet.</p> <p>Queues k\u00f6nnen mittels Array implementiert, in diesem Fall wird das Array als Ringbuffer gebraucht. </p> <p></p> <p>Queues k\u00f6nnen eine fixe Kapazit\u00e4t haben, in welche Fall <code>enqueue(T obj)</code> ein Fehler ausgeben w\u00fcrde.</p>"},{"location":"22HS/ADS/Daten%20Typen/Queue.html#methoden","title":"Methoden","text":"<ul> <li><code>void enqueue(T obj)</code></li> <li><code>T dequeue()</code></li> <li><code>T peek()</code></li> <li><code>void removeAll()</code></li> <li><code>boolean isEmpty()</code></li> <li><code>boolean isFull()</code></li> </ul>"},{"location":"22HS/ADS/Daten%20Typen/Queue.html#priority-queue","title":"Priority Queue","text":"<p>Bei einer Priority Queue werden Objekte beim einf\u00fcgen nach einer Priorit\u00e4t sortiert. Eine Priority Queue wird z.B. f\u00fcr das Scheduling von Prozessen in Betriebsystemen, Tasklisten nach Priorit\u00e4t, etc. ben\u00fctzt.</p>"},{"location":"22HS/ADS/Daten%20Typen/Set.html","title":"Set","text":"<p>Ein Set ist eine ungeordnete Menge ohne Duplikate.</p>"},{"location":"22HS/ADS/Daten%20Typen/Set.html#methoden","title":"Methoden","text":"<ul> <li><code>add(T)</code></li> <li><code>remove(T)</code></li> <li><code>contains(Object)</code></li> <li><code>int size()</code></li> <li><code>boolean isEmpty()</code></li> </ul>"},{"location":"22HS/ADS/Daten%20Typen/Stack.html","title":"Stack","text":"<p>Stack ist eine LIFO-Collection und ist in Java mit dem Interface <code>Dequeue</code> implementiert.</p>"},{"location":"22HS/ADS/Daten%20Typen/Stack.html#methoden","title":"Methoden","text":"<ul> <li><code>void push(T obj)</code></li> <li><code>T pop()</code></li> <li><code>T peek()</code></li> <li><code>boolean isEmpty()</code></li> <li><code>void removeAll()</code></li> <li><code>bool isFull()</code></li> </ul>"},{"location":"22HS/ADS/Daten%20Typen/Stack.html#anwendungsfalle","title":"Anwendungsf\u00e4lle","text":"<p>Ein Stack wird oft f\u00fcr das Parsen von z.B. Klammern oder XML-Tags verwendet. Ebenfalls ben\u00fctzen alle Programme einen Stack f\u00fcr Methoden-Aufrufe.</p>"},{"location":"22HS/ADS/Daten%20Typen/Tree.html","title":"Tree","text":"<pre><code>Tree = Empty\nTree = Node(List&lt;Tree)\n</code></pre> <p>Eigenschaften:</p> <ul> <li>Knoten mit dem gleichen Vorg\u00e4nger-Knoten sind Geschwisterknoten</li> <li>Es gibt genau einen Pfad von der Wurzel zu jedem Knoten, wobei die Wegl\u00e4nge die Anzahl Kanten zum Konten darstellt</li> <li>Die H\u00f6he des Baumes sind die Anzahl Ebenen im Baum (<code>Anzahl Kannten + 1</code>)</li> <li>Das Gewicht oder Gr\u00f6sse ist die Anzal der Knoten</li> </ul>"},{"location":"22HS/ADS/Daten%20Typen/Tree.html#binary-tree","title":"Binary Tree","text":"<pre><code>Tree = Empty\nTree = Node(Tree, Value, Tree)\n</code></pre> <p>Eigenschaften:</p> <ul> <li>Die H\u00f6he/Tiefe ist die Anzahl Ebenen im Baum (<code>Anzahl Kanten + 1</code>)</li> <li>Auf jeder Ebene \\(h\\) gibt es maximal \\(2^{h-1}\\) Knoten</li> <li>Die Anzahl Konten sind \\(n=2^h-1\\), wobei \\(h\\) die H\u00f6he des Baums ist </li> <li>Die Anzahl Ebenen/H\u00f6he sind \\(h=\\log_2(n+1)\\)</li> <li>Ein Binary-Tree ist voll, wenn jeder Knoten entweder Blatt ist oder zwei Kinder besitzt   </li> <li>Ein Binary-Tree ist vollst\u00e4ndig/komplett, wenn alle Ebenen bis auf die letzte Ebene gef\u00fcllt ist und die Bl\u00e4ter linksb\u00fcndig angeordnet sind   </li> <li>Ein vollst\u00e4ndigen (bzw. kompletten) sortierten Bin\u00e4rbaum kann in \\(O(\\log_2 n)\\) Schritten durchsucht werden (f\u00fcr 1000 Elemente werden 10 Schritte ben\u00f6tigt)</li> </ul>"},{"location":"22HS/ADS/Daten%20Typen/Tree.html#traversieren","title":"Traversieren","text":"Methode Beschreibung Beispiel Preorder <code>Value, Left, Right</code> <code>h, d, b, a, c, f, e, g, i</code> Inorder <code>Left, Value, Right</code> <code>a, b, c, d, e, f, g, h, i</code> Postorder <code>Left, Right, Value</code> <code>a, c, b, e, g f, d, i, h</code> Levelorder Jede Ebene wird Ausgedruckt: \\(n, a_0, b_0, a_1, a_2, b_1, b_2\\) <code>h, d, i, b, f, a, c, e, g</code>"},{"location":"22HS/ADS/Daten%20Typen/Tree.html#ubungung","title":"\u00dcbungung","text":"<p>Es ist geben: </p> <ul> <li>Preorder-Traversierung: 10, 3, 1, 4, 2, 9, 7, 5, 8</li> <li>Inorder-Traversierung: 3, 4, 1, 10, 9, 7, 2, 8, 5</li> </ul> <p>Daraus soll der Baum wieder hergestellt werden:</p>"},{"location":"22HS/ADS/Daten%20Typen/Tree.html#immer-rechts-oder-immer-links-einfugen","title":"Immer Rechts oder immer Links Einf\u00fcgen","text":"<p>Der folgende Code erstellt eine LinkedList als Binary-Tree: </p> <pre><code>class BinaryTree&lt;T&gt; implements Tree&lt;T&gt;{\nprivate TreeNode&lt;T&gt; root;\nprivate TreeNode insertAt(TreeNode node, T x) {\nif (node == null) {\nreturn new TreeNode(x);\n}\nelse {\n// ACHTUNG: Der rechte Node wird ersetzt\nnode.right = insertAt(node.right, x);\n// or \n//node.left = insertAt(node.left, x);\nreturn node;\n}\n}\npublic void insert (T x) {\nroot = insertAt(root, x);\n}\n}\n</code></pre>"},{"location":"22HS/ADS/Daten%20Typen/Tree.html#sortierte-baume","title":"Sortierte B\u00e4ume","text":"<p>Bei einem sortierten Baum gilt dass der linke Node kleinere oder gleiche Elemente (\\(\\le\\)) enth\u00e4lt und der rechte Node alle gr\u00f6ssere Elemente.</p> <p></p> <p>Dies erleichtert das Suchen enorm. Bei einem vollst\u00e4ndigen gef\u00fclltem Bin\u00e4r-Baum ist \\(O(\\log(n))\\) die Zeitkomplexit\u00e4t.</p> <pre><code>public Object search(TreeNode&lt;T&gt; node, T x) {\nif (node == null) return node;\nelse if (x.compareTo(node.element) == 0) return node;\nelse if (x.compareTo(node.element) &lt;= 0) return search(node.left,x);\nelse return search(node.right,x);\n}\n</code></pre>"},{"location":"22HS/ADS/Daten%20Typen/Tree.html#konten-hinzufugen","title":"Konten hinzuf\u00fcgen","text":"<p>Daf\u00fcr ist das Einf\u00fcgen komplexer. Mit folgendem Alogirthmus wird kein vollst\u00e4ndigen Bin\u00e4r-Baum erzeugt und somit auch nicht die idalle Zeitkomplexit\u00e4t von \\(O(\\log(n))\\) erreicht.</p> <pre><code>private TreeNode&lt;T&gt; insertAt(TreeNode&lt;T&gt; node, T x) {\nif (node == null) return new TreeNode(x);\nelse if (x.compareTo(element) &lt;= 0) node.left = insertAt(node.left, x);\nelse\nnode.right = insertAt(node.right, x);\nreturn node;\n}\n</code></pre>"},{"location":"22HS/ADS/Daten%20Typen/Tree.html#knoten-loschen","title":"Knoten l\u00f6schen","text":"<ol> <li>Knoten finden</li> <li>Knoten l\u00f6schen</li> <li>Fall: der Knoten hat keine Kindern: Knoten einfach l\u00f6schen</li> <li>Fall: der Konten hat genau einen Teilbaum: Knoten l\u00f6schen und Referenz neu setzen</li> <li>Fall: der Knoten hat zwei Teilb\u00e4ume: Es muss ein Ersatz-Knoten gefunden werden. Daf\u00fcr muss der gr\u00f6sste Wert des linken Baums oder der gr\u00f6sste Wert des rechtem Baum </li> </ol> <pre><code>private TreeNode&lt;T&gt; removeAt(TreeNode&lt;T&gt; node, T x) {\nif (x.compareTo(node.element) == 0) { // delete this node\nif (node.left == null) {\nnode = node.right; // no left subtree -&gt; case 1 or 2\n} else if (node.right == null) {\nnode = node.left; // no right subtree -&gt; case 2\n} else {\n// two subtrees -&gt; case 3\n// node.left is root of left subtree\nnode.left = findRepAt(node.left, node);\n}\n} else if (x.compareTo(node.element) &lt; 0) {\nnode.left = removeAt(node.left, x);\n// search in left subtree\n} else {\nnode.right = removeAt(node.right, x); // search in right subtree\n}\nreturn node;\n}\nprivate TreeNode&lt;T&gt; findRepAt(TreeNode&lt;T&gt; node, TreeNode&lt;T&gt; rep) {\nif (node.right == null) {\n// node is the rightmost node, the node that should be replaced gets its element\nrep.element = node.element;\n// remove rightmost node of left subtree (return value is the 'new' node)\nnode = node.left;\n} else {\n// more nodes on the right side of left subtree\nnode.right = findRepAt(node.right, rep);\n}\nreturn node;\n}\n</code></pre>"},{"location":"22HS/ADS/Daten%20Typen/Tree.html#vollstandig-balancierter-baum","title":"Vollst\u00e4ndig Balancierter Baum","text":"<p>Ein vollst\u00e4ndig balancierter Baum (oder vollst\u00e4ndig ausgeglichener Baum) hat, abgesehen von der untersten Ebenen, alle Ebenen vollst\u00e4ndig (mit Knoten) besetzt.</p> <p>Mit dieser Definition kommen einige Eigenschaft mit:</p> <ul> <li>Tiefe ist \\(\\log_2(n+1)\\)</li> <li>Bin\u00e4rsuche: \\(O(\\log_2(n))\\)</li> <li>Beim Einf\u00fcgen, L\u00f6schen und \u00c4ndern: \\(O(n)\\)</li> </ul>"},{"location":"22HS/ADS/Daten%20Typen/Tree.html#balancierte-baume","title":"Balancierte B\u00e4ume","text":"<p>Ein nicht-vollst\u00e4ndig balancierter Baum hat die maximale H\u00f6he von \\(c_1\\cdot \\log(n)+c_2\\) (\\(c_1\\) und \\(c_2\\) sind Konstante). Nun ist eine Suche immer \\(O(\\log(n))\\).</p> <p>Es gibt verschiedene M\u00f6glichkeiten die Bedingung \\(c_1\\cdot \\log(n)+c_2\\) umzusetzten.</p>"},{"location":"22HS/ADS/Daten%20Typen/Tree.html#avl-baum","title":"AVL-Baum","text":"<p>Ein AVL-Baum ist eine Art eines (nicht-vollst\u00e4ndig) balancierter Baum. Bei jedem Knoten gilt, dass sich die H\u00f6he der beiden Teilb\u00e4umen um h\u00f6chstens eins unterscheidet.</p> <p>Die Konstanten in \\(c_1 \\cdot \\log(n)+c_2\\) sind ca. \\(c_1 \\approx 1.44\\) und \\(c_2\\approx -0.33\\). Daraus geht, dass ein AVL durchschnittilch 44% h\u00f6her als ein vollst\u00e4ndiger ausgeglichener Baum ist.</p>"},{"location":"22HS/ADS/Daten%20Typen/Tree.html#rotationen","title":"Rotationen","text":"<p>Wenn ein Teilbaum um zwei h\u00f6her als der zweite Teilbaum ist, muss ein Teil des Baumes rotiert werden.</p> <p></p> <p>Es gibt aber Situationen, wo nach einer Rotation immer noch eine H\u00f6hendifferenz von zwei existiert. In diesen F\u00e4llen muss doppelt rotiert werden.</p> <p></p>"},{"location":"22HS/ADS/Daten%20Typen/Tree.html#b-baum","title":"B-Baum","text":"<p>Ein B-Baum ist ein vollst\u00e4ndig balancierten Baum, welcher optimiert ist f\u00fcr das Speichern auf Block-Speicher (HDD, SSD, Filesysteme).</p> <p>Jedes Element hat Schl\u00fcssel, bzw. Werte, und Verweisse auf weitere Bl\u00f6cke. Die Schl\u00fcssel sind sortiert. Zudem gilt, dass ein Block mit einem Verweiss zwischen dem Schl\u00fcssel \\(s_i\\) und \\(s_j\\), Werte zwischen \\(s_i\\) und \\(s_j\\) hat.</p> <p>Ein B-Baum hat die Ordnung \\(n\\), wenn die maximale Anzahl von Kinder  eines Nodes \\(n-1\\) ist und alle Knoten, ausser der Wurzel, mindestens \\(\\left\\lfloor\\frac{(n-1)} 2\\right\\rfloor\\) Knoten haben. Die Wurzel hat zwischen \\(1\\) und \\(n-1\\) Schl\u00fcssel.</p> <p>Die Tiefe des Baumes ist ca. \\(\\log_{\\text{Anzahl Verweisse}}(\\text{Anzahl Elemente})\\).</p> <p>Wenn Informationen nur in Bl\u00e4ttern gespeichert wird, wird dies ein B+-Baum genannt.</p> <p>Hier gibt es eine Visualisierung eines B-Tree: https://www.cs.usfca.edu/~galles/visualization/BTree.html</p>"},{"location":"22HS/ADS/Daten%20Typen/Tree.html#element-einfugen","title":"Element Einf\u00fcgen","text":"<p>Ein Schl\u00fcssel, bzw. Wert, wird immer in den Bl\u00e4ttern eingef\u00fcgt. Wenn ein Blatt voll ist, gibt es ein \u00dcberlauf. </p> <p>Bei einem \u00dcberlauf wird das mittlere Element des \u00fcberlaufendem Knoten geteilt und in den Vater-Knoten hochgezogen. Danach wird der zweite Teil in ein neues Geschwister-Element bewegt und an den Vater geh\u00e4ngt. Wenn das Vater-Element ebenfalls \u00fcberlauft, wiederholt sich dieser Prozess bis entweder ein Vater-Element nicht mehr \u00fcberlauft oder bei der Wurzel angelangt wird. </p> <p>Falls die Wurzel \u00fcberlauft, wird der selbe Prozess wiederholt, aber mit einem neuen Element als neue Wurzel. Der Baum wird dann um eins h\u00f6her.</p> <p></p>"},{"location":"22HS/ADS/Daten%20Typen/Tree.html#element-loschen","title":"Element L\u00f6schen","text":"<p>Wenn das zu l\u00f6schende Element in einem Blatt-Knoten ist und kein Unterlauf dabei entsteht, kann das Element einfach gel\u00f6scht werden.</p> <p>Wenn dabei ein Unterlauf entsteht (weniger als \\(\\frac n 2\\) Schl\u00fcsselt), kann ein Eltern-Element in das unterlaufene Kind gezogen werden und mit einem Geschwister-Element ersetzt werden.</p> <p></p> <p>Alternative k\u00f6nnen zwei Knoten verschmolzen werden:</p> <p></p> <p>Wenn das zu l\u00f6schende Element kein Blatt-Knoten ist, dann muss ein Ersatz-Element in den Kinder gefunden werden. Daf\u00fcr kann entweder das h\u00f6chste Element aus dem linken Kind oder das tiefste Element aus dem rechten Kind genommen werden. Wenn dabei ein Unterlauf entsteht, muss die Regel von oben angewendet werden.</p> <p></p>"},{"location":"22HS/ADS/Daten%20Typen/Tree.html#2-3-4-baum","title":"2-3-4-Baum","text":"<p>Der 2-3-4-Baum ist ein Spezialfall des B-Baums mit der Ordnung 4 (Jeder Knoten, ausser der Wurzel, hat zwei, drei oder 4 Kinder). Obwohl dies ein B-Baum ist, eignet sich diese Datenstruktur f\u00fcr Memory.</p>"},{"location":"22HS/ADS/Daten%20Typen/Tree.html#rot-schwarz-baum","title":"Rot-Schwarz-Baum","text":"<p>Ein Rot-Schwarz-Baum ist ein Spezialfall des 2-3-4-Baums, bei welchem die Knoten mit 2 oder mehr Schl\u00fcsseln durch Bin\u00e4rb\u00e4ume implementiert werden.</p> <p></p> <p>Es hat die maximale H\u00f6he von \\(2\\cdot \\log_2(n+2) - 2\\) und einen Such-Aufwand von \\(O(\\log(n))\\)</p> <p>Dabei vereint der Rot-Schwarz-Baum die Einfachheit des Bin\u00e4rbaumes und die Ausgeglichenheit des B-Baumes. Er ist weniger gut balanciert als ein AVL-Baum, aber Einf\u00fcg- und L\u00f6sch-Operationen sind schneller.</p>"},{"location":"22HS/CAE/Conditional.html","title":"Conditional","text":""},{"location":"22HS/CAE/Conditional.html#conditional-always-true","title":"Conditional: Always true","text":"<p>If I work late, I get tired.</p> <p>If the water is boiling/has boiled, it means the food is nearly ready.</p> <p>Form: If present, present</p> <p>States a fact, which is always true.</p>"},{"location":"22HS/CAE/Conditional.html#conditional-i","title":"Conditional I","text":"<p>If I find her address, I'll send her an invitation.</p> <p>I will send her an invitation if I find her address. (notice: no comma)</p> <p>Form: If + Simple Present, will-Future</p> <p>Conditional I refer to a future event. The condition is likely to be fulfilled.</p> <p><code>when</code> can be used instead of <code>if</code> to signal that it is not a question if it will happen but rather when it will happen.</p>"},{"location":"22HS/CAE/Conditional.html#conditional-ii","title":"Conditional II","text":"<p>If I found her address, I would send her an invitation.</p> <p>I would send her an invitation if I found her address.</p> <p>If I had the money, I could help you. (with the modal verb \"can\")</p> <p>Form: If + Simple Past, Conditional I (would + Infinitive)</p> <p>The conditional II is used when referring to a situation in the present, which would be possible, if things were differently. Like \"would would happen if ...\"</p>"},{"location":"22HS/CAE/Conditional.html#with-modal-verbs","title":"With modal verbs","text":"<p>If you get wet, you should change your clothes immediately.</p> <p>If you come early, we can discuss the problem together.</p> <p>A conditional II sentence can be used with either <code>should</code> or <code>can</code> when referring to the present.</p>"},{"location":"22HS/CAE/Conditional.html#conditional-past-event-with-results-in-the-present","title":"Conditional: Past event with results in the present","text":"<p>If Jim hadn't missed the plane, he would be here now.</p> <p>Form: If + past perfect, Conditional I (would + Infinitive)</p> <p>If an event in the past had happened, then would have a result in the p</p>"},{"location":"22HS/CAE/Conditional.html#conditional-iii","title":"Conditional III","text":"<p>If I had found her address, I would have sent her an invitation (but I hadn't found it...).</p> <p>I would have sent her an invitation if I had found her address.</p> <p>If you hadn't reminded me, I might have forgotten.</p> <p>Form: If + Past Perfect , Conditional II (would have + participial)</p> <p>The conditional III is used to refer to past situations. An action could have happened in the past if a certain condition had been fulfilled.</p>"},{"location":"22HS/CAE/Conditional.html#when","title":"When","text":"<p>When can also be used in a condition.</p> <p>When I was young, there were no houses here. (in the past)</p> <p>Nobody spoke when she came in to the room. (in the past)</p> <p>When you start the engine, there's a strange noise. (in the present)</p> <p>When the new park opens, I will go there every day. (in the future, like conditional I)</p> <p>When I have finished my homework, I'm going to phone Marita. (in the future)</p>"},{"location":"22HS/CAE/Linking%20Words.html","title":"Linking Words","text":"<p>https://7esl.com/linking-words/ </p> <p></p>"},{"location":"22HS/CAE/Listening.html","title":"Listening","text":""},{"location":"22HS/CAE/Listening.html#tips","title":"Tips","text":""},{"location":"22HS/CAE/Listening.html#distractors","title":"Distractors","text":"<ul> <li>Similar phonetic words    E.g. affected/effected</li> <li>Words already mentioned in the question and/or answers   Don't listen too </li> <li>Synonyms</li> <li>Negatives</li> </ul>"},{"location":"22HS/CAE/Passive%20Voice.html","title":"Passive Voice","text":"<p>Rita writes a letter \\(\\to\\) A letter is written by Rita.</p> <p>They build houses \\(\\to\\) Houses are being built.</p> <p>They say that women live longer than men. \\(\\to\\) Its said that women live longer than men.</p> <p>To transform a sentence to its passive version, the following has to be done:</p> <ol> <li>The objects becomes the subject of the sentence</li> <li>The verb is changed to <code>to be</code> + <code>past participle</code> (eg. was written)</li> <li>The subject becomes the object of the passive sentence or can be dropped</li> </ol> Active Tens Active Sentence Passive Sentence Simple present Rita writes a letter. A letter is written by Rita. Present continuous Rita is writing a letter. A letter is being written by Rita. Simple past Rita wrote a letter. A letter was written by Rita. Past continuous Rita was writing a letter. A letter was being written by Rita. Present perfect Rita has written a letter. A letter has been written by Rita. Future I Rita will write a letter. A letter will be written by Rita. Future II Rita will have writing a letter. A letter will be have been written by Rita. Going-To Rita is going to write a letter. A letter is going to be written by Rita. Conditional I Rita would write a letter. A letter would be written by Rita. Conditional II Rita would have written a letter. A letter would have been written by Rita."},{"location":"22HS/CAE/Report.html","title":"Report","text":""},{"location":"22HS/CAE/Report.html#musikfestwochen-winterthur","title":"Musikfestwochen Winterthur","text":"<ul> <li>description</li> <li>in winterthur</li> <li>different concerts (often free), both open air and in roofed venues</li> <li>for 12 days with 100 acts and 60'000 visitors</li> <li>Popular because: Free concert, known in the wider area of winterthur</li> <li>recommendation</li> <li>better corridors for people to reduce how clocked up the allys are</li> </ul> <p>This report should inform the reader about the annually organized music festival weeks, known as \"Musikfestwochen\", in Winterthur.</p> <p>As the summer vacation draws near its end, over 12 days 100 different acts perform on the five different stages at the \"Musikfestwoche\" in Winterthur. This massive event is held in the core of the old town of Winterthur, where multiple stages are built for the 12 days concert marathon. Most performances are free of charge in the streets of the city. People can just show up and enjoy the music, a beer and food from local restaurants with their friends and family. This is in no small part possible of the many volunteers, who stock up food, reconfigure the audio equipment, sell beverages and donate their time in other ways.</p> <p>In its latest iteration, it attracted more than 60'000 people. The success of the music festival weeks can be in part attributed to most of it being free for the general public. Additionally by possessing the old town of Winterthur for 12 days straight, it is unmissable by the residents of the larger Winterthurer area.</p> <p>One possible improvement would be to create better corridors for people to find the toilets and get food and drinks. The small alleys easily clock up by the shear amount of people, creating large and annoying queues. This could be partly avoided by labeling the directions of food stalls and toilets more clearly and route people in away, where they do not have to cross each other.</p>"},{"location":"22HS/CAE/Reported%20Speech.html","title":"Reported Speech","text":""},{"location":"22HS/CAE/Reported%20Speech.html#statements","title":"Statements","text":"<p>I don't want a party on my birthday. \\(\\to\\) I told my wife that I didn't want a party on my birthday.</p> <p>The weather was extremely bad. \\(\\to\\) The pilot commented the weather had been extremely bad.</p> <p>Normal statements use <code>that</code> between the the reported speech and who the speaker is. However, <code>that</code> can be omitted.</p>"},{"location":"22HS/CAE/Reported%20Speech.html#questions","title":"Questions","text":"<p>Are you Scottish? \\(\\to\\) She asked if I was scottish.</p> <p>Do you want a table near the window? \\(\\to\\) The waiter asked whether we wanted a table near the window.</p> <p>What do you want for your birthday? \\(\\to\\) My friend asked me, what I wanted for my birthday.</p> <p>Who have you invited? \\(\\to\\) Jim asked, who we had invited. (not \"Jim asked, who had we invited\")</p> <p>A yes-or-no question gets transformed by using <code>if</code> or <code>wheather</code>.  </p> <p>If a wh-word (like <code>what</code>, <code>where</code>,...) is present, it gets used instead of <code>if</code> or <code>wheather</code>.</p> <p>Importantly,  the sentence structure is subject + verb.</p>"},{"location":"22HS/CAE/Reported%20Speech.html#backshift","title":"Backshift","text":"<p>Because what the quoted person said was in the past, the verbs are backshifted by one tense to reflect that. </p> Original Tense Backshifted Tense present simple past simple present continuouse past continuouse present perfect simple past perfect simple present perfect continuouse past perfect continuouse past simple past perfect simple past continuouse past perfect continuouse future (will) future-in-the-past (would) past perfect past perfect (no change) <p>If what the person said is still true, then the no backshifting is necessary. (eg. I'm going to get married next year \\(\\to\\) She said, she is going to get married next year. In this case no backshifting is necessary if it is still the same year)</p>"},{"location":"22HS/CAE/Tenses.html","title":"Tenses","text":""},{"location":"22HS/CAE/Tenses.html#present","title":"Present","text":""},{"location":"22HS/CAE/Tenses.html#present-simple","title":"Present Simple","text":"<p>I work everyday.</p> <p>Water is wet.</p> <p>My plane leaves at eight o'clock.</p> <ul> <li>Something happens repeatedly</li> <li>A generalisation</li> <li>One action follows another</li> <li>A future action which follows a timetable</li> </ul>"},{"location":"22HS/CAE/Tenses.html#stative-verbs","title":"Stative Verbs","text":"<p>Stative verbs require the present simple tense and can't be used with any continuous tense.</p> <ul> <li>thoughts and opinions: agree, belive, doubt, guess, imagine, know, mean ,recognise, remember, suspect, think, understand</li> <li>feelings and emotions: dislike, hate, like, love, prefer, want, wish</li> <li>senses and perceptions: appear, be, feel, hear, look, see, seem, smell, taste</li> <li>possession and measurement: belong, have, measure, own, possess, weigh</li> </ul> <p>There are verbs which can be both stative and dynamic depending on the meaning in the context.</p> <ul> <li>be: When it's used in the continuous form, it means 'behaving' or 'acting'</li> <li><code>you are stupid</code> = it's part of your personality</li> <li><code>you are being stupid</code> = only now, not usually</li> <li>think: </li> <li><code>I think the coffee is great</code> = I'm of the opinion, that coffee is great</li> <li><code>I'm thinking about my next holiday</code> = I'm considering my next holiday</li> <li>have</li> <li><code>I have a car</code> = I own a car</li> <li><code>I'm having a party/a good time/a bath</code>  = having is part of an expression</li> <li>see</li> <li><code>I see a house</code> = I see something with my eyes</li> <li><code>I've been seeing my boyfriend for two years</code> = I've been dating somebody for two years</li> <li><code>I'm seeing Robert tomorrow</code> = I'm going to meet Robert tomorrow</li> </ul>"},{"location":"22HS/CAE/Tenses.html#present-continuous","title":"Present Continuous","text":"<p>Peter is phoning his grandparents (meaning: He is doing it right now)</p> <p>They are dating on Saturday (A plan, scheduled in advance)</p> <p>Julie is living in Paris for a few months</p> <ul> <li>Something is happening while speaking</li> <li>Something in the future which is already scheduled</li> <li>When something is temporary</li> </ul>"},{"location":"22HS/CAE/Tenses.html#present-perfect","title":"Present Perfect","text":"<p>I have been working (meaning: I started working earlier and stopped now)</p> <p>I've cleaned my room. (meainig: I cleaned my room and the result, the clean room, is now relevant)</p> <p>I just played football.</p> <p>We have lived in Canada since 2012. (Has an connection to the present, as \"we\" are still living there)</p> <ul> <li>An action which started in the past and continues up to the present </li> <li>A recently completed action</li> <li>Am action in the past which has a connection to the present</li> <li>An experience you had in the past but doesn't have to be recent</li> </ul> <p>Signal words: just, already, up to now, until now / till now, ever, (not) yet, so far, lately / recently</p>"},{"location":"22HS/CAE/Tenses.html#present-perfect-continuous","title":"Present Perfect Continuous","text":"<p>She has been writing for to hours. (Puts emphasis on the duration or course of action, but not on the result)</p> <p>I have been living here since 2001. (Action that recently stopped or is still going on)</p> <p>I have been working all afternoon. (finished action which influenced the present)</p> <p>Why are you so wet? - I've been washing my car.</p> <ul> <li>Emphasises the length of time of an recently stopped action or an action which is still going on</li> <li>How long an action has been happening</li> <li>A unwanted side effect</li> </ul> <p>Link Simple vs Continuous: https://www.ego4u.com/en/cram-up/grammar/prepersim-preperpro</p> <p>Signal words: how long since, for</p>"},{"location":"22HS/CAE/Tenses.html#present-perfect_1","title":"Present Perfect","text":""},{"location":"22HS/CAE/Tenses.html#past","title":"Past","text":""},{"location":"22HS/CAE/Tenses.html#past-simple","title":"Past Simple","text":"<p>I worked (meaning: I started and stopped working in the past)</p> <p>When I was having breakfast, the phone suddenly rang.</p> <ul> <li>An action which finished in the past and isn't connected to the present</li> <li>An action in the past which takes place in the middle of another action</li> <li>Signal Words:</li> <li>A time expression in the past</li> </ul>"},{"location":"22HS/CAE/Tenses.html#past-continuous","title":"Past Continuous","text":"<p>While I was working, I met a child hood friend.</p> <p>Kim was helping my parents moving today in the morning. (meaning: Kim was helping and might still be helping, but the speaker doesn't know)</p> <p>While she was preparing dinner,  he was washing the dishes.</p> <ul> <li>An action in the middle of another action (often with <code>while</code>)</li> <li>An action which started in the past at a certain time, but the speaker doesn't know if it was finished or not</li> <li>Two simultaneously actions in the past</li> </ul>"},{"location":"22HS/CAE/Tenses.html#past-perfect-simple","title":"Past Perfect Simple","text":"<p>Mary had read the book before she watched the film.</p> <p>If I had seen him, I would have talked to him (conditional sentence III)</p> <ul> <li>When an action (past perfect) which has already happened, is followed by another action</li> <li>Conditional Sentences Type III</li> </ul> <p>Signal words: already, just never, not yet, once, until that day</p>"},{"location":"22HS/CAE/Tenses.html#past-perfect-continuous","title":"Past Perfect Continuous","text":"<p>He had been talking for two hours straight when the bell finally rang.</p> <ul> <li>Puts emphasis on the course or duration of an action taking place before a certain time in the past</li> <li>But like the past perfect simple, it is used when talking about an action before another action</li> </ul>"},{"location":"22HS/CAE/Tenses.html#future","title":"Future","text":"<p>In the case the an action was scheduled, a sentence can be formed with the present continuous or the going to (I'm having a party. \\(\\a\\) I'm going to have a party.)</p>"},{"location":"22HS/CAE/Tenses.html#will-future","title":"Will-Future","text":"<p>It will rain later. (A prediction made by the speaker)</p> <p>I will bet on red (meaning: I decided while speaking that I will bet on read)</p> <p>If I study, I will pass the exams</p> <ul> <li>A prediction about the future</li> <li>When saying somthing about the future, which is almost certain</li> <li>When a decision was spontaneously made at the time of speaking</li> <li>The main clause in the type 1 if-clause</li> </ul>"},{"location":"22HS/CAE/Tenses.html#future-continuous","title":"Future Continuous","text":"<p>When I come to school, the other kids will be waiting for me</p> <ul> <li>An action which will be in progress at a certain time in the future (eg. when I come to school)</li> </ul>"},{"location":"22HS/CAE/Tenses.html#going-to-future","title":"Going To-Future","text":"<p>Mary and I are going to see a movie.</p> <ul> <li>When the speaker already decided to to an action in the future</li> <li>What the speaker thinks will happen</li> </ul>"},{"location":"22HS/CT1/01_Hardware.html","title":"Hardware","text":""},{"location":"22HS/CT1/01_Hardware.html#von-neumann-architeccture","title":"von Neumann Architeccture","text":"<p>Instructions und Data sind im selben Speicher gespeichert. Von dem datapath Modul werden arithmetik und Logik ausgef\u00fchrt.  Die Control Unit liest und interpertiert die Instruktionen.</p> <p></p>"},{"location":"22HS/CT1/01_Hardware.html#komponenten","title":"Komponenten","text":""},{"location":"22HS/CT1/01_Hardware.html#cpu","title":"CPU","text":"<p>Der CPU ist unterteilt in die  Datapath und die Control Unit (und weitere). </p> <p>Den Datapath enth\u00e4lt die ALU und die Registers. </p> <p>In der Control Unit f\u00fchrt den fetch-exec Zyklus aus und kann Data-Transfers zwischen Memory und Registern, Arithmetische und Logische Befehle und Spr\u00fcnge.</p> <p></p>"},{"location":"22HS/CT1/01_Hardware.html#memory","title":"Memory","text":"<p>Arbeitspeicher wird auf bytes genau adressiert</p>"},{"location":"22HS/CT1/01_Hardware.html#io","title":"I/O","text":"<p>Bei Festplatten oder SSDs wird in Blocks auf Daten zugegriffen.</p>"},{"location":"22HS/CT1/01_Hardware.html#system-bus","title":"System-Bus","text":"<p>Der System-Bus enh\u00e4lt:</p> <ul> <li>Address-Linien: Welche Adresse geschrieben oder gelesen wird</li> <li>Data-Linen: Die Daten</li> <li>Control-Signal: Ob geschrieben oder gelesen werden soll</li> </ul>"},{"location":"22HS/CT1/01_Hardware.html#cpu-komponente","title":"CPU-Komponente","text":""},{"location":"22HS/CT1/01_Hardware.html#register","title":"Register","text":"<p>Es gibt 16 Registern, davon sind R0 - R12 f\u00fcr allgemeine Daten zuverf\u00fcgung. Der Stack Pointer (R13) zeigt auf die letzte Adresse des Stacks, der Link Register (R14) zeigt auf die letzte R\u00fccksprung-Adresse, bei Funktionen und der Program Counter (R15) zeigt auf die n\u00e4chste Instruktion, welche ausgef\u00fchrt werden soll.</p> <p></p>"},{"location":"22HS/CT1/01_Hardware.html#arithmetic-logic-unit-alu","title":"Arithmetic Logic Unit (ALU)","text":"<p>Die ALU hat zwei 32-bit Inputs und ein 32-bit Output. Die ALU kann Integer-Arithmetik (Plus, Minus, Multiplikation, Division), ebenfalls k\u00f6nnen And, Or, Not, Xor, right und left Shiften ausgef\u00fchrt werden.</p> <p> </p>"},{"location":"22HS/CT1/01_Hardware.html#flag-register-apsr","title":"Flag Register (APSR)","text":"<p>In diesem Flag stehen Status-Informationen zur letzten Operation</p> <p></p>"},{"location":"22HS/CT1/01_Hardware.html#instruction-set","title":"Instruction Set","text":"<p>Es gibt mehrere Arten von Instructions:</p> <ul> <li>Data transfer</li> <li>Daten von einem Register in ein anderes Register kopieren</li> <li>Daten vom Speicher in Register laden</li> <li>Vom Register in den Speicher speichern</li> <li>Data Processing</li> <li>Arithmetische Operationen</li> <li>Ligische Operatione</li> <li>Shift / Rotate Operationen</li> <li>Control Flow:</li> <li>Branches (Jumps)</li> <li>Function calls</li> <li>Weiteres Instruktionen</li> </ul>"},{"location":"22HS/CT1/01_Hardware.html#program-execution","title":"Program Execution","text":""},{"location":"22HS/CT1/01_Hardware.html#memory-map","title":"Memory Map","text":""},{"location":"22HS/CT1/01_Hardware.html#c-integer-typen","title":"C Integer Typen","text":"<p>Die folgenden Typen sollen in C verwendet werden, da \"normale\" Typen, wie <code>int long</code> Prozessor spezifisch sind.</p> <p></p>"},{"location":"22HS/CT1/01_Hardware.html#multi-byte-integers","title":"Multi-byte Integers","text":"<p>Bei Little Endian ist das Least-Significant-Byte (LSB) an der tiefereren Adresse. ST ARM ben\u00fctzt dieses Format.</p> <p>Bei Big Endian ist das Most-Significant-Byte (MSB) an der tiefsten Adresse.</p> <p></p> <p>Adressen werden aligniert. Half-Words werden auf gerade Adressen aligniert. Words werden auf durch 4 teilbare Adressen aligniert.</p>"},{"location":"22HS/CT1/01_Hardware.html#object-file","title":"Object-File","text":"<p>1111 + 1 = 0000 C=1 O=0</p> <p>0111 + 1 = 1000 C = 0 O = 1</p> <p>1000 - 1 = 0111 C = 0 O =1</p>"},{"location":"22HS/CT1/02_Assembler.html","title":"Assembler","text":"<p>Arm is little endian, meaning that the MSB comes first, the LSB comes last.</p>"},{"location":"22HS/CT1/02_Assembler.html#basic-structure","title":"Basic Structure","text":"<pre><code>                ; code area\n                AREA    MyCode, CODE, READONLY\n\n                ENTRY\nstart           MOVS    R4, #12\n                ADDS    R3, R4, #5\n                B start\n\n                ; data area (writable)\n                AREA    MyData, DATA, READWRITE\nvar_byte        DCB     0x0A, 0x12, 0xFF\nvar_halfword    DCW     0x1234, 0xEEFF\nvar_word        DCD     0x88776655\nspace1          SPACE   256 ; allocates 256 bytes\nspace2          %       256 ; same as above\n\n                ; stack\n                AREA    STACK, NOINIT, READWRITE\nstack_mem       SPACE   0x00000400 ; 0x0000'0400\n</code></pre>"},{"location":"22HS/CT1/02_Assembler.html#data-types","title":"Data Types","text":"<p>There are bytes (<code>DCB</code> = 1 byte), halfwords (<code>DCW</code> = 2 bytes) and words (<code>DCD</code> = 4 bytes). They are layed out with LSB first (little endian)</p> <p>For example, <code>0x1A2B'3C4D</code> is stored as </p> <p>Another restriction is that halfwords addresses have to be divisable by 2 (address ends in even number), and word-addresses by 4 (address ends in <code>0</code>, <code>4</code>, <code>8</code> or <code>C</code>)</p> <p></p> <pre><code>        AREA    example1, DATA, READWRITE\nvar1    DCB     0x1A\nvar2    DCB     0x2B, 0x3C, 0x4D, 0x5E\nvar3    DCW     0x6F70, 0x8192\nvar4    DCD     0xA3B4C5D6\n</code></pre> <p>The code above produces the following memory map:</p> <p></p>"},{"location":"22HS/CT1/02_Assembler.html#structures","title":"Structures","text":""},{"location":"22HS/CT1/02_Assembler.html#jump-tables","title":"Jump Tables","text":"<pre><code>uint32_t result, n;\nswitch (n) {\ncase 0:\nresult += 17;\nbreak;\ncase 1:\nresult += 13;\n//fall through\ncase 3: case 5:\nresult += 37;\nbreak;\ndefault:\nresult = 0;\n}\n</code></pre> <pre><code>NR_CASES        EQU     6\ncase_switch     CMP     R1, #NR_CASES\n                BHS     case_default\n                LSLS    R1, #2          ; * 4\n                LDR     R7, =jump_table\n                LDR     R7, [R7, R1]\n                BX      R7\ncase_0          ADDS    R2, R2, #17\n                B       end_sw_case\n\ncase_1          ADDS    R2, R2, #13\n\ncase_3_5        ADDS    R2, R2, #37\n                B       end_sw_case\n\ncase_default    MOVS    R2, #0\nend_sw_case\n\n                AREA    myData, DATA, READWRITE\njump_table      DCD     case_0\n                DCD     case_1\n                DCD     case_default\n                DCD     case_3_5\n                DCD     case_default\n                DCD     case_3_5\n</code></pre>"},{"location":"22HS/CT1/02_Assembler.html#interrupts","title":"Interrupts","text":"<p>When code wants to react to some event on the system (like a button that's being pressed) then there are two ways to implement this. Either the code can constantly poll the state, checking over and over again if the event occurred. This, however, is inefficient and results in a lot of busy waiting, but it is simple, implicitly synchronised and deterministic.</p>"},{"location":"22HS/CT1/02_Assembler.html#system-exceptions-and-interrupts","title":"System Exceptions and Interrupts","text":"<p>Another solutions are interrupts: Arm processor differentiate between system exceptions and interrupts. System exceptions are errors created by events from the CPU (like a fault or the restart of the processor). Interrupts are created by events from peripherals or by a library.</p> <p>The following system exceptions exists. The interrupts from 0 until 239 are defined and are located after the <code>SYSTICK</code> system exception. (eg. <code>IRQ14</code> has the exception number <code>30</code> at the address  <code>120=0x78</code>)</p> <p></p>"},{"location":"22HS/CT1/02_Assembler.html#interrupt-table","title":"Interrupt Table","text":"<p>In the interrupt table is written where the processor has to jump if an interrupt or a system exception occurred. The interrupt table starts at the address <code>0x00</code>, but there is no system exception 0. This is because at the address <code>0x00</code> the initial stack pointer is written. This results in when the CPU starts, it first initialise the stack with the initial stack pointer and then calls the reset handler which coincidentally is at the next address.</p>"},{"location":"22HS/CT1/02_Assembler.html#execution-of-an-interrupt-or-system-exception","title":"Execution of an Interrupt or System Exception","text":"<p>The cpu checks when calling <code>BX LR</code> if the magic value <code>EXC_RETURN=0xFFFF'FFF9</code> is found in the <code>LR</code> register. If this is the case, then the previously saved registers are restored from the stack.</p> <p>The following image shows a interrupt vector table.</p> <p></p> <p>The <code>startup_ctboard.s</code> initialises  this interrupt vector table and sets default handler (marked with <code>[WEAK]</code> to tell the linker only use the default handler if no other definition exists).</p> <p>The following is a diagram showing the states of the interrupt handler. </p> <p></p> <ul> <li>Inactive: Exception is not active and not pending</li> <li>Pending: Exception occurred and is waiting to be handled by the CPU</li> <li>Active: Exception is being handled and has not finished yet</li> <li>Active and Pending: An exception is being handled by the CPU and another exception occurred and is waiting to be handled.</li> </ul> <p>To model all possible states, two bits are necessary, one for if an interrupt is pending and one if the interrupt is active.</p> <p>The following diagram shows the two bits and an interrupt request bit. When the <code>IRQn</code> goes to high and interrupt occured then the Interrupt Controller sets <code>IPn</code> to high. As soon as the CPU has finished the context switch, <code>IAn</code> will be set to hight by the <code>CPU</code> and the interrupt controller will set <code>IPn</code> to high. The <code>IRQn</code> needs to be reset by the interrupt handler.</p> <p> </p> <p>If the interrupt handler doesn't reset the <code>IRQn</code> then the interrupt controller will think that another interrupt is pending and the CPU is caught in an infinite loop.</p> <p></p>"},{"location":"22HS/CT1/02_Assembler.html#activate-and-deactivate-interrupts","title":"Activate and Deactivate Interrupts","text":"<p><code>PRIMASK</code> is a Bit, which when set to <code>0</code> , all interrupts are disabled. The bit can be set with <code>CPSID</code> and unset <code>CPSIE</code>.</p>"},{"location":"22HS/CT1/02_Assembler.html#priority-levels","title":"Priority Levels","text":"<p>Each exception has a priority level. A lower priority level translates to a higher priority (<code>-1</code> has a higher priority than <code>10</code>)</p> <p>To set the priority a 4-bit value (on the Cortext-M0 a 2-bit value) can be written to an address between <code>0xE000'E400</code> and <code>0xE000'E4EC</code>.  Only interrupts can be prioritised manually, system exceptions already have predefined priorities.</p> <p></p> <p></p> <p>In the diagram above, a situation where either <code>ISR0</code> or <code>ISR2</code> has been prioritised. If <code>ISR2</code> is prioritised then <code>ISR0</code> is paused (but its active bit is still set) and <code>ISR2</code> is run.</p> <p>Below is a more complete diagram. It assumes the following priorities: <code>RQ0</code> <code>PL0</code> = <code>0x2</code>, <code>IRQ1</code> <code>PL1</code> = <code>0x3</code> and <code>IRQ2</code> <code>PL2</code> = <code>0x1</code></p> <p></p>"},{"location":"22HS/CT1/02_Assembler.html#interrupts-in-c","title":"Interrupts in C","text":"<p>There is a library for C to allow the user to know have to use registers directly but rather just call functions.</p> <p></p>"},{"location":"22HS/CT1/02_Assembler.html#data-consistency","title":"Data Consistency","text":"<p>To fix this issue, the two <code>write_byte(...)</code> calls should be wrapped in <code>__disable_irq()</code> and <code>__enable_irq()</code>.</p>"},{"location":"22HS/CT1/03_Functions.html","title":"Functions","text":"<p>With <code>BL mark</code> the processor will jump to the given <code>mark</code> and store the address of the caller in the link register <code>LR</code>. With <code>BLX Rx</code> the processor will jump to the address in the given register and storing the address in the link register. When the subroutine is done, it can return with <code>BX LR</code></p> <pre><code>                    BL  display_routine\n\ndisplay_routine\n                    PUSH {LR}       ; save LR register\n                    ; do display stuff\n                    POP {PC}        ; restore LR register into the PC register\n</code></pre>"},{"location":"22HS/CT1/03_Functions.html#stack","title":"Stack","text":"<p>With <code>PUSH</code> can the contents of registers be pushed onto the stack. With <code>POP</code> can register be popped </p> <p>The following example shows <code>PUSH {R0}</code></p> <p></p>"},{"location":"22HS/CT1/03_Functions.html#parameters","title":"Parameters","text":"<p>This tables shows the trade-offs of different techniques for passing a parameter. It also partly explains why AAPCS is designed in the way it is.</p> Register Global Variable Stack Speed ++ -- -- Flexibility -- -- ++ Maintanance -- -- ++ Recursion -- -- ++"},{"location":"22HS/CT1/03_Functions.html#pass-by-value","title":"Pass-by-value","text":"<pre><code>AREA exData,DATA,...\n\nAREA exCode,CODE,...\n\n        MOVS R1,#0x03\n        BL double\n        MOVS ...,RO\n\ndouble\n        LSLS RO,R1, #1  \n        BX LR\n</code></pre>"},{"location":"22HS/CT1/03_Functions.html#pass-by-reference","title":"Pass-by-reference","text":"<pre><code>TLENGTH EQU 16\n\nAREA exData,DATA,...\nplTable SPACE TLENGTH\n\nAREA exCode,CODE, ...\n\n        LDR RO,=plTable\n        MOVS R1,#TLENGTH\n        BL doubleTableValues\n\ndoubleTableValues\n        MOVS R2,#0\n\nloop    LDRB R4,[RO,R2]\n        LSLS R4,R4,#1\n        STRB R4, [RO,R2]\n        ADDS R2,#1\n        CMP R2,R1\n        BLO loop\n        BX LR\n</code></pre>"},{"location":"22HS/CT1/03_Functions.html#pass-by-global-variables","title":"Pass-by-global-variables","text":""},{"location":"22HS/CT1/03_Functions.html#pass-by-stack","title":"Pass-by-stack","text":""},{"location":"22HS/CT1/03_Functions.html#aapcs","title":"AAPCS","text":"<p>The registers R0 - R3 can be used for passing arguments or return values. The callee can change these. R4-R11 have to be preserved. If a function changes these then their original value has to be restored before the function jumps back.</p> <p></p> <p>The caller has to do the following:</p> <p></p> <p>The callee has the following tasks:</p> <p></p> <p>The stack might look like this if the contract specified above is met. A stack frame is a part of the stack </p> <p></p>"},{"location":"22HS/CT1/03_Functions.html#local-variables","title":"Local Variables","text":""},{"location":"22HS/CT1/04_Toolchain.html","title":"Tool Chain","text":"<p>A tool chain are the tools required to build an executable from the source code. There are both native and cross compiler tool chain. Native tool chains run on the same environment which the software will run on later, while a cross compiler creates an executable which runs in a different environment.</p>"},{"location":"22HS/CT1/04_Toolchain.html#modules","title":"Modules","text":"<p>Each c (or assembler) file is viewed as a module and is processed one-by-one by the preprocessor, compiler and the assembler. All compiled modules are combined by the linker.</p>"},{"location":"22HS/CT1/04_Toolchain.html#c","title":"C","text":""},{"location":"22HS/CT1/04_Toolchain.html#declaration-vs-definition","title":"Declaration vs Definition","text":"<p>The following code only defines the names of a funciton, variable or struct. But their details aren't known to the compiler when compiling this module. (E.g. accessing a field of a struct wouldn't be possible)</p> <pre><code>uint32_t square(uint32_t v);    // square function defined elsewhere\nextern uint32_t counter;        // counter variable defined elsewhere\nstruct S;                       // struct S type defined elsewhere\n</code></pre> <p>The following code defines the a function, variable or struct with their details.</p> <pre><code>uint32_t square(uint32_t v) { ... }     // square function definition\nuint32_t counter;                       // counter variable definition\nstruct S { ... };                       // struct S type definition\n</code></pre>"},{"location":"22HS/CT1/04_Toolchain.html#header-files","title":"Header Files","text":"<pre><code>// square.h\n#ifndef _SQUARE_H_ // incl.-\n#define _SQUARE_H_ // guard\n// declaration of square\nuint32_t square(uint32_t v);\n#endif // end of incl.-guard\n</code></pre> <p>The matching c file is:</p> <pre><code>// square.c\n#include \"square.h\"\n// definition of square\nuint32_t square(uint32_t v)\n{\nreturn v*v;\n}\n</code></pre>"},{"location":"22HS/CT1/04_Toolchain.html#linkage-reference","title":"Linkage Reference","text":"C names ASM Symbols OBJ Symbols AXF Executables external linkage (export) <code>extern</code> (default) <code>EXPORT</code>-labels for exported labels Global external linkage (import) <code>extern</code>(default) <code>IMPORT</code>-labels for imported labels References internal linkage with <code>static</code> normal labels Local no linkage local variables - -"},{"location":"22HS/CT1/04_Toolchain.html#libraries","title":"Libraries","text":"<p>Libraries can be dynamically or statically linked. </p> <p>A static linked executable contains all required libraries. While this results in a bigger file as every executable needs to include the same libraries, it also prevents DLL-Hell.</p>"},{"location":"22HS/CT1/05_Optimierung.html","title":"Optimierung","text":""},{"location":"22HS/CT1/05_Optimierung.html#architekturen","title":"Architekturen","text":"<ul> <li>von Neumann Architecture</li> <li>Harvard Architecture</li> </ul>"},{"location":"22HS/CT1/05_Optimierung.html#instruction-set-architecture","title":"Instruction Set Architecture","text":"<ul> <li>RISC</li> <li>CISC </li> </ul>"},{"location":"22HS/CT1/05_Optimierung.html#pipelining","title":"Pipelining","text":"<p>Instead of fetching, decoding and executing each instruction in sequence, the CPU can already start fetching the next instruction while decoding the current instruction.</p> <p></p> <p>However, if multiple stage run simultaneously then each instruction needs to be finished at the same time.   </p> <p></p> <p>In the example above, without pipelining the CPU could execute \\(\\frac {1s}{15ns} = 83.3\\cdot 10^6 \\frac T {sec}\\). With pipelining the cpu can execute \\(\\frac {1s}{5ns} = 200\\cdot 10^6 \\frac T {sec}\\). This results in a 140% increase in performance. $$ InstructionsPerSecond&amp;=\\frac 1{InstructionDelay}\\ InstructionsPerSecond &amp;= \\frac 1 {MaxStageDelay} $$ </p>"},{"location":"22HS/CT1/05_Optimierung.html#problems","title":"Problems","text":"<p>In the optimal case, the CPU can move each instruction one stage forward per cycle.</p> <p></p> <p>But not each instruction takes only one cycle, like <code>LDR</code> or instruction changing the <code>PC</code>. This can be mitigated to a degree by out of order execution. By duplicating some elements of the execution unit, the CPU can reorder the <code>LDR</code> instruction with an earlier instruction which can run simultaneously. When the requested value is required, the value will already be loaded.</p> <p></p>"},{"location":"22HS/CT1/05_Optimierung.html#branching","title":"Branching","text":""},{"location":"22HS/Communication3/COM3.html","title":"COM3","text":""},{"location":"22HS/Communication3/COM3.html#4-principles-of-negotiation","title":"4 Principles of Negotiation","text":"<ol> <li>Separate the people from the problem</li> <li>focus on interests, not positions</li> <li>invent options for mutual gain</li> <li>insist on objective criteria</li> </ol>"},{"location":"22HS/Communication3/COM3.html#summary","title":"Summary","text":"<p>Das Ziel einer Zusammenfassung ist es, wesentliche Aussagen, zentrale Argumente und Grundaufbau eines Textes in knapper Form darzustellen. Eine Zusammenfassung muss ohne den grundlegenden Text verst\u00e4ndlich sein.</p> <p>Es sollten folgende Frage beantwortet werden. Jenach Textsorte und Zielpublikum, gibt es ein Schwerpunkt auf gewisse Frage.</p> <ul> <li>Was? (Thema/Ergebnisse/Kernaussagen)</li> <li>Wer? (Autor:innen/Involvierte)</li> <li>Warum? (Gr\u00fcnde/Zusammenh\u00e4nge)</li> <li>Wozu? (Ziele/Absichten)</li> <li>Wie? (Methoden/Prozesse)</li> <li>evtl. Wo? &amp; Wann? (je nach Kontext / Basistextart)</li> </ul> <p>Beim Zusammenfassen soll zuerst stichwortartig die wichtigsten Kernaussagen zusammengefasst und danach einen Satz daraus gebildet werden soll. </p> <p>Eine Zusammenfassung soll im Pr\u00e4sens sein und keine Nacherz\u00e4hlung (keine Infos zum zeitlichen Ablauf oder handelnden Personen). Zudem soll eine Zusammenfassung nicht wertend sein.</p>"},{"location":"22HS/Communication3/COM3.html#aufbau","title":"Aufbau","text":"<p>1) Ausgangslage, Thema, die Angabe des Ziels bzw. der     untersuchten Fragestellung des Basistexts, Textsorte 2) eine Angabe der genannten Methode(n) zur Beantwortung der     Fragestellung 3) die Verdeutlichung der Resultate 4) eine Diskussion (Einordnung) der Ergebnisse, ggf. einen     abschliessenden Satz zur Anwendung</p>"},{"location":"22HS/Communication3/COM3.html#aufbau-in-com3","title":"Aufbau in COM3","text":"<p>Affiliation ist ZHAW</p>"},{"location":"22HS/Communication3/COM3.html#argumentation","title":"Argumentation","text":""},{"location":"22HS/Communication3/COM3.html#lwn-2","title":"LWN 2","text":"<ul> <li>20 min / 4-5 people</li> <li>speak freely, but notes are allowed (A5 sheet)</li> <li>The lecturer might send a message to a participant with instructions which needs to be incomperated</li> <li>Harvard Principles need to be incorporated </li> <li>Don't use every argument at the same time. The participants should stick to the current topic</li> <li>CEO should welcome everybody and state the aim of the meeting</li> <li>Participants should be introduced with their role that the prof knows who does what</li> </ul> <p>Preperation:</p> <ul> <li>What is your own position?</li> <li>What is your bottom line?</li> <li>Where are you prepared to compromise?</li> <li>What is the minimal goal?</li> <li>What is the maximal goal?</li> <li>Review the Harvard Principles</li> </ul>"},{"location":"22HS/Communication3/COM3.html#chemical-engineer-notes","title":"Chemical Engineer - Notes","text":"<ul> <li>Position: With my recently earned degree, I'm extremely cautious about the environment. The fact that the supplier knew about the pollution doesn't help. I think that the company should be transparent about this issue. </li> </ul> <p>My trust in the supplier is low and I rather change supplier than continuing working with the current one</p> <ul> <li> <p>Bottom line: Change supplier and tell the public and employees about it. The river shouldn't be polluted and the slightly toxic gas should be filtered</p> </li> <li> <p>Minimal Goal: The supplier either has to be dropped or change its process immediately (ultimatum) </p> </li> <li> <p>Maximal Goal: In addition to changing the supplier, a company internal memo should be sent to inform employees about this grave misconduct of our partner. Along this memo, a press release should be released which states the facts and promises changes (aka dropping the supplier). Both things have to be done immediately.</p> </li> </ul>"},{"location":"22HS/Communication3/COM3.html#knowledge","title":"Knowledge","text":"<ul> <li>About 25 tons of acid waste drains into a river near the Chinese plant every   year. This waste is an inevitable part of the manufacturing process. It kills   animal and plant life for some distance downstream.</li> <li>Slightly toxic gas is released, but nobody seems to notice, probably because   the plant is in a major industrial region.</li> <li>The gas would have to be filtered, adding a further 5% to production costs.</li> </ul>"},{"location":"22HS/Communication3/COM3.html#position","title":"Position","text":"<ul> <li>How serious the problem is: </li> <li>very serious: there is only one planet</li> <li>Which actions should be taken</li> <li>Tell employees and the public (customers)</li> <li>drop the supplier (or maybe demand change from the supplier)</li> </ul>"},{"location":"22HS/Communication3/COM3.html#arguments","title":"Arguments","text":"<ul> <li>Tell the public</li> <li>This scandal will eventually come out. We should tell our side of the story to control the narrative</li> <li>Raise awareness about our company's ecological mission by announcing swift actions</li> <li>No news is bad news</li> <li>Use an ad campaign to control the narative</li> <li>If reported by the independent media, the story could tarnish our brand a lot more</li> <li>To the employee</li> <li>They have right to know (they might work for us because we're brand ourselves as ecological)</li> <li>They trust us to lead this ecological oriented company actually ecological<ul> <li>Loosing that trust could lead to strikes and mass-quitting. This can be averted by informing them about the situation and future plans to remedy the issue</li> </ul> </li> <li>Change supplier</li> <li>The supplier can't be trusted as they already knowingly polluted the river</li> <li>Sourcing batteries from multiple supplier could lead to more leverage while negotiation leading to lower prices. The supplier could also be in China. Eventually the problematic supplier could be dropped.<ul> <li>Future prove: If something similar happens again, the supplier could be dropped (relatively) quickly</li> </ul> </li> <li>Ultimatum to supplier</li> <li>Find another supplier to have more leverage</li> </ul>"},{"location":"22HS/Communication3/COM3.html#con-arguments","title":"Con Arguments","text":"<ul> <li>Changing the mission statement</li> <li>Customers have bought our products thinking they bought something green</li> <li>Employees work for us because they identify with our brand</li> <li>Waiting with the announcement until after the IPO</li> <li>Will crash the stock price. We better get it over with now</li> <li>Trust of employees, customers and shareholders after the IPO</li> </ul>"},{"location":"22HS/Communication3/COM3.html#numbers","title":"Numbers","text":"<ul> <li>1x Scooter: 900CHF / bom: 400 CHF (with battery)</li> <li>profit: +10 million</li> <li>revenue impact from making it public: -8 milion / -10%</li> <li> <p>After Z\u00fcriScoot: 200 million revenue / 30 million profit</p> </li> <li></li> </ul>"},{"location":"22HS/Communication3/Report%20Hosting%20the%20World%20Cup.html","title":"Report Hosting the World Cup","text":""},{"location":"22HS/Communication3/Report%20Hosting%20the%20World%20Cup.html#introduction","title":"Introduction","text":"<p>Following the considerable economic and social benefits of hosting the Olympics in 2008, the Chinese government is keen to make a bid to host the 2026 Football World Cup. This report analyses the positive and negative impacts of hosting this tournament in two other countries: the USA and South Africa.</p>"},{"location":"22HS/Communication3/Report%20Hosting%20the%20World%20Cup.html#findings","title":"Findings","text":"<p>In the USA the economic impact of the 1994's World Cup was -$9.26bn instead of the projected +$4bn, a difference of $13.26bn. However, the revenue from football has increased drastically year over year. This has dampened the difference between the projected and the actual economic impact.</p> <p>In South Africa the story is similar: The original budget for the World Cup in 2010 was estimated to $421m. The event was over budget by 1257% and cost the country $5.16bn. During the World Cup 220'000 soccer fans visited South Africa, increasing the awareness and spreading its culture.</p>"},{"location":"22HS/Communication3/Report%20Hosting%20the%20World%20Cup.html#conclusion","title":"Conclusion","text":"<p>Analysing these past World Cup and drawing conclusions from it, the Chinese World Cup in 2026 will be likely over budget as well. In exchange for hosting the World Cup, Chine will be able to improve it's public image and receive stellar publicity.</p>"},{"location":"22HS/Communication3/Report%20Hosting%20the%20World%20Cup.html#recommendations","title":"Recommendations","text":"<p>The planing committee should set out a clear budget and use realistic estimates based on past World Cups. This should contain the run away costs. The event will doubtless still be over budget, but to a lesser degree.</p> <p>It is advisable to create a clear marketing message to extract the maximal amount of positive exposure possible.</p> <p>Notes: Recommedations: Multiple Options can be shown. Like If the the government tries to make money, the shouldn't run the event, however if they want to promote the soccer culture and improve the popularity of the Chinese government, then they should</p>"},{"location":"22HS/Communication3/Report%20mPHone%208%20Plus.html","title":"Report - mPHone 8 Plus","text":""},{"location":"22HS/Communication3/Report%20mPHone%208%20Plus.html#introduction","title":"Introduction","text":"<p>The aim of this report is to briefly describe the technical problem that forced the project team to delay the launch of the mPhone 8 Plus, and to identify the main mistakes during the project. Finally, a recommendation will be made regarding measures to improve the procedure.</p>"},{"location":"22HS/Communication3/Report%20mPHone%208%20Plus.html#findings","title":"Findings","text":"<p>During the late stages of development, testers found, that ringing the vibrator motor can cause the screen to shatter. Unfortunately, this behaviour can only be reproduced when calling the phone, but not by regular usage.</p> <p>This can be linked to a misunderstanding between the hardware and software team. The developer working on this received a previous data sheet for a less powerful motor. However, the motor was exchanged for a different version due to it's unavailability. The new motor happened to be more powerful and was only supposed to be used at 80% of it's power. An other contributing factor was the rushed development, which caused the bug to be unnoticed until user testing. </p>"},{"location":"22HS/Communication3/Report%20mPHone%208%20Plus.html#conclusion","title":"Conclusion","text":"<p>If the planing had allotted more time for the development, the bug could have been caught earlier and wouldn't have delayed the project. The same goes for the communication brake-down, which caused the bug in the first place. Both the management and engineering hold part of the blame, as both teams could have avoided the issue with the proper response.</p>"},{"location":"22HS/Communication3/Report%20mPHone%208%20Plus.html#recommendations","title":"Recommendations","text":"<p>It's recommended to ensure that the allotted time is sufficient for the development by adding a buffer. The buffer can be used for unplanned hurdles and added testing time. Additionally the communication between teams should be improved by holding company-wide status meetings.</p>"},{"location":"22HS/Communication3/Zusammenfassung%20Hippocratic%20Oath.html","title":"Zusammenfassung - A Hippocratic Oath for Technoligists","text":"<p>Im Artikel \"A Hippocratic Oath for Technoligists\" wird ein Eid definiert, dessen Ziel es ist,  das ethische Verantwortungsbewusstsein von Technologen:innen zu st\u00e4rken.</p> <p>Der Eid basiert in seinen Grunds\u00e4tzen auf dem proaktiven Verst\u00e4ndnis von ethischer Verantwortung und dass die Wahrheit \u00fcber die M\u00f6glichkeit, den Nutzen und negativen Auswirkungen einer Technologie kommuniziert werden. Weiter, dass bei Konfrontationen mit ethischen Herausforderungen verantwortungsbewusst gehandelt wird.</p> <p>2: Es ist wichtig, den Unterschied zwischen, legal oder profitabel, und ethisch korrekt zu verstehen. Neben legal und ethisch gibt es auch vern\u00fcnftig. Selbst wenn etwas rechtlich erlaubt oder vern\u00fcnftig ist, bedeutet dies nicht, dass es auch ethisch ist.</p> <p>Ein Eid kann als eine positive oder negative Verf\u00fcgung umgesetzt werden, respektive ob etwas untersagt ist oder ob Beobachtungen gemeldet werden m\u00fcssen.</p> <p>Auch T\u00e4uschung durch falsche Implikationen und unvollst\u00e4ndige oder unverst\u00e4ndliche Informationen sind Eides widrig.</p> <p>3: Der Eid sollte f\u00fcr alle moralische Dilemmas eine Antwort bieten, klar und einfach verst\u00e4ndlich sein und die Handlungsf\u00e4higkeit und Verantwortung des Technologisten:innen sollte im Zentrum stehen.</p> <p>4: Der Eid fordert, dass Technologen:innen ethische Auswirkungen verstehen. Weiter muss die Wahrheit gesprochen werden, auch wenn dies rechtlich vermeidbar w\u00e4re. Ebenfalls wird gefordert, dass Verantwortungsbewusst gehandelt wird. Falls verantwortungsloses Handeln beobachtet wird, m\u00fcssen n\u00f6tige Schritte unternommen werden, dies zu korrigieren. Eine Firma kann Unterst\u00fctzung anbieten, in dem unmoralisch empfundene Arbeit nicht ausgef\u00fchrt werden muss.</p> <p>5: Als n\u00e4chstes muss der Eid an Schulen und in industriellen Gemeinschaften verteilt werden. Dies wird kaum die letzte Version des Eids sein und Vorschl\u00e4ge von Vereidigten k\u00f6nnen \u00fcbernommen werden. Daher ist jeder eingeladen, sich zu vereidgen zu lassen.</p>"},{"location":"22HS/Communication3/Zusammenfassung%20Hippocratic%20Oath.html#alt","title":"Alt","text":"<p>3b:3Der Eid sollte f\u00fcr alle moralische Dilemmas eine Antwort bieten, klar und einfach verst\u00e4ndlich sein und die Handlungsf\u00e4higkeit und Verantwortung des Technologisten:innen sollte im Zentrum stehen.</p> <p>Vereidigte Personen bem\u00fchen sich die moralischen Auswirkungen der Technologien zu verstehen. Weiter sagen sie die Wahrheit, kl\u00e4ren bei Unwissenheit auf, boykottieren verwerfliche Arbeit und handeln bei unmoralischen Verhalten.</p> <p>4b:</p> <p>Der letzte Teil verlangt sowohl Zusage zum negativen Appell, f\u00fcr ethisch verwerflich befundene Handlungen zu verweigern, wie auch zum positiven Appell, anderer Fehler oder Vergehen anzusprechen und nach M\u00f6glichkeit zu korrigieren. Durch diese starke Aufforderung k\u00f6nnen Firmen konkrete Massnahmen zur Einhaltung ihres Ehrenkodex ergreifen.</p> <p>5: Diese Arbeit soll als erster Schritt auf dem Weg zu gr\u00f6sserem Bewusstsein \u00fcber die ethischen \u00dcberlegungen zu Technologie dienen. Zun\u00e4chst soll der Eid innerhalb akademischer und industrieller Kreise verbreitet werden. Personen, die den Eid schw\u00f6ren, sollen dessen Entwicklung durch Debatte und Anwendung vorantreiben.</p>"},{"location":"22HS/Communication3/Zusammenfassung%20Hippocratic%20Oath.html#_1","title":"Zusammenfassung - A Hippocratic Oath for Technoligists","text":""},{"location":"22HS/Communication3/Zusammenfassung%20Projektmanagment.html","title":"Zusammenfassung - A short course in project management","text":""},{"location":"22HS/Communication3/Zusammenfassung%20Projektmanagment.html#ausgangslage","title":"Ausgangslage","text":"<p>Es geht darum, wie man die drei Constraints balancieren kann.</p> <ul> <li>Was? (Thema/Ergebnisse/Kernaussagen)</li> <li>Wer? (Autor:innen/Involvierte)</li> <li>Warum? (Gr\u00fcnde/Zusammenh\u00e4nge)</li> <li>Wozu? (Ziele/Absichten)</li> <li>Wie? (Methoden/Prozesse)</li> <li>evtl. Wo? &amp; Wann? (je nach Kontext / Basistextart)</li> </ul>"},{"location":"22HS/Communication3/Zusammenfassung%20Projektmanagment.html#zusammenfassung","title":"Zusammenfassung","text":"<p>Jedes Projekt hat drei essenzielle Einschr\u00e4nkungen: einen Zeitrahmen, Ressourcen und den Umfang. Dies wird auch das Projekt Dreieck genannt, in welchem jede der Einschr\u00e4nkungen eine Ecke des Dreiecks darstellt.</p> <p>Der Zeitrahmen stellt dar, bis wann ein Projekt komplett sein soll. F\u00fcr das Projekt werden Ressourcen, wie Materialien, Equipment und Mitarbeiter, ben\u00f6tigt. Der Umfang definiert, welche Funktionen bis am ende des Zeitrahmens komplett sein sollen. Dabei wird zwischen dem Produkt Scope, bzw. eine Spezifikation, und dem Projekt Scope, was die Arbeit beschreibt, welche f\u00fcr das Produkt ben\u00f6tigt wird.</p>"},{"location":"22HS/HM1/1_Zahlen.html","title":"Gleitkommazahlen","text":""},{"location":"22HS/HM1/1_Zahlen.html#mantis","title":"Mantis","text":"\\[ x=m\\cdot B^e\\\\ 12000 = 1.2 \\cdot 10^4 \\] <p>Dabei gilt \\(x\\in \\R\\), die Mantis  \\(m \\in R\\), die Basis \\(B \\in \\N\\)  und den Exponent \\(e\\in \\Z\\) </p> <p>Eine Zahl kann folgendermassen Dargestellt werden: $$ m=\\pm0.m_1m_2m_3m_n\\ e=\\pm e_1e_2e_3e_l $$ Dabei ist der Bereich der darstellbaren Zahlen folgendermassen:  $$ M={x \\in \\R \\vert x=\\pm0.m_1m_2m_3...m_n\\cdot B^{\\pm e_1e_e...e_m}} $$</p> <p>Eine Zahl wird machinendarstellbar genannt, wenn \\(m_1\\neq 0\\) ist</p> <p>Die Anzahl Zahlen kann mit \\(2\\cdot B^{n-1}\\cdot B^e+1\\), wenn der Exponent und Mantis ein Vorzeichen hat. Falls die Mantis kein Vorzeichen hat, gibt es: \\(B^{n-1}\\cdot B^e + 1\\).</p>"},{"location":"22HS/HM1/1_Zahlen.html#minimum-und-maximum","title":"Minimum und Maximum","text":"\\[ x_{max}=B^{e_{max}}-B^{e_{max}-n}=(1-B^{-n})\\cdot B^{e_{max}}\\\\ x_{min}=B^{e_{min}-1} \\] <p>Hier ist ein Beispiel: $$ B=2, n=4, 0 \\le e \\le 3\\ x_{max}=0.1111_2\\cdot 2^3=111.1_2=7.5_{10}\\ x_{max}=2^3-2^{3-4}=8-0.5=7.5_{10}\\ \\ x_{min}=0.1000_2 \\cdot 2^0 = 0.1_2=0.5_{10}\\ X_{min}=2^{0-1}=2^{-1}=0.5_{10} $$</p>"},{"location":"22HS/HM1/1_Zahlen.html#rundungsfehler","title":"Rundungsfehler","text":"<p>Der absolute Fehler bei einer Rundung von \\(x\\) zu der N\u00e4herung \\(\\tilde x\\) ist definiert als \\(\\vert \\tilde x - x \\vert\\). Der relative Fehler ist \\(\\left\\vert \\frac{\\tilde x - x}{x} \\right\\vert\\).</p> <p>Wenn \\(\\tilde x=rd(x)\\) gilt, wobei \\(rd(x)\\) die Zahl \\(x\\) rundet, dann ist der h\u00f6chste absolute Fehler: \\(\\vert rd(x)-x\\vert \\le 0.\\underbrace{00...00}_{n}\\frac B 2\\cdot B^e=\\frac B 2\\cdot B^{e-n-1}\\)</p> <p>Als Beispiel mit der Basis \\(B=10\\), eine siebenstellige Mantisse \\(n=7\\) und \\(x=180.1234567=0.1801234567\\cdot 10^3\\): \\(\\vert rd(x)-\\tilde x\\vert \\le 0.\\underbrace{0000000}_{n=7}5\\cdot 10^3=0.5\\cdot 10^{3-7}=0.5\\cdot10^{-4}\\)</p>"},{"location":"22HS/HM1/1_Zahlen.html#konditionierung-fortpflanzung-von-fehler","title":"Konditionierung: Fortpflanzung von Fehler","text":"<p>Der absolute Fehler von einer Operation \\(f(x)\\)  kann als \\(|f'(x)|\\cdot |\\tilde x - x|\\) angen\u00e4hert werden. Beim relativen Fehler gilt \\(\\frac{|f'(x)|\\cdot|x|}{f(x)}\\cdot \\frac{|\\tilde x - x|}{|x|}\\) </p> <p>Den Faktor \\(K:= \\frac{|f'(x)|\\cdot|x|}{f(x)}\\) nennt sich Konditionszahl und sagt aus, um wie viel sich der relativen Fehler von \\(x\\) bei einer Funktionsauswertung von \\(f(x)\\) ver\u00e4ndert. Dabei wird zwischen gut konditionierten Problemen, bei welchen die Konditionszahl klein ist, und schlecht konditionierten Problemen, bei welchen die Konditionszahl gross ist, unterschieden.</p>"},{"location":"22HS/HM1/1_Zahlen.html#fehlerfortpflanzung-bei-summation","title":"Fehlerfortpflanzung bei Summation","text":"<p>F\u00fcr \\(f(x)=x+c\\), gilt \\(f'(x)=1\\) und folgendes f\u00fcr \\(K\\): $$ K=\\frac{|x|}{|x+c|} $$ An dieser Formel kann das Problem der Ausl\u00f6schung beobachtet werden: Wenn von \\(x\\) eine \u00e4hliche Zahl \\(c\\) subrahiert wird, dann wird \\(K\\) sehr gross. </p> <p>Oder allgemeiner formuliert, wird von einer Zahl eine zweite \u00e4hnliche grosse Zahl subtrahiert, wird der relative Fehler sehr hoch. Dies kann zum Teil durch geschicktes Umformen vermieden werden. Meist entstehen aber andere Ausl\u00f6schungs-Zentren.</p>"},{"location":"22HS/HM1/1_Zahlen.html#fehlerfortpflanzungs-tabelle","title":"Fehlerfortpflanzungs-Tabelle","text":""},{"location":"22HS/HM1/1_Zahlen.html#maschinengenauigkeit-max-relativer-fehler","title":"Maschinengenauigkeit (max. relativer Fehler)","text":"<p>Die Maschinengenauigkeit ist der maximale relative Fehler, der beim Runden entstehen kann. $$ eps = \\frac B 2\\cdot B^{-n}=\\frac 1 2 \\cdot B^{1-n} $$</p> <p>\\(eps\\) kann auch definiert werden, als die kleinste Zahl bei der \\(1+eps&gt;1\\) noch gilt</p>"},{"location":"22HS/HM1/1_Zahlen.html#iec-ieee-gleitkommazahlen","title":"IEC / IEEE Gleitkommazahlen","text":"<p>IEEE definiert eine <code>single</code> Gleitkommazahl, welche 32bit lang ist und das folgende Schema besitzt:</p> <p>Ebenfalls gibt es eine <code>double</code> Gleitkommazahl, welche aus 64bit besteht und folgendes Schema besitzt: </p>"},{"location":"22HS/HM1/2_Nullstellen.html","title":"Nullstellen","text":""},{"location":"22HS/HM1/2_Nullstellen.html#fixpunktiteration","title":"Fixpunktiteration","text":"<p>F\u00fcr das ben\u00fctzten der Fixpunktiteration muss die Gleichung in der Fixpunktform \\(F(x)=x\\) sein. $$ x_{n+1}=F(x_n) $$</p> <p>Damit die Fixpunktiteration zum Resultat konvergiert, muss f\u00fcr die Ableitung \\(F'(x)&lt;1\\)  gelten. Dies wird auch im Banachscher Fixpunktsatz wiedergespiegelt.</p>"},{"location":"22HS/HM1/2_Nullstellen.html#banachscher-fixpunktsatz","title":"Banachscher Fixpunktsatz","text":"<p>TODO: Voraussetzungen repetieren</p> <p>Es gilt folgendes f\u00fcr \\(F: [a, b] \\to [a, b]\\) und die Konstante \\(\\alpha \\in ]0, 1[\\) $$ |F(x) - F(y)|\\le \\alpha\\cdot |x - y| \\text{ wobei gilt: } x, y\\in [a, b]\\ \\text{oder}\\ \\frac{|F(x)-F(y)|}{|x - y|} \\le \\alpha $$ In Deutsch heisst dies, dass die Differenz \\(F(x) - F(y)\\) nie gr\u00f6sser als \\(x-y\\) sein darf, oder dass die Steigung nicht gr\u00f6sser als \\(1\\) darf sein und muss gr\u00f6sser als 0 sein.</p> <p>Wenn dies gegeben ist, </p> <ul> <li>hat \\(F\\) genau einen Fixpunkt \\(\\overline x\\) in \\([a, b]\\)</li> <li>konvergiert die Fixpunktiteration \\(x_{n+1}=F(x_n)\\) gegen \\(\\overline x\\) f\u00fcr alle Startwerte \\(x_0\\in [a, b]\\)</li> <li>Die a-priori und a-posteriori Absch\u00e4tzungen gelten</li> </ul> <p>\\(\\alpha\\) kann auch als die gr\u00f6sstm\u00f6gliche Steigung definiert werden: $$ \\alpha \\in ]0, 1[\\ \\alpha =\\max_{x_0\\in[a, b]} |F'(x_0)| $$</p>"},{"location":"22HS/HM1/2_Nullstellen.html#newton-verfahren","title":"Newton-Verfahren","text":"<p> $$ x_{n+1}=x_n-\\frac{f(x_n)}{f'(x_n)} $$ Um sicherzustellen, dass das Newton-Verfahren f\u00fcr einen Startwert \\(x_0\\) zum Resultat konvergiert, sollte die folgende Bedingung zutreffen: $$ \\left|\\frac{f(x) \\cdot f''(x)}{[f'(x)]^2}\\right|&lt; 1  $$ Diese Bedingung wird typischerweise f\u00fcr den Startwert \\(x_0\\) \u00fcberpr\u00fcft.</p>"},{"location":"22HS/HM1/2_Nullstellen.html#vereinfachtes-newton-verfahren","title":"Vereinfachtes Newton-Verfahren","text":"<p>Beim vereinfachten Newton-Verfahren wird die Steigung von \\(x_0\\) f\u00fcr alle Iterationen verwendet: $$ x_{n+1}=x_n-\\frac{f(x_n)}{f'(x_0)} $$</p>"},{"location":"22HS/HM1/2_Nullstellen.html#sekanten-verfahren","title":"Sekanten-Verfahren","text":"<p> $$ x_{n+1}=x_n-\\frac{x_n-x_{n-1}}{f(x_n)-f(x_{n-1})}\\cdot f(x_n) $$</p> <p>Beim Sekanten-Verfahren wird die Ableitung von \\(f\\) nicht ben\u00f6tigt, da die Steigung mit \\(\\frac{f(x_1) - f(x_0)}{x_1 - x_0}\\) berechnet wird.</p>"},{"location":"22HS/HM1/2_Nullstellen.html#konvergenzordnung","title":"Konvergenzordnung","text":"\\[ |x_{n+1}-\\overline x|\\le c \\cdot |x_n-\\overline x|^q \\] <p>Das \\(c \\in ]0, \\infty[\\) ist eine Konstante (wie bei Big-O).  \\(|x_{n+1}-\\overline x|\\) ist der absoluten Fehler von \\(x_{n+1}\\). Wenn \\(q=1\\) ist, dann konvergiert es linear (meist wird dabei auch noch \\(c &lt; 1\\) verlangt). Bei \\(q=2\\), quadratisch, und so weiter.</p>"},{"location":"22HS/HM1/2_Nullstellen.html#fehlerabschatzung","title":"Fehlerabsch\u00e4tzung","text":"<p>\\(x_n\\) ist eine mit iterieren erreichte Nullstelle, \\(\\varepsilon\\) ist ein maximalen Fehler, welcher Verlangt ist und \\(\\overline x\\) ist die exakte Nullstelle. $$ f(x_n+\\varepsilon)\\cdot f(x_n-\\varepsilon)&lt;0 \\Rightarrow \\vert x_n - \\overline x\\vert &lt; \\varepsilon $$ Oder auf Deutsch: Wenn es einen Vorzeichenwechsel zwischen \\([x_n-\\varepsilon; x_n + \\varepsilon]\\) gibt, dann gibt es eine Nullstelle \\(\\overline x\\) in diesem Intervall. Aus dem ergibt sich, dass die Differenz zwischen der Nullstelle \\(\\overline x\\) und \\(x_n\\) muss kleiner als \\(\\varepsilon\\) sein</p> <p></p>"},{"location":"22HS/HM1/2_Nullstellen.html#a-priori-und-a-posteriori-abschatzung","title":"a-priori und a-posteriori Absch\u00e4tzung","text":"<p>Mit der a-priori Absch\u00e4tzung kann der maximale absolute Fehler nach \\(n\\) Iterationen von den ersten zwei Iterationen \\(x_0\\) und \\(x_1\\) gesch\u00e4tzt werden: $$ |x_n-\\overline x|\\le \\frac{\\alpha^n}{1-\\alpha}\\cdot |x_1 - x_0| $$ Mit der a-posteriori Absch\u00e4tzung kann der maximale absoluten Fehler nach \\(n\\)  Iterationen von der \\(n\\)-ten und \\(n-1\\)-te Iteration absch\u00e4tzen: $$ |x_n-\\overline x|\\le \\frac \\alpha {1- \\alpha}\\cdot|x_n - x_{n-1}| $$</p>"},{"location":"22HS/HM1/3_Lineare%20Gleichungssysteme.html","title":"Lineare Gleichungssysteme","text":""},{"location":"22HS/HM1/3_Lineare%20Gleichungssysteme.html#definitionen","title":"Definitionen","text":"<ul> <li> <p>Untere Dreiecksmatrix   Eine \\(n\\times n\\)-Matrix \\(L=(l_{ij})\\) f\u00fcr welche gilt \\(l_{ij}=0\\) f\u00fcr \\(j &gt; i\\). Sie ist normiert, wenn \\(l_{ii}=1\\) gilt   </p> </li> <li> <p>Obere Dreiecksmatrix</p> </li> </ul> <p>Eine \\(n\\times n\\)-Matrix \\(L=(l_{ij})\\) f\u00fcr welche gilt \\(l_{ij}=0\\) f\u00fcr \\(i &gt; j\\). Sie ist normiert, wenn \\(l_{ii}=1\\) gilt   </p>"},{"location":"22HS/HM1/3_Lineare%20Gleichungssysteme.html#gaus-algorithmus","title":"Gaus-Algorithmus","text":"<p>Siehe <code>22FS/LA/01_Lineare Gleichungssysteme.md</code></p>"},{"location":"22HS/HM1/3_Lineare%20Gleichungssysteme.html#fehlerfortpflanzung-und-pivotisierung","title":"Fehlerfortpflanzung und Pivotisierung","text":"<p>Beim \"normalen\" Gaus wird bei jeder Zeile mit \\(\\lambda=\\frac{a_{ji}}{a_{ii}}\\) multipliziert, was zu grossen Rundungsfehlern f\u00fchren kann. Um dies zu vermeiden, wird f\u00fcr jeden Schritt \\(i\\) zwei Zeile getauscht, dass die gr\u00f6sste Zahl in der \\(i\\)-ten Spalte bei \\(a_{ii}\\) ist.</p> <p>Im folgende Beispiel wird \\(A\\) pivotisiert: $$ A=\\begin{pmatrix} 1 &amp; 2 &amp; -1\\ 4 &amp; -2 &amp; 6 \\ 3 &amp; 1 &amp; 0 \\ \\end{pmatrix} \\xrightarrow{z_1 \\leftrightarrow z_2} \\begin{pmatrix} 4 &amp; -2 &amp; 6 \\ 1 &amp; 2 &amp; -1\\ 3 &amp; 1 &amp; 0 \\ \\end{pmatrix} \\rightarrow \\begin{pmatrix} 4 &amp; -2 &amp; 6 \\ 0 &amp; 2.5 &amp; -2.5 \\ 0 &amp; 2.5 &amp; -4.5 \\ \\end{pmatrix} \\rightarrow \\begin{pmatrix} 4 &amp; -2 &amp; 6 \\ 0 &amp; 2.5 &amp; -2.5 \\ 0 &amp; 0 &amp; -2 \\ \\end{pmatrix} $$</p>"},{"location":"22HS/HM1/3_Lineare%20Gleichungssysteme.html#lr-zerlegung","title":"LR-Zerlegung","text":"<p>F\u00fcr die LR-Zerlegung wird die Gleichung \\(Ax=b\\) umgestellt: $$ \\underbrace{A}_{LR}x=b\\ L\\underbrace{R\\cdot x}_y=b\\ Ly=b\\ Rx=y $$</p> <p>Die \\(L\\) und \\(R\\) Matrizen sind die untere-, bzw. obere Dreiecksmatrize von \\(A\\): $$ L=\\begin{pmatrix} 1 &amp; 0 &amp; 0 &amp; 0\\ l_{21} &amp; 1&amp; 0 &amp; 0 \\ l_{31} &amp; l_{32} &amp; 1 &amp; 0\\ l_{41} &amp; l_{42} &amp; l_{4_3} &amp; 1\\ \\end{pmatrix} R=\\begin{pmatrix} r_{11} &amp; r_{12} &amp; r_{13} &amp; r_{14}\\ 0  &amp; r_{22} &amp; r_{23} &amp; r_{24} \\ 0 &amp; 0 &amp; r_{33} &amp; r_{34}\\ 0 &amp; 0 &amp; 0&amp; r_{44}\\ \\end{pmatrix} $$ Dabei wird \\(R\\), wie gewohnt, mit dem Gauss-Algorithmus gebildet. Dabei sind die \\(\\lambda_{ji}\\) aus \\(z_j:=z_j - \\lambda_{ji}\\cdot z_i\\) gerade \\(l_{ji}=\\lambda_{ji}\\).</p> <p>Beispiel: $$ \\begin{align} A=\\begin{pmatrix} -1 &amp;  1 &amp;  1 \\  1 &amp; -3 &amp; -2 \\  5 &amp;  1 &amp;  4 \\ \\end{pmatrix}\\ \\xrightarrow{z_2 := z_2 - \\frac 1 {-1}\\cdot z_1 \\Rightarrow \\lambda_21=\\frac{1}{-1}} \\begin{pmatrix} -1 &amp;  1 &amp;  1 \\  0 &amp; -2 &amp; -1 \\  5 &amp;  1 &amp;  4 \\ \\end{pmatrix} \\ \\xrightarrow{z_3 := z_3 - \\frac 5 {-1}\\cdot z_1\\Rightarrow \\lambda_31=\\frac{5}{-1}} \\begin{pmatrix} -1 &amp;  1 &amp;  1 \\  0 &amp; -2 &amp; -1 \\  0 &amp;  6 &amp;  9 \\ \\end{pmatrix} \\ \\xrightarrow{z_3 := z_3 - \\frac 6 {-2}\\cdot z_2\\Rightarrow \\lambda_32=\\frac{6}{-2}} \\begin{pmatrix} -1 &amp;  1 &amp;  1 \\  0 &amp; -2 &amp; -1 \\  0 &amp;  0 &amp;  6 \\ \\end{pmatrix}\\ L=\\begin{pmatrix}  1 &amp;  0 &amp;  0 \\  \\frac{1}{-1} &amp; 1 &amp; 0 \\  \\frac 5 {-1} &amp;  \\frac{6}{-2} &amp;  1 \\ \\end{pmatrix} \\end{align} $$</p> <p>Um nun nach \\(x\\) aufzul\u00f6sen wird folgendes gerechnet:</p> <ol> <li>Das Gleichungssystem \\(Ly=b\\) wird durch Vorw\u00e4rtseinsetzen nach \\(y\\) aufgel\u00f6st.</li> <li>Im Gleichungssystem \\(Rx=y\\) wird nun \\(y\\) eingesetzt und mit Vorw\u00e4rtseinsetzten nach \\(x\\) gel\u00f6st.</li> </ol>"},{"location":"22HS/HM1/3_Lineare%20Gleichungssysteme.html#zeilenvertauschung","title":"Zeilenvertauschung","text":"<p>Wenn Zeilen vertauscht werden, muss die Permutationsmatrix \\(P\\) berechnet werden. F\u00fcr jede Vertauschung wird die Matrix \\(P_i\\) erstellt. Alle \\(P_i\\) Matrix werden dann zu der Permutationsmatrix zusammen gerechnet: \\(P=P_n\\cdot P_{n-1} \\cdot ... \\cdot P_1\\)</p> <p>Das Gleichungssystem wird nun zu:  $$ \\begin{align} PAx&amp;=Pb\\ LRx&amp;=Pb\\ Ly&amp;=Pb\\ Rx&amp;=y \\end{align} $$ Achtung: Bei Zeilenvertauschung werden auch die Zeilen in \\(L\\) vertauscht.</p>"},{"location":"22HS/HM1/3_Lineare%20Gleichungssysteme.html#qr-zerlegung","title":"QR-Zerlegung","text":"\\[ \\begin{align} \\underbrace{A}_{QR}x&amp;=b\\\\ QRx&amp;=b\\\\ R&amp;= Q_n\\cdot Q{n-1}\\cdot ... \\cdot Q_1\\cdot A\\\\ Rx&amp;=Q^Tb\\\\ \\end{align} \\] <p>Der Gedanke ist, dass eine Orthogonalmatrix \\(Q\\) gefunden wird, f\u00fcr welche gilt \\(QR=A\\). Dabei ist \\(R\\) eine obere Dreiecksmatrix. Danach kann \\(Rx=Q^Tb\\) einfach gel\u00f6st werden.</p> <p>Um \\(Q\\) zu berechne wird die die Householder-Matrix \\(H\\) f\u00fcr jede Spalte schrittweise berechnet, so dass gilt: $$ H_1\\cdot A =H_1\\cdot  \\begin{pmatrix} * &amp; * &amp; * &amp; \\ * &amp; * &amp; * &amp; \\ * &amp; * &amp; * &amp; \\ * &amp; * &amp; * &amp; \\ \\end{pmatrix} = \\begin{pmatrix} * &amp; * &amp; * &amp; \\ 0 &amp; * &amp; * &amp; \\ 0 &amp; * &amp; * &amp; \\ 0 &amp; * &amp; * &amp; \\ \\end{pmatrix} $$ Dies wird erreicht, in dem folgendes gerechnet wird: $$ \\DeclareMathOperator{\\sign}{sign}</p> <p>\\sign(x)= \\left { \\begin{array}{ll} +1 &amp; \\text{f\u00fcr } x \\ge 0\\ -1 &amp; \\text{f\u00fcr } x &lt; 0 \\end{array}  \\right . \\  \\ \\begin{align} a_1=&amp;\\begin{pmatrix}a_{11}\\a_{21}\\a_{31}\\a_{41}\\end{pmatrix}\\ e_1=&amp;\\begin{pmatrix}1 \\ 0 \\ 0 \\ 0 \\end{pmatrix}\\ v_1 :=&amp; a_1 + \\sign(a_{11})\\cdot |a_1|\\cdot e_1\\ u_1 :=&amp; \\frac 1 {|v_1|}\\cdot v_1\\ H_1 :=&amp; I_4 - 2\\cdot u_1 \\cdot u_1^T\\ Q_1 =&amp; H_1 \\end{align} $$ Nun ist \\(Q_1\\) berechnet. Dasselbe wird nun f\u00fcr \\(Q_2\\) wiederholt, aber mit \\(A_2\\): $$ \\begin{align} H_1\\cdot A =&amp; \\left ( \\begin{array}{c|ccc} * &amp; * &amp; * &amp; *\\ \\hline 0 \\ 0 &amp; &amp; A_2\\  0 \\ \\end{array} \\right ) \\ a_2=&amp;\\begin{pmatrix}a_{22}\\a_{32}\\a_{42}\\end{pmatrix}\\ e_2=&amp;\\begin{pmatrix}1 \\ 0 \\ 0 \\end{pmatrix}\\ v_2 :=&amp; a_2 + \\sign(a_{22})\\cdot |a_2|\\cdot e_2\\ u_2 :=&amp; \\frac 1 {|v_2|}\\cdot v_2\\ H_2 :=&amp; I_3 - 2\\cdot u_2 \\cdot u_2^T\\ Q_2 =&amp; \\left ( \\begin{array}{c|ccc} 1 &amp; 0 &amp; 0 &amp; 0\\ \\hline 0 \\ 0 &amp; &amp; H_2\\  0 \\ \\end{array} \\right ) \\end{align} $$ Dies nun f\u00fcr \\(Q_3\\) wiederholt. </p> <p>Danach ergibt sich: $$ \\underbrace{Q_4\\cdot Q_3 \\cdot Q_2 \\cdot Q_1}_{Q^{-1}}\\cdot A=\\begin{pmatrix} * &amp; * &amp; * &amp; * \\ 0 &amp; * &amp; * &amp; * \\ 0 &amp; 0 &amp; * &amp; * \\ 0 &amp; 0 &amp; 0 &amp; * \\ \\end{pmatrix}\\ Q = (Q_3 \\cdot Q_2 \\cdot Q_1)^{-1}=Q_1^{-1}\\cdot Q_2^{-1} \\cdot Q_3^{-1}=Q_1^T\\cdot Q_2^T \\cdot Q_3^T $$</p>"},{"location":"22HS/HM1/3_Lineare%20Gleichungssysteme.html#orthoggonalmatrix","title":"Orthoggonalmatrix","text":"<p>Daf\u00fcr eine Matrix eine Orthogonalmatrix ist, muss folgendes gelten: $$ Q^T\\cdot Q=I \\Leftrightarrow Q^T = Q^{-1} $$</p>"},{"location":"22HS/HM1/3_Lineare%20Gleichungssysteme.html#householder-matrix-beispiel","title":"Householder-Matrix Beispiel","text":"\\[ \\vec u=\\pmatrix{1 \\\\ 2 \\\\ 3}\\\\ \\vec u \\text{ ist nicht normiert, daher:}\\\\ \\tilde u = \\frac {\\vec u}{|\\vec u|}=\\frac 1 {\\sqrt{14}}\\pmatrix{1 \\\\ 2 \\\\ 3}\\\\ H = I_n - 2\\tilde u \\tilde u ^T\\\\ =  \\pmatrix{1 &amp; 0 &amp; 0\\\\ 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 1} - 2\\cdot \\frac 1 {\\sqrt{14}} \\pmatrix{1 \\\\ 2 \\\\ 3} \\cdot \\pmatrix{1 &amp; 2 &amp; 3} \\]"},{"location":"22HS/HM1/3_Lineare%20Gleichungssysteme.html#vektornorm","title":"Vektornorm","text":"\\[ ||.|| : \\R^n \\to \\R\\\\  \\text{Dies ist definiert durch:}\\\\ ||x|| \\ge 0 \\text{ und } ||x|| = 0 \\Leftrightarrow x = 0\\\\ ||\\lambda x|| = |\\lambda| \\cdot ||x||\\\\ ||x + y || \\le ||x|| + ||y|| \\] <p>Es gibt mehrere Normen f\u00fcr Vektoren, welche diese Definition erf\u00fcllt:</p> <ul> <li>Erste-Norm, Summennorm: \\(||\\vec x||_1=\\sum^n_{i=1}|x_i|\\)</li> <li>Zweite-Norm - Euklidischenorm: \\(||\\vec x||_2=\\sqrt{\\sum^n_{i=1}x^2}\\)</li> <li>\\(\\infty\\)-Norm - Maximumnorm: \\(||\\vec x||_\\infty=\\max_{i=1,...,n}|x_i|\\)</li> </ul> <p>Ebenfalls gibt es mehrere Normen f\u00fcr Matrixen:</p> <ul> <li>Erste-Norm, Spaltensummennorm: \\(||A||_1=\\max_{j=1, ..., n}\\sum^n_{i=1}|a_{ij}|\\)</li> <li>Zweite-Norm: Spektralnorm: \\(||A||_2=\\sqrt {(\\rho(A^TA))}\\)</li> <li>\\(\\infty\\)-Norm: Zeilensummennorm: \\(||A||_\\infty=\\max_{i=1,..n}\\sum^n_{j=1} |a_{ij}|\\)</li> </ul>"},{"location":"22HS/HM1/3_Lineare%20Gleichungssysteme.html#fehlerrechnungen","title":"Fehlerrechnungen","text":"<p>Ein gest\u00f6rtes Gleichunssystem kann folgendermassen definiert werden als \\(A\\tilde x=\\tilde b = b + \\Delta b\\) . Dabei ist  \\(\\Delta b\\) das Residuum oder Defekt und  \\(\\Delta x = \\tilde x - x\\) den Fehler.</p> <p>F\u00fcr den absoluten und relativen Fehler gilt nun folgendes: $$ \\begin{align} ||x - \\tilde x|| &amp;\\le || A^{-1} || \\cdot || b - \\tilde b || \\ \\frac {||x - \\tilde x||}{||x||} &amp;\\le ||A|| \\cdot  || A^{-1} || \\cdot \\frac{|| b - \\tilde b ||}{||b||} \\ \\ \\DeclareMathOperator{\\cond}{cond} \\cond(A)&amp;=||A|| \\cdot || A^{-1} || \\end{align} $$ Wenn \\(\\cond(A)\\) gross ist, k\u00f6nnen kleine Fehler in \\(\\vec b\\) zu grossen Rundungsfehler im Ergebnis \\(\\vec x\\) f\u00fchren. Die Matrix \\(A\\) ist dann schlecht Konditioniert.</p> <p>Wenn nicht nur \\(\\vec b\\) sonder auch \\(A\\) einen Fehler enthaltet, dann gelten die folgenden Formeln: $$ \\begin{align} &amp;\\text{Wenn } \\cond(A) \\cdot \\frac{||A - \\tilde &gt;||}{||A||} &lt; 1 \\text{ dann gilt:}\\ &amp;\\frac {||x - \\tilde x||}{||x||} \\le \\frac{\\cond(A)}{1- \\cond(A) \\cdot \\frac{||A - \\tilde A||}{||A||}} \\cdot  \\left( \\frac{|| A - \\tilde A ||}{||A||} + \\frac{|| b - \\tilde b ||}{||b||}\\right)  \\end{align} $$</p>"},{"location":"22HS/HM1/3_Lineare%20Gleichungssysteme.html#iterative-verfahren","title":"Iterative Verfahren","text":""},{"location":"22HS/HM1/3_Lineare%20Gleichungssysteme.html#jacobi-verfahren","title":"Jacobi Verfahren","text":"<p>Die Gleichung \\(Ax=b\\) soll in \\((L + D + R)x=b\\) umgewandlet werden.</p> <p></p> <p>Danach sagt das Verfahren vor: $$ x^{(k+1)}=-D^{-1}(L + R)x^{(k)}+D^{-1}b\\ \\text{oder in der Summenform:}\\ x_i^{(k+1)}=\\frac 1{a_{ii}}\\cdot\\left(b_i - \\sum^n_{j_1, j \\neq i}a_{ij}x_j^{(k)}\\right)\\ \\text{Dabei ist } i \\text{ die Zeile in der Matrix} $$</p> <p>Notiz: Eine Diagonalmatrix (wie \\(D\\)) zu invertieren ist trivial: $$ D=\\pmatrix{2 &amp; 0\\ 0  &amp; 5} \\to  D^{-1}=\\pmatrix{\\frac 1 2 &amp; 0 \\ 0 &amp; \\frac 1 5} $$ </p>"},{"location":"22HS/HM1/3_Lineare%20Gleichungssysteme.html#beispiel-jacobi-verfahren","title":"Beispiel - Jacobi-Verfahren","text":""},{"location":"22HS/HM1/3_Lineare%20Gleichungssysteme.html#gaus-seidel-verfahren","title":"Gaus-Seidel-Verfahren","text":"\\[ x^{(k+1)}=-(D+L)^{-1}Rx^{(k)}+(D+L)^{-1}b\\\\ \\text{oder in der Summenform:}\\\\ x_i^{(k+1)}=\\frac 1{a_{ii}}\\cdot\\left(b_i - \\sum^{i-1}_{j=1}a_{ij}x_j^{(k+1)} - \\sum^{n}_{j=i+1}a_{ij}x_j^{(k)}\\right)\\\\ \\text{Dabei ist } i \\text{ die Zeile in der Matrix} \\]"},{"location":"22HS/HM1/3_Lineare%20Gleichungssysteme.html#konvergenz","title":"Konvergenz","text":"<p>Mit der folgenden Fixpunktiteration \\(x^{(k+1)}=Bx^{(n)}+c\\) ist die Konvergenz definiert als:</p> <ul> <li>\\(\\overline x\\) ist anziehend, wenn \\(||B|| &lt; 1\\)</li> <li>\\(\\overline x\\) ist abstossend, wenn \\(||B|| &gt; 1\\)</li> </ul> <p>F\u00fcr Jacobi-Verfahren ist \\(B\\) und \\(c\\) folgendermassen definiert: \\(x^{(k+1)}=-\\underbrace{D^{-1}(L + R)}_B\\cdot x^{(k)}+\\underbrace{D^{-1}}_c \\cdot b\\)</p> <p>F\u00fcr das Gaus-Seidel-Verfahren ist \\(B\\) und \\(c\\) definiert als: \\(x^{(k+1)}=\\underbrace{-(D+L)^{-1}R}_B\\cdot x^{(k)}+\\underbrace{(D+L)^{-1}}_c \\cdot b\\)</p>"},{"location":"22HS/HM1/3_Lineare%20Gleichungssysteme.html#diagonaldominanz","title":"Diagonaldominanz","text":"<p>Eine Matrix wird als Diagonaldominanz bezeichnet, wenn entweder</p> <ul> <li>f\u00fcr alli \\(i=1,...,n\\): \\(|a_{ii}|&gt; \\sum^n_{j=1, j\\neq i}|a_{ij}|\\)</li> <li>f\u00fcr alli \\(j=1,...,n\\): \\(|a_{jj}|&gt; \\sum^n_{i=1, i\\neq j}|a_{ij}|\\)</li> </ul>"},{"location":"22HS/HM1/3_Lineare%20Gleichungssysteme.html#abschatzung","title":"Absch\u00e4tzung","text":""},{"location":"22HS/HM1/4_Komplexe%20Zahlen.html","title":"Komplexe Zahlen","text":"<p>Eine Komplexe Zahl hat einen imagin\u00e4ren und einen realen Komponent. Diese werden entweder in der Form \\(z=x+iy\\) oder der Form \\(P(x, y)\\) geschrieben, wobei gilt \\(x, y \\in \\R\\).</p> <p>\\(i\\) ist definiert als \\(i^2=-1\\)</p> <p>Die Definition von \\(\\C\\) ist \\(\\C=\\{z | z = x+iy \\wedge x,y \\in \\R \\}\\)</p> <p>Es gibt zudem noch die Funktionen \\(\\Re(z)=x\\) und \\(\\Im(z)=y\\) (f\u00fcr \\(z = x+iy\\))</p> <p>Da eine komplexe Zahl als Punkt dargestellt werden, kann auch der Betrag berechnet werden: \\(|z|=\\sqrt{x^2+y^2}=\\sqrt{z\\cdot z^*}\\)</p>"},{"location":"22HS/HM1/4_Komplexe%20Zahlen.html#konjugierte-komplexe-zahlen","title":"Konjugierte Komplexe Zahlen","text":"<p>Die konjugierte komplexe Zahl von \\(z = x + yi\\) ist \\(z^*=x-iy\\) und ist entlang der x-Achse gespiegelt.</p> <p></p> <p>Der Term \\(z\\cdot z^*=(x+yi)\\cdot(x-yi)=x^2-i^2y^2=x^2-(-1)y^2=x^2+y^2\\) zeigt, wie \\(\\sqrt{z\\cdot z^*}=|z|\\) und \\(z\\cdot z^*=|z|^2\\) (Achtung: Der Betrag ist wichtig!)</p>"},{"location":"22HS/HM1/4_Komplexe%20Zahlen.html#darstellungs-formen","title":"Darstellungs Formen","text":"<ul> <li>Koordinaten-Form: \\(P(x, y)\\)</li> <li>Normal-Form: \\(z = x + yi\\)</li> <li>Trigometrische-Form (aka Polar-Form): \\(z=r\\cdot (\\cos \\phi + i\\cdot \\sin \\phi)\\) (\\(r\\) ist dabei die L\u00e4nge)</li> <li>Exponential-Form: \\(re^{i\\varphi}\\) (\\(r\\) ist dabei die L\u00e4nge)</li> </ul> <p>Als Beispiel: $z = 1 + 1i = \\sqrt 2 (\\cos{\\frac \\pi 4} + i \\sin{\\frac \\pi 4}) = \\sqrt 2 \\cdot e^{i\\cdot \\frac \\pi 4} $</p> <p>Um zwischen der Exponetialform und der Koordinationsform zu konvertieren, gilt: $$ \\text{F\u00fcr: } z=x+y\\ x = r\\cdot \\cos(\\varphi)\\ y = r\\cdot \\sin(\\varphi) $$</p>"},{"location":"22HS/HM1/4_Komplexe%20Zahlen.html#grundrechungsarten","title":"Grundrechungsarten","text":"<ul> <li>Summieren: \\(z_1 + z_2 = (x_1 + x_2) + i(y_1 + y_2)\\)</li> <li>Subtrahieren: \\(z_1 - z_2 = (x_1 - x_2) + i(y_1 - y_2)\\)</li> <li>Multiplizieren: \\(z_1 \\cdot z_2 = (x_1 \\cdot x_2 - y_1\\cdot y_3) + i(x_1\\cdot y_2 +x_2 \\cdot y_1)\\)</li> <li>Dividieren: \\(\\frac {z_1}{z_2}=\\frac {z_1\\cdot z_2^*}{z_2 \\cdot z_2^*}=\\frac {(x_1 + iy_1)(x_2-iy_2)}{(x_2 + iy_2)(x_2 - iy_2)}=\\frac {(x_1 + iy_1)(x_2-iy_2)}{x_2^2-y_2^2}\\)</li> <li>Potenzieren: \\(z^n=(re^{i\\varphi})^n=r^n\\cdot e^{i\\varphi n}\\)</li> <li>Wurzel-Ziehen: \\(\\sqrt[n]{z}=z^{\\frac 1 n}=r^{\\frac 1 n}\\cdot e^{\\frac {i\\varphi + 2\\pi \\cdot k} n}\\), wobei \\(k=0, 1, 2, ..., n-1\\) (Bei \\(k\\ge n\\) wiederholen sich die L\u00f6sungen)</li> </ul> <p>Ein Vorteil der Exponential-Form ist, dass Rechnungen um einiges einfacher von der Hand gehen:  $$ z_1=r_1e^{i\\varphi_1}\\ z_2=r_2e^{i\\varphi_2}\\ z_1z_2=r_1e^{i\\varphi_1}\\cdot r_2e^{i\\varphi_2} = r_1r_2\\left(e^{i\\varphi_1+i\\varphi_2}\\right) $$</p>"},{"location":"22HS/HM1/4_Komplexe%20Zahlen.html#polynome-losen","title":"Polynome L\u00f6sen","text":"<p>F\u00fcr das Polynom \\(a_nx^n+a_{n-1}x^{n-1}+...+a_1x^1+a_0=0\\) und \\(a_i, x \\in \\R\\), dann gibt es genau \\(n\\) L\u00f6sungen und kann maximal \\(n\\) reale L\u00f6sungen geben. $$ z^6=1 $$</p> <p></p>"},{"location":"22HS/HM1/4_Komplexe%20Zahlen.html#eigenwerte","title":"Eigenwerte","text":"<p>F\u00fcr eine Matrix \\(A \\in R^{n\\times n}\\) nennt sich \\(\\lambda \\in \\C\\) Eigenwert und den Vektor \\(x\\in \\C^n\\setminus \\{0\\}\\) Eigenvektor, wenn folgendes gilt: $$ \\begin{align} A\\vec x &amp;= \\lambda \\vec x \\ \\Rightarrow A\\vec x - \\lambda \\vec x &amp;= 0 \\ \\Rightarrow (A-\\lambda I_n)\\vec x &amp;= 0 \\end{align} $$ Wenn \\(A\\) bekannt ist und \\(\\lambda\\) und \\(\\vec x\\) ausgerechnet werden soll, kann mithilfe dem charakteristischem Polynom berechnet werden.</p> <p>Die Eigenwerte von \\(A^{-1}\\) sind die Kehrwerte \\(\\frac 1 {\\lambda_i}\\) .</p>"},{"location":"22HS/HM1/4_Komplexe%20Zahlen.html#spektrum","title":"Spektrum","text":"<p>Das Spektrum \\(\\sigma(A)\\) ist die Menge aller Eigenwerte von der Matrix \\(A\\).</p>"},{"location":"22HS/HM1/4_Komplexe%20Zahlen.html#spur-und-determinante","title":"Spur und Determinante","text":"<p>Die Spur und Determinante von \\(A\\) (nicht \\(A-\\lambda I_n\\)) kann mit den Eigenwerten ausgerechnet werden. $$ \\DeclareMathOperator{\\tr}{tr} \\begin{align} \\det(A)&amp;=\\lambda_1\\cdot \\lambda_2 \\cdot \\cdot \\cdot \\lambda_n\\ \\tr(A)&amp;=a_11 + a_22 + ... + a_nn = \\lambda_1 + \\lambda_2 + ... + \\lambda_n \\end{align} $$</p>"},{"location":"22HS/HM1/4_Komplexe%20Zahlen.html#charakteristisches-polynom","title":"Charakteristisches Polynom","text":"\\[ p: \\lambda \\mapsto \\det(A-\\lambda I_n) \\] <p>Das charakteristische Polynom ist definiert das Polynom zum berechnen der Determinante von \\(A-\\lambda I_n\\).  Um \\(\\lambda\\) auszurechnen, kann das charakteristische Polynom mit \\(0\\) gleichgesetzt werden. Das Polynom ist vom Grad \\(n\\) und hat somit auch \\(n\\) L\u00f6sungen.</p> <p>Wenn \\(A-\\lambda I_n\\) eine Diagonalmatrix, obere Dreiecksmatrix oder untere Dreiecksmatrix ist, dann gilt: $$ \\det(A-\\lambda I_n)=(a_{11}-\\lambda)(a_{22}-\\lambda)...(a_{nn}-\\lambda) $$</p>"},{"location":"22HS/HM1/4_Komplexe%20Zahlen.html#determinante","title":"Determinante","text":"<p>F\u00fcr \\(A\\in \\R^{2\\times 2}\\) gilt: $$ \\det(A)= a_{11}\\cdot a_{22}- a_{12}\\cdot a_{21} $$ F\u00fcr \\(A \\in R^{3\\times 3}\\) gilt: $$ \\det(A)=b_{11} (b_{22}b_{33} - b_{23}b_{32})-b_{12}(b_{21}b_{33}-b_{23}b_{31}) + b_{13}(b_{21}b_{32} - b_{22}b_{31}) $$</p>"},{"location":"22HS/HM1/4_Komplexe%20Zahlen.html#konditionierung","title":"Konditionierung","text":"<p>Da, wenn die Eigenwerte mit dem charakteristischen Polynom ausgerechnet werden, ein schlecht konditioniertes Problem entsteht, sollten in der Praxis nie Eigenwerte f\u00fcr \\(A\\) mit \\(n&gt;3\\) mit dem charakteristischen Polynom und dessen Nullstellen berechnet werden.</p>"},{"location":"22HS/HM1/4_Komplexe%20Zahlen.html#eigenvektoren-eigenraum","title":"Eigenvektoren &amp; Eigenraum","text":"<p>Die Eigenvektoren k\u00f6nnen ausgerechnet werden, in dem die Eigenwerte \\(\\lambda\\) in die Matrix \\(A-\\lambda I_n\\) eingesetzt werden. Es gibt f\u00fcr eine Matrix \\(A\\in R^{n\\times n}\\) ein Gleichungssystem mit \\(n-\\rg(A-\\lambda I_n) \\DeclareMathOperator{\\rg}{rg}\\) freien Parametern.</p>"},{"location":"22HS/HM1/4_Komplexe%20Zahlen.html#vielfachheit","title":"Vielfachheit","text":"<p>Die geometrische Vielfachheit ist definiert als die Dimension des Eigenraums von \\(\\lambda\\). Sie gibt die Anzahl der linearen unabh\u00e4ngigen Eigenvektoren zum Eigenwert an und kann mit \\(n - \\rg(A-\\lambda I_n)\\) berechnet werden</p> <p>Die algebraische Vielfachheit ist die Multiplizit\u00e4t eines Eigenwertes, bzw. wie oft ein Eigenwert auf taucht. </p> <p>Die geometrische Vielfachheit ist immer gleich oder kleiner als die algebraische Vielfachheit. Dies heisst, dass wenn ein Eigenwert \\(\\lambda\\) \\(k\\)-fach auftritt und somit eine algebraische Vielfachkeit \\(k\\) hat, dann geh\u00f6ren mindestens ein und h\u00f6chstens \\(k\\) linear unabh\u00e4ngige Eigenvektoren zu \\(\\lambda\\).</p> <p>Wenn alle \\(n\\) Eigenwerte verschieden sind, so geh\u00f6rt zu jedem Eigenwert \\(\\lambda\\) genau ein linear unabh\u00e4ngiger Eigenvektor, welcher bis einen Faktor eindeutig bestimmbar ist.</p>"},{"location":"22HS/HM1/4_Komplexe%20Zahlen.html#numerische-berechnung-von-eigenwerte-und-eigenvektoren","title":"Numerische Berechnung von Eigenwerte und Eigenvektoren","text":"<p>Es gilt, wenn zwei Matrizen \\(A, B \\in \\R^2\\) zueinander \u00e4hnlich sind, dann gilt das \\(A\\) und \\(B\\) die selben Eigenwerte inkl. deren algebraischen Vielfachen.</p>"},{"location":"22HS/HM1/4_Komplexe%20Zahlen.html#ahnliche-diagonalisierbare-matrix","title":"\u00c4hnliche &amp; Diagonalisierbare Matrix","text":"<p>Eine Matrix \\(A\\in R^{n\\times n}\\) ist \u00e4hnlich zu der Matrix \\(B\\in R^{n\\times n}\\), wenn eine regul\u00e4re Matrix \\(T\\) existiert, mit welcher gilt: $$ B=T^{-1}AT $$ Ein Spezialfall davon ist, wenn \\(B\\) eine Diagonalmatrix ist. Dann ist \\(A\\) diagonalisierbar.</p> <p>Wenn zwei Matrizen \u00e4hnlich zueinander sind, dann gilt:</p> <ul> <li>Sie haben dieselbe Eigenwerte, inkl. deren algebraischen Vielfachheiten (und auch dem charakteristischen Polynom)</li> <li>Ist \\(\\vec x\\) ein Eigenvektor zum Eigenwert \\(\\lambda\\) von \\(B\\), dann ist \\(T\\vec x\\) ein Eigenvektor zum Eigenwert \\(\\lambda\\) von \\(A\\)</li> <li>Wenn \\(A\\) diagonalisierbar ist, dann sind die Diagonalelemente von \\(B\\) die Eigenwerte von \\(A\\) und die linear unabh\u00e4ngige Eigenvektoren von \\(A\\) stehen in den Spalten von \\(T\\)</li> </ul>"},{"location":"22HS/HM1/4_Komplexe%20Zahlen.html#spektralradius-und-spektralnorm","title":"Spektralradius (und Spektralnorm)","text":"\\[ \\rho(A)=\\max\\{ |\\lambda| \\mid \\lambda \\text{ ist ein Eigenwert von } A\\in \\R^{n\\times n} \\} \\] <p>Der Spektralradius von der Matrix \\(A\\) ist definiert als der h\u00f6chste Eigenwert von \\(A\\).</p>"},{"location":"22HS/HM1/4_Komplexe%20Zahlen.html#qr-verfahren","title":"QR-Verfahren","text":"<p>Das QR-Verfahren ist ein iterativen Algorithmus, mit welchem mithilfe der QR-Zerlerung eine obere Dreiecksmatrix \\(B\\) gefunden wird, welch \u00e4hnlich zu \\(A\\) ist und somit die selben Eigenwerte wie \\(A\\) besetitzt.</p> <p>Zu Beginn ist \\(A\\in \\R^{n\\times n}=A_0\\)  und \\(P_0 \\in R^{n\\times n}=I_n\\). Dann wird f\u00fcr \\(i=0, 1, 2, ...\\) folgende Schritte durchgef\u00fchrt. $$ \\begin{align} A_i&amp;:=Q_i\\cdot R_i\\ A_{i+1}&amp;:=R_i\\cdot Q_i \\ P_{i+1}&amp;:= P_i \\cdot Q_i \\end{align} $$ Die Matrix \\(A_i\\) konvergiert f\u00fcr \\(i\\to \\infty\\) gegen eine Matrix \\(A_\\infty\\), bei welcher die Diagonale nur einzelne Elemente oder \\(2\\times 2\\)-Bl\u00f6cke aufweist. Die Eigenwerte sind die einzelnen Elemente und die Eigenwerte der \\(2\\times 2\\)-Bl\u00f6cke.</p> <p>Die \\(2\\times 2\\)-Bl\u00f6cke bilden sich, wenn das algebraische Vielfache eines \\(\\lambda\\) gr\u00f6sser als \\(1\\) ist. Umgekehrt gilt, wenn alle Eigenwerte betragsm\u00e4ssig verschieden sind (also \\(\\forall i,j \\in \\N |\\lambda_i|\\neq |\\lambda_j|\\wedge i\\neq j\\)), dann gibt es keine \\(2\\times 2\\)-Bl\u00f6cke.</p> <p>Falls \\(A\\) symetrisch ist (\\(A^T=A\\)) und \\(\\forall i,j \\in \\N |\\lambda_i|\\neq |\\lambda_j|\\wedge i\\neq j\\) gilt, dann konvergiert die Folge der Matrizen \\(P_k=Q_0\\cdot Q_1\\cdot \\cdot \\cdot Q_k\\) gegen eine orthogonale Matrix (\\(Q^T=Q^{-1}\\)), deren Spalten die Eigenvektoren von \\(A\\) bilden.</p>"},{"location":"22HS/HM1/4_Komplexe%20Zahlen.html#von-mises-iteration-power-method","title":"von-Mises-Iteration (Power Method)","text":"<p>F\u00fcr die von-Mises-Iteration muss ein \\(A\\in R^{n \\times n}\\) diagonalisierbar sein und ein Startvektor \\(v_0\\in \\C^n\\) mit der L\u00e4nge \\(1\\) definiert sein.  $$ \\begin{align} v_{k+1}&amp;=\\frac{Av_k}{||Av_k||2}\\ \\lambda&amp;=\\frac{v_k^TAv_k}{v_k^Tv_k} \\end{align} $$</p>"},{"location":"22HS/HM1/summary/HM1%20Summary.html","title":"HM1 Summary","text":"","tags":["summary","HM1"]},{"location":"22HS/HM1/summary/HM1%20Summary.html#fragen","title":"Fragen","text":"<ul> <li>Wie rechnet man die Darstellung in einer beliebiger Basis von einer Zahl aus?</li> <li>Nicht Pr\u00fcfungsrelevant</li> </ul>","tags":["summary","HM1"]},{"location":"22HS/ICAM/Critical%20Incident%20Analysis.html","title":"Critical Incident","text":"<p>A critical incident is an event which deviates from the expected norm. Usually it also implies negative consequences resulting from the incident.</p>"},{"location":"22HS/ICAM/Critical%20Incident%20Analysis.html#critical-incident-analysis","title":"Critical Incident Analysis","text":"<p>The critical incident analysis can be used to analysis what went wrong in a critical incident after the fact. The analysis identifies the different underlying expectations and norms.</p> <ol> <li>Identify all situation where something has happened with unforeseen or unintended consequences</li> <li>The situation should be objectively and neutrally described, including the beginning of the situation, its course and its ending</li> <li>Each person involved with as much information as possible (like their name, function, age group, gender, ...)</li> <li>The social and professional relationship between the persons involved must be named or described</li> <li>The place, time and occasion of the event</li> <li>The purpose of the actions which caused the critical incident</li> <li>All actions of all persons involved</li> </ol> <p>To get the best result from the analysis, multiple people should evaluate independently the description of the critical incident. Each elevator writes a description from the perspective from a different involved person. Later, to analysis the incident, role playing can be used to reenact the critical incident under observation. </p> <p>The following should be described:</p> <ul> <li>What were the motivations and objectives from the participants?</li> <li>How does their common history affect their decisions?</li> <li>Are there other possible explanations for their behaviour?</li> <li>What other actions would have been possible and would have let those to a better result and why?</li> </ul>"},{"location":"22HS/ICAM/Intercultural%20Competence.html","title":"Intercultural Competence","text":"<p>There is no one definition for what intercultural competence is, but scholar agree that intercultural competence is the appropriate and effective management of interaction between people who ... represent different or divergent affective, cognitive, and behavioural orientations to the world. Intercultural competence always includes multiple people.</p>"},{"location":"22HS/ICAM/Intercultural%20Competence.html#the-process-model-of-intercultural-competence","title":"The Process Model of Intercultural Competence","text":"<p>In the top left box, where the start is, the model says that one needs to be interested in becoming intercultural competent. </p> <p>The top right box says that in addition to wanting to become intercultural aware, one also needs knowledge about the culture and its contexts, comprehend this knowledge and skill (the common sense to what's acceptable both when talking and listening. Is it ok to talk about having had a poo with a random guy at the airport). This knowledge can be built up by either listening and observing (when screwing up) and then analyse and interpreter the situation or also by learning. In essence, to be aware about one's surrounding.</p> <p>The right bottom box says that these two previous box will result in an internal shift in how culture is perceived from always comparing everything with one's own culture to being able to seeing culture more holistic.</p> <p>The last box in the bottom left says that these steps will manifest them self in an external change in how effective and appropriate one can communicate and behave in an intercultural situation. As shown by the arrows, every box contributes to the \"External Outcome\" as each has an positive impact on one's intercultural competence. One can come to the external outcome by perspectivising.</p> <p>Finally, this is a never-ending process which will never stop. Therefore there is an arrow connecting \"External Outcome\" to \"Requisite Attitudes\".</p>"},{"location":"22HS/ICAM/Test.html","title":"Test","text":"<ul> <li>Print the two pages</li> <li>HutchingsWeir2006</li> <li> <p>2.1.Arasaratnam-Smith-2017-2(4)</p> </li> <li> <p>Darla Deardorff's model</p> </li> <li>What happens in each box</li> <li>(Critical Incidence Method)</li> <li>anxiaty modle</li> <li>Guansure &amp; Whatsa (or similar) Text</li> <li>perspectivizing</li> </ul>"},{"location":"22HS/ICAM/Test.html#semiotic-vs-pragmatic-model","title":"semiotic vs pragmatic model","text":"<p>Semiotic models require knowledge prior to the interaction, while in pragmatic model the knowledge is negotiated on the fly.</p>"},{"location":"22HS/ICAM/Test.html#perspectivising","title":"Perspectivising","text":"<p>Perspectivising is a process to create a common understanding between multiple parties which don't share a common cultural context.</p> <ol> <li>Generalizing: Telling the other, that the communication has broken down (with out sounding condensending) by talking about the a bigger group. For example: I'm not sure what is expected of me in this behaviour</li> <li>Perspectivising: Explain your own perspective of the context</li> <li>Contrasting: The speaker connects the different standpoints as sharing a common ground while representing separate aspects.</li> </ol> <p>An example: Question about salary:</p> <ol> <li>Generalizing: It's a bit strange that people in Malta ask about the salary</li> <li>Perspecitivising: In Switzerland it is a bit strange to talk about this.</li> <li>Contrasting: Your origin doesn't matter, salary is obvious something important. But I'm not really comfortable to talk about this. I hope you don't mind.</li> </ol>"},{"location":"22HS/ICAM/Test.html#emic-vs-etic-perspective","title":"Emic vs Etic Perspective","text":"<p>In the emic perspective, you explain something based on your context and how you feel this thing.</p> <p>In the etic perspective, you compare different view points of a thing.</p> <p>Both perspective are tools to prevent you from repeating cultural mishaps. </p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html","title":"Deskriptive Statistik","text":"\\[ \\DeclareMathOperator{\\rg}{rg} \\]"},{"location":"22HS/STS/Deskriptive%20Statistik.html#begriffe","title":"Begriffe","text":"<p>TODO</p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#merkmalstyp-messniveau","title":"Merkmalstyp / Messniveau","text":"<pre><code>flowchart TD\n    Merkmalstyp --&gt; kategoriel[Qualitativ/Kategoriell]\n    Merkmalstyp --&gt; quantitativ[Quantitativ/Metrisch]\n    kategoriel --&gt; Nominal[Nominal \\nl\u00e4sst sich nicht ordnen]\n    kategoriel --&gt; Ordinal[Oridnal \\nl\u00e4sst sich ordnen]\n    quantitativ --&gt; Diskret\n    quantitativ --&gt; Stetig\n</code></pre>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#stichproben","title":"Stichproben","text":"<p>Aus der Grundgesamtheit \\(\\Omega\\) k\u00f6nnen mit einer Stichprobe \\(n\\) Objekte \\(\\omega_1, \\omega_2, ..., \\omega_n\\) entnommen werden und die Merkmale \\(X(\\omega_1),..., X(\\omega_n)\\) betrachtet werden. H\u00e4ufig wird dies auch als \\(x_1, x_2, ..., x_n\\) geschrieben.</p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#absolute-und-relative-haufigkeit","title":"Absolute und relative H\u00e4ufigkeit","text":"<p>Die absolute H\u00e4ufigkeit \\(h_i\\), ist wie oft ein Wert vorgekommen ist. Die Summe aller \\(h_i\\) ergibt die Anzahl Werte \\(n\\). Die relative H\u00e4ufigkeit \\(f_i=\\frac{h_i}{n}\\), ist, was der Prozent-Anteil eines Wertes ist. Die Summe aller \\(f_i\\) ergibt \\(1\\)</p> <p>Die relative H\u00e4uffigkeit bei nicht klassierten Daten nennts isch PMF.</p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#kumulative-absolute-und-relative-haufigkeit-cdf-bei-nicht-klassierten-daten","title":"Kumulative absolute und relative H\u00e4ufigkeit (CDF) bei nicht-klassierten Daten","text":"<p>Die kumulative absolute H\u00e4ufigkeit \\(H(x)\\), ist definiert als alle Werte von \\(h_i\\) bis und mit \\(x\\). Es kann auch als \\(H(x)=\\sum_{a_i \\lt x}h_i\\).</p> <p>\u00c4hnlich ist die kumulative relative H\u00e4ufigkeit \\(F(x)\\), was alle Werte von \\(f_i\\) bis und mit \\(x\\). Es kann definiert werden als \\(F(x)=\\sum_{a_i}f_i=\\frac{H(x)}{n}\\)</p> <p>Die kumulative H\u00e4ufigkeiten zwischen zwei Werte. Zum Beispiel der Anteil von Familien, welche 2 - 4 Fl\u00fcge pro Jahr kaufen: \\(F(4) - F(2)\\) </p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#beispiel","title":"Beispiel","text":"Anzahl Flugreisen \\(a_i\\) 1 2 3 4 5 Total Absolute H\u00e4ufigkeit \\(h_i\\) \\(9\\) \\(8\\) \\(5\\) \\(7\\) \\(1\\) \\(30\\) Relative H\u00e4ufigkeit \\(f_i\\) (PMF) \\(\\frac 9 {30}\\) \\(\\frac{8}{30}\\) \\(\\frac{5}{30}\\) \\(\\frac{7}{30}\\) \\(\\frac 1 {30}\\) \\(1\\) Kumulative absolute H\u00e4ufigkeit \\(H(x)\\) \\(9\\) \\(17\\) \\(22\\) \\(29\\) \\(30\\) Kumulative relative H\u00e4ufigkeit \\(F(x)\\) (CDF) \\(\\frac 9{30}\\) \\(\\frac{17}{30}\\) \\(\\frac{22}{30}\\) \\(\\frac{29}{30}\\) \\(1\\)"},{"location":"22HS/STS/Deskriptive%20Statistik.html#pmf-und-pdf-bei-klassierten-daten","title":"PMF und PDF bei klassierten Daten","text":"<p>Die relative H\u00e4ufigkeit (PMF) bei klassierten Daten ist f\u00fcr die ganze Klasse definiert.</p> <p></p> <p>Wenn nun aber die PMF als Balkendiagramm dargestellt werden w\u00fcrde, w\u00fcrden Klassengr\u00f6ssen die Darstellung verzerren. Dies liegt daran, dass eine gr\u00f6ssere Klasse mehr Platz in Anspruch nimmt, da der Balken breiter ist. Daf\u00fcr gibt es die PDF. $$ PDF(x) = \\frac{f_x}{Klassengr\u00f6sse}=\\frac{h_x}{n\\cdot Klassengr\u00f6sse} $$</p> <p>Nun folgt ein Beispiel f\u00fcr PDFs.</p> \\(c_i\\) \\([4; 6[\\) \\([6:8[\\) \\([8:12[\\) \\(h_i\\) 1 7 2 \\(f_i\\) \\(\\frac 1 {10}\\) \\(\\frac{7}{10}\\) \\(\\frac{2}{10}\\) PDF \\(f\\) \\(\\frac{1}{10\\cdot 2}\\) \\(\\frac{7}{10\\cdot 2}\\) \\(\\frac{2}{10\\cdot 4}\\) CDF \\(F_i\\) \\(\\frac{1}{10}\\) \\(\\frac{8}{10}\\) \\(\\frac{10}{10}=1\\)"},{"location":"22HS/STS/Deskriptive%20Statistik.html#relative-haufigkeit-cdf-bei-klassierten-daten","title":"Relative H\u00e4ufigkeit (CDF) bei klassierten Daten","text":"<p>Wenn die CDF f\u00fcr klassierte Daten gebaut wird, werden die CDF-Werte der Klassengrenzen berechnet, wie bei nicht klassierten Daten. Danach wird eine Linie zwischen den CDF-Werte der Klassengrenzen gezogen.</p> <p></p> <p>Die Steigung der Linie ist die \\(PDF\\).</p> <p>Wenn nun mathematisch ein spezifischen CDF Wert berechnet werden soll, kann dies folgendermassen getan werden: $$ F(x)=\\frac{F(b)-F(a)}{b-a}\\cdot (x-a)+F(a)=PMF(x)\\cdot(x - a)+F(a)\\ \\text{wobei } a \\text{ und } b \\text{ die underte, bzw. obere Klassengrenzen sind} $$</p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#kenngrosse","title":"Kenngr\u00f6sse","text":""},{"location":"22HS/STS/Deskriptive%20Statistik.html#median","title":"Median","text":"<p>Der Median ist die Zahl in der \"Mitte\". $$ \\begin{cases} \\frac 1 2 (x_{[\\frac n 2]}+x_{[\\frac {n} 2 + 1]}) &amp; n \\text{ gerade}\\ x_{[\\frac {n+1} 2]} &amp; n \\text{ ungerade} \\end{cases} $$</p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#quantil-sts01p17","title":"Quantil (STS01/p.17)","text":"<p>Ein Quantil \\(R_q\\) unterteilt die Stichproben in zwei Teile: \\(n\\cdot q\\) und \\(n\\cdot (1 - q)\\).</p> <p></p> <p>Berechnet wird es folgendermassen. $$ R_q=\\begin{cases} \\frac{x_{[n \\cdot q]}+x_{[n\\cdot q + 1]}}{2} &amp; n \\cdot q \\text{ ganze Zahl}\\ x_{[\\lceil n\\cdot q\\rceil]} &amp; n\\cdot q \\text{ keine ganze Zahl} \\end{cases} $$ Ebenfalls \\(R_{0.5}\\) ist der Median, \\(R_{0.25}\\), \\(R_{0.5}\\) und \\(R_{0.75}\\) werden auch Quartile genannt</p> <p>Der Abstand zwischen dem -3. und 1. Quartile nennt sich auch Interquartilenabstand (IQR)</p> <p>Wenn die Daten kategorisiert sind kann das Quantil auch \u00fcber den CDF ausgerechnet werden. Daf\u00fcr kann folgende Formel verwendet werden:  $$ R_q=\\frac{b - a}{F(b) - F(a)}\\cdot (q - F(a)) + a $$</p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#modus","title":"Modus","text":"<p>Der Modus \\(x_{mod}\\) ist der Wert mit der h\u00f6chsten absoluten H\u00e4ufigkeit.</p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#durchschnitt-mittelwert","title":"Durchschnitt / Mittelwert","text":"\\[ \\overline x = \\frac 1 n \\sum^n_{i=1}x_i = \\frac 1 n \\sum^m_{i=1}h_i\\cdot a_i=\\sum^m_{i=1}f_i\\cdot a_i \\] <p>Bei klassierten Daten wird die Klassenmitte f\u00fcr die Berechnung des Durchschnitts verwendet.</p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#varianz-und-standardabweichung","title":"Varianz und Standardabweichung","text":"\\[ s^2 = \\frac 1 n \\sum^n_{i=1}(x_i - \\overline x)^2=\\frac 1 n \\left (\\sum^n_{i=1}x_i^2 \\right)- \\overline x ^2\\\\ s = \\sqrt{s^2} \\] <p>Die Varianz und das Streumass gibt an, wie fest die eigentlichen Werte vom Durchschnitt abweichen.  Bei klassierten Daten wird die Klassenmitte genommen (z.B. ist die Klassenmitte f\u00fcr \\([200-400[=300\\)).</p> <p>Oft werden auch die korrigierte Varianz und die korrigierte Standardabweichu genutzt. $$ s_{korr}^2=\\frac 1 {n-11}\\sum^n_{i=1}(x_i - \\overline x)^2          = \\frac n {n - 1}s^2\\ s_{korr} = \\sqrt{\\frac 1 {n-11}\\sum^n_{i=1}(x_i - \\overline x)^2}         = \\sqrt{\\frac n {n - 1}s^2} $$</p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#boxplot","title":"Boxplot","text":"<p>Der Boxplot besteht aus einer Box und zwei Antennen. Die Box ist zwischen dem \\(Q_1\\) und \\(Q_3\\), wobei der Strich in der Box bei \\(Q_2\\) ist. Die Antennen gehen h\u00f6chsten bis \\(1.5 \\cdot (Q_3 - Q_1)\\) von der Box (also relative zu \\(Q_1\\) oder \\(Q_3\\))</p> <p></p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#form-der-verteilung","title":"Form der Verteilung","text":"<p>F\u00fcr die meisten Verteilungen kann dabei festgehalten werden:</p> <ul> <li>rechtsschief: \\(x_{mod}&lt;x_{med}&lt;\\overline x\\)</li> <li>symmetrisch: \\(x_{mod}=x_{med}=\\overline x\\)</li> <li>linkschief: \\(x_{mod &gt; x_{med}&gt; \\overline x}\\)</li> </ul> <p></p> <p>Ebenfalls kann eine Verteilung uimodal, bimodal oder multimodal sein. </p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#darstellungsarten-bei-multivariaten-daten","title":"Darstellungsarten bei multivariaten Daten","text":"<p>Jenach, welcher Typ die Merkmale haben, welche verglichen werden sollen, k\u00f6nnen verschiedene Darstellungsarten verwendet werden.</p> Merkmale 1 Merkmal 2 Darstellungsart Kategoriell Kategoriell Tabelarisch, Mosaikplot Kategoriell Metrisch Tabelarisch, Boxplot-Diagram Metrisch Metrisch Scatterplot"},{"location":"22HS/STS/Deskriptive%20Statistik.html#tabelarisch","title":"Tabelarisch","text":"<p>Wenn zwei kategorielle Merkmale verglichen werden, kann es mit einer Tabelle dargestellt werden:</p> Zivielstand/Kaufkraft tief mittel Hoch Ledig 978 1884 1748 Partnerschaft 475 1044 1452 Verheiratet 781 1870 2550 <p>Dabei sagt eine \"Cell\" in der Tabelle, wie viele Leute welchen Zivielstand und Kaufkraft gleichzeitig haben.</p> <p>Dies kann auch mit einem kategoriellen und einem metrischen Merkmal ben\u00fctzt werden.</p> Mittelwert Standardtabweichung tief 2055.353 738.223 mittel 5049.234 1577.482 hoch 12053.706 3715.074 <p>Dabei sagt eine \"Cell\" in der Tabelle z.B. was die durschnittliche Einkaufsbetrag ist, bei Personen mit tiefer Kaufkraft.</p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#mosaikplot","title":"Mosaikplot","text":"<p>Kann nur bei zwei kategoriellen Merkmalen verwendet werden.</p> <p></p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#boxplot_1","title":"Boxplot","text":"<p>Dies kann verwendet werden, wenn ein Merkmal kategoriell ist und das zweite metrisch ist.</p> <p></p> <p>(Das rechte Diagram ist ein Stripplot)</p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#scatterplot","title":"Scatterplot","text":"<p>Scatterplots oder Streudiagramme sind n\u00fctztlich, wenn zwei metrische Merkmale visualisiert werden sollen.</p> <p></p> <p>Ein Risikio bei Scatterplots ist das Overplotten, was passiert, wenn es viele Datenpunkte in einem Bereich hat. Im folgenden Scatterplot hat es vermutlich mehr Punkte als ausgemacht werden k\u00f6nnen. Um dies zu erkennen, k\u00f6nnen weitere Kenngr\u00f6ssen analysiert werden.</p> <p></p> <p>Aus einem Scatterplot kann die Form, Richtung und St\u00e4rke gelesen werden.</p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#form","title":"Form","text":"<p>Die Form ist, wie die Punkte angeordnet sind. Es kann z.B. einen linearen Zusammenhang zwischen den Merkmalen bestehen. Oder die P\u00fcnkte k\u00f6nnen eine gekr\u00fcmmte Kurve oder andere beliebige Form bildet.</p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#richtung","title":"Richtung","text":"<p>Die Richtung kann entweder einen positiven oder negativen Zusammenhang sein. Wenn es Positiv ist, dann sind die beiden Merkmale proportional zueinander (Je gr\u00f6sser A, desto gr\u00f6sser ist B). Wenn es Negativ ist, dann sind die beiden Merkmale umgekehrt proportional zueinander (Je gr\u00f6sser A, desto kleiner B).</p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#starke","title":"St\u00e4rke","text":"<p>Die St\u00e4rke sagt aus, wie viel oder wenig Streung vorliegt. Wenn die St\u00e4rke klein ist, dann besteht ein starker Zusammenhang.</p> <p></p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#paerson-korrelationskoeffizient","title":"Paerson-Korrelationskoeffizient","text":"<p>Mit folgenden Formeln kann der Korrelationskoeffizient \\(r_{xy}\\) ausgerechnet werden. Dabei ist \\(\\tilde S_{x}\\) die Standardtabweichung und \\(\\tilde S_{xy}\\) die Kovarianz. $$ r_{xy}=\\frac{\\tilde S_{xy}}{\\tilde S_x \\cdot \\tilde S_y}\\ \\tilde S_{xy}=\\frac 1 n\\sum^n_{i=1}(x_i-\\overline x)(y_i-\\overline y)=\\overline{xy}-\\overline x \\cdot \\overline y\\ \\tilde S_x=\\sqrt{\\frac 1 n\\sum^n_{i=0}(x_i-\\overline x)^2}=\\sqrt{\\overline{x^2}-(\\overline x)^2}\\ \\tilde S_y=\\sqrt{\\frac 1 n\\sum^n_{i=0}(y_i-\\overline y)^2}=\\sqrt{\\overline{y^2}-(\\overline y)^2}\\ $$ Wenn der korrigierte Korrelationskoeffizient \\(r_{xy,korr}\\) ben\u00f6tigt wird, k\u00f6nnen folgende Formeln ben\u00fctzt werden: $$ r_{xy,korr}=\\frac{\\tilde S_{xy,korr}}{\\tilde S_{x,korr} \\cdot \\tilde S_{y,korr}}\\ \\tilde S_{xy,korr}=\\frac 1 {n -1}\\cdot \\tilde S_{xy}\\ \\tilde S_{x,korr}=\\sqrt{\\frac n {n - 1}\\tilde S_x^2}\\ \\tilde S_{y,korr}=\\sqrt{\\frac n {n - 1}\\tilde S_y^2}\\ $$ Der Korrelationskoeffizient sagt aus wie fest* zwei Merkmale korrelieren und ob sie proportional oder umgekehrt proportional sind.</p> <p>Wenn der Koeffizient gegen \\(1\\) oder \\(-1\\) geht, dann korrelieren die zwei Merkmale, wenn der Koeffizient gegen 0 tendiert, dann korrelieren die zwei Merkmale nicht oder nicht linear.</p> <p>Wenn der Koeffizient positiv ist, dann sind die Faktoren proportional, wenn der Koeffizient negativ ist, dann sind die Merkmale umgekehrt-proportional.</p> <p></p> <p>Achtung: Problem des Korrelationskoeffizient nach Paerson ist, dass er nur Korrelationen erkennen kann, welche linear sind. Falls die Kurve eine andere Form, als eine Gerade hat, dann wird der Koeffizient gegen \\(0\\) gehen, obwohl die Merkmale korrelileren.</p> <p>Ein weiteres Problem ist, dass der Paerson-Korrelationsfaktor nicht robust ist, und bei Ausreissern fehlerhaft eine Korrelation oder fehlerhaft keine Korrelation anzeigen.</p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#beispiele","title":"Beispiele","text":"Diagramme Korrelations-koeffizient Bemerkung \\(r_{xy}=0.988\\) Die beiden Merkmale korrelieren proportional \\(r_{xy}=0.174\\) Die beiden Merkmale korrelieren nicht \\(r_{xy}=-0.976\\) Die beiden Merkmale korrelieren umgekehrt proportional \\(r_{xy, mit}=0.909\\)\\(r_{xy, ohne}=0.597\\) Die beiden Merkmale sind proportional, wenn der Ausreisser mitgerechnet wird (\\(r_{xy, mit}\\)), hingegen, wenn der Ausreisser nicht mit gerechnet wird, dann sinkt \\(r_{xy}\\)"},{"location":"22HS/STS/Deskriptive%20Statistik.html#spearman-rangkorrelationskoeffizient","title":"Spearman-Rangkorrelationskoeffizient","text":"\\[ r_{Sp}=\\frac{\\sum^n_{i=1}(\\rg(x_i) - \\overline{\\rg(x)})\\cdot(\\rg(y_i)-\\overline{\\rg(y)})} {\\sqrt{\\sum^n_{i=1}(\\rg(x_i) - \\overline{\\rg(x)})^2} \\cdot \\sqrt{\\sum^n_{i=1}(\\rg(y_i) - \\overline{\\rg(y)})^2}} \\] <p>Dabei ist \\(\\rg(x_i)\\) Der Rang von \\(x_i\\) und kann als \\(\\rg(x_i)=1+Anzahl(j \\vert x_j &lt; x_i) + \\frac 1 2 Anzahl(j | x_j = x_i, i \\neq j)\\). In Deutsch: 1 + die Anzahl von Elementen \\(x_j\\), welche kleiner als \\(x_i\\) sind + die halbe Anzahl von Elementen, welche gleich sind, wie \\(x_i\\).</p> <p>Hier ist ein Beispiel: </p> <p></p> <p>Daraus ergibt sich folgendes: $$ \\sqrt{\\sum^n_{i=1}(\\rg(x_i) - \\overline{\\rg(x)})^2} = \\sqrt{\\sum^n_{i=1}(\\rg(y_i) - \\overline{\\rg(y)})^2}\\ \\sqrt{\\sum^n_{i=1}(\\rg(x_i) - \\overline{\\rg(x)})^2} =\\sqrt{2.5^2+(-0.5)^2 + 1.5^2 + (-2.5)^2+0.5^2+(-1.5)^2}=\\sqrt{17}\\ \\sum^n_{i=1}(\\rg(x_i)-\\overline{\\rg(x)})(\\rg(y_i)- \\overline{\\rg(y)})\\= 2.5 \\cdot 2.5 + (-0.5)\\cdot (-1.5) + 1.5 \\cdot 1.5 + (-2.5)\\cdot (-0.5) + 0.5 \\cdot 0.5 + (-1.5)\\cdot (-2.5)=14.5\\</p> <p>r_{Sp}=\\frac{\\sum^n_{i=1}(\\rg(x_i) - \\overline{\\rg(x)})\\cdot(\\rg(y_i)-\\overline{\\rg(y)})} {\\sqrt{\\sum^n_{i=1}(\\rg(x_i) - \\overline{\\rg(x)})^2} \\cdot \\sqrt{\\sum^n_{i=1}(\\rg(y_i) - \\overline{\\rg(y)})^2}} = \\frac{14.5}{\\sqrt{17.5}\\cdot\\sqrt{17.5}}\\approx 0.83 $$</p>"},{"location":"22HS/STS/Deskriptive%20Statistik.html#verbundene-range","title":"Verbundene R\u00e4nge","text":"<p>Wenn die x- oder y-Elemente doppelte Elemente enhalten (z.B. zwei <code>4</code>), dann wird von verbundenen R\u00e4ngen gesprochen. Dabei wird der Durchschnitt der R\u00e4nge berechnet</p> <p></p> <p>In diesem Fall w\u00e4re der Rang von \\(x_3\\) und \\(x_4\\) <code>3</code> oder <code>4</code>, daher wird der Durschschnitt als Ranggenommen und wird somit \\(\\rg(x_3)=\\rg(x_4)=3.5\\)</p> <p></p> <p>Das gilt auch, wenn mehr als zwei gleiche Werte existieren. In diesem Fall kann der Rang von \\(x_3\\), \\(x_4\\) und \\(x_5\\) <code>3</code>, <code>4</code>, oder <code>5</code> sein. Daher wird der Rang zum Durchschnitt von 3, 4, 5. \\(\\rg(x_3)=\\rg(x_4)=\\rg(x_5)=4\\)</p>"},{"location":"22HS/STS/Kombinatorik.html","title":"Kombinatorik","text":""},{"location":"22HS/STS/Kombinatorik.html#binomialkoeffizient","title":"Binomialkoeffizient","text":"\\[ \\begin{pmatrix}n \\\\k \\end{pmatrix}=\\frac{n!}{(n-k)!\\cdot k!} \\] <p>In Python der Befehl <code>scipy.special.binom(n, k)</code> kann benutzt werden</p>"},{"location":"22HS/STS/Kombinatorik.html#beispiels-probleme","title":"Beispiels Probleme","text":""},{"location":"22HS/STS/Kombinatorik.html#zahlenschloss-problem","title":"Zahlenschloss-Problem","text":"<p>Es gibt ein Zahlencode mit 6 Zahlen von 0 bis 9. In diesem Fall gibt es \\(10^6\\) Kombinationen. Es kommt dabei auf die Reihenfolge der Zahlen darauf an. Also <code>000222</code> ist nicht das selbe, wie <code>222000</code>.</p> <p>Generalisiert, wenn es \\(n\\) Stellen mit \\(b\\) M\u00f6glichkeiten gibt, dann gibt es \\(b^n\\) M\u00f6glichkeiten.</p>"},{"location":"22HS/STS/Kombinatorik.html#schwimmwettkampf-problem","title":"Schwimmwettkampf-Problem","text":"<p>Es starten 10 Schwimmerinnen, wie viel m\u00f6gliche Platzierungen gibt es, wenn nur die ersten drei Pl\u00e4tze betrachtet werden? F\u00fcr den ersten Platz gibt es \\(10\\) M\u00f6glichkeiten, f\u00fcr den zweiten \\(9\\) M\u00f6glichkeiten und f\u00fcr den dritten \\(8\\) M\u00f6glichkeiten. Daher \\(10\\cdot 9 \\cdot 8=\\frac{10!}{(10-3)!}=\\frac{10!}{7!}\\). Dabei kommt es auf die Reihenfolge darauf an.</p> <p>Dies kann generaliesiert auf folgendes werden: $$ \\frac{AnzahlStellen!}{(AnzahlStellen - AnzahlRelevantenStellen)!} $$</p>"},{"location":"22HS/STS/Kombinatorik.html#lotto-problem","title":"Lotto-Problem","text":"<p>Wie gross sind die Chancen beim Lotto \"6 aus 49\" mit einem Versuch sechs richtige Zahlen vorauszusagen? Es gibt 49 Kugel mit Zahlen, von welchen 6 gezogen werden. Nachdem eine Kugel gezogen wurde, wird sie nicht wieder zur\u00fcck gelegt und kann daher nicht zwei mal gezogen werden.</p> <p>\\(\\frac{49!}{(49-6)!}=\\frac{49!}{43!}\\) sind die Anzahl M\u00f6glichkeiten, wenn die Reihenfolge darauf ank\u00e4me. Bei diesem Lotto ist dies aber nicht der Fall, daher m\u00fcssen noch \\(6!\\) M\u00f6glichkeiten \"abgezogen\" werden, da es f\u00fcr jede Menge von 6 Zahlen \\(6!\\) M\u00f6glichkeiten gibt, sie anzuordnen. Es ergibt sich daraus \\(\\frac{49!}{(49-6)!\\cdot 6!}=\\begin{pmatrix}49 \\\\ 6\\end{pmatrix}\\)</p> <p>Generalisiert: Wenn \\(n\\) M\u00f6glichkeiten gibt, von welchen \\(k\\) von Interesse sind, dabei aber die Reihenfolge vernachl\u00e4ssigbar ist, dann wird der Binomialkoeffizienten ben\u00fctzt: \\(\\begin{pmatrix}n \\\\ k \\end{pmatrix}\\)</p>"},{"location":"22HS/STS/Kombinatorik.html#zahnarzt-problem","title":"Zahnarzt-Problem","text":"<p>Eine Zahn\u00e4rztin erlaubt den Kindern, nach der Behandlung zur Belohnung 3 Spielzeuge aus 5 T\u00f6pfen auszusuchen. Jeder Topf ist mit derselben Art von Spielzeugen gef\u00fcllt. Wie viele verschiedene M\u00f6glichkeiten hat ein Kind?</p> <p>F\u00fcr dieses Problem kann folgendes Ersatzproblem verwendet werden: Ein Spielzeug wird als <code>X</code> markiert. Die Markierungen werden mit <code>|</code> unterteilt, was die Grenzen zwischen den T\u00f6pfen markiert. Z.B. <code>X||XX||</code> heisst, das Kind hat 1 Spielzeug aus dem ersten Topf und zwei Spielzeuge aus dem dritten Topf genommen. Eine andere Betrachtungsweise w\u00e4re, es gibt 7 Stellen, wovon 3 eine <code>X</code> sind. Dies kann als \\(\\begin{pmatrix}7 \\\\ 3\\end{pmatrix}=\\begin{pmatrix}5+3-1 \\\\ 3\\end{pmatrix}\\) geschrieben werden.</p>"},{"location":"22HS/STS/Spezielle%20Verteilung.html","title":"Spezielle Verteilung","text":""},{"location":"22HS/STS/Spezielle%20Verteilung.html#normalverteilung","title":"Normalverteilung","text":"<p> $$ \\varphi_{\\mu, \\sigma}(x)=\\frac {1}{\\sqrt{2\\pi}\\cdot \\sigma}\\cdot e^{-\\frac 1 2((x-\\mu) : \\sigma)^2}\\ $$</p> <ul> <li>Die Normalverteilung ist normiert, heisst dass \\(\\int^\\infty_{-\\infty}\\varphi(x)dx=1\\)   Daher, je gr\u00e4sser \\(\\sigma\\) wird, desto breiter und niedriger wird die Glockenkurve.</li> </ul>"},{"location":"22HS/STS/Spezielle%20Verteilung.html#zentraler-grenzwert","title":"Zentraler Grenzwert","text":"<p>Wenn eine Liste von identische verteilte und stochastisch unabh\u00e4ngige Zufallsvariablen \\(X_1, X_2, ..., X_n\\) haben, dann</p>"},{"location":"22HS/STS/summary/STS%20Summary.html","title":"STS Summary","text":"","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#deskriptive-statistik","title":"Deskriptive Statistik","text":"Funktion Nicht Klassiert Klassiert absolute H\u00e4uffigkeit \\(h(x)\\) relative H\u00e4uffikeit (PMF) \\(f(x)\\) / \\(g(x)\\) \\(f(x)=\\frac{h(x)}n\\) \\(g(x)=f_i\\) Dichtefunktion \\(f(x)\\) (\\(b_i=\\) Klassengr\u00f6sse ) (PDF) - \\(f(x)=\\frac{g(x)}{b_i}\\) kummulative absolute H\u00e4uffigkeit \\(H(x)\\) \\(H(x)=\\sum_{a_i \\lt x}h_i\\) - kummulative relative H\u00e4uffigkeit (CDF) \\(F(x)\\) \\(F(x)=\\sum_{a_i}f_i=\\frac{H(x)}{n}\\) \\(F(x)=\\int^x_{-\\infty}f(y)\\mathrm d y\\), \\(F(x)=F(a_i)+\\frac{x-a_i}{a_{i+1}-a_i}\\cdot (F(a_{i+1})-F(a_i))\\) Modus \\(x_{mod}\\) H\u00f6chste absolute H\u00e4ufigkeit gleich Klassenmitte \\(M_i\\) - \\(M_i=\\frac{a_{i+1}-a_i}{2}\\) Stichprobenmittelwert \\(\\overline x\\) \\(\\overline x=\\frac 1 n\\sum^n_{i=1}x_i\\) \\(\\overline x=\\sum^n_{i=1}M_i\\cdot f_i\\) Varianz \\(s^2 = \\frac 1 n \\sum^n_{i=1}(x_i - \\overline x)^2 \\\\ = \\frac 1 n \\left (\\sum^n_{i=1}x_i^2 \\right)- \\overline x ^2\\) \\(s^2=\\sum^n_{i=1}(M_i-\\overline x)^2\\cdot f_i\\) Korrigierte Varianz \\(s_{korr}^2=\\frac 1 {n-11}\\sum^n_{i=1}(x_i - \\overline x)^2 \\\\ = \\frac n {n - 1}s^2\\) \\(s_{korr}^2= \\frac n {n - 1}s^2\\) (korrigierte) Standardabweichung \\(s\\) \\(s=\\sqrt{s^2}\\) gleich Kovarianz \\(s_{xy}=\\frac 1 n \\sum^n_{i=1}(x_i-\\overline x)\\cdot (y_i- \\overline y)\\\\= \\left(\\frac 1 n \\sum^n_{i=1}x_iy_i\\right)-\\overline x \\cdot \\overline y\\) -","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#quantile-boxplot","title":"Quantile / Boxplot","text":"\\[ \\text{Nicht klassiert:}\\\\ R_q=\\begin{cases} \\frac{x_{[n \\cdot q]}+x_{[n\\cdot q + 1]}}{2} &amp; n \\cdot q \\text{ ganze Zahl}\\\\ x_{[\\lceil n\\cdot q\\rceil]} &amp; n\\cdot q \\text{ keine ganze Zahl} \\end{cases}\\\\\\\\ \\text{klassiert:}\\\\ R_q=\\frac{b - a}{F(b) - F(a)}\\cdot (q - F(a)) + a \\]","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#pearson-korrelationskoeffizient","title":"Pearson-Korrelationskoeffizient","text":"\\[ r_{xy}=\\frac{S_{xy}}{S_x\\cdot S_y} \\] \\(r_{xy}\\approx 1\\) Positiver Linearer Zusammenhang \\(r_{xy}\\approx -1\\) Negatiber Linearer Zusammenhang \\(r_{xy}\\approx 0\\) Punkte sind gleichm\u00e4ssig um den Schwerpunkt \\((\\overline x, \\overline y)\\) verteilt <p>Der Pearon-Korrelationskoeffizient ist nicht robust und kann von Ausreisser stark beeinflusst werden.</p>","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#spearman-rangkorrelationskoeffizient","title":"Spearman-Rangkorrelationskoeffizient","text":"\\[ \\DeclareMathOperator{\\rg}{rg} r_{Sp}=\\frac{\\sum^n_{i=1}(\\rg(x_i) - \\overline{\\rg(x)})\\cdot(\\rg(y_i)-\\overline{\\rg(y)})} {\\sqrt{\\sum^n_{i=1}(\\rg(x_i) - \\overline{\\rg(x)})^2} \\cdot \\sqrt{\\sum^n_{i=1}(\\rg(y_i) - \\overline{\\rg(y)})^2}}\\\\ \\rg(x_i)=1+Anzahl(j \\vert x_j &lt; x_i) + \\frac 1 2 Anzahl(j | x_j = x_i, i \\neq j) \\] <p>Deutsch: 1 + die Anzahl von Elementen \\(x_j\\), welche kleiner als \\(x_i\\) sind + die halbe Anzahl von Elementen, welche gleich sind, wie \\(x_i\\).</p> <p>Wenn es doppelte x- oder y-Elemente gibt, dann wird von verbundenen R\u00e4ngen gesprochen, wobei der Durchschnitt der R\u00e4nge berechnet wird.</p> <p>Der Spearman-Rangkorrelationskoeffizient misst, ob die Daten eine Korrelation mit einer strengen monotoner funktion haben (eine Funktion, welche immer steigt oder f\u00e4llt)</p> <p>TODO: Multivarianten Daten darstellen</p>","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#kombinatorik","title":"Kombinatorik","text":"<p>Binomialkoeffizient: \\(\\begin{pmatrix}n \\\\k \\end{pmatrix}=\\frac{n!}{(n-k)!\\cdot k!}\\) Wieviel M\u00f6glichkeiten gibt es \\(k\\) Objekte von \\(n\\) Objekten auszuw\u00e4hlen</p> <p>\\(n\\) sind die Anzahl Optionen, \\(k\\) wie oft gezogen wird</p> <p></p> <p>Kombination mit Wiederholung: \\(k\\) Objekte aus \\(n\\) m\u00f6glchen Sorten/T\u00f6pfen</p> <p>Beispiele:</p> <ul> <li>Anzahl M\u00f6glichenkeiten f\u00fcr eine Personengruppe mit 20 potentiellen Personen: \\(2^{20}-1\\)   Jede Person ist entweder in der Gruppe oder nicht und \\(-1\\) wegen der Leeren-Menge</li> </ul>","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#wahrscheinlichkeit","title":"Wahrscheinlichkeit","text":"\\[ \\text{Z\u00e4hldichte: } \\rho: \\Omega \\to [0, 1]\\\\ \\text{Wahrscheinlichkeitsmass: } P: 2^\\Omega \\to [0, 1], P(M)=\\sum_{\\omega \\in M} \\rho(\\omega) \\] <p>Der Wahrscheinlichkeitsraum \\((\\Omega, P)\\) wird Laplace-Raum genannt, wenn alle Ereignisse gleichwahrscheinlich sind.</p> <p>TODO:  geometrische Reihe</p> <ul> <li>\\(P(X=x)=f(x)\\)</li> <li>\\(P(X \\le x)=F(x)\\)</li> <li>\\(P(a \\le X \\le b)=P(X\\le b)-P(X\\le a)\\)</li> <li>\\(P(X &gt; x)=1-P(X\\le x)\\)</li> </ul>","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#kenngrossen","title":"Kenngr\u00f6ssen","text":"<p>Lagemass: Was ist das Zentrum Streumass: Die Verteilung des Merkmals</p> <ul> <li>Erwartungswert \\(E(X)=\\sum_{x\\in\\R}P(X=x)\\cdot x\\)</li> <li>\\(E(X+Y)=E(X)+E(Y)\\) und \\(E(\\alpha X) = \\alpha E(X)\\)</li> <li>Varianz    \\(V(X)=E(X^2)-(E(X))^2 = E((X-E(X)^2)=\\\\(\\sum_{x\\in\\R}P(X=x)\\cdot x^2)-E(X)^2=\\sum_{x\\in\\R}P(X=x)\\cdot(x-E(X))^2\\)</li> </ul>","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#bedingte-wahrscheinlichkeit","title":"Bedingte Wahrscheinlichkeit","text":"<ul> <li>Eintreten von \\(B\\), wenn \\(A\\) eingetroffen ist (Satz von Bayes): \\(P(B\\vert A) = \\frac{P(A\\cap B)}{P(A)}=\\frac{P(A\\vert B)\\cdot P(B)}{P(A)}\\)</li> <li>Multiplikationssatz: \\(P(A\\cap B)=P(A\\vert B)\\cdot P(B)=P(B\\vert A)\\cdot P(A)\\)</li> <li>Satz von der Totalen Wahrscheinlichkeit: \\(P(A)=P(A\\vert B)\\cdot P(B) + P(A|\\overline B)\\cdot P(\\overline B)\\)</li> </ul>","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#vierfeldertafel","title":"Vierfeldertafel","text":"<p>Die Ereignisse in einer Vierfeldertafel m\u00fcssen Disjunkt sein.</p>","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#stochastische-unabhangigkeit","title":"Stochastische Unabh\u00e4ngigkeit","text":"<p>Zwei Ereignisse \\(A\\) und \\(B\\) sind stochastisch unabh\u00e4ngig, wenn gilt \\(P(A\\cap B)=P(A)\\cdot P(B)\\).</p> <p>Wenn \\(A\\) und \\(B\\) stochastisch unabh\u00e4nig sind:</p> <ul> <li>sind auch \\(\\overline A\\) und \\(\\overline B\\), wie \\(\\overline A\\) mit \\(B\\) und \\(A\\) mit \\(\\overline B\\) unabh\u00e4ngig</li> <li>gilt \\(P(A\\vert B)=P(A)\\) und \\(P(B\\vert A)=P(B)\\)</li> <li>gilt \\(E(X\\cdot Y)=E(X)\\cdot E(Y)\\) und \\(V(X+Y)=V(X) + V(Y)\\)</li> </ul> <p>Um zu \u00fcberpr\u00fcfen ob \\(n\\) Ereignisse unabh\u00e4nig sind, braucht es \\(2^n - n -1\\) Gleichungen, da sie disjunkt unabh\u00e4ngig sein m\u00fcssen.</p>","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#spezielle-verteilungen","title":"Spezielle Verteilungen","text":"","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#hypergeometrische-verteilung-x-sim-hn-m-n","title":"Hypergeometrische Verteilung (\\(X \\sim H(N, M, n)\\))","text":"<p>Es gibt eine Urne mit \\(N\\) Objekte, von welchen \\(M\\) einer bestimmten Sorte angeh\u00f6hren (\\(N- M\\) geh\u00f6hren zu anderen Sorten). Zuf\u00e4llig wird eine Stichprobe von \\(n\\) Objekten aus der Urne genommen. Wichtig ist, dass nicht Zur\u00fcckgelegt wird.</p> <p>Die Zufallsvariable \\(X\\) beschriebt die Anzahl von Objekten von der Sorte \\(M\\). Es gilt \\(X \\sim H(N, M, n)\\) $$ P(X=x)=\\frac{\\begin{pmatrix}M\\x\\end{pmatrix}\\cdot \\begin{pmatrix}N - M\\n - x\\end{pmatrix}} {\\begin{pmatrix}N\\n\\end{pmatrix}}\\ $$</p> \\[ \\begin{align} \\mu=E(X)&amp;=n\\cdot \\frac M N\\\\ \\sigma^2=V(X)&amp;=n\\cdot \\frac M N \\cdot (1 - \\frac M N) \\cdot \\frac{N - n}{N - 1}\\\\ \\sigma = S(X)&amp;=\\sqrt{n\\cdot \\frac M N \\cdot (1 - \\frac M N) \\cdot \\frac{N - n}{N - 1}} \\end{align} \\]","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#bernoulliverteilung","title":"Bernoulliverteilung","text":"<p>Ein Bernoulli-Expermient, ist ein Zufallsexperiment, inwelchem es nur zwei M\u00f6glichkeiten gibt. $$ \\begin{align} P(X=1)&amp;=p\\ P(X=0)&amp;=1-p=q\\ \\end{align} $$</p> \\[ \\begin{align} E(X)&amp;= P(X=1)=p\\\\ E(X^2)&amp;= P(X=1) = p\\\\ V(X)&amp;=E(X^2)-(E(X))^2=p - p^2 \\end{align} \\]","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#binomailverteilung-xsim-bn-p","title":"Binomailverteilung (\\(X\\sim B(n, p)\\))","text":"<p>Wenn ein Bernoulliexperiment \\(n\\)-mal wiederholt wird und die Wahrscheinlichkeit f\u00fcr \\(P(X=1)=p\\) ist und \\(q=1-p\\). Die Wiederholungen m\u00fcssen stochastisch unabh\u00e4ngig sein. </p> <p>Es gilt \\(X\\sim B(n, p)\\) $$ P(X=x)=\\begin{pmatrix}n\\x\\end{pmatrix}\\cdot p^x\\cdot q^{n-x} $$</p> \\[ \\begin{align} \\mu=E(X)&amp;=np\\\\ \\sigma^2=V(X)&amp;=npq\\\\ \\sigma = S(X)&amp;=\\sqrt{npq} \\end{align} \\] <p>Wenn gilt \\(n \\lesssim \\frac N {20}\\), dann kann die eine hypergeometrische Verteilung mit einer Binomialverteilung angen\u00e4hert werden: \\(H(N, M, n)\\approx B(n, \\frac M N)\\)</p>","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#poissonverteilung-xsim-plambda","title":"Poissonverteilung (\\(X\\sim P(\\lambda)\\))","text":"<p>Die Poissonverteilung kann als stochastisches Modell benutzt werden, wenn es um die Wahrscheinlichkeit f\u00fcr das Eintreten einer bestimmten Anzahl gleichartiger Ereignisse geht, welche in einem gegebenen Bereich \\(\\lambda\\) (unabh\u00e4ngigi voneiner) beliebig oft auftreten k\u00f6nnen. $$ P(X=x)=\\frac{\\lambda^x}{x!}\\cdot e^{-\\lambda} $$</p> \\[ \\begin{align} \\mu=E(X)&amp;=\\lambda\\\\ \\sigma^2=V(X)&amp;=\\lambda\\\\ \\sigma = S(X)&amp;=\\sqrt{\\lambda} \\end{align} \\] <p>F\u00fcr eine Binomialverteilung wenn \\(n\\) gegen unendlich geht und \\(\\lambda=np\\) konstant ist, dann kann eine Binomialverteilung mit einer Poissonverteilung approximiert werden: \\(B(n, p)\\xrightarrow{n\\to \\infty \\text{ und } \\lambda=np \\text{ konstant}} Poi(\\lambda)\\)</p> <p>Ebenfalls wenn \\(n \\gtrsim 50\\) und \\(p\\lesssim 0.1\\), dann kann eine Binomialverteilung mit einer Poissonverteilung approximiert werden: \\(B(n, p)\\approx Poi(n\\cdot p)\\)</p>","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#gausssche-verteilung-xsim-nmu-sigma-xsim-n0-1","title":"Gauss'sche Verteilung (\\(X\\sim N(\\mu, \\sigma)\\) / \\(X\\sim N(0, 1)\\))","text":"\\[ \\begin{align} \\text{PDF: }\\varphi_{\\mu,\\sigma}(x)&amp;=\\frac{1}{\\sqrt{2\\pi}\\cdot\\sigma}\\cdot e^{-\\frac1 2\\cdot (\\frac{x-\\mu}{\\sigma})^2}\\\\ \\text{CDF: }\\phi_{\\mu, \\sigma}(x)&amp;=\\int^x_{-\\infty}\\varphi_{\\mu, \\sigma}(t)\\mathrm dt0 =\\frac 1 {\\sqrt{2\\pi}\\cdot \\sigma}\\cdot \\int^x_{-\\infty}e^{-\\frac 1 2(\\frac{t-\\mu}{\\sigma})^2}\\mathrm dt \\end{align} \\] <p>Wenn \\(\\mu=0\\) und \\(\\sigma = 1\\) ist, dann wird von einer Standardnormalverteilung gesprochen und wird einfach als \\(\\varphi(x)\\) bezeichnet: $$ \\varphi(x)=\\frac 1 {\\sqrt{2\\pi}}\\cdot e^{-\\frac 1 2 x^2} $$ Um eine \"normale\" Gauss'sche Verteilung zu standardisieren, wird anstatt der Zufallsvariable \\(X\\) folgende Definition \\(U=\\frac{X-\\mu} \\sigma\\) verwendet.</p> <p>Der Erwartungswert \\(\\mu\\) und Standardabweichung \\(\\sigma\\) sind Parameter.</p> <p>Eine Normalverteilung hat folgende Eigenschaften:</p> <ul> <li>Ist Symetrisch bei der Geraden \\(x=\\mu\\)</li> <li>Hat Wendepunkte bei \\(\\mu-\\sigma\\) und \\(\\mu + \\sigma\\)</li> <li>Ist normiert (totale Fl\u00e4che unter der Kurve = 1)</li> <li>Je gr\u00f6sser \\(\\sigma\\), desto breiter und niedriger wird die Glockenkurve</li> <li>Eine \u00c4nderung von \\(\\mu\\) verschiebt die Kurve in der x-Richtung</li> <li>\\(P(a \\le X \\le b) = P(a &lt; X &lt; b) = \\phi_{\\mu, \\sigma}(b)-\\phi_{\\mu, \\sigma}(a)\\)</li> <li>\\(P(\\vert X - \\mu \\vert \\le \\varepsilon)=P(\\mu - \\varepsilon \\le X \\le \\mu + \\varepsilon)=2\\cdot \\phi_{\\mu, \\sigma}(\\mu + \\varepsilon) - 1= 1 - 2\\cdot \\phi_{\\mu,\\sigma}(\\mu - \\varepsilon)\\)</li> </ul> <p></p> <p>F\u00fcr die Verteilung \\(N(\\mu, \\sigma)\\), liegen</p> <ul> <li>ca. 68% der Werte zwischen \\(\\mu-\\sigma\\) und \\(\\mu + \\sigma\\)</li> <li>ca. 95% der Werte zwischen \\(\\mu-2\\sigma\\) und \\(\\mu + 2\\sigma\\)</li> <li>ca 99.7% der Wete zwischen \\(\\mu-3\\sigma\\) und \\(\\mu + 3\\sigma\\)</li> </ul> <p></p>","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#approximationen","title":"Approximationen","text":"Was Bedingung Approximation \\(X\\sim B(n, p)\\) \\(npq&gt;9\\) \\(P(a\\le X \\le b)=\\sum^b_{x=a}P(X=x)\\approx \\phi_{\\mu, \\sigma}(b+\\frac 1 2)-\\phi_{\\mu,\\sigma}(a-\\frac 1 2)\\) \\(X\\sim P(\\lambda))\\) \\(x &gt; 9\\) \\(P(a \\le X \\le b)=\\sum^b_{x=a}P(X=x)\\approx \\phi_{\\mu, \\sigma}(b+\\frac 1 2)-\\phi_{\\mu,\\sigma}(a-\\frac 1 2)\\)","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#zentraler-grenzwertsatz","title":"Zentraler Grenzwertsatz","text":"<p>Wenn mehrere stochastische unabh\u00e4ngige Zufallsvariabeln den selben Erwartungswert \\(\\mu\\) und dieselbe Varianz \\(\\sigma ^2\\) haben, dann gilt f\u00fcr die Summe \\(S_n=\\sum^n_{i=1}X_i\\) der Zufallsvariabeln folgendes:</p> <ul> <li>\\(E(S_n)=n\\mu\\)</li> <li>\\(V(S_n)=n\\sigma^2\\)</li> </ul> <p>Zus\u00e4tzlich gilt, dass die Vertielungsfunktion \\(F_n(u)\\) der standartisierten Zufallsvariable $$ U_n=\\frac{(X_1 + X_2 +...+X_n)-n\\mu}{\\sqrt n \\cdot \\sigma}=\\frac{\\overline X - \\mu}{\\frac \\sigma {\\sqrt{n}}}\\ \\overline X = \\frac {S_n} n $$ f\u00fcr \\(n\\to\\infty\\) gegen die Verteilungsfunktion \\(\\phi(u)\\) der Standardnormalverteilung konvergiert.</p> <p>Es kann ebenfalls gesagt werden, dass das arithmetische Mittel \\(\\overline X_n\\) von \\(n\\) identisch verteilen, unabh\u00e4nigen Zufallsvariablen n\u00e4herungsweise \\(N(\\mu, \\frac \\sigma {\\sqrt n})\\) verteilt ist.</p>","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#regression","title":"Regression","text":"<p>Das Ziel einer Regresinos-Gerade \\(g=m\\cdot x + d\\) ist es den Residuen (oder Fehler) \\(\\sum^n_{i=1} (y_i-g(x_i))^2\\) zu minimieren.  $$ m=\\frac{S_{xy}}{S_x^2}{}\\ d=\\overline y - m\\overline x\\ S_\\epsilon^2=\\S_y^2-\\frac{S_{xy}^2}{S_x^2} $$ \\(S_{xy}\\) ist die kovarianz, \\(S_x^2\\) ist die (nicht korrigierte)  Varianz, \\(S_\\epsilon^2\\) ist die Residualvarianz</p>","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#bestimmtheitsmass","title":"Bestimmtheitsmass","text":"\\[ \\begin{align} S_y^2&amp;=S_\\epsilon^2 + S_{\\hat y}^2\\\\ R^2&amp;=\\frac{S_{\\hat y}^2}{S_y^2}\\\\ R^2&amp;=\\frac{S_{xy}^2}{S_x^2\\cdot S_y^2}=r_{xy}^2 \\\\ &amp;=\\text{Pearson-Korrelationskoeffizient} \\end{align} \\] <p>Das Bestimmheitsmass ist zwischen 0 und 1. 0 heisst dass die Gerate nicht passt. 1 heisst, dass die Gerade perfekt passt. Wenn \\(R^2=0.75\\) ist, bedeut dies, dass 75% der gesammten Varianz durch die Regressionsgerade erkl\u00e4rt wird und 25% ist zufalls bedingt.</p> <p></p>","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#linearisieren","title":"Linearisieren","text":"<p>Eine nicht lineare Funktion kann linearisiert werden. Danach ist sie linear und kann durch eine Regressions-Gerade angen\u00e4hert werden.</p> <p></p>","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#matrizen","title":"Matrizen","text":"<p>Gegeben sind \\(n\\) Gleichungen und es sind \\(k\\) Regressionsparameter \\(x_1\\), \\(x_2\\), ..., \\(x_k\\) gesucht.</p> <p></p> <p>Die L\u00f6sung f\u00fcr \\(\\vec x\\) ist: \\(\\vec x=(A^TA)^{-1}X^T\\vec y\\)</p>","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#schliessende-statistik","title":"Schliessende Statistik","text":"<p>\\(\\Theta=g(X_1, X_2, ..., X_n)\\) ist eine Funktion, welche von \\(n\\) Stichprobenvariabeln die Grundgesammtheit sch\u00e4tzen kann. Ein Sch\u00e4tzwert wird als \\(\\hat \\theta\\) bezeichnet. \\(\\theta\\) (ohne Dach) ist der eigentliche, unbekannte Wert/Parameter.</p> <p></p> <p>\\(\\overline X\\) und \\(S^2\\) sind erwartungstreu (\\(E(\\Theta)=\\theta\\)) und konsistent. \\(S\\) ist konsitent (\\(E(\\Theta)\\to \\theta\\) und \\(V(\\Theta)\\to 0\\) f\u00fcr \\(n\\to \\infty\\)) aber nicht erwartungstreu. </p> <p>Eine Sch\u00e4tzfunktion \\(\\Theta_1\\) ist effizienter als \\(\\Theta_2\\) wenn gilt \\(V(\\Theta_1) &lt; V(\\Theta_2)\\)</p> <p></p>","tags":["summary","STS"]},{"location":"22HS/STS/summary/STS%20Summary.html#vertrauensintervalle","title":"Vertrauensintervalle","text":"<p>Es werden zwei Stichprobenfunktionen \\(\\Theta_u\\) und \\(\\Theta_o\\) bestummen, welche den wen wahren Wert \\(\\theta\\) mit einer vorgegebener Wahrscheinlichkeit von \\(\\gamma\\) einschliesst. $$ P(\\Theta_u \\le \\theta \\le \\Theta_o)=\\gamma $$ Wenn konkrete Werte in \\(\\Theta_u\\) und \\(\\Theta_o\\) eingesetzt werden, dann wird das Intervall \\([c_u; c_o]\\) gebildet. \\(\\gamma\\) heisst das Vertrauensniveau (oder statistische Sicherheit) und \\(\\alpha = 1 - \\gamma\\) ist die Irrtumwahrscheinlichkeit.</p> <p></p>","tags":["summary","STS"]},{"location":"22HS/SWEN1/01_Usability%20Engineering.html","title":"Usability Engineering","text":""},{"location":"22HS/SWEN1/01_Usability%20Engineering.html#usabilityuxcustomer-experience","title":"Usability/UX/Customer Experience","text":"<p>Usability ist wie einfach kann eine Applikation verwendet werden.</p> <p>Eine gute Usability hat eine Software, wenn sie effiektiv, effizient und mit einer hohen Zufriedenheit vom Nutzer genutzt werdenn kann.</p> <ul> <li>Effekivit\u00e4t: Der Nutzer kann die Aufgaben mit gew\u00fcnschter Genauigkeit ausf\u00fchren</li> <li>Effizient: Der Nutzer kann die Aufgaben mit minimalem Aufwand ausf\u00fchren</li> <li>Zufriedenheit: selbsterkl\u00e4rend...</li> </ul> <p>Wenn von User Experience (UX) die Rede ist, wird gemeint, wie sich die Applikation anf\u00fchlt (Usability + Desirability). Wenn die Customer Experience gemeint ist, wird vom Gesammteindruck der App, der marke und der Firma gesprochen (Usability + UX + Brand Experience).</p> <p>Es gibt sieben Anforderungsbereiche der Usability (laut DIN EN ISO 9241-110). Je nach Applikation sind nicht alle wichtig oder treffen gar nicht zu.</p> <ol> <li>Aufgabenangemessenheit    Eine Aufgabe soll nur so viele Schritte ben\u00f6tigen, wie minimal n\u00f6tig. Ebenfalls soll nur Informationen angezeigt werden, welche f\u00fcr die aktuelle Aufgabe relevant ist (z.B. Hilfe).     Jede Eingabe sollte nur einmal get\u00e4tigt werden und Eingabefelder sollen Standartwerte oder/und Liste von vordefinierten Werte habe (z.B. L\u00e4nder). Zudem sollen ableitbare Eingaben vorgeschlagen werden.</li> <li>Lernf\u00f6rderlichkeit    Die Software soll Informationen \u00fcber Konzepte und Regeln anbieten, wenn der Nutzer dies w\u00fcnscht. Dies kann beispielsweise \u00fcber Tool-Tipps oder Hilfssystem bewerkstelligt werden.</li> <li> <p>Individualisierbarkeit    Die Applikationen soll sich dem Benutzer anpassen. Dies kann getan werden \u00fcber Tipps, Tool-Tips, Wizards oder auch Tastaturk\u00fcrzel f\u00fcr Experten.</p> </li> <li> <p>Erwartungskonformit\u00e4t    Die Applikation soll strickt interne Regeln anwenden. Die Konsistenz von der Terminologie, Reihenfolgen von Kn\u00f6pfen und Informationsdarstellung sind wichtig und helfen dem Nutzer.</p> </li> <li>Selbstbeschreibungsf\u00e4higkeit    Der Benutzer soll ausreichend informiert werden, wo er ist, was er tun soll und kann, wie er dies zu tun hat (z.B. Formate) und was das System macht.    Dabei k\u00f6nnen Dinge wie Labels und Fehlermeldung hilfreich sein.</li> <li>Steuerbarkeit/Kontrolle    Der Benutzer soll das Tempo und Dialogfluss steuern k\u00f6nnen. Ebenfalls soll der Benutzer zwischen verschiedenen Inputsmodalit\u00e4ten (Maus, Tastatur, Touch, ...) wechseln k\u00f6nnen. Darstellungsformate (Miles vs Kilometer) sollen einstellbar sein.</li> <li>Fehlertoleranz    Die Applikation soll dem Nutzer klar mitteilen, welche Werte als Input erwartet werded. Benutzeraktionen sollen zudem vor Aktionen \u00fcberpr\u00fcft werden. Bei Korrekturen und Fehlermeldungen d\u00fcrfen nie Daten verloren gehen.</li> </ol>"},{"location":"22HS/SWEN1/01_Usability%20Engineering.html#user-centered-design","title":"User-Centered Design","text":""},{"location":"22HS/SWEN1/01_Usability%20Engineering.html#user-domain-research","title":"User &amp; Domain Research","text":"<p>In dieser Phase geht es darum die Nutzer, ihr Umfeld und die Dom\u00e4ne zu verstehen. Daf\u00fcr sollten folgende Fragen beantwortet werden:</p> <ul> <li>\u00dcber den Nutzer:</li> <li>Wer sind die Benutzer?</li> <li>Was sind ihre Arbeit, ihre Aufgaben und Ziele?</li> <li>Wie sieht ihre Umgebung aus?</li> <li>was brauchen sie, um ihre Ziele zu erreichen</li> <li>Welche Begriffe verwenden sie?</li> <li>Welche Normen sind wichtig f\u00fcr sie (organisatorisch, kulturell, sozial)?</li> <li>Was sind Pain-Points in ihrer Arbeit?</li> <li>\u00dcber die Dom\u00e4ne</li> <li>Wie funktioniert das Gesch\u00e4ft der Firma?</li> <li>Was sind wichtige Konzepte, und Prozesse der Dom\u00e4ne?</li> </ul> <p>Um diese Fragen zu beantwortet k\u00f6nnen mehrere Tools benutzt werden: Contextual Inquiry, Interviews, Beobachtung, Fokusgruppen, Umfragen, Nutzungsauswertungen, Dokumentenstudium &amp; Mitbewerber studieren.</p> <p>Folgende Artifakte sollten nach diesem Schritt vorhanden sein: Personas, Usage-Szenarien, Mentales Moddel, Dom\u00e4nenmodell (Siehe Domainmodellierung), Stackeholder Map, Service Blueprint / Gesch\u00e4ftsprozessmodell, UI-Skizzen, Wireframes</p>"},{"location":"22HS/SWEN1/01_Usability%20Engineering.html#contextual-inquiry","title":"Contextual Inquiry","text":"<p>In diesem Verfahren wird ein Nutzer, welcher sein Job erledigt, von einem Experten beobachtet. Der Experte kann w\u00e4hrend des Beobachtens Fragen stellen. </p> <p>Der Nutzen davon ist, dass Nutzer ihre Arbeit demonstrieren k\u00f6nnen.</p>"},{"location":"22HS/SWEN1/01_Usability%20Engineering.html#persona","title":"Persona","text":"<p>Eine Persona ist eine fiktive Person, welche eine Benutzergruppe repr\u00e4sentiert. Dies kann ein n\u00fctzliches Tool sein, um Designentscheidungen zu diskutieren</p> <p>Folgendes sollte aufgeschrieben werden:</p> <ul> <li>Name, Alter, Geschlecht, Herkunft</li> <li>Beruf, Ausbildung, Erfahrung</li> <li>Verantwortlichkeiten, Aufgaben, Pers\u00f6nliche Ziele</li> <li>1 - 2 Usage Szenarien</li> <li>Haltung, Aktivit\u00e4ten, Bed\u00fcrfnisse</li> <li>Umgebung</li> <li>Pain-Points und Frustrationen</li> <li>Erwartungen an neue L\u00f6sung</li> <li>Foto, Kernaussage</li> </ul> <p></p>"},{"location":"22HS/SWEN1/01_Usability%20Engineering.html#usage-context-szenario","title":"Usage- &amp; Context-Szenario","text":"<p>Ein Szenario ist eine kurze Geschichte, welche beschreibt, wie ein Benutzer (Persona) das Produkt in einer konkreten Situation ben\u00fctzt, um eine bestimmte Aufgabe zu erledigen.</p> <p>Dabei wird zwischen einer Usage-Szenario, was beschreibt, wie das Problem bis her gel\u00f6st wurde, und einem Context-Szenario, was beschreibt, wie das Problem in der Zukunft gel\u00f6st wird, unterschieden.</p> <p>Typischerweise ist folgendes enhalten:</p> <ul> <li>Motivation/Trigger: Was l\u00f6st das Szenario aus?</li> <li>Persona und ihre Ziele</li> <li>Aktionen und Interaktionen</li> <li>Kontext</li> <li>Wo findet das Szenario statt?</li> <li>Wer/was ist sonst noch involviert?</li> <li>Probleme und wie damit umgegangen wird</li> </ul> <p>Ein Szenario kann auch als Storyboard umgesetzt werden.</p>"},{"location":"22HS/SWEN1/01_Usability%20Engineering.html#stakeholder-map","title":"Stakeholder Map","text":""},{"location":"22HS/SWEN1/01_Usability%20Engineering.html#service-blueprint-geschaftsprozess","title":"Service Blueprint / Gesch\u00e4ftsprozess","text":""},{"location":"22HS/SWEN1/02_Use%20Case.html","title":"Use-Case","text":"<p>Es gibt drei verschiedene Use-Case-Typen: Brief UC, Informell (Casual UC), Vollst\u00e4ndig (Fully dressed UC).</p> <p>Ein Use Case muss ein konkreten Nutzen f\u00fcr den Akteur erzeugen. Dabei enh\u00e4lt ein Use-Case meistens mehr als eine einzelne Interaktion.</p> <p>Der Titel eins Use-Case sollte dem Schema <code>Kasse er\u00f6ffnen</code> folgen.</p> <p>Der Boss-Test besagt, falls dein Boss dich frag, was du den ganzen Tag gemacht hast und du sagst, du hast die ganze Zeit den einen Use-Case ausgef\u00fchrt, sollte er zufrieden sein.</p> <p>Der Elementary Business Process Test (EBP-Test) besagt, dass ein Use Case eine Aufgabe, die von einer Person und einem Ort zu einer bestimmten Zeit ausgef\u00fchrt wird, als Reaktion auf einen Business Event.</p> <p>Wichtig bei Use-Cases: Das Ping-Pong zwischen den Akteure und dem System gut herausarbeiten. </p>"},{"location":"22HS/SWEN1/02_Use%20Case.html#use-case-finden","title":"Use-Case finden","text":"<ol> <li>Systemgrenzen definieren</li> <li>Prim\u00e4rakteure identifizieren</li> <li>Jobs (Ziele, Aufgaben) der Prim\u00e4rakteure identifizieren</li> </ol>"},{"location":"22HS/SWEN1/02_Use%20Case.html#use-case-diagramm","title":"Use-Case-Diagramm","text":"<p>Im folgenden Diagramm sieht man wie <code>&lt;&lt;extends&gt;&gt;</code> und <code>&lt;&lt;include&gt;&gt;</code> verwendet wird. Mit <code>&lt;&lt;include&gt;&gt;</code> werden Prozesse eingebunden, welche selbst keine vollen Use-Case sind und sind nicht mit einem Akteur verbunden. Der Prozess ist dann im Use-Case enthalten (z.B. Process Sale enh\u00e4lt Handle TWINT Payment). Ein Use-Case kann mit <code>&lt;&lt;extends&gt;&gt;</code> verbunden werden, wenn ein Use-Case erweitert wird (z.B. erweitert den Use-Case \"Process Sale with Voucher\" den Use-Case \"Process Sale\"). Ein erweiterten Use-Case kann eine Verbindung mit einem Akteur haben.</p> <p>Akteure k\u00f6nnen mit generalisiert werden (z.B. Junior Cashier is-a Cashier)</p> <p></p>"},{"location":"22HS/SWEN1/02_Use%20Case.html#brief-use-case","title":"Brief Use-Case","text":"<p>Ein Brief Use-Case wird meistens zu Beginn erstellt. In ein Brief Use-Case kommt folgendes enhalten werden:</p> <ul> <li>Nur Erfolgsszenario</li> <li>Trigger des Use-Case</li> <li>Akteure</li> <li>Summarischen Ablauf des Use-Case</li> </ul>"},{"location":"22HS/SWEN1/02_Use%20Case.html#casual-use-case","title":"Casual Use-Case","text":"<p>Ein Casual Use-Case wird ebenfalls zu Beginn der Analyse verwendet und enth\u00e4lt folgendes:</p> <ul> <li>Erfolgsszenario &amp; wichtigste Alternativszenarien</li> <li>Trigger des Use-Case</li> <li>Akteure</li> <li>Summarischen Ablauf des Use-Case</li> </ul>"},{"location":"22HS/SWEN1/02_Use%20Case.html#fully-dressed-use-case","title":"Fully-dressed Use-Case","text":"<ul> <li>Use-Case-Name</li> </ul> <p>Aktiv formulieren (ev. Objekt + Verb)</p> <ul> <li> <p>Umfang (Scope)   Beschreibung des zu entwickelnde System</p> </li> <li> <p>Ebene (Level)</p> </li> <li> <p>Prim\u00e4rakteur (Primary Actor)   Die Prim\u00e4rakteure und wer den Use-Case initiert</p> </li> <li> <p>Stakeholders und Interessen   F\u00fcr wen den Use-Case sonst noch relevant ist und welche Interesse diese haben</p> </li> <li> <p>Vorbedingungen (Preconditions)   Voraussetzungen, damit der Use-Case ablaufen kann</p> </li> <li> <p>Erfolgsgarantie/Nachbedingungen (Success   Guarantee)   Was nach der Ausf\u00fchrung gew\u00e4hrleistet werden muss</p> </li> <li> <p>Standardablauf (Main Sucess Scenario)   Der \"normale\" Ablauf in einer nummerierten Liste, aber keine L\u00f6sungsdetails</p> </li> <li> <p>Erweiterungen (Extensions)</p> </li> </ul> <p>Alternative Erfolgs- und Misserfolgsszenarien</p> <ul> <li> <p>Spezielle Anforderungen (Special   Requirements)</p> </li> <li> <p>Liste der Technik und Datavariationen   (Technology and Data Variations)</p> </li> <li> <p>H\u00e4ufigkeit des Auftretens (Frequency of   Occurance</p> </li> <li> <p>Verschiedenes (Miscellaneous)</p> </li> </ul>"},{"location":"22HS/SWEN1/02_Use%20Case.html#systemsequenzdiagram","title":"Systemsequenzdiagram","text":"<p>&lt;</p>"},{"location":"22HS/SWEN1/Dom%C3%A4nemodellierung.html","title":"Dom\u00e4nemodellierung","text":""},{"location":"22HS/SWEN1/Dom%C3%A4nemodellierung.html#anleitung","title":"Anleitung","text":"<ol> <li>Konzept identifizieren</li> <li>Attribute zu Konzepte hinzuf\u00fcgen     Nur primitiven Typen sollten verwendet werden</li> <li>Komplexe Attribute zu Konzepte hinzuf\u00fcgen    Komplexe Datentypen sollten als separate Konzepte erstellt werden und mit einer Assoziation verbunden werden</li> <li>Konzepte verbinden</li> </ol> <p>Dabei ist wichtig daran zu decken, dass unwichtige Konzepte weggelassen werden k\u00f6nnen. Ebenfalls ist das Dom\u00e4nenmodell nicht repr\u00e4sentativ der endg\u00fcltig Klassen.</p> <p>Folgende Antipattern sollten vermieden werden:</p> <ul> <li>Keine komplexe Datentype als Attribute</li> <li>Keine \"Software\" Klassen (z.B. <code>SalesDatabase</code>)</li> <li>Keine Methoden auf den Konzepte</li> </ul>"},{"location":"22HS/SWEN1/Dom%C3%A4nemodellierung.html#spezialisierung","title":"Spezialisierung","text":"<p>Folgendes ist im Dom\u00e4nenmodell erlaubt:</p> <p></p>"},{"location":"22HS/SWEN1/Dom%C3%A4nemodellierung.html#aggregation-und-komposition","title":"Aggregation und Komposition","text":""},{"location":"22HS/SWEN1/Dom%C3%A4nemodellierung.html#zustande","title":"Zust\u00e4nde","text":""},{"location":"22HS/SWEN1/Modelle.html","title":"Modelle","text":""},{"location":"22HS/SWEN1/Modelle.html#wasserfall-modell","title":"Wasserfall-Modell","text":"<p>Die Entwicklung wird zu beginn also Folge von Aktivit\u00e4ten und Phasen definiert und danach umgesetzt. Dies sollte f\u00fcr eine hohe Planbarkeit und eine klare Aufteilung der Aufgaben sorgen. Selten sind aber alle Anforderung zu beginn bekannt zudem ist das Risiko hoch, dass etwas \u00fcbersehen wurde.</p>"},{"location":"22HS/SWEN1/Modelle.html#scrum-iterativ-inkrementelle-prozesse","title":"Scrum (Iterativ-Inkrementelle Prozesse)","text":"<p>Beim iterativen Prozess wird in mehrere Iterationen aufgeteilt, welche in sich selbst ein quasi Wasserfall-Modell ist. Dies erh\u00f6ht die Flexibilit\u00e4t und vereinfacht das Risikomanagement. Leider verringert sich dabei die Planbarkeit zu Beginn des Projektes und der Kunde muss kontinuierlich im Prozess eingebunden sein.</p> <p></p>"},{"location":"22HS/SWEN1/Patterns.html","title":"Patterns","text":""},{"location":"22HS/SWEN1/Software%20Architektur.html","title":"Software Architektur","text":""},{"location":"22HS/SWEN1/Software%20Architektur.html#modulkonzept","title":"Modulkonzept","text":"<p>Ein Modul bietet gewisse Service an. Diese werden \u00fcber eine Schnittstelle freigegeben, welche als eine Art von Vertrag wirkt. Das Innenleben eines Moduls wird nicht ver\u00f6ffentlicht. </p> <p>Die Schnittstelle eines Moduls sollte soweit definiert sein, dass es einfach Ausgetauscht werden.</p>"},{"location":"22HS/SWEN1/Software%20Architektur.html#kohasion-und-koppelung","title":"Koh\u00e4sion und Koppelung","text":"<p>Zwischen den Modulen gibt es eine schwache Kopplung. Innerhalb eines Moduls gibt es hingegen eine starke Kopplung.</p>"},{"location":"22HS/SWEN1/Software%20Architektur.html#clean-architeture","title":"Clean Architeture","text":""},{"location":"22HS/SWEN1/Software%20Architektur.html#n-1-view-model","title":"N + 1 View Model","text":""},{"location":"22HS/SWEN1/Software%20Architektur.html#paketdiagramme","title":"Paketdiagramme","text":"<ul> <li>Tier, Layer und Partion</li> </ul>"},{"location":"22HS/SWEN1/Software%20Architektur.html#grasp","title":"GRASP","text":"<ul> <li>Information Expert</li> <li>Creator</li> <li>Controller</li> <li>Low Coupling</li> <li>High Cohesion</li> <li>Polymorphism</li> <li>Pure Fabrication</li> <li>Indirection</li> <li>Protected Variations</li> </ul>"},{"location":"22HS/SWEN1/Zusatz/GUI.html","title":"GUI","text":""},{"location":"22HS/SWEN1/Zusatz/GUI.html#patterns","title":"Patterns","text":""},{"location":"22HS/SWEN1/Zusatz/GUI.html#presentation-model","title":"Presentation Model","text":"<p>The problem with a MVC-Model can be where to put calculated states (like if a button is activated or not). It can be worth to put those states in to a presentation model which interacts more with the view and controller, while connecting to the model with observers.</p>"},{"location":"22HS/SWEN1/Zusatz/GUI.html#mvc","title":"MVC","text":""},{"location":"22HS/SWEN1/Zusatz/GUI.html#mvp","title":"MVP","text":"<p>There are two variants of MVP: the supervising controller and the passive view.</p> <p>In the MVP pattern, the controller is replaced by the presenter. </p>"},{"location":"22HS/SWEN1/Zusatz/GUI.html#mvp-supervising-controller","title":"MVP - Supervising Controller","text":"<p>In this variant of the MVP pattern, the presenter is allowed to change the view directly without interacting with the model. Another difference between MVC and MVP is that the view connects to the mode with data bindings instead of observers.</p> <p></p>"},{"location":"22HS/SWEN1/Zusatz/GUI.html#mvp-passive-view","title":"MVP - Passive View","text":"<p>In this variant, the view only interacts with the presenter, cannot update itself and is fully controlled by the controller. The presenter is connected with observers or properties with the model and the view to receive updates from them.</p> <p></p>"},{"location":"22HS/SWEN1/Zusatz/GUI.html#mvvm","title":"MVVM","text":"<p>In the MVVM pattern the view model (aka the controller in MVC) is connected to the view with data bindings in both ways. The view model is also notified of changes in the model with data bindings.</p> <p></p>"},{"location":"22HS/SWEN1/Zusatz/Persistenz.html","title":"Persistenz","text":""},{"location":"22HS/SWEN1/Zusatz/Persistenz.html#jdbc","title":"JDBC","text":"<p>JDBC ist ein Framework f\u00fcr Java, welches direkten Zugriff auf die DB erlaubt.</p> <p></p> <p>Der folgende Code ist ein Beispiel f\u00fcr JDBC.</p> <pre><code>public class DbTest {\npublic static void main(String[] args)\nthrows ClassNotFoundException, SQLException {\nConnection con = DriverManager.getConnection(\n\"jdbc:postgresql://test.zhaw.ch/testdb\",\n\"user\", \"password\");\nStatement st = con.createStatement();\nResultSet rs = st.executeQuery(\"SELECT * FROM test ORDER BY name\");\nwhile (rs.next()) {\nSystem.out.println(\"Column 1 contains '\" + rs.getString(2) +\"'\");\n}\ncon.close();\n}\n}\n</code></pre>"},{"location":"22HS/SWEN1/Zusatz/Persistenz.html#patterns-fur-persistenz","title":"Patterns f\u00fcr Persistenz","text":"<p>Grunds\u00e4tzlich gilt: Persistenz und Domainmodel nicht mischen!!!!</p>"},{"location":"22HS/SWEN1/Zusatz/Persistenz.html#active-record-anti-pattern","title":"Active Record (Anti-Pattern)","text":"<p>Beim Active Record Pattern ist jede Entit\u00e4t selbst daf\u00fcr zust\u00e4ndig. Dies ist aber ein Anti-Pattern, da die Koh\u00e4sion sehr tief wird. Zus\u00e4tzlich leidet die Testbarkeit deutlich.</p>"},{"location":"22HS/SWEN1/Zusatz/Persistenz.html#data-access-object-dao","title":"Data Access Object (DAO)","text":"<p>Abstrahiert und kapselt den Zugriff auf die Datenquelle. Nun gibt es zwei Klassen, welche beide eine hohe Koh\u00e4sion haben. Dies funktioniert gut f\u00fcr einfache F\u00e4lle, wird aber kompliziert f\u00fcr gr\u00f6ssere Applikation. Dies liegt daran, dass DAO keine Relationen unterst\u00fctzen und dies von Hand implementiert werden muss. ### Data Access Object (DAO)</p> <p>Abstrahiert und kapselt den Zugriff auf die Datenquelle. Nun gibt es zwei Klassen, welche beide eine hohe Koh\u00e4sion haben. Dies funktioniert gut f\u00fcr einfache F\u00e4lle, wird aber kompliziert f\u00fcr gr\u00f6ssere Applikation. Dies liegt daran, dass DAO keine Relationen unterst\u00fctzen und dies von Hand implementiert werden muss. </p> <p>Der folgende Code zeigt ein Beispiel f\u00fcr ein DAO:</p> <pre><code>//Interface to be implemented by all ArticleDAOs\npublic interface ArticleDAO {\npublic void insert(Article item);\npublic void update(Article item);\npublic void delete(Article item);\npublic Article findById(int id);\npublic Collection&lt;Article&gt; findAll();\npublic Collection&lt;Article&gt; findByName (String name);\npublic Collection&lt;Article&gt; findByPrice (float price);\n...\n}\npublic class Article {\nprivate long id;\nprivate String name;\nprivate float price;\npublic long getId(){\nreturn id;\n}\npublic void setId(long id) {\nthis id = id\n}\n...\n}\n</code></pre>"},{"location":"22HS/SWEN1/Zusatz/Persistenz.html#or-data-mapper","title":"O/R Data Mapper","text":"<p>Separate Klasse f\u00fcr das Mapping oder Einsatz eines ORM. Das ORM kann Beziehungen automatisch direkt aufl\u00f6sen.</p> <p>Wenn ein O/R Mapper ben\u00fctzt wird, ist die Anwendungslogik stark entkoppelt von der Datenbank. </p> <p></p> <p>F\u00fcr JPA ist das folgende das Minimum f\u00fcr eine Identit\u00e4t: <pre><code>@Entity\npublic class Employee {\n@Id\n@GeneratedValue(strategy = GenerationType.IDENTITY) // there are also TableMapper and Auto strategies.\nprivate long id;\nprivate String name;\nprivate String lastName;\n}\n</code></pre></p> <p>Folgendermassen werden Beziehungen definiert.</p>"},{"location":"22HS/SWEN1/Zusatz/Verteiltes%20System.html","title":"Verteiltes System","text":"<p>Verteilte System haben typischerweisse folgende Merkmale:</p> <ul> <li>Sehr gross</li> <li>Datenorientierte Anwendung, meist mit Datenbank im Zentrum der Anwendung</li> <li>Extrem interaktiv</li> <li>Nebenl\u00e4ufig, Grosse Anzahl an parallele arbeitende Benutzen</li> <li>Hohe Konsistenzanforderungen</li> </ul> <p></p> <p>Folgendes sind popul\u00e4re Architekturen f\u00fcr verteilte Systeme:</p> <p></p>"},{"location":"22HS/SWEN1/Zusatz/Verteiltes%20System.html#data-transfer-object-dto","title":"Data Transfer Object (DTO)","text":""},{"location":"22HS/SWEN1/Zusatz/Verteiltes%20System.html#heterogenitat","title":"Heterogenit\u00e4t","text":"<p>Verschiedene Systeme haben verschiedene Standardt (Little vs Big Endian, Betriebsysteme, ...). Um dies zu bek\u00e4mpfen gibt es Standarts, wie JSON, welche das versenden von Daten vereinfachen.</p> <p></p>"},{"location":"22HS/SWEN1/Zusatz/Verteiltes%20System.html#client-server-anwendung","title":"Client-Server Anwendung","text":"<p>Wo bei einer Client-Server Anwendung die einzelnen Layern (DAtenhanltung, Verarbeitung, Presentation) lauft ist nicht fix, wie folgendes Diagramm demonstriert:</p> <p></p>"},{"location":"22HS/SWEN1/Zusatz/Verteiltes%20System.html#zusatzliche-fehlersituationen","title":"Zus\u00e4tzliche Fehlersituationen","text":"<ul> <li>ein Auftrag (engl. request) verloren geht</li> <li>das Ergebnis (engl. reply) des Servers verloren   geht</li> <li>der Server w\u00e4hrend der Ausf\u00fchrung des Auftrags   abst\u00fcrzt</li> <li>der Server f\u00fcr die Bearbeitung des Auftrags zu   lange braucht</li> <li>der Client vor Ankunft des Ergebnisses abst\u00fcrzt.</li> </ul>"},{"location":"22HS/SWEN1/Zusatz/Verteiltes%20System.html#terminologie","title":"Terminologie","text":"<ul> <li>Ein Server ist die Platform von Serverbausteinen, welche in einem Server laufen</li> <li>Ein Serverbaustein ist ein Komponent/Klasse/Modul, welches bei einem Request einem Client zu geordnet wird</li> <li>Ein Service ist ein Dienst, welcher von einem Serverbaustein bereitgestellt wird</li> <li>Eine Servermethod (oder Serverprozedur) ist ein Teil eines Service und kann vom Client genutzt werden, in dem ein Request geschickt wird.</li> </ul> <p>Im folgenden Diagramm sieht man den Lebenszyklus eines Serverbaustein:</p> <p></p>"},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html","title":"SWEN1 Zusammenfassung","text":"","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#fragen","title":"Fragen","text":"<ul> <li>Domainmodelierung</li> <li>Ist es ok Klassen, wie \"PaymentState\" im  Domain-Modell zu haben? Dies klingt nach einer Software-Klasse.</li> </ul>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#todos","title":"Todos","text":"<ul> <li>Templates:</li> <li>Persona</li> <li>Use Case</li> <li>Class Diagram</li> <li>Domain Model</li> <li>Stake Holder Map</li> </ul>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#anforderungsanalyse","title":"Anforderungsanalyse","text":"","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#ux","title":"UX","text":"<p>Gute Usability einer Software:</p> <ul> <li>Effekivit\u00e4t: Der Nutzer kann die Aufgaben mit gew\u00fcnschter Genauigkeit ausf\u00fchren</li> <li>Effizient: Der Nutzer kann die Aufgaben mit minimalem Aufwand ausf\u00fchren</li> <li>Zufriedenheit: selbsterkl\u00e4rend...</li> </ul> <p>UX ist, wie gut sich die App anf\u00fchlt, Customer Experience, wie der Gesammteindruck der App, Marke und Firma ist.</p> <p>Es gibt sieben Anforderungsbereiche der Usability (laut DIN EN ISO 9241-110). Je nach Applikation sind nicht alle wichtig oder treffen gar nicht zu.</p> <ol> <li>Aufgabenangemessenheit    Eine Aufgabe soll nur so viele Schritte ben\u00f6tigen, wie minimal n\u00f6tig. Ebenfalls soll nur Informationen angezeigt werden, welche f\u00fcr die aktuelle Aufgabe relevant ist (z.B. Hilfe).     Jede Eingabe sollte nur einmal get\u00e4tigt werden und Eingabefelder sollen Standartwerte oder/und Liste von vordefinierten Werte habe (z.B. L\u00e4nder). Zudem sollen ableitbare Eingaben vorgeschlagen werden.</li> <li>Lernf\u00f6rderlichkeit    Die Software soll Informationen \u00fcber Konzepte und Regeln anbieten, wenn der Nutzer dies w\u00fcnscht. Dies kann beispielsweise \u00fcber Tool-Tipps oder Hilfssystem bewerkstelligt werden.</li> <li>Individualisierbarkeit    Die Applikationen soll sich dem Benutzer anpassen. Dies kann getan werden \u00fcber Tipps, Tool-Tips, Wizards oder auch Tastaturk\u00fcrzel f\u00fcr Experten.</li> <li>Erwartungskonformit\u00e4t    Die Applikation soll strickt interne Regeln anwenden. Die Konsistenz von der Terminologie, Reihenfolgen von Kn\u00f6pfen und Informationsdarstellung sind wichtig und helfen dem Nutzer.</li> <li>Selbstbeschreibungsf\u00e4higkeit    Der Benutzer soll ausreichend informiert werden, wo er ist, was er tun soll und kann, wie er dies zu tun hat (z.B. Formate) und was das System macht.    Dabei k\u00f6nnen Dinge wie Labels und Fehlermeldung hilfreich sein.</li> <li>Steuerbarkeit/Kontrolle    Der Benutzer soll das Tempo und Dialogfluss steuern k\u00f6nnen. Ebenfalls soll der Benutzer zwischen verschiedenen Inputsmodalit\u00e4ten (Maus, Tastatur, Touch, ...) wechseln k\u00f6nnen. Darstellungsformate (Miles vs Kilometer) sollen einstellbar sein.</li> <li>Fehlertoleranz    Die Applikation soll dem Nutzer klar mitteilen, welche Werte als Input erwartet werded. Benutzeraktionen sollen zudem vor Aktionen \u00fcberpr\u00fcft werden. Bei Korrekturen und Fehlermeldungen d\u00fcrfen nie Daten verloren gehen.</li> </ol>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#user-centered-design","title":"User-Centered Design","text":"","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#user-domain-research","title":"User &amp; Domain Research","text":"<p>In dieser Phase geht es darum die Nutzer, ihr Umfeld und die Dom\u00e4ne zu verstehen. Daf\u00fcr sollten folgende Fragen beantwortet werden:</p> <ul> <li>\u00dcber den Nutzer:</li> <li>Wer sind die Benutzer?</li> <li>Was sind ihre Arbeit, ihre Aufgaben und Ziele?</li> <li>Wie sieht ihre Umgebung aus?</li> <li>was brauchen sie, um ihre Ziele zu erreichen</li> <li>Welche Begriffe verwenden sie?</li> <li>Welche Normen sind wichtig f\u00fcr sie (organisatorisch, kulturell, sozial)?</li> <li>Was sind Pain-Points in ihrer Arbeit?</li> <li>\u00dcber die Dom\u00e4ne</li> <li>Wie funktioniert das Gesch\u00e4ft der Firma?</li> <li>Was sind wichtige Konzepte, und Prozesse der Dom\u00e4ne?</li> <li>Bei mobile Apps:  Wo, wann und warum wird das App ben\u00fctzt?</li> </ul> <p>Um diese Fragen zu beantwortet k\u00f6nnen mehrere Tools benutzt werden: Contextual Inquiry, Interviews, Beobachtung, Fokusgruppen, Umfragen, Nutzungsauswertungen, Dokumentenstudium &amp; Mitbewerber studieren.</p> <p>Folgende Artifakte sollten nach diesem Schritt vorhanden sein: Personas, Usage-Szenarien, Mentales Moddel, Dom\u00e4nenmodell (Siehe Domainmodellierung), Stackeholder Map, Service Blueprint / Gesch\u00e4ftsprozessmodell, UI-Skizzen, Wireframes</p>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#contextual-inquiry","title":"Contextual Inquiry","text":"<p>In diesem Verfahren wird ein Nutzer, welcher sein Job erledigt, von einem Experten beobachtet. Der Experte kann w\u00e4hrend des Beobachtens Fragen stellen.  Der Nutzen davon ist, dass Nutzer ihre Arbeit demonstrieren k\u00f6nnen.</p>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#contextual-interview","title":"Contextual Interview","text":"<p>Wird in Strukturierte(geschlossene Fragen, vollst\u00e4ndige vorbereitet, aka. m\u00fcndlichen Fragebogen), Semi-struturierte (geschlossene und offene Fragen, davon einige vorbereitet, der Rest abh\u00e4ngig von der Situation) und unstrukturierte Interviews (keine vorbereitete Fragen, nur grobe Ziele definiert) unterteilt. </p>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#persona","title":"Persona","text":"<p>Folgendes sollte aufgeschrieben werden:</p> <ul> <li>Name, Alter, Geschlecht, Herkunft</li> <li>Beruf, Ausbildung, Erfahrung</li> <li>Verantwortlichkeiten, Aufgaben, Pers\u00f6nliche Ziele</li> <li>1 - 2 Usage Szenarien</li> <li>Haltung, Aktivit\u00e4ten, Bed\u00fcrfnisse</li> <li>Umgebung</li> <li>Pain-Points und Frustrationen</li> <li>Erwartungen an neue L\u00f6sung</li> <li>Foto, Kernaussage</li> </ul>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#usage-context-szenario","title":"Usage- &amp; Context-Szenario","text":"<p>Ein Szenario ist eine kurze Geschichte, welche beschreibt, wie ein Benutzer (Persona) das Produkt in einer konkreten Situation ben\u00fctzt, um eine bestimmte Aufgabe zu erledigen.</p> <p>Dabei wird zwischen einer Usage-Szenario, was beschreibt, wie das Problem bis her gel\u00f6st wurde, und einem Context-Szenario, was beschreibt, wie das Problem in der Zukunft gel\u00f6st wird, unterschieden.</p> <p>Typischerweise ist folgendes enhalten:</p> <ul> <li>Motivation/Trigger: Was l\u00f6st das Szenario aus?</li> <li>Persona und ihre Ziele</li> <li>Aktionen und Interaktionen</li> <li>Kontext</li> <li>Wo findet das Szenario statt?</li> <li>Wer/was ist sonst noch involviert?</li> <li>(f\u00fcr Context-Szenario) \u00c4ndert der Kontext?</li> <li>Probleme und wie damit umgegangen wird</li> </ul> <p>Ein Szenario kann auch als Storyboard umgesetzt werden.</p>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#stakeholder-map","title":"Stakeholder Map","text":"","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#service-blueprint-geschaftsprozess","title":"Service Blueprint / Gesch\u00e4ftsprozess","text":"","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#use-case","title":"Use-Case","text":"<p>Der Boss-Test besagt, falls dein Boss dich frag, was du den ganzen Tag gemacht hast und du sagst, du hast die ganze Zeit den einen Use-Case ausgef\u00fchrt, sollte er zufrieden sein.</p> <p>Der Elementary Business Process Test (EBP-Test) besagt, dass ein Use Case eine Aufgabe, die von einer Person und einem Ort zu einer bestimmten Zeit ausgef\u00fchrt wird, als Reaktion auf einen Business Event.</p> <p>Wichtig bei Use-Cases: Das Ping-Pong zwischen den Akteure und dem System gut herausarbeiten.</p> <p>Checkliste:</p> <ul> <li> <p>Muss ein konkreten Nutzen f\u00fcr den Akteur erzeugen</p> </li> <li> <p>Title folgt dem Schema <code>Kasse er\u00f6ffnen</code></p> </li> <li> <p>Beschreibung beschreibt die Logik, nicht die konkrete Umsetzung (\"Kassier tippt die Produkt-ID ein.\" vs \"Kassier erfasst das Produkt.\")</p> </li> <li> <p>Keine kann-Formulierungen</p> </li> <li> <p>Alternative Interaktionen sind unter Erweiterungen aufgef\u00fchrt</p> </li> </ul> <p>Use-Case finden: </p> <ol> <li>Systemgrenzen definieren</li> <li>Prim\u00e4rakteure identifizieren</li> <li>Jobs (Ziele, Aufgaben) der Prim\u00e4rakteure identifizieren</li> </ol>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#brief-use-case","title":"Brief Use-Case","text":"<p>Ein Brief Use-Case wird meistens zu Beginn erstellt. In ein Brief Use-Case kommt folgendes enhalten werden:</p> <ul> <li>Nur Erfolgsszenario</li> <li>Trigger des Use-Case</li> <li>Akteure</li> <li>Summarischen Ablauf des Use-Case</li> </ul>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#casual-use-case","title":"Casual Use-Case","text":"<p>Ein Casual Use-Case wird ebenfalls zu Beginn der Analyse verwendet und enth\u00e4lt folgendes:</p> <ul> <li>Erfolgsszenario &amp; wichtigste Alternativszenarien</li> <li>Trigger des Use-Case</li> <li>Akteure</li> <li>Summarischen Ablauf des Use-Case</li> </ul>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#fully-dressed-use-case","title":"Fully-dressed Use-Case","text":"<ul> <li>Use-Case-Name</li> </ul> <p>Aktiv formulieren (ev. Objekt + Verb)</p> <ul> <li> <p>Umfang (Scope)   Beschreibung des zu entwickelnde System</p> </li> <li> <p>Ebene (Level)</p> </li> <li> <p>Prim\u00e4rakteur (Primary Actor)   Die Prim\u00e4rakteure und wer den Use-Case initiert</p> </li> <li> <p>Stakeholders und Interessen   F\u00fcr wen den Use-Case sonst noch relevant ist und welche Interesse diese haben</p> </li> <li> <p>Vorbedingungen (Preconditions)   Voraussetzungen, damit der Use-Case ablaufen kann</p> </li> <li> <p>Erfolgsgarantie/Nachbedingungen (Success   Guarantee)   Was nach der Ausf\u00fchrung gew\u00e4hrleistet werden muss</p> </li> <li> <p>Standardablauf (Main Sucess Scenario)   Der \"normale\" Ablauf in einer nummerierten Liste, aber keine L\u00f6sungsdetails</p> </li> <li> <p>Erweiterungen (Extensions)</p> </li> </ul> <p>Alternative Erfolgs- und Misserfolgsszenarien</p> <ul> <li> <p>Spezielle Anforderungen (Special   Requirements)</p> </li> <li> <p>Liste der Technik und Datavariationen   (Technology and Data Variations)</p> </li> <li> <p>H\u00e4ufigkeit des Auftretens (Frequency of   Occurance</p> </li> <li> <p>Verschiedenes (Miscellaneous)</p> </li> </ul>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#zusatzliche-anforderungen","title":"Zus\u00e4tzliche Anforderungen","text":"<p>Anforderungen (funktional, wie nicht funktional) , welche nicht in Use-Cases passen, werden in Anforderungsspezifikationen formuliert. </p> <ul> <li>Schema: \"Das System soll/muss mindestens/darf nicht...\"</li> <li>Muss messbar und verifizierbar sein</li> <li>KEINE L\u00f6sungsideen (aka. Das System muss eine Web-App sein)</li> </ul>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#furps","title":"FURPS+","text":"","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#systemsequenzdiagram","title":"Systemsequenzdiagram","text":"<p>Ziel: Wichtigsten Systemoperationen zu identifizieren</p> <p>Um Systemoperationen zu finden: Jeden Schritt des Akteurs analysieren, welche Systemoperationen ben\u00f6tigt werden. Checkliste:</p> <ul> <li>Systemoperation sind aus sicht des Akteur geschrieben.</li> <li>Zeitform ist presenz</li> </ul> <p></p>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#operation-contract","title":"Operation Contract","text":"<p>Pr\u00e4zisierung einer (System) Operation mit: Name, Parameterliste, Vorbedingungen, Nachbedinungen</p> <p>Vorbedingungen m\u00fcssen zwingend erf\u00fcllt sein, bevor die Systemoperation aufgerufen werden kann. Nachbedingungen m\u00fcssen erf\u00fcllt sein, nach der Ausf\u00fchrung der Systemoperation.</p>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#domanenmodellierung","title":"Dom\u00e4nenmodellierung","text":"","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#anleitung","title":"Anleitung","text":"<ol> <li>Konzept identifizieren (Jedes Substantiv in vorherigen Artifakten \u00fcberpr\u00fcfen)</li> <li>Attribute zu Konzepte hinzuf\u00fcgen     Nur primitiven Typen sollten verwendet werden</li> <li>Komplexe Attribute zu Konzepte hinzuf\u00fcgen    Komplexe Datentypen sollten als separate Konzepte erstellt werden und mit einer Assoziation verbunden werden</li> <li>Konzepte verbinden</li> </ol> <p>Dabei ist wichtig daran zu decken, dass unwichtige Konzepte weggelassen werden k\u00f6nnen. Ebenfalls ist das Dom\u00e4nenmodell nicht repr\u00e4sentativ der endg\u00fcltig Klassen.</p> <p>Folgende Antipattern sollten vermieden werden:</p> <ul> <li>Keine komplexe Datentype als Attribute</li> <li>Keine \"Software\" Klassen (z.B. <code>SalesDatabase</code>)</li> <li>Keine Methoden auf den Konzepte</li> </ul>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#tipps","title":"Tipps","text":"<ul> <li> <p>Wenn Attribute f\u00fcr viele/alle Objekte gleich sind, dann in ein separates Konzept extrahieren</p> </li> <li> <p>Sepzialisieren und Generalisierung</p> </li> <li> <p>Alle Instanzen eines spezialisierten Konzept m\u00fcssen auch Instanzen des generalisierten Konzept sein</p> </li> <li> <p>Spezialisiertes Konzept <code>is a</code> generalisiertes Konzept</p> <p></p> </li> <li> <p>Komposition und Komposition</p> </li> </ul> <p></p> <ul> <li>Zust\u00e4nde (Separate Hierarchie f\u00fcr die Zust\u00e4nde, \u00e4hnlich wie das State-Pattern)</li> </ul> <p></p> <ul> <li> <p>Rollen   M\u00f6glichkeiten: Einzelnes Konzept (wie Person), welches mit verschiedenen Assoziationen (wie emplys-to-manage, ...) verbunden ist. Zweite M\u00f6glichkeite: Anstelle von einem Konzept gibt es f\u00fcr jede Rolle ein eigenes Konzept   </p> </li> <li> <p>Assoziationsklassen   </p> </li> <li> <p>Einheiten   Oft sinnvoll Masseinheiten als Konzept zu modelieren</p> </li> </ul>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#software-engineering","title":"Software Engineering","text":"<p>Modulkonzept: Jedes Modul hat eine m\u00f6glichst kleine Kopplung, eine klare minimale Schnittstelle und enth\u00e4lt alle ben\u00f6tigten Funktionen und Datenstrukturen. Ein Modul kann ein Paket, Programmierkonstrukt, LIbrary, ... sein.</p> <p>Zwischen den Modulen gibt es eine schwache Kopplung. Innerhalb eines Moduls gibt es hingegen eine starke Kopplung und hohe Koh\u00e4sion.</p>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#clean-architeture","title":"Clean Architeture","text":"<p>Entites kapseln die Business Rules, Use-Cases orchestriert die Verwendung von den Entities, Interface Adapters \u00fcbersetzen externe Bibliotheken zu den internen Strukturen.</p> <p></p>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#n1-view-model","title":"N+1 View Model","text":"<ul> <li>Logical View: Welche Funktionalit\u00e4t wird gegen aussen angeboten? (Sequenzdiagram, Interaktionsdiagram, Klassendiagram, Zustandsdiagram)</li> <li>Process View: Welche Prozesse laufen wo und wie ab? (Klassendiagram, Interaktionsdiagram, Aktivit\u00e4tsdiagram)</li> <li>Development View: Wie wurde die logische Struktur umgesetzt? (Packetdiagram, Komponentdiagram)</li> <li>Physical View: Auf welcher Infrastruktur wir ein System augeliefert/betrieben? (Deployment Diagram)</li> <li>+1: Welches sind die wichtigsten Use-Cases und ihre nichtfunktionalen Anforderungen? Wie wurden sie umgesetzt? (UC-Diagram,  Sequenzdiagram)</li> </ul>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#schichtenkonzept","title":"Schichtenkonzept","text":"<p>Je weiter oben, desto anwendungs-spezifischer, je weiter unten, desto algeimeiner. Komplung immer von oben nach unten.</p> <p></p>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#grasp-general-responsibility-assignment-software-patterns","title":"GRASP (General REsponsibility Assignment Software Patterns)","text":"","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#implementierung","title":"## Implementierung","text":"<ul> <li>Code-Driven Development: Zuerst die Klasse implementieren</li> <li>TDD: Test-Driven Development: Zuerst Tests f\u00fcr Klassen/Komponenten schreiben, dann den Code entwickeln</li> <li>BDD: Behavior-Driven Development: Tests aus Benutzersicht beschreiben</li> </ul>","tags":["summary","STS"]},{"location":"22HS/SWEN1/summary/SWEN%20Zusammenfassung.html#refactoring","title":"Refactoring","text":"","tags":["summary","STS"]},{"location":"22HS/WBE/Browser.html","title":"Browser","text":""},{"location":"22HS/WBE/Browser.html#ajax","title":"Ajax","text":"<p>The following code uses the old low-level ajax api. </p> <pre><code>const xhr = new XMLHttpRequest()\nxhr.onreadystatechange = () =&gt; {\nif (xhr.readyState === 4) {\nxhr.status === 200 ? console.log(xhr.responseText) : console.error('error')\n}\n}\nxhr.open('GET', 'https://yoursite.com')\nxhr.send()\n</code></pre>"},{"location":"22HS/WBE/Browser.html#fetch","title":"Fetch","text":"<pre><code>// fetch options\nconst options = {\n\"method\": \"POST\",\nheaders: {\n'Content-Type': 'application/json'\n},\n\"body\": \"hello world\"\n}\nfetch(url, options).then(response =&gt; {\n// returns the status code\nconsole.log(response.status)\n// returns the received headers\nconsole.log(response.headers.get(\"Content-Type\"))\n// returns a promise which resolve to the text\nresponse.json().then(json =&gt; console.log(json))\n// returns a promise which resolve to the text\nresponse.text().then(text =&gt; console.log(text))\n}).catch(err =&gt; console.error(err))\n</code></pre>"},{"location":"22HS/WBE/Browser.html#local-storage-and-session-storage","title":"Local Storage and Session Storage","text":"<p>With <code>localStorage</code> and <code>sessionStorage</code>, data can be stored on the browser.</p> <pre><code>let user = {name: \"Hans\", highscore: 234}\nlocalStorage.setItem(\"user\", JSON.stringify(user))\nconsole.log(localStorage.getItem(\"user\"))\n</code></pre>"},{"location":"22HS/WBE/Browser.html#history","title":"History","text":""},{"location":"22HS/WBE/Browser.html#web-workers","title":"Web Workers","text":"<p>With web workers, JavaScript can run code in a separate thread. However, the web worker has to communicate with the frontend code over events to avoid locking.</p> <pre><code>// squareworker.js\naddEventListener(\"message\", event =&gt; {\npostMessage(event.data * event.data)\n})\n// main script\nlet squareWorker = new Worker(\"code/squareworker.js\")\nsquareWorker.addEventListener(\"message\", event =&gt; {\nconsole.log(\"The worker responded:\", event.data)\n})\nsquareWorker.postMessage(10)\nsquareWorker.postMessage(24)\n</code></pre>"},{"location":"22HS/WBE/DOM.html","title":"DOM","text":""},{"location":"22HS/WBE/DOM.html#event-handling","title":"Event Handling","text":"<p>An event handler can be registered with any DOM element.</p> <p>One caveat of  the <code>onclick</code> property is that only one <code>onclick</code> listener can be register per elements. No such restriction exists with <code>addEventListener</code></p> <pre><code>const listener = e =&gt; console.log(`button clicked at ${e.x}/${e.y}`)\nbutton.addEventListener(\"click\", listener)\n// or\nbutton.onclick = () =&gt; console.log(\"button clicked 2\")\n// to remove the listener\nbutton.removeEventListener(\"click\", listener)\n</code></pre> Event Type Explanation Event-Obj <code>click</code> When a DOM element was clicked by a mouse/touch <code>x</code>,  <code>y</code>, <code>button</code> <code>dblclick</code> When an DOM element was double clicked <code>mousedown</code> When a mouse button is pressed over the DOM element <code>x</code>, <code>y</code>, <code>button</code> <code>mouseup</code> When the mouse button was released <code>touchstart</code> When a touch event was started. <code>touchmove</code> When while touching the screen, the finger moves <code>touchend</code> When the touch gesture ends <code>keydown</code> When a key was pressed <code>keyup</code> When a key was lifted <code>input</code> When a character was inputted into a textfield <code>scroll</code> When the page is being scrolled <code>focus</code> When focusing an element. This event is not propagated. <code>blur</code> When the registered element looses focus. This event is not propagated. <code>load</code> When the registered element finished loading. Is emitted for <code>window</code>,  <code>document.body</code> and elements with external resources (like <code>img</code> tags). This event is not propagated. <code>beforeunload</code> Before the user leaves the page.This event is not propagated."},{"location":"22HS/WBE/DOM.html#event-object","title":"Event Object","text":"<p>MDM-Documentation: https://developer.mozilla.org/en-US/docs/Web/API/Event</p> <p>The event objects contains multiple properties which can be usefull:</p> Event-Typ Property Explanation general <code>target</code> The element which caused the event general <code>currentTarget</code> The element on which the listener was registered on"},{"location":"22HS/WBE/DOM.html#event-bubbling","title":"Event Bubbling","text":"<p>An event \"bubbles up\" until it reaches the <code>window</code> object or a handler calls <code>event.stopPropagation()</code>. With <code>event.preventDefault()</code> the default behaviour of an DOM element can be prevented.</p> <pre><code>document.querySelector(\"p\").addEventListener(\"mousedown\", () =&gt; console.log(\"Handler for paragraph.\"))\ndocument.querySelector(\"button\").addEventListener(\"mousedown\", event =&gt; { console.log(\"Handler for button.\")\nif (event.button == 2) event.stopPropagation()\n}\ndocument.querySelector(\"a\").addEventListener(\"click\", event =&gt; { console.log(\"Handler for a link.\")\nevent.preventDefault() // prevents the link from working\n}\n</code></pre>"},{"location":"22HS/WBE/DOM.html#animation","title":"Animation","text":"<p><code>requestAnimationFrame(function)</code> will call the given function shortly before the browser draws the next frame. This enables animation to be created in javascript.</p> <pre><code>function animate (time, lastTime) {\n/* calculate new position */\n/* ... */\nrequestAnimationFrame(newTime =&gt; animate(newTime, time))\n}\nrequestAnimationFrame(animate)\n</code></pre>"},{"location":"22HS/WBE/DOM.html#svg","title":"SVG","text":"<p>SVG can be directly written in HTML with the <code>svg</code> tag and can be styled with css. SVGs can also be loaded with the <code>img</code> tag.</p> <pre><code>&lt;p&gt;Normal HTML here.&lt;/p&gt;\n&lt;svg xmlns=\"http://www.w3.org/2000/svg\"&gt;\n&lt;circle r=\"50\" cx=\"50\" cy=\"50\" fill=\"red\"/&gt;\n&lt;rect x=\"120\" y=\"5\" width=\"90\" height=\"90\"\nstroke=\"blue\" fill=\"none\"/&gt;\n&lt;/svg&gt;\n</code></pre> <p></p> <p>JavaScript can access and modify SVG graphics (when loaded with <code>svg</code>), like:</p> <pre><code>let circle = document.querySelector(\"circle\")\ncircle.setAttribute(\"fill\", \"cyan\")\n</code></pre>"},{"location":"22HS/WBE/DOM.html#canvas","title":"Canvas","text":"<p>With a canvas, JavaScript can render graphics.</p> <pre><code>&lt;p&gt;Before canvas.&lt;/p&gt;\n&lt;canvas width=\"120\" height=\"60\"&gt;&lt;/canvas&gt;\n&lt;p&gt;After canvas.&lt;/p&gt;\n&lt;script&gt;\nlet canvas = document.querySelector(\"canvas\")\nlet context = canvas.getContext(\"2d\")\ncontext.fillStyle = \"red\"\ncontext.fillRect(10, 10, 100, 50)\n&lt;/script&gt;\n</code></pre> <p>With canvas, there are turtle-like graphics:</p> <pre><code>let cx = document.querySelector(\"canvas\").getContext(\"2d\")\ncx.beginPath()\ncx.moveTo(50, 10)\ncx.lineTo(10, 70)\ncx.lineTo(90, 70)\ncx.fill()\n</code></pre> <p></p> <p>An image can be loaded like this:</p> <pre><code>let cx = document.querySelector(\"canvas\").getContext(\"2d\")\nlet img = document.createElement(\"img\")\nimg.src = \"img/hat.png\"\nimg.addEventListener(\"load\", () =&gt; {\nfor (let x = 10; x &lt; 200; x += 30) {\ncx.drawImage(img, x, 10)\n}\n})\n</code></pre> <p></p> <p>There are a lot more you can do with a <code>canvas</code> tag, like <code>quadraticCurveTo</code>, <code>bezierCurveTo</code>, <code>arc</code>, text, <code>scale</code>, <code>translate</code>, <code>rotate</code> and a stack infrastructure with <code>save</code> and <code>restore</code>.</p>"},{"location":"22HS/WBE/DOM.html#form","title":"Form","text":"<pre><code>&lt;form method=\"post\" action=\"/form1\"&gt;\n&lt;label for=\"nameid\"&gt;Name: &lt;/label&gt;\n&lt;input type=\"text\" id=\"nameid\"&gt;\n&lt;label for=\"ageid\"&gt;Age: &lt;/label&gt;\n&lt;input type=\"text\" id=\"ageid\" name=\"age\"&gt;\n&lt;input type=\"submit\" value=\"Send\"&gt;\n&lt;/form&gt;\n&lt;form&gt;\n&lt;label&gt;Name: &lt;input type=\"text\"&gt;&lt;/label&gt;\n&lt;label&gt;Age: &lt;input type=\"text\"&gt;&lt;/label&gt;\n&lt;input type=\"submit\" value=\"Send\"&gt;\n&lt;button disabled&gt;disabled button&lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>The <code>form</code>s above define a form in HTML. Both define the same form but the first one uses <code>for</code> to specify which <code>label</code> belongs to which <code>input</code>-element. In the second example this done by nesting the <code>input</code>-element in the <code>label</code>-element.</p> <p>When the <code>submit</code>-button has been pressed then the form will be sent to the server except if <code>preventDefault()</code> is called on the <code>submit</code>-event.</p> <p>Form elements can be disabled by adding a <code>disabled</code> attribute to the form-tag.</p> <p>The following attributes are useful to know:</p> <ul> <li>attribute <code>method</code>: if the form should be sent with a <code>post</code> request or a <code>get</code> request(like <code>/form1?nameid=...&amp;age=...</code>). But with <code>get</code> request the data is limited as it needs to be sent over the address line (often limited to 1000 chars)   </li> <li>attribute <code>action</code>: To where the form result should be sent </li> <li>attribute <code>name</code>: The name of form elements. If present it is used to name the parameter else the <code>id</code> is used in the get or post request</li> </ul> Form Example Screenshot text <code>&lt;input type=\"text\"&gt;</code> password <code>&lt;input type=\"password\"&gt;</code> date <code>&lt;input type=\"date\"&gt;</code> number <code>&lt;input type=\"number\"&gt;</code> email <code>&lt;input type=\"email\"&gt;</code> range <code>&lt;input type=\"range\"&gt;</code> search <code>&lt;input type=\"search\"&gt;</code> color <code>&lt;input type=\"color\"&gt;</code> textarea <code>&lt;textarea&gt;&lt;/textarea&gt;</code> radio <code>&lt;input type=\"radio\" checked&gt;</code> checkbox <code>&lt;input type=\"checkbox\" checked&gt;</code> select <code>&lt;select&gt;&lt;option value=\"1\"&gt;one&lt;/option&gt;&lt;/select&gt;</code> fieldset <code>&lt;fieldset&gt;&lt;legend&gt;description&lt;/legend&gt;...form...&lt;/fieldset&gt;</code> file <code>&lt;input type=\"file\" multiple&gt;</code>"},{"location":"22HS/WBE/DOM.html#focus","title":"Focus","text":"<p>With <code>document.activeElement</code> JS can retrieve the currently active focus. To focus (or blur) programaticly use the <code>focus()</code> and <code>blur()</code> methods on the DOMElement</p>"},{"location":"22HS/WBE/DOM.html#events","title":"Events","text":"<ul> <li><code>change</code>: If a form element actually changed</li> <li><code>input</code>: Input in a text field</li> <li><code>keydown</code>, <code>keypress</code>, <code>keyup</code>: Key presses on an active form-tag</li> <li><code>submit</code>: When the <code>submit</code>-input-tag has been pressed</li> </ul>"},{"location":"22HS/WBE/DOM.html#read-files","title":"Read files","text":"<pre><code>&lt;input type=\"file\" multiple&gt;\n&lt;script&gt;\nlet input = document.querySelector(\"input\")\ninput.addEventListener(\"change\", () =&gt; {\nfor (let file of Array.from(input.files)) {\nlet reader = new FileReader()\nreader.addEventListener(\"load\", () =&gt; {\nconsole.log(\"File\", file.name, \"starts with\",\nreader.result.slice(0, 20))\n})\nreader.readAsText(file)\n}\n})\n&lt;/script&gt;\n</code></pre>"},{"location":"22HS/WBE/Express.html","title":"Express","text":""},{"location":"22HS/WBE/Express.html#post-and-get-requests","title":"Post and Get Requests","text":"<p>The following code extracts get requests</p> <pre><code>app.post('/shoes', function (req, res, next) {\n// GET /shoes?order=desc&amp;shoe[color]=blue&amp;shoe[type]=converse\nconsole.dir(req.query.order)\n// =&gt; 'desc'\nconsole.dir(req.query.shoe.color)\n// =&gt; 'blue'\nconsole.dir(req.params.name)\n}\napp.post('/user/:name', function (req, res, next) {\n// GET /user/tj\nconsole.dir(req.params.name)\n// =&gt; 'tj'\n})\n</code></pre> <p>The following code extracts post requests:</p> <pre><code>var express = require('express')\nvar app = express()\n// for parsing application/json\napp.use(express.json())\n// for parsing application/x-www-form-urlencoded\napp.use(express.urlencoded({ extended: true }))\napp.post('/profile', function (req, res, next) {\nconsole.log(req.body)\nres.json(req.body)\n})\n</code></pre>"},{"location":"22HS/WBE/Express.html#cookies","title":"Cookies","text":"<p>Designed as a stateless protocol to store data on the browser. It can be set with the <code>Set-Cookie</code> header and can be read from JS (except if <code>HttpOnly</code> is set) with <code>document.cookie</code>. The client will send the cookie back with the <code>Cookie</code> Header.</p> <p></p>"},{"location":"22HS/WBE/Express.html#sessions","title":"Sessions","text":"<p>Sessions can be realised with cookies, but sessions can be hijacked when the session id can be stolen (e.g. when using http)</p> <p></p> <pre><code>// \"npm install express-session\" to install the express-session package\nvar express = require('express')\nvar cookieParser = require('cookie-parser')\nvar session = require('express-session')\nvar app = express();\napp.use(cookieParser())\napp.use(session({secret: \"Shh, its a secret!\"}))\napp.get('/', function(req, res){\nif(req.session.page_views){\nreq.session.page_views++\nres.send(\"You visited this page \" + req.session.page_views + \" times\")\n} else {\nreq.session.page_views = 1\nres.send(\"Welcome to this page for the first time!\")\n}\n})\napp.listen(3000)\n</code></pre>"},{"location":"22HS/WBE/Questions.html","title":"Questions","text":"<ul> <li>Are SUIWEB/SJDON internals relevant for the finals?</li> <li>A lot of component rely on only being updated when they expect it. This seems like a brittle setup.</li> </ul>"},{"location":"22HS/WBE/UI%20Library.html","title":"UI Library","text":""},{"location":"22HS/WBE/UI%20Library.html#framework-vs-library","title":"Framework vs Library","text":"<p>A library is called by our code, while a framework calls our code. The difference is where the control is. In a library our code controls which function runs when. In a framework the framework has the control and decides which functions to call.</p>"},{"location":"22HS/WBE/UI%20Library.html#web-components","title":"Web Components","text":"<p>To create your own html tag, a class can be created which extends from <code>HTMLElement</code> and then use <code>attachShowdow({mode: 'open'})</code> to create a shadow DOM (if <code>mode</code> is set to open then JS code outside of the element can access it. If, however, it is set to closed then only the element itself can access the shadow DOM). With the property <code>shadowRoot</code> of the element, code can access the shadow DOM.</p> <p>The shadow DOM ensures that JS, HTML and CSS inside the shadow DOM are isolated from the main code.</p> <p>The register the web component the following method <code>customElements.define(&lt;tag-name&gt;, &lt;tag-class&gt;)</code> needs to be called to register the component with the browser.</p> <pre><code>class CustomProgressBar extends HTMLElement {\nconstructor() {\nsuper();\nconst shadowRoot = this.attachShadow({mode: 'open'});\nshadowRoot.innerHTML = `\n          &lt;style&gt;\n              :host { \n                display: inline-block; \n                width: 5rem; \n                height: 1rem; \n              }\n              .progress { \n                display: inline-block; \n                position: relative; \n                border: solid 1px #000; \n                padding: 1px; \n                width: 100%; \n                height: 100%; \n              }\n              .progress &gt; .bar { \n                background: #9cf; \n                height: 100%;\n              }\n              .progress &gt; .label { \n                position: absolute; \n                top: 0; \n                left: 0; \n                width: 100%;\n                text-align: center; \n                font-size: 0.8rem; \n                line-height: 1.1rem; \n              }\n          &lt;/style&gt;\n          &lt;div class=\"progress\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\"&gt;\n              &lt;div class=\"bar\" style=\"width: 0px;\"&gt;&lt;/div&gt;\n              &lt;div class=\"label\"&gt;0%&lt;/div&gt;\n          &lt;/div&gt;\n      `;\nthis._progressElement = shadowRoot.querySelector('.progress');\nthis._label = shadowRoot.querySelector('.label');\nthis._bar = shadowRoot.querySelector('.bar');\n}\nstatic get observedAttributes() { return ['value']; }\nattributeChangedCallback(name, oldValue, newValue, namespaceURI) {\nif (name === 'value') {\nconst newPercentage = newValue === null ? 0 : parseInt(newValue);\nthis._progressElement.setAttribute('aria-valuenow', newPercentage);\nthis._label.textContent = newPercentage + '%';\nthis._bar.style.width = newPercentage + '%';\n}\n}\nget progress() { return this.getAttribute('value'); }\nset progress(newValue) { this.setAttribute('value', newValue); }\n};\ncustomElements.define('custom-progress-bar', CustomProgressBar);\n</code></pre>"},{"location":"22HS/WBE/UI%20Library.html#sjdonsuiweb","title":"SJDON/SUIWEB","text":"<p>The following is an example of SJDON:</p> <pre><code>const element =\n[\"div\", {style: \"background:salmon\"},\n[\"h1\", \"Hello World\"],\n[\"h2\", {style: \"text-align:right\"}, \"from SuiWeb\"] ]\n/*\nEquivalent of:\n&lt;div style=\"background: salmon\"&gt;\n    &lt;h1&gt;Hello World&lt;/h1&gt;\n    &lt;h2 style=\"text-align: right\"&gt;from SuiWeb&lt;/h2&gt;\n&lt;/div&gt;\n*/\n</code></pre> <p></p>"},{"location":"22HS/WBE/UI%20Library.html#states","title":"States","text":"<p>With states, a component can access and set a state. A state is initialised with <code>useState(initialValue)</code> which returns two values in an array. <code>stateVar</code> is a variable to access the current value (not a function) and <code>setStateVar</code> is a function to update the state and rerender the component. In SUIWEB the <code>setState(setFun)</code> function takes a function which is called by the <code>setState()</code> function.</p> <pre><code>const [stateVar, setStateVar] = useState(initialValue)\n</code></pre> <p>The following is an example simulating a slow network speed:</p> <pre><code>const App = () =&gt; {\nlet initialState = {\nheading: \"Awesome SuiWeb (Busy)\",\ncontent: \"Loading...\",\n}\nlet [state, setState] = useState(\"state\", 1, initialState)\nlet [timer, setTimer] = useState(\"timer\", 1, null)\nconst startTimer = () =&gt; setTimeout(() =&gt; {\nsetState(() =&gt; ({\nheading: 'Awesome SuiWeb',\ncontent: 'Done!',\n}))\n}, 3000)\nif (!timer) setTimer(startTimer, false)\nconst { heading, content } = state\nreturn (\n[\"main\",\n[\"h1\", heading],\n[\"p\", content] ]\n)\n}\n</code></pre> <p>The following example shows a basic counter component which increments every second:</p> <pre><code>const Counter = (props) =&gt; {\nlet [count, setCount] = useState(\"mycounter\", props.key, props.count)\nlet [timer, setTimer] = useState(\"mytimer\", props.key, null)\nif (timer) clearTimeout(timer)\nsetTimer(() =&gt; setTimeout(()=&gt;setCount(n =&gt; n+1), 1000), false)\nreturn (\n[\"p\",\n{style: \"font-size:2em\", onclick: () =&gt; setCount(n =&gt; n + 1)},\n\"Count \", count ]\n)\n}\n}\nconst App = (props) =&gt;\n[\"div\",\n[Counter, {count: 1, key: 1}],\n[Counter, {count: 4, key: 2}],\n[Counter, {count: 7, key: 3}] ]\n</code></pre>"},{"location":"22HS/WBE/UI%20Library.html#controlled-input","title":"Controlled Input","text":"<p>In the following example a textfield is created and on each key typed the states are updated. This setup can be used to for example only allow numbers or other restrictions. Because of this, it is called controlled input.</p> <p>If a state is of an input field is only updated when certain condition is met then it is vital to also set the old state if the condition is not met, otherwise no rerender is triggered and input field has the wrong type which the user typed still in it.</p> <pre><code>const App = ({init}) =&gt; {\nlet [text, setText] = useState(\"myTextInput\", 1, init)\nlet [otherText, setOtherText] = useState(\"myOther Text\", 1, \"\")\nconst updateValue = e =&gt; {\nconst value = e.target.value\nconst reg = /^\\d+\\.?\\d*$/\n// !in both cases a rerender is triggered!\nif(reg.text(value)) setText(() =&gt; value) else setText(old =&gt; old)\n}\nconst updateOtherValue = e =&gt; {\n// do validation here\nsetOtherText(() =&gt; e.target.value)\n}\nreturn (\n[\"div\", {style: \"background: lightblue\"},\n[\"h1\", \"Controlled Input Elements\"],\n[\"input\", {oninput: updateValue, value: text}],\n[\"p\", \"Your input: \", text ],\n[\"textarea\", {oninput: updateOtherValue}, otherText],\n[\"p\", \"Your input: \", otherText ] ] )\n}\nconst element = [App, {init: \"Name\"}]\n</code></pre>"},{"location":"22HS/WBE/UI%20Library.html#container-component","title":"Container Component","text":"<p>A container component wraps another component and provides the data. This ensures that the wrapped component is only concerned with the UI and not fetching and managing date. Instead the container component does this and the concerns are separated and, additionally, the UI component is more reusable.</p>"},{"location":"22HS/WBE/UI%20Library.html#effect-hook","title":"Effect Hook","text":""},{"location":"22HS/WBE/UI%20Library.html#splitting-applications-into-components","title":"Splitting Applications into Components","text":""},{"location":"Allgemein/Haskell/Data%20Classes.html","title":"Data Classes","text":""},{"location":"Allgemein/Haskell/Data%20Classes.html#semi-group","title":"Semi-Group","text":"<pre><code>class Semigroup a where\n(&lt;&gt;) :: a -&gt; a -&gt; a\n</code></pre> <p>A semigroup is a data type which has a associative binary operation (like <code>+</code>). The operation of a semigroup should be associative (<code>(a &lt;&gt; b) &lt;&gt; c == a &lt;&gt; (b &lt;&gt; c)</code>).</p> <p>Every <code>Monoid</code> is a semigroup.</p>"},{"location":"Allgemein/Haskell/Data%20Classes.html#monoid","title":"Monoid","text":"<p>Haskall defines a monoid in the following way:</p> <pre><code>class Semigroup a =&gt; Monoid a where\nmempty :: a\nmappend :: a -&gt; a -&gt; a\nmconcat :: [a] -&gt; a\n</code></pre> <p><code>&lt;&gt; :: a -&gt; a -&gt; a</code> is an alias for <code>mappend</code></p> <p>A monoid is a thing which has two rules:</p> <ol> <li> <p>It has an identity value    In algebra for <code>+</code> the identity value is <code>0</code>, for multiplication it is <code>1</code>    $$    0 + a = a\\    1 \\cdot a = a    $$</p> </li> <li> <p>It is associative    $$    (a+b)+c=a+(b+c)\\    (a\\cdot b)\\cdot c=a\\cdot (b\\cdot c)    $$</p> </li> </ol> <p>Here are some examples for monoids:</p> <ul> <li>List/String: <code>[a]</code></li> </ul> <pre><code>[] ++ [1, 2, 3] == [1, 2, 3]\n([1, 2] ++ [3, 4]) ++ [5, 6] = [1, 2] ++ ([3, 4] ++ [5, 6])\n</code></pre> <ul> <li>Maybe: <code>Semigroup a =&gt; Maybe a</code></li> </ul> <pre><code>Just (Sum 3) `mappend` Nothing == Just (Sum 3)\nmempty :: Maybe (Sum Int) == Nothing\n</code></pre> <ul> <li>Numbers: <code>Num a =&gt; Sum a</code> / <code>Num a =&gt; Product a</code></li> </ul> <pre><code>Sum 3 `mappend` Sum 4 == 7\nmempty :: Sum Int = 0\nProduct 3 `mappend` Sum 2 == 6\nmempty :: Product Int = 0\n</code></pre> <ul> <li> <p>IO</p> </li> <li> <p>All/Any: </p> </li> </ul> <pre><code>-- implements &amp;&amp;\nmempty :: All == Any True\nAll True &lt;&gt; All False == All False\nAll True &lt;&gt; All True == All True\n-- implement ||\nmempty :: Any == Any False\nAny True &lt;&gt; Any False == Any True\nAny False &lt;&gt; Any False == Any False\n</code></pre>"},{"location":"Allgemein/Haskell/Data%20Classes.html#dual-monoid","title":"Dual Monoid","text":"<p>The <code>Dual a</code> monoid will flip the order of the <code>mappend</code> (aka <code>&lt;&gt;</code>) operator. For this to work, <code>a</code> has to be a <code>Monoid</code> as well.</p> <pre><code>Dual \"hello\" &lt;&gt; Dual \" \" &lt;&gt; Dual \"world\" -- will return Dual \"world hello\"\ngetDual (Dual \"hello\" &lt;&gt; Dual \" \" &lt;&gt; Dual \"world\") -- will return \"world hello\"\nDual [4..6] &lt;&gt; Dual [1..3] -- will return Dual [1, 2, 3, 4, 5, 6]\n</code></pre>"},{"location":"Allgemein/Haskell/Data%20Classes.html#functor","title":"Functor","text":"<p>A <code>Functor</code> is a data type which can be mapped over.</p> <pre><code>class Functor f where\nfmap :: (a -&gt; b) -&gt; f a -&gt; f b\n(&lt;$) :: a -&gt; f b -&gt; f a\n</code></pre> <p><code>fmap</code> and <code>(&lt;$)</code> are the same function but with diffrent argument ordering. They will map from <code>f a</code> to <code>f b</code>. <code>&lt;$&gt;</code> is a synonym of <code>fmap</code> but as a infix operator.</p>"},{"location":"Allgemein/Haskell/Data%20Classes.html#laws","title":"Laws","text":"<p>A <code>Functor</code> should follow the following laws:</p> <ul> <li><code>fmap id = id</code>   Using the <code>id</code> function with <code>fmap</code> should return the unmodifies object</li> <li><code>fmap (f . g) == fmap f . fmap g</code>   It shouldn't matter if the mapping functions are composed together first and then mapped or the <code>fmap</code> are composed</li> </ul>"},{"location":"Allgemein/Haskell/Data%20Classes.html#applicative","title":"Applicative","text":"<pre><code>class Applicative f where\n{-# MINIMAL pure, ((&lt;*&gt;) | lift2A) #-}\npure :: a -&gt; f a\n(&lt;*&gt;) :: f (a -&gt; b) -&gt; f a -&gt; f b\nlift2A :: (a -&gt; b -&gt; c) -&gt; f a -&gt; f b -&gt; f c\n</code></pre> <p><code>Applicative</code>s are like <code>Functor</code> in that they apply a mapping function to a box value. With a <code>Applicative</code> the function is also a boxed value. This is useful to map functions with more than one argument to a boxed value. If <code>&lt;$&gt;</code> (aka <code>fmap</code>) is used to apply a value to a function with two parameters, you get the following: <code>(+) &lt;$&gt; Just 5 == Just (+5)</code>. This can be combined with <code>&lt;*&gt;</code> in the following way:</p> <pre><code>(+) &lt;$&gt; Just 5 &lt;*&gt; Just 3 -- will return Just 8\nlift2A (+) (Just 5) (Just 3) -- will return Just 8\n</code></pre> <p>An <code>Applicative</code> also defines the function <code>pure</code> which boxes a value. </p> <p>There are also some helper functions:</p> <ul> <li><code>(*&gt;) :: f a -&gt; f b -&gt; f b</code>   Discard the first argument (but still \"runs\" it) and only return the value of the second applicative</li> </ul> <pre><code>Just 3 *&gt; Just 5 -- will return Just 5\nNothing *&gt; Just 5 -- will return Nothing\nJust 3 *&gt; Nothing -- will return Nothing\n</code></pre> <ul> <li><code>&lt;* :: fa -&gt; fb -&gt; fa</code>   Discards the second argument (but still \"runs\" it) and only return the value of the first applicative</li> </ul> <pre><code>Just 3 &lt;* Just 5 -- will return Just 3\nNothing &lt;* Just 5 -- will return Nothing\nJust 3 &lt;* Nothing -- will return Nothing\n</code></pre> <ul> <li><code>liftA3 :: Applicative f =&gt; (a -&gt; b -&gt; c -&gt; d) -&gt; f a -&gt; f b -&gt; f c -&gt; f d</code>    Works the same as <code>liftA2</code> but accepts a function with three paramters.</li> </ul>"},{"location":"Allgemein/Haskell/Data%20Classes.html#monad","title":"Monad","text":"<pre><code>class Applicative m =&gt; Monad m where\n(&gt;&gt;=) :: forall a b. m a -&gt; (a -&gt; m b) -&gt; m b\n(&gt;&gt;) :: forall a b. m a -&gt; m b -&gt; m b return :: a -&gt; m a\n</code></pre> <p>A <code>Monad</code> is similar to an <code>Applicative</code> in that it also allows a boxed value to be mapped. The difference is, that the mapping function of a <code>Monad</code> returns a boxed value as a <code>Monad</code> itself. This can be used to return for example a <code>Nothing</code> instance, if the operation failed, leading to short-circuiting.</p> <p>The <code>&gt;&gt;=</code> operator gets used to chain Monads together. The mapping function gets the boxed value of the input <code>Monad</code> as a parameter. But this isn't always wanted (like with <code>putStrLn</code> which returns <code>IO ()</code>). In those cases <code>&gt;&gt;</code> can be used. <code>return</code> is often a synonym to <code>pure</code> of <code>Applicative</code></p> <pre><code>half :: Int -&gt; Maybe Int\nhalf x = if even x then Just (x `div` 2)\nelse Nothing\nJust 3 &gt;&gt;= half -- will return Nothing\nJust 4 &gt;&gt;= half -- will return Just 2\nJust 4 &gt;&gt;= half &gt;&gt;= half -- will return Just 1\nJust 4 &gt;&gt;= half &gt;&gt;= half &gt;&gt;= half -- will return Nothing\nputStrLn \"hello\" &gt;&gt;= (\\_ -&gt; putStrLn \"world\")\nputStrLn \"hello\" &gt;&gt; putStrLn \"world\"\n-- both print:\n-- hello\n-- world\n</code></pre>"},{"location":"Allgemein/Haskell/Data%20Classes.html#monad-transformer","title":"Monad Transformer","text":"<pre><code>class (forall m. Monad m =&gt; Monad (t m)) =&gt; MonadTrans t where\nlift :: Monad m =&gt; m a -&gt; t m a\n</code></pre> <p>A monad transformer enhances a \"base monad\" <code>m</code> with some functionality. For example the <code>ExceptT</code> type enhances a monad with the <code>Either</code> monad allowing it to short-circuit in case of an error.</p> <p>The <code>lift</code> method can be used to access the base monad.</p> <pre><code>addIfPositive :: Int -&gt; ExceptT String (State Int) Int\naddIfPositive i = do\nn &lt;- lift get\nif n &gt;= 0\nthen lift (put $ n + 1) &gt;&gt; lift get\nelse throwE $ (show n) ++ \" is negative\"\n</code></pre> <p>In the example above <code>addIfPositive</code> will only add the given <code>Int</code> to the internal state if the internal state is positive else an error message is produced and the operation stops (aka. short-circuits). <code>lift get</code> is used to access the state in the do-Block.</p> <p>Monads are usually defined with their monad transformer. The <code>Except</code> monad for example is defined as <code>type Except e a = ExceptT e (Identity a)</code></p>"},{"location":"Allgemein/Haskell/Data%20Classes.html#foldable","title":"Foldable","text":"<pre><code>class Foldable t where\n{-# MINIMAL foldMap | foldr #-}\nfoldMap :: Monoid m =&gt; (a -&gt; m) -&gt; t a -&gt; m\nfoldMap f = foldr (mappend . f) mempty\nfoldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; t a -&gt; b\nfoldr f z t = appEndo (foldMap (Endo #. f) t) z\n-- and a number of optional methods\n</code></pre> <p>A <code>Foldable</code> is a container type which allows to access its elements in a well-defined order. To instance a <code>Foldable</code> either <code>foldMap</code> or <code>foldr</code> has to be defined, but there are more optional methods.</p> <p>Here are some of the useful methods, which can be used with a <code>Foldable</code> structure:</p> <ul> <li><code>foldMap :: (Foldable t, Monoid m) =&gt; (a -&gt; m) -&gt; t a -&gt; m</code>   With <code>foldMap</code> a <code>Foldable</code> structure can be folded. For this, the type contained in the <code>Foldable</code> needs to be an instance of <code>Monoid</code></li> </ul> <pre><code>foldMap Product [1..4] -- will return 24\nfoldMap Sum [1..4] -- will return 10\n</code></pre> <ul> <li> <p><code>length :: Foldable t =&gt; t a -&gt; Int</code>   Returns the length of a foldable structure</p> </li> <li> <p><code>toList :: Foldable t =&gt; t a -&gt; [a]</code>   Will flatten the <code>Foldable</code> to a list</p> </li> <li> <p><code>traverse_ :: (Foldable t, Applicative f) =&gt; (a -&gt; f b) -&gt; t a -&gt; f ()</code> / <code>for_ :: (Foldable t, Applicative f) =&gt; t a -&gt; (a -&gt; f b) -&gt; f ()</code>   Allows to execute an <code>Applicative</code> for every element. This could be a side-effect. Both <code>traverse_</code> and <code>for_</code> do the same thing, but have their arguments flipped</p> </li> </ul> <pre><code>traverse_ (putStrLn . show) [1..3]\nfor_ [1..3] (putStrLn . show)\n-- both will print:\n-- 1\n-- 2\n-- 3\n</code></pre> <ul> <li><code>sequenceA_ :: (Foldable t, Applicative f) =&gt; t (f a) -&gt; f ()</code> <code>sequenceA_</code> will execute each <code>Applicative</code> in the <code>Foldable</code> and throw the result away</li> </ul> <pre><code>sequenceA_ [putStrLn \"hello\", putStrLn \"world\"]\n-- will print:\n-- hello\n-- world\n</code></pre> <ul> <li><code>null :: Foldable t =&gt; t a -&gt; Bool</code> <code>null</code> checks if the given <code>Foldable</code> is empty</li> </ul> <pre><code>null [] -- will return True\nnull [1..4] -- will return False\n</code></pre>"},{"location":"Allgemein/Haskell/Data%20Classes.html#traversable","title":"Traversable","text":"<pre><code>class (Functor t, Foldable t) =&gt; Traversable t where\n{-# MINIMAL traverse | sequenceA #-}\ntraverse :: Applicative f =&gt; (a -&gt; f b) -&gt; t a -&gt; f (t b)\ntraverse f = sequenceA . fmap f\nsequenceA :: Applicative f =&gt; t (f a) -&gt; f (t a)\nsequenceA = traverse id\nmapM :: Monad m =&gt; (a -&gt; m b) -&gt; t a -&gt; m (t b)\nmapM = traverse\nsequence :: Monad m =&gt; t (m a) -&gt; m (t a)\nsequence = sequenceA\n</code></pre> <p>An instance of a <code>Traversable</code> alows a data structure to work easily with <code>Applicative</code>s and <code>Monad</code>s</p> <p>The <code>sequenceA</code> function takes a <code>Foldable</code>, which has <code>Applicative</code>s nested (like <code>[Just 1, Just 2, Nothing]</code>). <code>traverse</code> on the other hand takes a <code>Foldable</code> of elements and a mapping function, which will map the elements to <code>Applicative</code> resulting in a <code>Foldable</code> which has <code>Applicative</code> nested. </p> <p>Example: <code>[1, 2, 3]</code> with the mapping function <code>Just</code> will result in <code>[Just 1, Just 2, Just 3]</code> which would be an valid input for <code>sequenceA</code>.</p> <p>Here are some useful methods, which can be used with a <code>Traversable</code> structure:</p> <ul> <li><code>traverse :: (Traversable t, Applicative f) =&gt; (a -&gt; f b) -&gt; t a -&gt; f (t b)</code> <code>traverse</code> will apply the given function to every element of the <code>Traversale</code> structure and execute the returned <code>Applicative</code>. The results are returned wrapped in the <code>Applicative</code></li> </ul> <pre><code>traverse print [1, 2] -- has the type :: IO [()]\n-- will print:\n-- 1\n-- 2\n-- and will return IO [(), ()]\ntraverse Sum [1, 2] -- will return Sum [1, 2]\n</code></pre> <ul> <li><code>sequenceA :: (Traversable t, Applicative f) =&gt; t (f a) -&gt; f (t a)</code> <code>sequenceA</code> executes all <code>Applicative</code>s in a <code>Traversable</code> structure and wraps them in the <code>Applicative</code></li> </ul> <pre><code>sequenceA [print \"hello\", print \"world\"] -- has the type :: IO [()]\n-- will print:\n-- hello\n-- world\n-- and will return IO [(), ()]\nsequenceA [Sum 1, Sum 5] -- will return Sum [1, 5]\nsequenceA [(+3),(*2),(+6)] :: Num a =&gt; a -&gt; [a]\nsequenceA [(+3),(*2),(+6)] 2 -- will return [5, 4, 8] \n</code></pre> <ul> <li> <p><code>mapM :: Monad m =&gt; (a -&gt; m b) -&gt; t a -&gt; m (t b)</code>   An alias for <code>traverse</code> which exists because <code>Applicative</code> wasn't always a super class of <code>Monad</code></p> </li> <li> <p><code>sequence :: Monad m =&gt; t (m a) -&gt; m (t a)</code></p> </li> </ul> <p>An alias for <code>sequenceA</code> which exists because <code>Applicative</code> wasn't always a super class of <code>Monad</code></p>"},{"location":"Allgemein/Haskell/Optics.html","title":"Optics","text":""},{"location":"Allgemein/Haskell/Optics.html#capabilities","title":"Capabilities","text":"<p>In the following table the capabilities of each optics is shown.</p> Lens Traversal Fold Get Single Many Many Set/Modify Single Many Nope Traverse Single Many Nope"},{"location":"Allgemein/Haskell/Optics.html#operators","title":"Operators","text":"<p>There is a general patterns applied to most operators in the Optics library. This means that the name of an operator can usually be guessed.</p> Symbol Explenation Example <code>^</code> Denotes that the action views/gets something <code>^.</code> <code>.</code> Denotes the absence of any other modifiers <code>^.</code> <code>%</code> Denotes an actinon which modifies using a function <code>%~</code> <code>~</code> Denotes that this action updates/sets something <code>%~</code>, <code>.~</code> <code>&lt;</code> A prefix for update/set actions, which will return the altered value as well as the whole structure <code>&lt;+~</code> <code>&lt;&lt;</code> A prefix for update/set action, which will return the old value <code>&lt;&lt;+~</code>"},{"location":"Allgemein/Haskell/Optics.html#lenses","title":"Lenses","text":"<p>A lens abstracts the getter and setter into one value. A lens can focus a single type and always returns a type (so a lens can't return <code>a</code> from <code>Either a b</code>, because the type could also be <code>b</code>).</p> <p>Their are two types of lenses:</p> <ul> <li>Simple lens: <code>Lens' s a</code>, where <code>s</code> is the structure and <code>a</code> is the focus type.    This lens always returns the same type as it gets and it can be created with <code>makeLenses</code></li> <li>Polymorphic Lens: <code>Lens s t a b</code>, where <code>s</code> is the input structure, <code>t</code> the output structure, <code>a</code> the input focus and <code>b</code> the output focus.   This type of lenses can change the types of the structure and focus.</li> </ul> <pre><code>data Settings a = Settings {\n_path :: String, _object :: a\n} derving (Show)\npath :: Lens' Settings a\npath = lens getter setter\nwhere\ngetter :: Settings a -&gt; String\ngetter = _path\nsetter :: Settings a -&gt; String -&gt; Settings a\nsetter oldSettings newPath = oldSettings{ _path = newPath }\nobject :: Lens (Settings a) -&gt; (Settings b) -&gt; a -&gt; b\nobject = lens getter setter\nwhere\ngetter :: Settings a -&gt; a\ngetter = _object\nsetter :: Settings a -&gt; b -&gt; Settings b\nsetter oldSettings newObj = oldSettings{ _object = newObj }\n</code></pre>"},{"location":"Allgemein/Haskell/Optics.html#lens-laws","title":"Lens Laws","text":"<ol> <li>You get back what you set (set-get)    When you set something, you always get the same thing back</li> </ol> <pre><code>view myLens (set myLens newValue structure) == newValue\n</code></pre> <ol> <li>Setting back what you got doesn't do anything (get-set)    When you set what <code>view</code> returned to you, than nothing changes</li> </ol> <pre><code>set myLens (view myLens structure) structure == structure\n</code></pre> <ol> <li>Setting twice is the same as setting once (set-set)    Setting multiple times the same value does always do the same thing</li> </ol> <pre><code>set myLens diffrentValue (set myLens diffrentValue structure) == set myLens diffrentValue structure\n</code></pre>"},{"location":"Allgemein/Haskell/Optics.html#virtual-fields","title":"Virtual Fields","text":"<p>Lenses can be used to provide an abstraction layer above the actual data structure. Virtual Fields can be created by writing custom lens getters and setter. The getter and setter can apply a function to convert the field. </p> <p>This can also be done later, when the underlying data structure changes but the public API shouldn't change.</p>"},{"location":"Allgemein/Haskell/Optics.html#lenses-operators","title":"Lenses &amp; Operators","text":"<p>The following operators can be used with lenses:</p> <ul> <li><code>view :: Lens' s a -&gt; s -&gt; a</code>   Returns the value which the given lens focuses on</li> <li><code>set :: Lens s t a b -&gt; b -&gt; s -&gt; t</code> or <code>set :: Lens' s a -&gt; a -&gt; s -&gt; s</code>   Sets the value of the focus of a lens</li> <li><code>over :: Lens s t a b -&gt; (a -&gt; b) -&gt; s -&gt; t</code> or <code>over :: Lens' s a -&gt; (a -&gt; a) -&gt; s -&gt; s</code>   Fetches the focused value, applies the given function and then uses set t set the focused value</li> </ul> <p>There are infix operator which are synonyms to the operators above:</p> Operator Action Type <code>^.</code> flipped view <code>s -&gt; Lens' s a -&gt; a</code> <code>.~</code> set <code>Lens s t a b -&gt; b -&gt; s -&gt; t</code> <code>%~</code> over <code>Lens s t a b -&gt; (a -&gt; b) -&gt; s -&gt; t</code> <p>Some common lenses are :</p> <ul> <li><code>_1 :: Lens (a, other) (b, other) a b</code>   Sets the focus on the first element of a tuple</li> <li><code>_2 :: Lens (other, a) (other, b) a b</code>   Sets the focus on the second element of a tuple</li> </ul> <pre><code>data Payload = Payload\n{ _weightKilos :: Int,\n_cargo :: String\n}\nderiving (Show)\nmakeLenses ''Payload\ndata Ship = Ship {_payload :: Payload}\nderiving (Show)\nmakeLenses ''Ship\nserenity :: Ship\nserenity = Ship (Payload 5000 \"Livestock\")\n-- get\n&gt;&gt;&gt; view payload . cargo serenity\n-- &gt; \"Livestock\"\n&gt;&gt;&gt; serenity ^. payload . cargo -- &gt; \"Livestock\"\n-- set\n&gt;&gt;&gt; set (payload . cargo) \"Medicine\" serenity\n&gt;&gt;&gt; serenity &amp; payload . cargo .~ \"Medicine\"\n&gt;&gt;&gt; serenity &amp; payload . cargo .~ \"Chocolate\"\n&amp; payload . weightKilos .~ 2310\n-- over\n&gt;&gt;&gt; serenity &amp; payload . weightKilos .% subtract 1000\n&amp; payload . cargo .~ \"Chocolate\"\n</code></pre>"},{"location":"Allgemein/Haskell/Optics.html#composing-lenses","title":"Composing Lenses","text":"<p>Lenses compose very easily.  Imagin each lens being a domino which can be fitted together if the types match. From the expression below, we'll get <code>address :: Lens' Person StreetAddress</code>. The <code>Address</code> type is \"hidden\" in the composition. </p> <p>At the the right end of a domino line, we can use an action to do something, like modifying the focused value. </p> <p>Here an actual Example: <pre><code>wave :: Wool -&gt; Sweater\nweave Wool = Sweater\ngameState :: (Player, Item Wool)\ngameState = (Player Item Wool 5)\n-- crafts a sweater\ngameState' :: (Player, Item Sweater)\ngameState' = over (_2 . material ) weave gameState\n</code></pre></p>"},{"location":"Allgemein/Haskell/Optics.html#folds","title":"Folds","text":"<p>A fold is like a query and can:</p> <ul> <li>focus on multiple things</li> <li>can only get, not set data</li> </ul> <p>A fold has the data type <code>Fold s a</code>, where the <code>s</code> is the structure on which the query runs and <code>a</code> is the return value. A fold returns zero or more from <code>a</code></p> <p>A fold, like a lens, doesn't contain data. It is an \"operation\" which knows how to extract zero or more elements from an type.</p> <p>We can create a custom <code>Fold</code> with the function <code>folding :: Foldable f =&gt; (s -&gt; f a) -&gt; Fold s a</code>, which takes as an argument a function which transforms the type <code>s</code> into a folding type <code>a</code>. </p> <pre><code>data ShipCrew = ShipCrew { _captain :: String,\n, _conscripts :: [String]\n} deriving (Show)\nmakeLenses ''ShipCrew\ncollectCrewMembers :: ShipCrew -&gt; [String]\ncollectCrewMembers crew = (_captain crew) : _conscripts crew\ncrewMembers :: Fold ShipCrew String\ncrewMembers = folding collectCrewMembers\n</code></pre>"},{"location":"Allgemein/Haskell/Optics.html#operators_1","title":"Operators","text":"<ul> <li><code>folded : Foldable f =&gt; Fold (f a)</code>   With <code>folded</code> an instance of <code>Foldable</code> like a list can be converted into a <code>Fold</code>. </li> </ul> <p>A lens can be used to focus in on an element of a fold. This works because every lens has a getter to focus on one element exactly. This fits into the definition of a fold which needs to focus on zero or more elements. <pre><code>data CartItem = CartItem { _name :: String\n, _count :: Int}\nmakeLenses ''CarItem\ncart :: [CartItem]\ncart = [CartItem \"Black Shirt\" 3, CarItem \"Water Bottle\" 2]\n-- get a list of all items\ncart ^.. folded -- will return [CartItem \"Black Shirt\" 3, CarItem \"Water Bottle\" 2]\ntoListOf folded cart -- the same as above\ncart ^.. folded . name -- [\"Black Shirt\", \"Water Bottle\"]\ntoListOf (folded . name) cart -- the same as above\n</code></pre></p> <ul> <li><code>to :: (s -&gt; a) -&gt; Fold s a</code>   Creates a fold which maps from the type <code>s</code> to the folded type <code>a</code>. This function maps 1-to-1. Because of this, it couldn't be used to extract values from <code>Maybe</code>. If a 1-to-many relationship is needed, <code>folding</code> can be used</li> </ul> <pre><code>newtype Name = Name { getName :: String } deriving (Show)\nName \"Hi\" ^. to getName -- will return \"Hi\"\nName \"hello world\" ^. to getName . to (fmap toUpper) -- will return \"HELLO WORLD\"\n(ShipCrew \"Captain Tom\" [\"Franz\", \"Max\"]) ^.. crewMembers . to (fmap toUpper) -- will return [\"CAPTAIN TOM\", \"FRANZ\", \"MAX\"]\n</code></pre> <ul> <li><code>backwards :: Fold s a -&gt; Fold s a</code>   Reverses the elements of a fold</li> </ul> <pre><code>[1, 2, 3] ^.. backwards folded -- will return [3, 2, 1]\n[(1, 2), (3, 4)] ^.. backwards (folded . both) -- will return [4, 3, 2, 1]\n[(1, 2), (3, 4)] ^.. backwards folded . both -- will return [3, 4, 1, 2]\n</code></pre> <ul> <li><code>only :: Eq a =&gt; a -&gt; Prism' a ()</code>    A helper fold operator which can simplify to <code>only :: Eq a =&gt; a -&gt; Fold a ()</code>. It return <code>()</code> only if the input is equal to the given <code>a</code></li> </ul> <pre><code>1 ^? only 1 -- will return Just ()\n2 ^? only 1 -\n</code></pre>"},{"location":"Allgemein/Haskell/Optics.html#actions","title":"Actions","text":"<ul> <li> <p><code>toListOf :: Fold s a -&gt; s -&gt; [a]</code>/<code>(^..) :: s -&gt; Fold s a -&gt; [a]</code>   To use a fold on data the function <code>toListOf</code> can be used. This will take a <code>Fold</code> and a <code>Foldable</code> structure and extracts <code>[a]</code> out of it. A synonym is <code>(^..) :: s -&gt; Fold s a -&gt; [a]</code></p> </li> <li> <p><code>elemOf :: Eq a =&gt; Fold s a -&gt; a -&gt; s -&gt; Bool</code>   Checks if the given <code>a</code> is in the <code>Fold</code></p> </li> </ul> <pre><code>elemOf folded 3 [1..4] -- will return True\nelemOf folded 99 [1..4] -- will return False\n</code></pre> <ul> <li><code>anyOf :: Fold s a -&gt; (a -&gt; Bool) -&gt; s -&gt; Bool</code>   Checks if the predicates returns true for at least one element</li> </ul> <pre><code>anyOf folded even [1..4] -- will return True\nanyOf folded (&gt;100) [1..4] -- will return False\n</code></pre> <ul> <li><code>allOf :: Fold s a -&gt; (a -&gt; Bool) -&gt; s -&gt; Bool</code>   Check if the predicates returns true for all elements</li> </ul> <pre><code>allOf folded even [1..4] -- will return False\nallOf folded (&lt;10) [1..4] -- will return True\n</code></pre> <ul> <li><code>findOf :: Fold s a -&gt; (a -&gt; Bool) -&gt; s -&gt; Maybe a</code>   Tries to find an element for which the predicate returns true</li> </ul> <pre><code>findOf folded even [1..4] -- will return Just 2\nfindOf folded (&gt;10) [1..4] -- will return Nothing\n</code></pre> <ul> <li><code>has :: Fold s a -&gt; s -&gt; Bool</code>   Checks if there is at least one element</li> </ul> <pre><code>has folded [] -- will return False\nhas folded [1..4] -- will return True\n</code></pre> <ul> <li><code>hasn't :: Fold s a -&gt; s -&gt; Bool</code>   Checks if there are no elements</li> </ul> <pre><code>hasn't folded [] -- will return True\nhasn't folded [1..4] -- will return False\n</code></pre> <ul> <li><code>lengthOf :: Fold s a -&gt; s -&gt; Int</code>   Returns how many elements there are</li> </ul> <pre><code>lengthOf folded [1, 2, 3, 4] -- will return 4\n</code></pre> <ul> <li><code>sumOf :: Num n =&gt; Fold s n -&gt; s -&gt; n</code> / <code>productOf :: Num n =&gt; Fold s n -&gt; s -&gt; n</code>   Calculates the sum/product of all elements</li> </ul> <pre><code>sumfOf folded [1..4] -- will return 10\nproductOf folded [1..4] -- will return 24\n</code></pre> <ul> <li><code>firstOf :: Fold s a -&gt; s -&gt; Maybe a</code> / <code>preview :: Fold s a -&gt; s -&gt; Maybe a</code> / <code>( ^?) :: s -&gt; Fold s a -&gt; Maybe a</code> / <code>lastOf :: Fold s a -&gt; s -&gt; Maybe a</code> <code>firstOf</code>, <code>preview</code> and <code>(^?)</code> return the first element; <code>lastOf</code> returns the last element</li> </ul> <pre><code>firstOf folded [] -- will return Nothing\nfirstOf folded [1..4] -- will return Just 1\npreview folded [1..4] -- will return Just 1\n[1..4] ^? folded -- will return Just 1\nlastOf folded [1..4] -- will return Just 4\n</code></pre> <ul> <li><code>minimumOf :: Ord a =&gt; Fold s a -&gt; s -&gt; Maybe a</code> / <code>maximumOf :: Ord a =&gt; Fold s a -&gt; s -&gt; Maybe a</code>   Returns the minimum or maximum of the elements</li> </ul> <pre><code>minimumOf folded [1..4] -- will return Just 1\nmaximumOf folded [1..4] -- will return Just 4\nminimumOf folded [] -- will return Nothing\nmaximumOf folded [] -- will return Nothing\n</code></pre> <ul> <li><code>maximumByOf :: Fold s a -&gt; (a -&gt; a -&gt; Ordering) -&gt; s -&gt; Maybe a</code> / <code>minimumOf :: Fold s a -&gt; (a -&gt; a -&gt; Ordering) -&gt; s -&gt; Maybe a</code>   These function return the \"largest\" or \"smallest\" element determinted by the function <code>(a -&gt; a -&gt; Ordering)</code></li> </ul> <pre><code>data Person = Person { _name :: String, _age :: Int} deriving (Show)\nmaximumByOf (folded) (comparing _age) [Person \"Seb\" 22, Person \"Marie\" 33] -- will return Person \"Marie\" 33\nminimumByOf (folded) (comparing _age) [Person \"Seb\" 22, Person \"Marie\" 33] -- will return Person \"Seb\" 22\n</code></pre> <ul> <li><code>traverseOf_ :: Functor f =&gt; Fold s a -&gt; (a -&gt; f r) -&gt; s -&gt; f ()</code> / <code>forOf_ :: Functor f =&gt; Fold s a -&gt; s -&gt; (a -&gt; f r) -&gt; f ()</code> <code>traverseOf_</code> and <code>forOf_</code> are used to execute side effects with elements and are the optic equivalents of <code>traverse_</code> and <code>for_</code></li> </ul> <pre><code>data Person = Person {_name :: String, _age :: Int} deriving (Show)\npersons = [Person \"Seb\" 22, Person \"Ann\", 34]\nshowPerson :: Person -&gt; String\nshowPerson p = _name p &lt;&gt; \": \" &lt;&gt; show (age p)\ntraverseOf_ (folded . to showPerson) putStrLn persons -- will return:\n-- Seb: 22\n-- Ann: 34\n-- example from Optics By Example / page \n&gt;&gt;&gt; import Control.Monad.State\n&gt;&gt;&gt; execState (traverseOf_ folded (modify . const (+1)) tvShows) 0\n2\n</code></pre> <ul> <li> <p><code>foldOf :: Monoid a =&gt; Fold s a -&gt; s -&gt; a</code> / <code>foldMapOf :: Monoid r =&gt; Fold s a -&gt; (a -&gt; r) -&gt; s -&gt; r</code> <code>foldOf</code> and <code>foldMapOf</code> are function which allows the use of Monoids with folds.</p> </li> <li> <p><code>foldByOf :: Fold s a -&gt; (a -&gt; a -&gt; a) -&gt; a -&gt; s -&gt; a</code> / <code>foldMapByOf :: Fold s a -&gt; (r -&gt; r -&gt; r) -&gt; r -&gt; (a -&gt; r) -&gt; s -&gt; r</code> <code>foldByOf</code> and <code>foldMapByOf</code> are similar to <code>foldOf</code> and <code>foldMapOf</code>, but allow the callee to specifiy the append function and identity value.</p> </li> </ul> <pre><code>tvShows = [(\"How I Met Your Mother\", \"Josh Radnor\"), (\"How I Met Your Mother\", \"Alyson Hannigan\"), (\"Buffy the Vampire Slayer\", \"Alyson Hannigan\")]\nfoldMapByOf (folded . _2) (M.unionWith (+)) mempty (\\n -&gt; M.singleton n 1) tvShows\n-- will return [(\"Alyson Hannigan\",2),(\"Josh Radnor\",1)]\n</code></pre> <ul> <li><code>foldrOf :: Fold s a -&gt; (a -&gt; r -&gt; r) -&gt; r -&gt; s -&gt; r</code> / <code>foldlOf :: Fold s a -&gt; (r -&gt; a -&gt; r) -&gt; r -&gt; s -&gt; r</code> <code>foldrOf</code> and <code>foldlOf</code> are functions which are like <code>foldOf</code> and <code>foldMapOf</code>, but the identity value and append function can be set by parameters. They are the equivalence of <code>foldr</code> and <code>foldl</code>.</li> </ul>"},{"location":"Allgemein/Haskell/Optics.html#concat-existing-folds","title":"Concat existing <code>Fold</code>s","text":"<p>Already existing folds (and lenses) can be combined to one big <code>Fold</code> if the types match. </p> <p>Here's an alternative implementation of <code>crewMembers</code></p> <pre><code>crewMembers :: Fold ShipCrew String\ncrewMembers = folding (\\s -&gt; s ^.. captain\n&lt;&gt; s ^.. conscripts . folded)\n</code></pre>"},{"location":"Allgemein/Haskell/Optics.html#traversal","title":"Traversal","text":"<p>A traversal can, like a fold, get zero or more elements but also set zero or more elements. Because of this, lenses and folds are valid traversal but not all traversals are lenses and folds.</p> <p>The type <code>Traversal s t a b</code> has the following generics:</p> <ul> <li><code>s</code> - the structure before the action</li> <li><code>t</code> - the structure after the action</li> <li><code>a</code> - the focus before the action</li> <li><code>b</code> - the focus after the action</li> </ul> <p>Wenn the type of the focus is changed by a setting operation the operation has to convert all elements. An operation which only focuses on part of the traversal can't change the type of the focus.</p> <p>Like with lenses, there is also a simple traversal: <code>Traversal' s a</code>, where the generic mean:</p> <ul> <li><code>s</code> - the structure before and after the action</li> <li><code>a</code> - the focus before and after the action</li> </ul>"},{"location":"Allgemein/Haskell/Optics.html#actions_1","title":"Actions","text":"<p>When actions are used as a setter, then all values are changed, which would be returned with a getter. With these kind of action only part of the traversal can be updated. This also means that the focused type can't c</p> <pre><code>[1, 2, 3, 4, 5] &amp; taking 3 traversed *~ 10 -- will return [10, 20, 30, 4, 5]\n[1, 2, 3, 4, 5] &amp; dropping 3 traversed *~ 10 -- will return [1, 2, 3, 40, 50]\n[1..5] &amp; traversed . filtered even *~ 10 -- will return [1, 20, 3, 40, 5]\n</code></pre> <ul> <li> <p><code>traversed :: Traversable f =&gt; IndexedTraversal Int (f a) (f b) a b</code>   Creates a <code>Traversal</code> which will focus on every element in the data structure. It is more powerfull than <code>folded</code>, but can be used with less types. </p> </li> <li> <p><code>both: Bitraversable r =&gt; Traversal (r a a) (r b b) a b</code> <code>both</code> can be simplified to <code>both: Bitraversable r =&gt; Fold (r a a) a</code> and creates a <code>Fold</code> for a tuple with the same types (<code>(String, Int)</code>  wouldn't be valid). But only the last two item of a tuple are actually traversed. </p> </li> </ul> <pre><code>(\"hello\", \"wolrd\") ^.. both -- will return  [\"hello\", \"world\"]\n(\"hi\") ^.. both -- will return [\"hi\"]\n(\"hi\", \"hello\", \"world\") ^.. both -- will return [\"hello\", \"world\"]\n</code></pre> <ul> <li><code>each :: Each s t a b =&gt; Traversal s t a b</code> <code>each</code> can be simplified to <code>each :: Each s s a a =&gt; Fold s a</code>. It does almost the same thing as <code>both</code>, but over an arbitrary sized tuple. </li> </ul> <pre><code>(\"hi\", \"hello\", \"world\") ^.. each -- will return [\"hi\", \"hello\", \"world\"]\n</code></pre> <ul> <li><code>filtered :: (Choice p, Applicative f) =&gt; (a -&gt; Bool) -&gt; Optic' p f a a</code>   Filters a fold (or other optics) and can simplify to <code>filtered :: (s -&gt; Bool) -&gt; Fold s s</code></li> </ul> <pre><code>[1..10] ^.. folded . filtered even -- will return [2,4,6,8,10]\n</code></pre> <ul> <li> <p><code>filteredBy :: Fold s a -&gt; IndexedTraversal' a s s</code>   An alternative to <code>filtered</code> which uses a fold as the predicate. The type signature above is simplified.on</p> </li> <li> <p><code>taking :: (Conjoined p, Applicative f) =&gt; Int -&gt; Traversing p f s t a a -&gt; Over p f s t a a</code>    This method is the equivalent to <code>take</code> with traversals and folds.    </p> </li> <li> <p><code>dropping :: (Conjoined p, Applicative f) =&gt; Int -&gt; Over p (Control.Lens.Internal.Indexed.Indexing f) s t a a  -&gt;  ver p f s t a a</code>   This method is the fold / traversal equivalent to <code>drop</code></p> </li> </ul> <pre><code>[1..] ^.. taking 5 folded -- will return [1, 2, 3, 4, 5]\n[[1, 2, 3], [10, 20, 30], [100, 200, 300]] ^.. folded . taking 2 folded -- will return [1, 2, 10, 20, 100, 200]\n</code></pre> <p>High-Order actions apply, like other actions, two an element of a fold, not to the fold itself. The following graphic shows the code <code>(\"Albus\", \"Dumbledore\") ^.. both . taking 3 folded</code></p> <p></p> <ul> <li> <p><code>takingWhile :: (a -&gt; Bool) -&gt; Fold s a -&gt; Fold s a</code>   The traversal/folding equivalent to <code>takeWhile</code>. It accepts a predicate and will return element as long as the predicate returns true</p> </li> <li> <p><code>droppingWhile :: (a -&gt; Bool) -&gt; Fold s a -&gt; Fold s a</code>   The traversal/folding equivalent to <code>dropWhile</code>. It will \"drop\" elements from fold elements until predicate returns false</p> </li> </ul> <pre><code>[1..]  ^.. takingWhile (&lt; 5) folded -- will return [1, 2, 3, 4]\n[1..10] ^.. droppingWhile (&lt; 5) folded -- will return [5, 6, 7, 8, 9, 10]\n</code></pre> <ul> <li> <p><code>worded :: Applicative f =&gt; IndexedLensLike' Int f String String</code>   Simplifies to <code>worded :: Traversal' String String</code> and will focus on each word in the string</p> </li> <li> <p><code>lined :: Applicative f =&gt; IndexedLensLike' Int f String String</code>   Simplifies to <code>lined :: Traversal' String String</code> and will focus on each line in the string</p> </li> </ul> <pre><code>\"Hello world\" ^.. worded -- will return [\"Hello\", \"world\"]\n\"Hello\\n How are you?\" ^.. lined -- will return [\"Hello\",\" How are you?\"]\n\"Hello world\" &amp; worded %~ \\s -&gt; \"*\" ++ s ++ \"*\" -- will return \"*Hello* *world*\"\n</code></pre> <ul> <li><code>beside :: Traversal s t a b -&gt; Traversal s' t' a b -&gt; Traversal (s,s') (t,t') a b</code></li> </ul> <p><code>beside</code> applies a the first traversal to the first element of the tuple and the second traversal to the second tuple element. </p> <pre><code>(\"hi\", \"moin\") ^.. beside (to length) (to $ const 200) -- will return (2, 200)\n(\"hello\", (2, \"moin\")) ^.. beside id _2 -- will return (\"hello\", \"moin\")\n(\"hello\", (2, \"moin\")) &amp; beside id _2 %~ (++ \"!\") -- will return (\"hello!\", (2, \"moin!\"))\n</code></pre> <ul> <li><code>element :: Traversable f =&gt; Int -&gt; Traversal' (f a) a</code>   Focuses on the element with the given index</li> </ul> <pre><code>[0..4] ^? element 2 -- will return Just 2\n[0..4] ^? element 20 -- will return Nothing\n[0..4] &amp; element 2 *~ 10 -- will return [0, 1, 20, 3, 4]\n</code></pre>"},{"location":"Allgemein/Haskell/Optics.html#operators_2","title":"Operators","text":"<p>The operator <code>over</code> (aka. <code>%~</code>) and <code>set</code> (aka.<code>.~</code>), which are known from lenses, can also be used with traversals.</p> <pre><code>(\"hello\", \"moin\") &amp; both %~ (++ \"!\") -- will return (\"hello!\", \"moin!\")\nover both (++ \"!\") (\"hello\", \"moin\")  -- will return (\"hello!\", \"moin!\")\n(\"hello\", \"moin\") &amp; both %~ length -- will return (5, 4)\n(\"hello\", \"moin\") &amp; both .~ \"good morning\" -- will return (\"good morning\", \"good morning\")\nset both \"good morning\" (\"hello\", \"moin\") -- will return (\"good morning\", \"good morning\")\n</code></pre> <p>Effects can be run on <code>Traversals</code>  with the method <code>traverseOf :: LensLike f s t a b -&gt; (a -&gt; f b) -&gt; s -&gt; f t</code> which can be spezialized to <code>traverseOf :: Traversal s t a b -&gt; (a -&gt; f b) -&gt; s -&gt; f</code>. <code>traverseOf</code> works like <code>traverse</code> but with <code>Traversable</code>s</p> <pre><code>traverseOf both readMaybe (\"1\", \"2\") :: Maybe (Int, Int) -- will return (1, 2)\ntraverseOf both readMaybe (\"hello\", \"2\") :: Maybe (Int, Int) -- will return Nothing\ntraverseOf each readMaybe [\"1\", \"2\"] :: Maybe [Int] -- will return Just [1, 2]\ntraverse readMaybe [\"1\", \"2\"] :: Maybe [Int] -- will return Just []\n</code></pre>"},{"location":"Allgemein/Haskell/Optics.html#each","title":"Each","text":""},{"location":"Allgemein/IP/IP.html","title":"IP","text":""},{"location":"Allgemein/IP/IP.html#anfoderuungen","title":"Anfoderuungen","text":"<ul> <li>20 ECT-Credits (im 2. und 3. Studienjahr f\u00fcr Vollzeitstudium)</li> <li>Wenn an IP angemeldet, wird man automatisch f\u00fcr die notwendigen englische Module eingetragen (Hier eine Liste von Modulen auf Englisch: https://intra.zhaw.ch/fileadmin/user_upload/80_Dept/T_School_of_Engineering/International/International_Profil/Intranet_Angebot_Module_in_Englisch_IP.pdf)</li> <li>ein extra Modul: Intercultural Communication and Management</li> <li>Am Ende des Studiums ben\u00f6tigt man ein C1</li> </ul> <p>Deadline der Anmeldung f\u00fcr IP ist das 2. Semester</p> <p>Deadline f\u00fcr Anmeldung f\u00fcr Auslandsemester.  Einige Unis wollen ein Zertifikat (zum Teil sogar ein C1). Das TOEFL  iBT mehr als 95 Punkte Englisch Zertifikat ist empfohlen.</p> <p>Link zu Intranet IP: https://intra.zhaw.ch/departemente/school-of-engineering/internationaler-austausch/internationales-profil-ip/</p>"},{"location":"Allgemein/IP/Meeting%20Student.html","title":"Meeting Student","text":""},{"location":"Allgemein/Musik/Tonleitern.html","title":"Tonleitern","text":"\\[ \\newcommand{\\g}[]{1} \\newcommand{\\h}[]{\\frac 1 2} \\newcommand{\\gh}[]{\\frac 3 2} \\]"},{"location":"Allgemein/Musik/Tonleitern.html#dur-tonleiter","title":"Dur-Tonleiter","text":"<p>Die Dur-Tonleiter hat folgendes Muster: \\(\\g - \\g - \\h - \\g - \\g - \\g -\\h\\)</p> <p></p>"},{"location":"Allgemein/Musik/Tonleitern.html#moll-tonleitern","title":"Moll-Tonleitern","text":"<p>Es gibt drei verschiedene Moll-Tonleitern: das parallele,  harmonische und melodische Moll.</p> <p>In der folgenden Tabelle sind die drei Tonleitern direkt verglichen:</p> Name Muster Beispiel Paralleles Moll \\(\\g - \\h - \\g - \\g - \\h - \\g - \\g\\) \\(C \\to D \\to E\\flat \\to F \\to G \\to Ab \\to B\\flat \\to C\\) Melodisches Moll \\(\\g - \\h - \\g - \\g - \\g -\\g -\\h\\) \\(C \\to D \\to E\\flat \\to F \\to G \\to A \\to H \\to C\\) Harmonisches Moll \\(\\g - \\h - \\g -\\g - \\h - \\gh - \\h\\) \\(C \\to D \\to E\\flat \\to F \\to G \\to A\\flat \\to H \\to C\\) <p>Wie man sieht, sind bis zu der Quinte alle Moll-Tonleitern gleich. Dass heisst, erst wenn einer dieser T\u00f6ne gespielt wird, kann unterschieden werden, welche Tonleiter wirklich gespielt wird.</p>"},{"location":"Allgemein/Musik/Tonleitern.html#paralleles-mollaolisch","title":"Paralleles Moll/\u00c4olisch","text":"<p>Das parallele Moll enth\u00e4lt die selben T\u00f6ne, wie die Dur-Tonleiter, aber um sechs T\u00f6ne gegen oben verschoben. Das Muster ist daher: \\(\\g - \\h - \\g - \\g - \\h - \\g - \\g\\)</p> <p>Aus der Tonleiter \\(C \\to D \\to E \\to F\\to G \\to A \\to H \\to C\\) wird \\(A \\to H \\to C \\to D \\to E\\to F \\to G \\to A\\) E Ein weiteres Beispiel w\u00e4re: \\(C \\to D \\to E\\flat \\to F \\to G \\to Ab \\to B\\flat \\to C\\)</p> <p>Es wird auch \u00c4olisch genannt, da es die 6. Stufe von einer Dur-Tonleiter ist.</p>"},{"location":"Allgemein/Musik/Tonleitern.html#melodisches-moll","title":"Melodisches Moll","text":"<p>Das melodische Moll hat das Muster: \\(\\g - \\h - \\g - \\g - \\g -\\g -\\h\\)</p> <p>Da das melodische Moll ein Halb-Ton von 7. zum 8. Ton hat, m\u00f6chte der 7. Ton sich auf den 8. Ton aufl\u00f6sen. </p> <p>Ein Beispiel w\u00e4re: \\(C \\to D \\to E\\flat \\to F \\to G \\to A \\to H \\to C\\)</p>"},{"location":"Allgemein/Musik/Tonleitern.html#harmonisches-moll","title":"Harmonisches Moll","text":"<p>Die dritte Moll Tonleiter ist das harmonische Moll. Diese funktioniert \u00e4hnlich zum melodischen Moll, hat aber ein \\(\\gh\\)-Abstand: \\(\\g - \\h - \\g -\\g - \\h - \\gh - \\h\\)</p> <p>Ein Beispiel w\u00e4re: \\(C \\to D \\to E\\flat \\to F \\to G \\to A\\flat \\to H \\to C\\)</p>"},{"location":"Allgemein/Nothelfer/Nothelfer.html","title":"Nothelfer","text":""},{"location":"Allgemein/Nothelfer/Nothelfer.html#lagebeurteilung","title":"Lagebeurteilung","text":""},{"location":"Allgemein/Nothelfer/Nothelfer.html#beurteilungsfragen","title":"Beurteilungsfragen","text":"<ul> <li>Wie zeigt sich die Situation?</li> <li>Wer ist betroffen?</li> <li>Wie viele Patienten sind vorhanden?</li> <li>Welcher Patient scheint in Lebensbedrohung zu sein?</li> <li>Wie viele Helfer stehen zur Verf\u00fcgung, mit welchem K\u00f6nnen, welcher Qualifikation?</li> <li>Welche Massnahme m\u00fcssen in welcher Reihenfolge und Dringlichkeit erledigt werden?</li> <li>Wie sollen die Arbeiten verteilt werden?</li> </ul>"},{"location":"Allgemein/Nothelfer/Nothelfer.html#sichern","title":"Sichern","text":"<p>Zuerst soll entweder den Patienten an eine sichere Stelle verlagert werden oder die Umfallstelle muss gesichert werden (Pannendreiecke, Warnblinker, ...). Auf der Autobahn wird der Patienten meisten verschoben werden m\u00fcssen, sonst kann meistens der Verkehr gewarnt und umgeleitet werden.</p>"},{"location":"Allgemein/Nothelfer/Nothelfer.html#retten","title":"Retten","text":"<p>Wenn Patient im Fahrzeug ist:</p> <ol> <li>Patienten ansprechen</li> <li>Wenn ansprechbar, anleiten, den Kopf nicht zu bewegen</li> <li>Wenn nicht Ansprechbar: </li> <li>T\u00fcre vorsichtig \u00f6ffenen</li> <li>Nochmals deutlicher ansprechen</li> <li>Gurt l\u00f6sen </li> <li>Person in richtig T\u00fcre drehen und heraus ziehen</li> </ol> <p>Ein Helm kann folgendermassen abgenommen werden:(Es braucht zwei Nothelfer):</p> <p></p>"},{"location":"Allgemein/Nothelfer/Nothelfer.html#notruf","title":"Notruf","text":"Organistation Nr Erkl\u00e4rung Polizei 117 bei Verkehrsunf\u00e4llen, Verbrechen. Feuerwehr 118 bei Br\u00e4nden, Versch\u00fcttungen, eingeklemmten  Personen, Explosionsgefahr, Giftstoffen, Bergungen. Sanit\u00e4t 144 bei verletzten oder kranken Personen. Rega 1414 bei schwer zug\u00e4nglichen, z.B. gebirgigen Notfallstellen oder bei  Schwerverletzten. Normalerweise wird die Rettungsflugwacht Rega durch  die Polizei oder Sanit\u00e4t aufgeboten. Tox Info Suisse 145 Auskunftsnummer bei Vergiftungsvorf\u00e4llen ohne vorliegende lebensbedrohliche St\u00f6rung. Allgemeiner Europ\u00e4ischer Notruf 112 diese vereinheitlichte Notrufnummer gilt auch in den meisten anderen  europ\u00e4ischen Staaten. In der Schweiz wird die Direktwahl der  Notrufnummern der Polizei,  Sanit\u00e4t oder Feuerwehr zurzeit noch  bevorzugt, da sie meist schneller funktioniert. <p>Folgendes sollte an die Notrufzentrale \u00fcbetragen werden:</p> <ul> <li>Wo ist es passiert?</li> <li>Wer ruft an?</li> <li>Was ist passiert?</li> <li>Wie viel Personen sind betroffen?</li> <li>Welche Art von Verletzung liegt vor?</li> </ul>"},{"location":"Allgemein/Nothelfer/Nothelfer.html#verhalten-im-verkehr","title":"Verhalten im Verkehr","text":"<p>F\u00fcr die Sicherung einer Unfallsstelle sollte folgendes getan werden:</p> <ul> <li>Warnblinker und Abblendlichter eingeschaltet werden</li> <li>Warnweste tragen</li> <li>Pannendreicke (50m innerorts, 100m bei schnellem Verkehr)</li> <li>Weitere Personen lenken oder stoppen den Verkehr</li> </ul> <p></p> <p>Wenn keine Person sich verletzt hat und die Unfallstelle fotografisch festgehalten wurde, kann sie ger\u00e4umt werden. Wenn nur ein Blechschaden vorliegt, gen\u00fcgt das Ausf\u00fcllen eines Unfallprotokolls</p> <p>Wenn der Unfall auf der Autobahn geschah, ist es zu gef\u00e4hrlich die Unfallstelle zu sichern und sollte daher m\u00f6glichst schnell ger\u00e4umt werden. Daf\u00fcr muss folgendes getan werden:</p> <ul> <li>Auf dem Pannenstreifen parkieren mit Warnblinker</li> <li>Auf dem Pannenstreifen dem Verkehr mit Warnweste und Pannendreieck entgegen laufen </li> <li>Unfall stelle mit einem Pannendreieck min. 100m von dem Unfall entfernt</li> <li>Danach sollte die Verletzten aus der Gefahrenzone genommen werden und Nothilfe geleistet werden</li> </ul> <p>Wenn dies in einem Tunnel passiert, muss folgendes getan werden:</p> <ul> <li>Fahrzeug versuchen auf einen Pannenstreifen oder Pannenbucht fahren mit Warnblinker eingeschaltet</li> <li>Motor abschalten und Schl\u00fcssel stecken lassen</li> </ul>"},{"location":"Allgemein/Nothelfer/Nothelfer.html#patientenversorgung","title":"Patientenversorgung","text":""},{"location":"Allgemein/Nothelfer/Nothelfer.html#wirbelsaulen-bruch","title":"Wirbels\u00e4ulen Bruch","text":"<p>Symptome:</p> <ul> <li>Analyse des Umfallhergangs</li> <li>Schmerz\u00e4usserung des Patienten im Bereich des R\u00fcckens oder Beckens</li> <li>Empfindungsst\u00f6rungen oder g\u00e4nzliche Gef\u00fchlslosigkeit in Beinen oder Armen</li> <li>unkontrollierter Stuhl oder Harnabgang</li> </ul> <p>Wenn diese Symptome zutrefen, soll folgendes bei ansprechbaren Patienten getan werden:</p> <ul> <li>keine Lagever\u00e4nderungen</li> <li>Kopf stabilisieren</li> <li>Patient auffordern, sich nicht zu bewegen</li> </ul> <p>Wenn der Patient bewusstlos ist, soll nach dem \u00fcblichen Vorgehen vorgegangen werden (Lagenwechsel notwendig, wegen Erstickungsgefahr). Den Patienten mit mehreren Helfern kordiniert stabilisieren/st\u00fctzen bei den Lagenwechseln.</p> <p>Eine m\u00f6glich gebrochene Wirbels\u00e4ule ist den lebenserhaltenden Massnahmen, wie Herzmassage oder Bewusstlosigkeit unterzuordnen!!!!</p>"},{"location":"Allgemein/Nothelfer/Nothelfer.html#bewusstlosigkeit-erkennen","title":"Bewusstlosigkeit erkennen","text":"<p>Wenn ein Patient bei Ansprechen, leicht kneifen oder leichtes r\u00fctteln (nicht zu fest R\u00fctteln) keine Reaktion zeigt, ist er Bewusstlos. Wenn eine Person bewusstlos ist, muss sie in folgende Lage gebracht werden. </p>"},{"location":"Allgemein/Nothelfer/Nothelfer.html#atmung","title":"Atmung","text":"<p>Es muss kontrolliert werden, ob die Person atmet. Entscheide innerhalb von 10 Sekunden, ob die Atmung normal, abnormal oder nicht vorhanden ist. Das bestimmen, sollte mit mehreren Sinnen getan werden (Sehen, h\u00f6ren, f\u00fchlen) Wenn Zweifel bestehen, ob die Atmung normal ist, dann soll sich so verhalten werden, als ob sie nicht normal ist.  </p> <p>Nach einem Kreislaufstillstand kann es sein, dass ein Patient vereinzelt langsame oder ger\u00e4uschvolle Atemz\u00fcge macht. Es ist trotzdem eine Herz-Lungen-Wiederbelebung notwenig.</p> <p>Wenn der Patient bei bewusst sein ist, soll die Atmung trotzdem \u00fcberpr\u00fcft werden. Ein Patient bei bewusst sein, kann auch mitteilen, ob er dabei Schmerzen empfindet.</p>"},{"location":"Allgemein/Nothelfer/Nothelfer.html#blutung-stillen","title":"Blutung stillen","text":"<p>Wenn eine starke Blutung erkennbar ist, soll diese mit einem Fingerdruck auf die zuf\u00fchrende Arterie an Beinen oder Armen gestillt werden. Wenn m\u00f6glich soll ein Druckverband gemacht werden.  Den Patient soll zudem auf den R\u00fccken gelegt werden. Dadurch wird der Kreislauf beruhigt, was das Blut langsamer fliessen l\u00e4sst.</p> <p>Bei starken \u00e4usseren Wunden soll zuerst die Kleidung entfernt werden, damit das Ausmasse der Wunde sichtbar wird. Fremdk\u00f6rper in der Wunde lassen. Bei einem K\u00f6rperteil, wie der Arm oder Bein, soll es hoch gelagert werden, um den Blutfluss zu verringern.</p> <p>Um die Blutung zu stillen, kann entweder die Hand oder einnen sauberen Gegenstand direkt auf die Wunde gedr\u00fcckt werden.</p> <p>Es muss speditiv gearbeitet werden, wenn der Patient bewusstlos ist.</p> <p>Sich selbst unbedingt mit Handschuhen vor AIDS und Hepatitis sch\u00fctzen</p>"},{"location":"Allgemein/Nothelfer/Nothelfer.html#innere-blutungen","title":"Innere Blutungen","text":"<p>Symptome f\u00fcr innere Blutungen sind:</p> <ul> <li>blasse Hautfarbe</li> <li>kalte, nasse Haut</li> <li>teilweise teilnahmslos oder unruhig oder aggressiv</li> <li>schneller aber schwacher Puls</li> <li>schnelle Atmung</li> <li>Verschlechterung des Allgemeinzustandes</li> </ul> <p>Bei diesen Symptomen sofort 144 anrufen. Unn\u00f6tige Patienten-Bewegungen vermeiden. Patienten flach lagern und sicherstellen, dass der Patient nicht erfriert.</p>"},{"location":"Allgemein/Nothelfer/Nothelfer.html#bewusstlosen-lagerung","title":"Bewusstlosen-Lagerung","text":"<ol> <li>Neben dem Patienten auf Bauchh\u00f6he knien    </li> <li>Lege den n\u00e4heren Arm im rechten Winkel hin    </li> <li>Das entferntere Bein soll aufgestellt werden und den Fuss soll seitlich, eng am anderen Knie platziert weden    </li> <li>Der entfernte Arm soll auf den Bauch gelegt werden    </li> <li>Die bewusstlose Person an der Schulter und Knie vorsichtig drehen    </li> <li>Das angewinkelte Bein stabilisiert die Seitenlage    </li> <li>Der obere Arm soll angewinkelt werden und oberhalb des unteren Arms platziert werden    </li> <li>Den Kopf soll nach hinten gelegt werden und das Mund gegebenenfalls ge\u00f6ffnet werden    </li> <li>Endlage    </li> </ol>"},{"location":"Allgemein/Nothelfer/Nothelfer.html#herz-kreislauf-stillstand","title":"Herz-Kreislauf-Stillstand","text":"<p>Wenn der Patient bewusstlos ist und nicht atmet, wird es (vermutlich) einen Herz-Kreislauf-Stillstand sein. </p> <p>Eine Herzrhythmusst\u00f6rung kann durch Herzerkrankung, Bluthochdruck, Herzklappenfehler, Elektrounf\u00e4lle, Medikamenteneinfluss oder \u00fcberm\u00e4ssigen Alkoholkonsum ausgel\u00f6st werden.</p> <p></p>"},{"location":"Allgemein/Nothelfer/Nothelfer.html#herzinfarktes","title":"Herzinfarktes","text":"<p>Folgende Punkte sind Symptome, welche auf einen Herzinfarkt hinzeigen</p> <ul> <li>heftiger Druck in der Brust</li> <li>klemmenden, beengende oder brennende Schmerzen in der Brust (Dauern l\u00e4nger als 15 min). Oft verbunden mit Atemnot oder Todesangst</li> <li>Ausstrahlung des Schmerzen gegen beide Schultern, Arme, den Hals, Unterkiefer oder Oberbauch</li> <li>ev. blasse, fahle Gesichtsfarbe</li> <li>ev. \u00dcbelkeit, Schw\u00e4che, Schweissausbruch</li> <li>ev. Atemnot, unregelm\u00e4ssiger Puls</li> <li>ev. Bauchschmerzen</li> </ul> <p>Fogelde Punkte sind wichtig:</p> <ul> <li>Ruhe bewahren und Hektik und Anstrengung vermeiden</li> <li>Notruf anrufen</li> <li>Lagerung nach Wunsch</li> <li>Einengende Kleidung entfernen</li> </ul> <p>Wenn der Patient bewusstlos ist, dann:</p> <ul> <li>Notruf 144 ausl\u00f6sen</li> <li>Defibrilator organisieren und ben\u00fctzten</li> <li>Herz-Lungen-Wiederbelebung durchf\u00fchren</li> </ul>"},{"location":"Allgemein/Nothelfer/Nothelfer.html#hirnschlag","title":"Hirnschlag","text":"<p>Symptome:</p> <ul> <li> <p>Pl\u00f6tzliche Schw\u00e4che, L\u00e4hmung oder Gef\u00fchlsst\u00f6rung, meistens auf einer K\u00f6rperseite</p> </li> <li> <p>Pl\u00f6tzliche Blindheit auf einem Auge oder Sehen von Doppelbildern</p> </li> <li> <p>Pl\u00f6tzliche Sprechst\u00f6rungen oder Schwierigkeiten, Gesprochenes zu verstehen</p> </li> <li> <p>Pl\u00f6tzlich auftretende, sehr heftige Kopfschmerzen</p> </li> <li> <p>FAST (Face, Arm, Speech, Time) Regel</p> </li> </ul> <p></p> <ul> <li>Face: Die Person soll l\u00e4cheln. Steht der Mund schief oder h\u00e4ngen die Mundwinkel einseitig herunter?</li> <li>Arm: Die Person soll beide Arme horizontal nach vorne strecken und die Daumen nach oben drehen. H\u00e4ngt oder f\u00e4llt einer der Arme herunter?</li> <li>Speech: Die Person soll sprechen: Ist die Sprache undeutlich oder schwer verst\u00e4ndlich?</li> <li>Time: Jede Minute z\u00e4hlt. Bei einer Behandlung innerhalb von 3h stehen die Chancen auf Genesung gut.</li> </ul> <p>Bei Symptomen umbedingt 144 w\u00e4hlen und die Person flach auf den R\u00fccken legen</p>"},{"location":"Allgemein/Nothelfer/Nothelfer.html#herzmassage","title":"Herzmassage","text":"<p>Der Patient muss in der R\u00fcckenlage auf einem festen Untergrund liegen. Der Brustkorb muss frei sein. Die H\u00e4nde sollen \u00fcbereinander auf der unteren H\u00e4lfte des Brustbeins gelegt werden.</p> <p></p> <p>Bei Erwachsenen soll 30 Mal in Folge kr\u00e4ftig, senkrecht im Tempo 100-120 pro Minute 5-6 cm nieder gedr\u00fcckt werden (ca. 2x pro Sekunde). Danach soll die Brustkorb komplett entlastet werden.</p> <p>Nach 30 St\u00f6ssen, sollen 2 schnelle Atemst\u00f6sse durch Mund oder Nase ein geblasen werden. Ein Atemstoss, soll ca. 1 Sekunde dauern. </p> <p>Dies soll solange gemacht werden, bis Fachhilfe eintrifft oder ein Defibrillator die Anweisung dazu gibt.</p> <p></p>"},{"location":"Allgemein/Nothelfer/Nothelfer.html#aed-einsetzten","title":"AED einsetzten","text":"<ol> <li>Defibrillator enschalten</li> <li>Klebeelektroden entnehmen und beide Elektroden am Brustkorb des Patienten anbringen (gem\u00e4ss Bild auf Ger\u00e4t)</li> <li>Herzmassage und Beatmung dabei durch Nothelfer weiterf\u00fchren</li> <li>Bei Aufforderung durch das Ger\u00e4t, Abstand nehmen und ev. Knopf zum Ausl\u00f6sen des Schocks dr\u00fccken</li> <li>Weiter Herzmassage und Beatmung durchf\u00fchren</li> </ol>"},{"location":"Allgemein/Nothelfer/Nothelfer.html#verbrennungen","title":"Verbrennungen","text":"<p>Wenn mehr als 15% bei einem Erwachsenen oder 10% bei einem Kind verbrannt ist, kann dies Lebensbedrohlich sein. Als Faustregel kann die Hand inklusive Finger als 1% angesehen werden.</p> <p>Verbrennungen ab dem 2. Grade (Blasenbildung, schmerzhaft) oder 3. Grade (Verkohlung, schmerzlos, da Nervenenden zerst\u00f6rt sind) m\u00fcssen von einem Arzt behandelt werden.</p> <p>Flammen l\u00f6schen und Kleider entfernen, wenn sie nicht mit der Haut verklebt sind. Ringe, G\u00fcrtel, Schuhe, etc, an betroffenen K\u00f6rperteilen entfernen, da diese anschwellen k\u00f6nnen.</p> <p>Br\u00e4nde sollen f\u00fcr ca. 15-20 Minuten mit lauwarmen Wassern (20\u00b0C) gek\u00fchlt werden. Eis und kaltes Wasser sollten vermieden werden. Zus\u00e4tzlich darauf achten, dass der Patient nicht ausk\u00fchlt.</p> <p>Es k\u00f6nnte eine Rauchvergiftung bei einem Brandvorliegen. In diesem Fall sollte einen Arzt darauf schauen.</p>"},{"location":"Allgemein/PROG/2_OOP_Takeaways.html","title":"OOP Takeaways","text":""},{"location":"Allgemein/PROG/2_OOP_Takeaways.html#wieso-getters-und-setters","title":"Wieso Getters und Setters","text":"<p>Getters und Setters haben mehrere Vorteile:</p> <ul> <li> <p>Validation  kann sehr einfach eingebaut werden, auch im Nachteil</p> </li> <li> <p>Die interne Struktur kann \u00e4ndern, ohne dass sich die \u00f6ffentliche Schnittstelle \u00e4ndern muss</p> </li> <li> <p>es ist Konvention</p> </li> </ul>"},{"location":"Allgemein/PROG/2_OOP_Takeaways.html#demeters-law","title":"Demeters Law","text":"<p>(source: Law of Demeter - Wikipedia)</p> <p>Das Law of Demeter besagt folgendes:</p> <ul> <li> <p>Jede Einheit sollte nur limitiertes Wissen \u00fcber andere Einheiten haben</p> </li> <li> <p>Eine Einheit spricht nur mit seinen Freunden, nicht Fremde.</p> </li> </ul> <p>Zum einen f\u00fchrt dies dazu Klassen nur so viel wiessen, wie umbedingt n\u00f6tig, aber auch zu kleinen Schnittstellen. Anstatt <code>a.getB().getName()</code> w\u00fcrde man die Methode <code>a.getBName()</code> erstellen, welche den Aufruf weiter delegiert. Man sollte also nicht durch andere Methoden \"durch greiffen\"</p> <p>Formaler: </p> <p>Eine Methode <code>m</code> auf dem Objekt <code>a</code>, solte nur auf folgendes zugreiffen:</p> <ul> <li> <p><code>a</code> selbst </p> </li> <li> <p><code>m</code>'s Parameter</p> </li> <li> <p>Lokale Variabeln von <code>m</code></p> </li> <li> <p>Attribute von <code>a</code></p> </li> </ul> <p>Folgendes sollte vermiden werden: <code>a.m().n()</code></p>"},{"location":"Allgemein/PROG/2_OOP_Takeaways.html#vorteile","title":"Vorteile","text":"<p>Die Vorteile von Demeters Law sind, dass es zu Relationen kommt, welche nicht auf interne Strukturen anderen Objekte abh\u00e4ngig sind. Dies kommt davon, dass Aufrufe delegiert werden und somit auch abstrahiert.</p>"},{"location":"Allgemein/PROG/2_OOP_Takeaways.html#nachteile","title":"Nachteile","text":"<p>Es gibt duplizierten Code, da man zum Teil delegieren muss. </p> <p>Wenn man Demeters Law auf der Klassenebenen anwendet, kann es zu grossen Schnittstellen f\u00fchren, da man eine Klasse um delegierende Methoden erweitern. Wenn man ein Attribute wie <code>a.b().c()</code> ben\u00f6tigt, anstatt <code>a.c()</code> zu hinzuf\u00fcgen, kann man sich auch \u00fcberlegen der Klasse ein Attribute <code>c</code> hinzuzuf\u00fcgen. Damit die Koh\u00e4sion nicht alzufest leidet, k\u00f6nnen auch Methoden umbenannt werden, so dass sie besser zur Klasse passen (Spieler delegiert das Inventar zu einer Rucksackklasse. Die Methode <code>addItem(Item)</code> k\u00f6nnte zu <code>pickUpItem(Item</code> umbenannt werden, was wieder gut zu <code>Player</code> passen w\u00fcrde)</p>"},{"location":"Allgemein/PROG/2_OOP_Takeaways.html#kohasion","title":"Koh\u00e4sion","text":"<p>Koh\u00e4sion beschreibt, wie gut eine Methode oder Klasse eine logische Aufgabe oder Einheit abdeckt. </p> <p>Als Beispiel: Wenn eine <code>Calculator</code> Klasse die Methoden <code>add(int, int)</code>, <code>sub(int, int)</code>, <code>showGui(int)</code> hat, dann hat sie eine tiefe Koh\u00e4sion, da <code>showGui(int)</code> wenig mit der Calculator Klasse zu tun hat.</p> <p>Als Hilfe kann man sich immer Fragen: Gibt es ein passenden Klassennamen f\u00fcr diese Klasse?</p> <p>Der Vorteil von einer hohen Koh\u00e4sion ist, dass eine Klasse oder Methode wiederverwendbarer wird, da sie nur etwas macht und es so wahrscheinlicher ist, dass dieselbe Klasse oder Methode mehrmals verwendet werden kann.</p>"},{"location":"Allgemein/PROG/2_OOP_Takeaways.html#koppelung","title":"Koppelung","text":"<p>Koppelung beschreibt, wie fest Klassen abh\u00e4ngig von einander sind. Grunds\u00e4tzlich ist eine tiefere Koppelung besser, da so \u00c4nderungen sich nicht durch die ganze Codebasee ziehen. Daf\u00fcr m\u00f6chte man m\u00f6glichst kleine Schnittstellen, da so die Abh\u00e4ngigkeitsm\u00f6glichkeiten von einer Klasse reduziert werden.</p> <p>Der Vorteil von einer loser Kopplung ist, dass sich \u00c4nderungen an einer einzelnen Klasse einfacher durchf\u00fchren lassen, da diese \u00c4nderungen mehr lokale Auswirkungen haben anstatt globale.</p>"},{"location":"Allgemein/PROG/2_OOP_Takeaways.html#polymorphie","title":"Polymorphie","text":""},{"location":"Allgemein/PROG/3_Patterns.html","title":"Patterns","text":""},{"location":"Allgemein/PROG/3_Patterns.html#strategy-pattern","title":"Strategy Pattern","text":"<p>Beim Strategy Pattern wird ein Algorithmus in eine Strategy-Klasse extrahiert. Dies erleichtert es, einen Algorithmus mit einem anderen zu wechseln.</p> <p>Im folgenden Beispiel wird eine Hirachie einer Ente gezeigt. Dabei hat Ente verschiedene Methoden, welche von verschiedenen Entenarten \u00fcberschrieben werden k\u00f6nnen. </p> <p>Ein Problem, dass bei einer solchen Hirarchie entstehen kann, ist dass es reduntante Implementationen von einzelnen Methoden geben kann. Als Beispiel: Die Stockente und die Reiherente k\u00f6nnen beide fliegen, w\u00e4hrend die Gummiente und Dekoente nicht fliegen k\u00f6nnen. Zwei der Klasse m\u00fcssen immer <code>fliegen()</code> \u00fcberschreiben.</p> <p></p> <p>Als Alternative kann hier das Strategy-Pattern genutzt werden. Nun hat die Ente-Klasse Referenzen zu Strategy-Implementationen, welche entscheiden, ob eine Ente fliegen oder nicht fliegen kann. So kann duplizierter Code verhindert werden</p> <p></p>"},{"location":"Allgemein/PROG/3_Patterns.html#mvc","title":"MVC","text":"<p>Model: Contains the data with the domain logic, but it has to be independent from the View-Classes.</p> <p>View: The UI components which render the data. The view doesn't call the model directly (usually), but it knows about the types of the model (for example via generics).</p> <p>Controller: The glue between the model and the UI. It listens to events from the UI and calls the model accordingly</p> <p></p>"},{"location":"Allgemein/PROG/3_Patterns.html#decorator","title":"Decorator","text":"<p>A problem which can occur with inheritance is that the amount of classes can explode. Imagine having a Beverage interface which defines a few methods for accessing information. Now for every different beverage type we have to create a new class and implement the methods. Is there a combination with sugar, sure, let\u2019s make another class out of it.</p> <p></p> <p>The \u201c-WithSugar\u201d and \u201c-WithMilk\u201d class could be omitted by using inheritance but not every beverage has the option of milk or sugar (FruitTee or MilkCoffee comes to mind).</p> <p>A solution to this problem is this:</p> <p></p> <p>Every type of beverage still has its own class but instead of having a \u201c-WithMilk\u201d and \u201c-WithSugar\u201d class for every type, there is now a WithSugar and a WithMilk class which extends of the Decorator. Every Decorator has a beverage and its goal is to add information to this beverage. You might also notice that the decorator itself is a beverage. </p> <p>This allows this: </p> <pre><code>Beverage tee = new WithSugar(new WithMilk(new BlackTee())); tee.cost(); // this returns the cost of the black tee and the WithSugar and WithMilk add their own cost\n</code></pre> <p>What happens here is that the tee object consists of a WithSugar object, which has a WithMilk object as its beverage and the WithSugar object will add the price to the returns value of the WithMilk.cost() method. The same thing happens with the WitthMilk and the BlackTee object.</p>"},{"location":"Allgemein/PROG/4_Testing.html","title":"Testing","text":""},{"location":"Allgemein/PROG/4_Testing.html#aquivalenzklassen","title":"\u00c4quivalenzklassen","text":"<p>In einer \u00c4quivalenzklassen sind alle m\u00f6glichen Eingabewerte, welche vom Programm gleich verarbeitet werden.</p> <p>Dabei gibt es g\u00fcltige \u00c4quivalenzklassen, welche Werte beinhalten, welche vom Programm verarbeitet werden sollen und es gibt Ung\u00fcltige \u00c4quivalenzklassen, welche vom Programm erkannt und korrekt behandelt werden sollen (Exception, Return-Value, ...)</p> <p>Regeln, wenn \u00c4quivalenzklassen gebildet werden:</p> <ul> <li>Wenn g\u00fcltige Eingabewerte ein zusammenh\u00e4ngender Wertebereich bilden, so muss eine g\u00fcltige \u00c4quivalenzklasse und zwei ung\u00fcltige \u00c4quivalenzklassen gebildet werden</li> <li>Wenn Eingabewerte eine Bedinung erf\u00fcllen m\u00fcssen (mit dem Buchstaben ' A' starten), dann muss eine g\u00fcltige und eine ung\u00fcltige \u00c4quivalenzklasse gebildet werden.</li> </ul> <p>Aus diesen \u00c4quivalenzklassen k\u00f6nnen nun Testf\u00e4lle abgeileit werden. Dabei kann folgendes beachtet werden:</p> <ul> <li>Ein Testfall darf mehrere g\u00fcltige \u00c4quivalenzklassen abdecken</li> <li>Ein Testfall f\u00fcr ung\u00fcltige \u00c4quivalenzklassen sollte nur einen ung\u00fcltigen Wert enhalten</li> <li>Grenzwerte sollten ber\u00fccksichtigt werden</li> </ul>"},{"location":"Allgemein/PROG/4_Testing.html#first-regeln","title":"FIRST-Regeln","text":""},{"location":"Allgemein/PROG/4_Testing.html#definition-of-testing","title":"Definition of Testing","text":"<p>Testing is the process of executing a programm with the intent of finding errors.</p>"},{"location":"Allgemein/PROG/4_Testing.html#principles-of-testing","title":"Principles of Testing","text":"<ol> <li>Specification of Input and Output    For each test case the input and the expected output should be specified.</li> <li>Separation of Creation and Testing    The developer of the code shouldn't write the test for their code.</li> <li>Completeness of Tests    Code should always be tested for valid inputs and invalid tests. The natural tendency is to test only the valid inputs.</li> <li>Testing is an investement    Test cases are reused</li> <li>Error Cluster    If an error is found in a section of code,  the probability of more errors increases. Error-prone Sections should be well tested.</li> </ol>"},{"location":"Allgemein/PROG/4_Testing.html#mock-testing","title":"Mock Testing","text":"<p>Mock testing is used when a class with dependencies should be tested. The dependencies can be mocked that it implements the minimal of behaviour to function. This allows to only test the class under testing and not its dependencies.</p>"},{"location":"Allgemein/PROG/4_Testing.html#different-mocking-types","title":"Different Mocking Types","text":"<p>There are different type of mock classes.</p> <p></p>"},{"location":"Allgemein/PROG/4_Testing.html#dummy","title":"Dummy","text":"<p>Dummies are objects which are never used. They fill parameter lists of methods, if those methods would throw NullPointerExceptions otherwise.</p>"},{"location":"Allgemein/PROG/4_Testing.html#stubs","title":"Stubs","text":"<p>A stub is the minimal implementation of an interface. Void method usually don't do anything and methods with a return value will usually return a hard coded value.</p> <p>Here is an example.</p> <pre><code>public class EmailStub implements EmailServer {\npublic void sendMail(String mailTextt) {\n// do nothing\n}\npublic String receiveMail() {\nreturn \"Mail received\"; // a hard coded value\n}\n}\n</code></pre> <p>An <code>EmailDummy</code> would return <code>null</code> in <code>receiveMail()</code> because it is just a dummy.</p>"},{"location":"Allgemein/PROG/4_Testing.html#spies","title":"Spies","text":"<p>Spies are similar to stubs, but record which members were invoked. This information can be checked in unit tests.</p>"},{"location":"Allgemein/PROG/4_Testing.html#fakes","title":"Fakes","text":"<p>A fake will implement a class similar to the production class but with shortcuts (e.g. an in-memory database)</p>"},{"location":"Allgemein/PROG/4_Testing.html#mock","title":"Mock","text":"<p>A test double which implements the functions in away which we expect for the test. Depending on how they are implemented, they can function as a dummy, stub, spy or a fake.</p> <p>Mock testing is usually split in multiple phases: </p> <ol> <li>Create: The mock object is created</li> <li>Specify: The expected behaviour is specified</li> <li>Use: The mock object is used in a normal unit test</li> <li>Verify behaviour: The mock object is verified</li> </ol> <pre><code>public class OrderInteractionTester extends MockObjectTestCase {\nprivate static String TALISKER = \"Talisker\";\npublic void testFillingRemovesInventoryIfInStock() {\n// configuration\nOrder order = new Order(TALISKER, 50);\nMock warehouseMock = new Mock(Warehouse.class);\n// expectations\nwarehouseMock\n.expects(once())\n.method(\"hasInventory\")\n.with(eq(TALISKER),eq(50))\n.will(returnValue(true));\nwarehouseMock\n.expects(once())\n.method(\"remove\")\n.with(eq(TALISKER), eq(50))\n.after(\"hasInventory\");\n//exercise\norder.fill((Warehouse)warehouseMock.proxy());\n//verify\nwarehouseMock.verify();\n//verify expected behavior\nassertTrue(order.isFilled()); //verify state\n}\n}\n</code></pre>"},{"location":"Allgemein/PROG/4_Testing.html#blacking-box-vs-white-box-testing","title":"Blacking-Box vs White-Box Testing","text":"<p>In black-box testing (or state testing), only the public interface is known. No assumptions is done about the internal implementaiton. Usually stubbing can be used.</p> <p>In white-box testing (or behaviour testing) the inner working of the class is known and tested. Here, usually mocking can be used.</p>"},{"location":"Allgemein/PROG/4_Testing.html#mockito","title":"Mockito","text":""},{"location":"Allgemein/PROG/4_Testing.html#create-a-mock","title":"Create a Mock","text":"<p>Either the method <code>mock(Class&lt;?&gt; clazz)</code> is used or the annotation <code>@Mock</code> for which <code>MockitoAnnotations.openMocks()</code> needs to be called in the setu</p> <pre><code>void testHalf(@Mock Half mockedHalf2) {\nHalf mockedHalf = mock(Half.class);\n}\n</code></pre>"},{"location":"Allgemein/PROG/4_Testing.html#mock-behaviour","title":"Mock Behaviour","text":"<p>To mock the return value of methods, the <code>when(&lt;method&gt;).thenReturn(&lt;value1&gt;).thenReturn(&lt;value2&gt;)</code> pattern can be used. When the returned value should have a bit more logic than a constant value, the <code>thenAnswer(Answer&lt;T&gt;)</code> method can be used (see example below).</p> <p>To mock an exception throwing method, the <code>doThrow(&lt;exception&gt;).when(&lt;mockObj&gt;).&lt;method&gt;(&lt;args&gt;)</code> pattern needs to be used. The method must support throwing the exception in case of an checked-exception.</p> <p>There are multiple matchers available, which can match an argument of a mocked method:</p> <ul> <li>Any-matchers: <code>anyInt()</code>, <code>anyString()</code>, <code>any(Class&lt;?&gt; clazz)</code>, ...</li> <li>String-matchers: <code>startsWith(String)</code>,  <code>endsWith(String)</code>, <code>contains(String)</code>, ...</li> <li>Object-matchers: <code>isNull()</code>, <code>isNotNull()</code>, ...</li> <li>Compare-matchvers: <code>eq(T obj)</code>, ...</li> <li>Custom-matchers: <code>argThat()...</code>, <code>intThat(...)</code>, ...</li> </ul> <pre><code>Person mock = mock(Person.class);\n// mock return values\nwhen(mock.getName()).thenReturn(\"Hans\").thenReturn(\"Max\");\ndoReturn(10).doReturn(20).when(mock).getAge();\nwhen(mock.getMessage(anyString())).thenAnswer((InvocationOnMock invocation) -&gt; \"hello world\");\n// mock exception throwing\ndoThrow(new IllegalArgumentException()).when(mock).setAge(-1);\n</code></pre> <p>When an method isn't mocked, then a value is still returned based on the return value:</p> <ul> <li>The return value is an primitive: The \"zero\"-primitive is returned</li> <li>The return value is a primitive wrapper class: Then the \"zero\"-primitive of the wrapper class is returned</li> <li>The return value is a collection: The return value is an empty collection</li> <li>For the toString() method an description of the mock is returned</li> <li>For <code>Comparable#compareTo(T other)</code> returns zero if the references are equal, else a non-zero value</li> <li>Else: <code>null</code> is returned.</li> </ul>"},{"location":"Allgemein/PROG/4_Testing.html#verify-behaviour","title":"Verify Behaviour","text":"<p>Mockito can verify that a method was invoked. For this, the pattern <code>verify(&lt;mock&gt;).&lt;method&gt;(&lt;args&gt;)</code> can be used. With an additional argument of verify, further conditions can be specified. With <code>verify(&lt;mock&gt;, never()).&lt;method&gt;(&lt;args&gt;)</code> can be checked that the method was never invoked. Other condition includes <code>never()</code>, <code>times(int)</code>, <code>atLeastOnce()</code>, <code>atLeast(int)</code>, <code>atMost(int)</code>, <code>timeout(int milliseconds)</code> (that the method is invoked in the given timeout). These conditions can be combined like <code>timeout(10).times(2)</code></p> <p>Mockito can also verify the order in which methods were called. For this a <code>InOrder</code> object can be created with <code>inOrder(&lt;mockObj&gt;)</code>. On the <code>InOrder</code> object, the <code>verify(...)</code> method can be used.</p> <pre><code>verify(mockedHalf).contractAtrium();\nverify(mockedHalf, times(2)).isAtrioventricularValveOpen();\nverify(mockedList, never()).add(\"ZHAW\");\nInOrder inOrder = inOrder(singleMock);\n// Verify the order\ninOrder.verify(singleMock).add(\"second\"); inOrder.verify(singleMock).add(\"first\");\n</code></pre>"},{"location":"Allgemein/PROG/4_Testing.html#spies_1","title":"Spies","text":"<p>A spy object is created based on a \"real\" object. All methods are delegated to this object, but the behaviour of methods can be selectively changed (similar with mocks) and it can verify than methods were called. It can be created with <code>spy(Object obj)</code> and can be used like a mock. Similar to <code>@Mock</code> the <code>@Spy</code> annotation can be used instead of <code>spy(...)</code> (<code>MockitoAnnotations.openMocks()</code> needs to be called in the setup method).</p> <pre><code>List list = new LinkedList();\n// create a spy on the real object instance\nList spy = spy(list);\n// stub the size() method\nwhen(spy.size()).thenReturn(100);\n// add() is not stubbed. So it will use the real method\nspy.add(\"one\"); spy.add(\"two\");\nassertEquals(\"one\", spy.get(0));\nassertEquals(100, spy.size());\n</code></pre>"},{"location":"Allgemein/PROG/5_Threads.html","title":"Threads","text":""},{"location":"Allgemein/PROG/5_Threads.html#share-data-between-multiple-threads","title":"Share Data between Multiple Threads","text":""},{"location":"Allgemein/PROG/5_Threads.html#atomic","title":"Atomic","text":"<p>Use the atomic</p>"},{"location":"Allgemein/PROG/5_Threads.html#synchronized","title":"Synchronized","text":"<pre><code>class Account {\nprivate int balance;\npublic synchronized void transferAmount1(int amount) {\nthis.balance += amaount;\n}\npublic void transferAmount2(int amount) {\nsynchronized(this) {\nthis.balance += amaount;\n}\n}\npublic synchronized static staticLock1() {\n//do stuff\n}\npublic static staticLock1() {\nsynchronized(Amount.class) {\n// do stuff\n}\n} }\n</code></pre> <p>Never call an other synchronized method which uses a different object. This can cause a dead lock.</p>"},{"location":"Allgemein/PROG/5_Threads.html#monitor","title":"Monitor","text":"<p>A Java object can be used as a locked. </p> <pre><code>class FooBar {\nprivate Object monitor;\npublic void test() {\nsynchronized(monitor) {\n// waits for the monitor to be called with monitor.notify() or monitor.notifyAll()\nmonitor.wait();\n}\n}\n}\n</code></pre> <p><code>Object.wait()</code> blocks until <code>Object.notify()</code> or <code>Object.notifyAll()</code> is invoked on the same monitor object. <code>notify()</code> only wakes up one waiting Thread while <code>notifyAll()</code> will wake up all waiting threads.</p> <p><code>wait()</code> releases the monitor object. </p>"},{"location":"Allgemein/PROG/5_Threads.html#types-of-synchronization","title":"Types of Synchronization","text":""},{"location":"Allgemein/PROG/5_Threads.html#mutual-exclusion","title":"Mutual Exclusion","text":"<p>Mutual Exclusion means that only only thread can access a shared resource at a time. This usually means, that a section of code needs to be locked (eg. with synchronize) until the thread is done with that code.</p>"},{"location":"Allgemein/PROG/5_Threads.html#conditional-synchronization","title":"Conditional Synchronization","text":"<p>Conditional synchronization is needed when one thread waits for an event to happen in another thread. This is basicly the Producer-Consumer \"Pattern\".</p>"},{"location":"Allgemein/PROG/5_Threads.html#producer-consumer","title":"Producer-Consumer","text":"<p>The producer produces some data which can be consumed by the consumer. The consumer tries to access the resource. If it is already ready, then it can just continue. If not it will <code>wait()</code> for the producer to <code>notify()</code> its monitor after which it can access the resource.</p> <p>The producer thread might needs to throttle itself to avoid loosing results when no consumer can consume them.</p> <p></p> <p>Here is an example for a consumer-producer example: The <code>while</code> loop is necessary because when the thread calls <code>wait()</code> it releases the monitor the synchronize block and an other thread can enter the synchronize block and call <code>wait()</code>.</p> <p></p>"},{"location":"Allgemein/PROG/5_Threads.html#synchronized-queue","title":"Synchronized Queue","text":"<p>With a queue the problem of the consumer and producer can be abstracted into a separate class to make it less brittle. Implementing the following becomes trivial:</p> <ul> <li>The producer fills the queue with data</li> <li>The consumer retrieves the data from the queue if available</li> <li>The consumer waits only if the queue is empty</li> <li>The producer waits when the queue is full</li> </ul>"},{"location":"Allgemein/PROG/5_Threads.html#locks-and-condit","title":"Locks and Condit","text":""},{"location":"Allgemein/PROG/5_Threads.html#problems-of-lack-of-synchronization","title":"Problems of lack of Synchronization","text":""},{"location":"Allgemein/PROG/5_Threads.html#lost-update","title":"Lost Update","text":"<p>A lost update happens when an write/update was overridden by another thread.</p> <p></p>"},{"location":"Allgemein/PROG/5_Threads.html#dead-locks","title":"Dead Locks","text":"<p>TODO: Definition</p>"},{"location":"Allgemein/PROG/5_Threads.html#how-to-avoid-dead-locks","title":"How to avoid Dead Locks","text":"<p>Generally avoiding shared resources will avoid dead locks as well. This however isn't always possible.  TODO</p>"},{"location":"Allgemein/PROG/5_Threads.html#dining-philosophers","title":"Dining Philosophers","text":"<p>There are 5 Philosophers. Each philosophers can either eat or think. For eating a philosopher needs two forks, but there are only 5 forks in total, so not everybody can eat at the same time.</p> <p></p> <p>A naive solution would first let the philosophers take the right and then the left fork. This would result in everybody holding a fork in the right hand and waiting for a fork to be available resulting in a dead lock.</p> <p></p> <p>To prevent this cyclic waiting condition the abstract can be change to always take and release two forks as one atomic action. The situation above should never happen.</p> <p>A second solution is to change the behavior of one philosopher to first take the left and then the right fork.</p> <p></p>"},{"location":"Allgemein/PROG/6_IO.html","title":"IO","text":""},{"location":"Allgemein/PROG/6_IO.html#serializing","title":"Serializing","text":"<p>In order for an object to be serializable in needs to implement the marker interface <code>Serializable</code>.</p> <p></p> <p>Fields can be marked with transient (<code>private transient Date someDate;</code>) if they shouldn't be serialized. This can be usefull for serializing classes which contain unserializable classes (like dates, file descriptor, network sockets or db connections).</p> <pre><code>Employee harry = new Employee(\"Dirty Harry\", 50000, LocalDate.of(1967, 3, 11));\nManager boss = new Manager(\"Walter Smith\", 80000, LocalDate.of(1950, 12, 4)); // Manager is extending Employee\nboss.setAssistant(harry); // Save (serialize) two objects to the file empolyee.dat\ntry (ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(\"employee.dat\"))) {\n// objects are written in the given order to the file\nout.writeObject(harry); // write object Dirty Harry\nout.writeObject(boss); // write object Walter Smith\nout.writeInt(12); // write value of primitive type int\n}\n// Load (deserialize) two objects from the file employee.dat\ntry (ObjectInputStream in = new ObjectInputStream(new FileInputStream(\"employee.dat\"))) {\n// number and order of reading the objects must match, also the type must be compatible (match or super class)\nEmployee e1 = (Employee) in.readObject(); // object for Dirty Harry\nEmployee e2 = (Employee) in.readObject(); // object for Walter Smith\n// e2.getClass().getName() would return type Manager\nint count = in.readInt(); // read primitive type int\n}\n</code></pre>"},{"location":"Allgemein/PROG/6_IO.html#io-streams","title":"IO Streams","text":"<p>A byte stream can be converted to a char stream with <code>InputStreamReader</code> and <code>OutputStreamWriter</code> respectively.</p> <p></p> <p><code>InputStream</code>  and <code>Readers</code> usually allow to skip a number of bytes/chars with <code>skip(long n)</code>. However, <code>OutputStream</code>s  and <code>Writer</code>s don't allow removing or inserting into a file, only appending (<code>FileOutputStream(File file, boolean append)</code>) or replacing is supported.</p>"},{"location":"Allgemein/PROG/6_IO.html#randomaccessfile","title":"RandomAccessFile","text":"<p>Allows reading from anywhere in the file, not just skipping bytes like an <code>InputStream</code>. This can be done with the <code>seek(long pos)</code> or the <code>skipBytes(long n)</code> methods.</p> <pre><code>// create file and write some data into it\nFile f = new File(\"randomaccessfile.txt\");\ntry (BufferedWriter bw = new BufferedWriter(new FileWriter(f,true))) {\nfor(int i=2; i&lt;=10; i++) { if( i%2 == 0) { bw.write(Integer.toString(i)); bw.newLine(); } }\n}\ntry (RandomAccessFile randomFile = new RandomAccessFile(f,\"rw\")) { // read-write mode\nfor(int i=1; i&lt;=5; i++){\nrandomFile.seek(randomFile.length()); // set file pointer to end of file (EOF)\nrandomFile.writeBytes(Integer.toString(i)); // append \"1\",\"2\",\"3\",\"4\",\"5\" at EOF\n}\n}\ntry (RandomAccessFile randomFile = new RandomAccessFile(f, \"r\")) { // read-only mode\nint i = (int) randomFile.length(); // get length of file in bytes\nSystem.out.println(\"Length: \" + i);\nrandomFile.seek(i-3); // set file pointer to EOF-3 bytes\nfor(int ct = 0; ct &lt; 3; ct++){\nbyte b = randomFile.readByte(); // read byte(s)\nSystem.out.println((char)b);\n}\n}\n</code></pre>"},{"location":"Allgemein/PROG/6_IO.html#charset","title":"Charset","text":"<p>An instance of <code>Charset</code> can be either obtained by <code>Charset.forName(&lt;name&gt;)</code>, <code>Charset.getDefaultCharset()</code> or <code>Charset.getAvailableCharsets()</code>. Alternatively <code>StandardCharsets.UTF_8</code> can be used.</p>"},{"location":"Allgemein/PROG/6_IO.html#logger","title":"Logger","text":"<p>Each <code>Logger</code> instance has a list of <code>Handlers</code>. A <code>Handler</code> can be used by multiple <code>Loggers</code> and handles the storing of the logging messages (like writing it to a file, or displaying in the console). Both the <code>Logger</code> and the <code>Handler</code> have a Level. And each will only forward messages which have a level higher than their configured level. </p> <p>The possible levels are: <code>SEVERE(1000)</code>, <code>WARNING(900)</code>, <code>INFO(800)</code>, <code>CONFIG(700)</code>, <code>FINE(500)</code>, <code>FINER(400)</code>, <code>FINEST(300)</code>.</p> <p></p> <p>The following properties file is an example logging configuration.</p> <pre><code>## configure handlers\njava.util.logging.ConsoleHandler.level = ALL\n## File handler configuration\n## see https://docs.oracle.com/en/java/javase/11/docs/api/java.logging/java/util/logging/FileHandler.html\njava.util.logging.FileHandler.level = ALL\n# %g = generation number, %u = unique number to resolve conflicts\njava.util.logging.FileHandler.pattern = log-%g-%u.log\n# use SimpleFormatter instead of default XMLFormatter\njava.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter\njava.util.logging.FileHandler.encoding = UTF-8\n# max log file size in byte before switching to next generation (=1kB); 0 = unlimited\njava.util.logging.FileHandler.limit = 1024\n# max number of generations (%g) before overwriting (5 -&gt; 0..4)\njava.util.logging.FileHandler.count = 5\njava.util.logging.FileHandler.append = true\n## configure Formatter (see SimpleFormatter documentation)\njava.util.logging.SimpleFormatter.format = [%1$tc] %4$s: %5$s {%2$s}%6$s%n\n## configure default log level (for all loggers, if not overwritten below)\n.level = INFO\n## configure root logger \"\"\nhandlers = java.util.logging.ConsoleHandler\nlevel = INFO\n## Application specific logger configuration\n# loggers starting with \"ch.zhaw.prog2.io\" -&gt; write to console and file and do not forward to parent handlers\nch.zhaw.prog2.io.level = FINE\nch.zhaw.prog2.io.handlers = java.util.logging.FileHandler, java.util.logging.ConsoleHandler\nch.zhaw.prog2.io.useParentHandlers = false\n# logger for class ch.zhaw.prog2.io.LogConfiguration\nch.zhaw.prog2.io.LogConfiguration.level = FINEST\n</code></pre> <p>A log configuration can be loaded anytime and all already existing loggers will be updated.</p> <pre><code>InputStream logConfig = this.getClass().getClassLoader().getResourceAsStream(\"log.properties\");\nLogManager.getLogManager().readConfiguration(logConfig);\n</code></pre>"},{"location":"Allgemein/PROG/7_Streams.html","title":"Streams","text":""},{"location":"Allgemein/PROG/7_Streams.html#create-streams","title":"Create Streams","text":""}]}